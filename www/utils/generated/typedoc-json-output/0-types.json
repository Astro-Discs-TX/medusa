{
	"id": 29951,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 29952,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 29953,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 29954,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29955,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29956,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29957,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29958,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29959,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29960,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29961,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29962,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29963,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 29964,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29965,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 29966,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29954,
								29955,
								29956,
								29957,
								29958,
								29959,
								29960,
								29961,
								29962,
								29963,
								29964,
								29965,
								29966
							]
						}
					]
				}
			}
		},
		{
			"id": 29967,
			"name": "DetailWidgetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for detail widgets. All widgets that are rendered in a detail view,\ne.g. the product detail view, should implement this interface.\n\nThe type of the data prop should be the same as the data that is passed to the widget.\nIf the widget is rendered in the product detail view, the data prop should be of\ntype AdminProduct."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```tsx\nimport type { DetailWidgetProps, AdminProduct } from \"@medusajs/types\"\nimport { defineConfig } from \"@medusajs/admin-shared\"\n\nconst ProductWidget = ({ data }: DetailWidgetProps<AdminProduct>) => {\n return <div>{data.title}</div>\n}\n\nexport const config = defineConfig({\n zone: \"product.details.after\",\n})\n\nexport default ProductWidget\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 29968,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 29969,
						"name": "TData",
						"package": "@medusajs/types",
						"qualifiedName": "DetailWidgetProps.TData",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						29968
					]
				}
			],
			"typeParameters": [
				{
					"id": 29969,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 29970,
			"name": "AdminTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 29971,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 29972,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 29973,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29974,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 29975,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 29976,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 29975,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29977,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29978,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29979,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 29980,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 29981,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 29982,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 29983,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 29984,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								29973,
								29977,
								29982
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						29972
					]
				}
			]
		},
		{
			"id": 33414,
			"name": "IsStringLiteral",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33415,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33415,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "intrinsic",
						"name": "string"
					},
					"extendsType": {
						"type": "reference",
						"target": 33415,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"trueType": {
						"type": "literal",
						"value": false
					},
					"falseType": {
						"type": "literal",
						"value": true
					}
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 33745,
			"name": "WordInCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33746,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 33747,
					"name": "Word",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33746,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "reference",
								"target": 33747,
								"name": "Word",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "NextCharacter"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "_"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "NextCharacter"
						},
						"name": "NextCharacter",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Capitalize"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "NextCharacter"
								},
								"name": "NextCharacter",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Capitalize",
						"package": "typescript"
					},
					"trueType": {
						"type": "reference",
						"target": 33747,
						"name": "Word",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"falseType": {
						"type": "reference",
						"target": 33745,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33746,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 33747,
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "NextCharacter"
											},
											"name": "NextCharacter",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "WordInCamelCase",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 33747,
					"name": "Word",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 33744,
			"name": "Separator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "_"
					},
					{
						"type": "literal",
						"value": "-"
					}
				]
			}
		},
		{
			"id": 33674,
			"name": "IncludesSeparator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33675,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33675,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 33744,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 33679,
			"name": "IsOneWord",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33680,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33680,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Lowercase"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 33680,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Lowercase",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 33680,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Uppercase"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 33680,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Uppercase",
						"package": "typescript"
					},
					"trueType": {
						"type": "literal",
						"value": true
					},
					"falseType": {
						"type": "literal",
						"value": false
					}
				}
			}
		},
		{
			"id": 33681,
			"name": "IsCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33682,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33682,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Uncapitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 33682,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Uncapitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 33686,
			"name": "IsPascalCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33687,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33687,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Capitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 33687,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Capitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 33676,
			"name": "SeparatorCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "snake_case, CONSTANT_CASE, kebab-case or COBOL-CASE"
					}
				]
			},
			"typeParameters": [
				{
					"id": 33677,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 33678,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33677,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "inferred",
								"name": "Word"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 33744,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "Tail"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "reference",
					"target": 33676,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "rest",
									"elementType": {
										"type": "reference",
										"target": 33678,
										"name": "Tuple",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Lowercase"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Word"
											},
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Lowercase",
									"package": "typescript"
								}
							]
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 33677,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "inferred",
									"name": "Word"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "rest",
								"elementType": {
									"type": "reference",
									"target": 33678,
									"name": "Tuple",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Word"
										},
										"name": "Word",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "reference",
						"target": 33678,
						"name": "Tuple",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 33683,
			"name": "CamelCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33684,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 33685,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33684,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": ""
				},
				"trueType": {
					"type": "reference",
					"target": 33685,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 33684,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 33745,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33684,
											"name": "Type",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "WordInCamelCase",
									"package": "@medusajs/types"
								},
								""
							],
							[
								{
									"type": "inferred",
									"name": "Tail"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33684,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "Word"
									},
									""
								],
								[
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Tail"
										},
										"name": "Tail",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									""
								]
							]
						},
						"trueType": {
							"type": "reference",
							"target": 33683,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Uncapitalize"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Tail"
											},
											"name": "Tail",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Uncapitalize",
									"package": "typescript"
								},
								{
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 33685,
												"name": "Tuple",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
														"qualifiedName": "Word"
													},
													"name": "Word",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										}
									]
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 33688,
			"name": "PascalCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33689,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33689,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "reference",
					"target": 33683,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Uncapitalize"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 33689,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "Uncapitalize",
							"package": "typescript"
						}
					],
					"name": "CamelCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 33421,
			"name": "SplitAnyCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33422,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33674,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33422,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "IncludesSeparator",
					"package": "@medusajs/types"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 33676,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33422,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 33679,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33422,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "IsOneWord",
						"package": "@medusajs/types"
					},
					"extendsType": {
						"type": "literal",
						"value": true
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 33422,
												"name": "Type",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33681,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33422,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsCamelCase",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 33683,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33422,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 33686,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33422,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "IsPascalCase",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "literal",
								"value": true
							},
							"trueType": {
								"type": "reference",
								"target": 33688,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33422,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "PascalCaseParser",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "tuple"
							}
						}
					}
				}
			}
		},
		{
			"id": 33671,
			"name": "PascalCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33672,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 33673,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33672,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 33671,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "rest",
										"elementType": {
											"type": "reference",
											"target": 33673,
											"name": "Tuple",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Capitalize"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
													"qualifiedName": "Head"
												},
												"name": "Head",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Capitalize",
										"package": "typescript"
									}
								]
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 33671,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 33673,
								"name": "Tuple",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 33673,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 33419,
			"name": "CamelCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33420,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33420,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "First"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "reference",
					"target": 33671,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
										"qualifiedName": "First"
									},
									"name": "First",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							]
						}
					],
					"name": "PascalCapitalizer",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "tuple"
				}
			}
		},
		{
			"id": 33416,
			"name": "Join",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33417,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 33418,
					"name": "JoinedString",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33417,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 33416,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 33418,
											"name": "JoinedString",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Head"
											},
											"name": "Head",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 33416,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 33418,
					"name": "JoinedString",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 33407,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 33408,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33409,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33410,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33411,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33412,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`http.cookieSecret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33413,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33408,
						33409,
						33410,
						33411,
						33412,
						33413
					]
				}
			]
		},
		{
			"id": 29985,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30092,
					"name": "LinkMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30093,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30094,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30095,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30094,
										30095
									]
								}
							]
						}
					}
				},
				{
					"id": 30096,
					"name": "LinkWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30097,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30098,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30099,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30100,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30098,
										30099,
										30100
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 32894,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput"
						}
					]
				},
				{
					"id": 30101,
					"name": "BatchMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30106,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 30107,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 30108,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30102,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30103,
									"name": "create",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30106,
											"name": "TCreate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 30104,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30107,
											"name": "TUpdate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 30105,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30108,
											"name": "TDelete",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30103,
										30104,
										30105
									]
								}
							]
						}
					}
				},
				{
					"id": 30109,
					"name": "BatchMethodResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30118,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30110,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30111,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30118,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 30112,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30118,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 30113,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 30114,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30115,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 30116,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 30117,
													"name": "deleted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30115,
														30116,
														30117
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30111,
										30112,
										30113
									]
								}
							]
						}
					}
				},
				{
					"id": 30119,
					"name": "BatchWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30120,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 30121,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 30122,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 30101,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30120,
								"name": "TCreate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 30121,
								"name": "TUpdate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 30122,
								"name": "TDelete",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodRequest",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30123,
					"name": "BatchWorkflowOutput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30124,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 30109,
						"typeArguments": [
							{
								"type": "reference",
								"target": 30124,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30222,
					"name": "CamelCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30223,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33414,
							"typeArguments": [
								{
									"type": "reference",
									"target": 30223,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsStringLiteral",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 33416,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33419,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33421,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30223,
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "SplitAnyCase",
											"package": "@medusajs/types"
										}
									],
									"name": "CamelCapitalizer",
									"package": "@medusajs/types"
								}
							],
							"name": "Join",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 30223,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 29986,
					"name": "Prettify",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prettify complex types to a flat object structure"
							}
						]
					},
					"typeParameters": [
						{
							"id": 29988,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 29988,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 29988,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 29987,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 29989,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 29990,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 29991,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 29990,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 29990,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 29991,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 29990,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 29995,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 29996,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 29997,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 29998,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								29996,
								29997,
								29998
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 29999,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 29999,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 30001,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29996,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 30002,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29997,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 30003,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 29998,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 30000,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30001,
								30002,
								30003,
								30000
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 29995,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30006,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 30007,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 30018,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 30008,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30009,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30010,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 30011,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30012,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 30013,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 30014,
													"name": "K",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ASC"
													},
													{
														"type": "literal",
														"value": "DESC"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 30015,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30016,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 30017,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30007,
								30008,
								30009,
								30010,
								30011,
								30015,
								30016,
								30017
							]
						}
					],
					"typeParameters": [
						{
							"id": 30018,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 30054,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 30055,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`fields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30056,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
									},
									{
										"kind": "code",
										"text": "`+`"
									},
									{
										"kind": "text",
										"text": " it will be added to the default fields, using "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30057,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30058,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30059,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30055,
								30056,
								30057,
								30058,
								30059
							]
						}
					]
				},
				{
					"id": 30060,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 30061,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 33308,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 30062,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 30063,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 30064,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 30065,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 30066,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30063,
								30064,
								30065,
								30066
							]
						}
					]
				},
				{
					"id": 30067,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 30068,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30069,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30070,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30071,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30072,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30073,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30074,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30068,
								30069,
								30070,
								30071,
								30072,
								30073,
								30074
							]
						}
					]
				},
				{
					"id": 30075,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 30076,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30077,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30078,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30079,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30076,
								30077,
								30078,
								30079
							]
						}
					]
				},
				{
					"id": 30082,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30083,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 30083,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 30082,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 30082,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 30083,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 30084,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30085,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 30085,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 30084,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 30084,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 30085,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 30086,
					"name": "MetadataType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 30087,
					"name": "RawRounding",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30088,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30089,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30090,
									"name": "precision",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30089,
										30090
									]
								}
							]
						}
					}
				},
				{
					"id": 30125,
					"name": "AdminOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Admin dashboard configurations."
							}
						]
					},
					"children": [
						{
							"id": 30126,
							"name": "disable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to disable the admin dashboard. If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the admin dashboard is disabled,\nin both development and production environments. The default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30127,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the admin dashboard. The default value is "
									},
									{
										"kind": "code",
										"text": "`/app`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe value cannot be one of the reserved paths:\n- "
									},
									{
										"kind": "code",
										"text": "`/admin`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/store`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/`"
									}
								]
							},
							"type": {
								"type": "templateLiteral",
								"head": "/",
								"tail": [
									[
										{
											"type": "intrinsic",
											"name": "string"
										},
										""
									]
								]
							}
						},
						{
							"id": 30128,
							"name": "outDir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The directory where the admin build is output. This is where the build process places the generated files.\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`./build`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30129,
							"name": "backendUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa backend. Defaults to an empty string, which means requests will hit the same server that serves the dashboard."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30130,
							"name": "vite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the Vite configuration for the admin dashboard. This function receives the default Vite configuration\nand returns the modified configuration. The default value is "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30131,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 30132,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 30133,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
															"qualifiedName": "InlineConfig"
														},
														"name": "InlineConfig",
														"package": "vite"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
													"qualifiedName": "InlineConfig"
												},
												"name": "InlineConfig",
												"package": "vite"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30126,
								30127,
								30128,
								30129,
								30130
							]
						}
					]
				},
				{
					"id": 30134,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 30135,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30136,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30137,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30138,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30135,
								30136,
								30137,
								30138
							]
						}
					]
				},
				{
					"id": 30139,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 30140,
							"name": "databaseName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If specified in "
									},
									{
										"kind": "code",
										"text": "`databaseUrl`"
									},
									{
										"kind": "text",
										"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseName: process.env.DATABASE_NAME ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30141,
							"name": "databaseUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseUrl: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30142,
							"name": "databaseSchema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseSchema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n})\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30143,
							"name": "databaseLogging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
									},
									{
										"kind": "code",
										"text": "`all`"
									},
									{
										"kind": "text",
										"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
									},
									{
										"kind": "code",
										"text": "`query`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`schema`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`error`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`warn`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`log`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`migration`"
									},
									{
										"kind": "text",
										"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", meaning no database messages are logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseLogging: [\"query\", \"error\"]\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 30145,
							"name": "databaseDriverOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option.\n\n:::note\n\nMake sure to add to the end of the database URL "
									},
									{
										"kind": "code",
										"text": "`?ssl_mode=disable`"
									},
									{
										"kind": "text",
										"text": " as well when disabling "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": ".\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseDriverOptions: process.env.NODE_ENV !== \"development\" ?\n      { ssl: { rejectUnauthorized: false } } : {}\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 30146,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30147,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 30148,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 30149,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 30150,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 30151,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						30151
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		30149
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30147
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 30152,
							"name": "redisUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisUrl: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30153,
							"name": "redisPrefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The prefix set on all keys stored in Redis. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisPrefix: process.env.REDIS_URL || \"medusa:\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30154,
							"name": "redisOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisOptions: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 30155,
							"name": "sessionOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    sessionOptions: {\n      name: process.env.SESSION_NAME || \"custom\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 33407,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30157,
							"name": "jobsBatchSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the number of staged jobs that are polled from the database. Default is "
									},
									{
										"kind": "code",
										"text": "`1000`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    jobsBatchSize: 100\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30158,
							"name": "workerMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode.\n\nWorkers are processes running separately from the main application. They're useful for executing long-running or resource-heavy tasks in the background, such as importing products.\n\nWith a worker, these tasks are offloaded to a separate process. So, they won't affect the performance of the main application.\n\n![Diagram showcasing how the server and worker work together](https://res.cloudinary.com/dza7lstvk/image/upload/fl_lossy/f_auto/r_16/ar_16:9,c_pad/v1/Medusa%20Book/medusa-worker_klkbch.jpg?_a=BATFJtAA0)\n\nMedusa has three runtime modes:\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nIn production, it's recommended to deploy two instances:\n\n1. One having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": ".\n2. Another having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    workerMode: process.env.WORKER_MODE || \"shared\"\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						},
						{
							"id": 30159,
							"name": "http",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's http-specific settings"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\",\n      compression: {\n        // ...\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30160,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30161,
											"name": "jwtSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create authentication tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtSecret: \"supersecret\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30162,
											"name": "jwtExpiresIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The expiration time for the JWT token. If not provided, the default value is "
													},
													{
														"kind": "code",
														"text": "`24h`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtExpiresIn: \"2d\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30163,
											"name": "cookieSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create cookie tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30164,
											"name": "authCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
													},
													{
														"kind": "code",
														"text": "`/auth`"
													},
													{
														"kind": "text",
														"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: process.env.AUTH_CORS\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30165,
											"name": "compression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
													},
													{
														"kind": "code",
														"text": "`\"x-no-compression\": true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      compression: {\n        enabled: true,\n        level: 6,\n        memLevel: 8,\n        threshold: 1024\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30134,
												"name": "HttpCompressionOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30166,
											"name": "storeCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`store_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:8000`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: process.env.STORE_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30167,
											"name": "adminCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`admin_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: process.env.ADMIN_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30168,
											"name": "authMethodsPerActor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optionally you can specify the supported authentication providers per actor type (such as user, customer, or any custom actors).\nFor example, you only want to allow SSO logins for "
													},
													{
														"kind": "code",
														"text": "`users`"
													},
													{
														"kind": "text",
														"text": " to the admin, while you want to allow email/password logins for "
													},
													{
														"kind": "code",
														"text": "`customers`"
													},
													{
														"kind": "text",
														"text": " to the storefront.\n\n"
													},
													{
														"kind": "code",
														"text": "`authMethodsPerActor`"
													},
													{
														"kind": "text",
														"text": " is a a map where the actor type (eg. 'user') is the key, and an array of supported auth providers as the value."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authMethodsPerActor: {\n        user: [\"email\"],\n        customer: [\"emailpas\", \"google\"]\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30161,
												30162,
												30163,
												30164,
												30165,
												30166,
												30167,
												30168
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30140,
								30141,
								30142,
								30143,
								30145,
								30152,
								30153,
								30154,
								30155,
								30157,
								30158,
								30159
							]
						}
					]
				},
				{
					"id": 30169,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa backend are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports an object having the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 30170,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": " (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "admin",
								"target": 30171,
								"tsLinkText": "admin"
							},
							{
								"kind": "text",
								"text": ": An object that holds admin-related configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ConfigModule.plugins | plugins",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
									"qualifiedName": "__type.plugins"
								},
								"tsLinkText": "plugins"
							},
							{
								"kind": "text",
								"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 30176,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 30177,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    // ...\n  },\n  admin: {\n    // ...\n  },\n  modules: {\n    // ...\n  },\n  featureFlags: {\n    // ...\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 30170,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30139,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30171,
							"name": "admin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Admin dashboard configurations."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30125,
								"name": "AdminOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30176,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the module's registration name. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled. This is only supported for Medusa's commerce and architectural modules;\n2. Or an object having the following properties:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the path to the module relative to "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": ", or the module's NPM package name.\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object indicating the options to pass to the module.\n    3. "
									},
									{
										"kind": "code",
										"text": "`definition`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object of extra configurations, such as "
									},
									{
										"kind": "code",
										"text": "`isQueryable`"
									},
									{
										"kind": "text",
										"text": " used when a module has relationships."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  modules: {\n    helloModuleService: {\n      resolve: \"./modules/hello\"\n    }\n  }\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 32236,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 32247,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 30177,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/develop/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  featureFlags: {\n    product_categories: true,\n    // ...\n  }\n  // ...\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to run migrations as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30170,
								30171,
								30176,
								30177
							]
						}
					]
				},
				{
					"id": 30178,
					"name": "PluginDetails",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30179,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30180,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30181,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30182,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30183,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 30184,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30180,
										30181,
										30182,
										30183,
										30184
									]
								}
							]
						}
					}
				},
				{
					"id": 30185,
					"name": "ExecArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30186,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30187,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 30190,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30188,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30187,
										30188
									]
								}
							]
						}
					}
				},
				{
					"id": 30189,
					"name": "ModuleImplementations",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
							}
						]
					}
				},
				{
					"id": 30190,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
							}
						]
					},
					"typeParameters": [
						{
							"id": 30210,
							"name": "Cradle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "reference",
								"target": 30189,
								"name": "ModuleImplementations",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
											"qualifiedName": "AwilixContainer"
										},
										"name": "AwilixContainer",
										"package": "awilix"
									},
									{
										"type": "literal",
										"value": "resolve"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 30191,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30192,
											"name": "resolve",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 30193,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 30194,
															"name": "K",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															}
														}
													],
													"parameters": [
														{
															"id": 30195,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 30194,
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 30196,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 30194,
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 30210,
															"name": "Cradle",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 30197,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 30198,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 30199,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 30200,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 30198,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												30192
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 30211,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30212,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30213,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 30214,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 30215,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 30216,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 30215,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										30213
									]
								}
							]
						}
					}
				},
				{
					"id": 30091,
					"name": "RuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accepted values for the shipping rule option's operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 30217,
					"name": "WithCalculatedPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30218,
							"name": "calculated_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30219,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30220,
											"name": "calculated_amount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 30221,
											"name": "is_calculated_price_tax_inclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30220,
												30221
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30218
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						29995,
						29999,
						30006,
						30054,
						30060,
						30061,
						30062,
						30067,
						30075,
						30125,
						30134,
						30139,
						30169,
						30189,
						30217
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						30092,
						30096,
						30101,
						30109,
						30119,
						30123,
						30222,
						29986,
						29989,
						30082,
						30084,
						30086,
						30087,
						30178,
						30185,
						30190,
						30211,
						30091
					]
				}
			]
		},
		{
			"id": 30224,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30411,
					"name": "ModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 30412,
					"name": "SoftDeletableModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 30411,
								"name": "ModelDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 30253,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 30254,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30256,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30256,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 30255,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30256,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30256,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30254,
								30255
							]
						}
					],
					"typeParameters": [
						{
							"id": 30256,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 30720,
							"name": "AdminClaimListParams"
						},
						{
							"type": "reference",
							"target": 31064,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 31139,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 31257,
							"name": "AdminProductTagListParams"
						},
						{
							"type": "reference",
							"target": 31300,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 31441,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 31781,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 31850,
							"name": "FilterableInventoryLevelProps"
						},
						{
							"type": "reference",
							"target": 32538,
							"name": "FilterableNotificationProps"
						},
						{
							"type": "reference",
							"target": 32686,
							"name": "FilterableStockLocationProps"
						},
						{
							"type": "reference",
							"target": 32916,
							"name": "FilterableWorkflowExecutionProps"
						},
						{
							"type": "reference",
							"target": 33532,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 33573,
							"name": "BaseProductCategoryListParams"
						}
					]
				},
				{
					"id": 30257,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 30258,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 30259,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 33428,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30265,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33428,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30265,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 30260,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30261,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30262,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 30263,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30264,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 33430,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 33430,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30258,
								30259,
								30260,
								30261,
								30262,
								30263,
								30264
							]
						}
					],
					"typeParameters": [
						{
							"id": 30265,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 30266,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 30267,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 30268,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 30276,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 30231,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 30276,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 30269,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignatures": [
																{
																	"id": 30270,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 30271,
																			"name": "x",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "inferred",
																		"name": "V"
																	}
																}
															]
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 30253,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 30276,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 30231,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 30276,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 30272,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignatures": [
																		{
																			"id": 30273,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 30274,
																					"name": "x",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "inferred",
																				"name": "V"
																			}
																		}
																	]
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 30275,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30257,
								"typeArguments": [
									{
										"type": "reference",
										"target": 30276,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30268,
								30275
							]
						}
					],
					"typeParameters": [
						{
							"id": 30276,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 30277,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 30278,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 30279,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30278
							]
						}
					],
					"typeParameters": [
						{
							"id": 30279,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 30280,
					"name": "PerformedActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30281,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30282,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33435,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 33436,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 30283,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33435,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 33436,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 30284,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33435,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 33436,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30282,
										30283,
										30284
									]
								}
							]
						}
					}
				},
				{
					"id": 30285,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 30338,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30339,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30340,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 30341,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 30342,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 30343,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 30344,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 30340,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 30345,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 30346,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 30347,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 30348,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 30340,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 30349,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																30347,
																30348,
																30349
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33441,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33440,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 30350,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30351,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30352,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 30352,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33453,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33452,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 30353,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30354,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30355,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 30355,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33456,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33455,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 30356,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30357,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30358,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 30359,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 30360,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 30358,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33459,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33458,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 30286,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30287,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30288,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30267,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30361,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30289,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30361,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30290,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30291,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30292,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30267,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30361,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30293,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30361,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30294,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30295,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30296,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 30297,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30361,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30298,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30299,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30300,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 30301,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 30302,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 30303,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	30302,
																	30303
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 30304,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30361,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30305,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30306,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30307,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 30361,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 30231,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 30361,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 30308,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignatures": [
																				{
																					"id": 30309,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"parameters": [
																						{
																							"id": 30310,
																							"name": "x",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "V"
																					}
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 30253,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 30361,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 30231,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 30361,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 30311,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignatures": [
																						{
																							"id": 30312,
																							"name": "__index",
																							"variant": "signature",
																							"kind": 8192,
																							"flags": {},
																							"parameters": [
																								{
																									"id": 30313,
																									"name": "x",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								}
																							],
																							"type": {
																								"type": "inferred",
																								"name": "V"
																							}
																						}
																					]
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 30314,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30315,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30316,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30317,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 30318,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 30319,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 30320,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30361,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30321,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30322,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30323,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 30324,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 30325,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30361,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30326,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30327,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30328,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 30329,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30361,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30330,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30331,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30332,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 30333,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30277,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30361,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30334,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 30335,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 30336,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 30361,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															}
														},
														{
															"id": 30337,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 30280,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																30336,
																30337
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30338,
								30350,
								30353,
								30356,
								30286,
								30290,
								30294,
								30298,
								30305,
								30315,
								30321,
								30326,
								30330
							]
						}
					],
					"typeParameters": [
						{
							"id": 30361,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33439,
							"typeArguments": [
								{
									"type": "reference",
									"target": 30361,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30362,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 30381,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30382,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30383,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 30384,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 30385,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 30386,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 30387,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 30340,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 30388,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 30389,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 30390,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 30391,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 30340,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 30392,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																30390,
																30391,
																30392
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33441,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33440,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 30393,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30394,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30395,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 30352,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33453,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33452,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 30396,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30397,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30398,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 30355,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33456,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33455,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 30399,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30400,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 30401,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 30402,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 30403,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 30358,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 33459,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 33458,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 30363,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30364,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30365,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30267,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30404,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30366,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30061,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30367,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30404,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30368,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30369,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30370,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30267,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30404,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30371,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30061,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30372,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30404,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30373,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30374,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30375,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 30376,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30404,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30377,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30378,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30379,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30380,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30381,
								30393,
								30396,
								30399,
								30363,
								30368,
								30373,
								30377
							]
						}
					],
					"typeParameters": [
						{
							"id": 30404,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33439,
							"typeArguments": [
								{
									"type": "reference",
									"target": 30404,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30405,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 30406,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30407,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30406
							]
						}
					],
					"typeParameters": [
						{
							"id": 30407,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 30408,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 30409,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30410,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30409
							]
						}
					],
					"typeParameters": [
						{
							"id": 30410,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 30231,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30252,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30232,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30233,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33424,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30252,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 30234,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33424,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30252,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 30235,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 33426,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30252,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33426,
													"typeArguments": [
														{
															"type": "reference",
															"target": 30252,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 30236,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33426,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30252,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30237,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33426,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30252,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 30238,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33426,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30252,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 30239,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33424,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30252,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30240,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33426,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30252,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30241,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33426,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30252,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30242,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33426,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30252,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30243,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33426,
										"typeArguments": [
											{
												"type": "reference",
												"target": 30252,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30244,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30245,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30246,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30247,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30248,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30249,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30250,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 30251,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30233,
										30234,
										30235,
										30236,
										30237,
										30238,
										30239,
										30240,
										30241,
										30242,
										30243,
										30244,
										30245,
										30246,
										30247,
										30248,
										30249,
										30250,
										30251
									]
								}
							]
						}
					}
				},
				{
					"id": 30225,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30229,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 30230,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 30230,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 30229,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 30229,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 30229,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 30231,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 30229,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 30229,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 30226,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 30227,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 30228,
																"name": "x",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"type": {
															"type": "inferred",
															"name": "V"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 30225,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 30230,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 33423,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30253,
						30257,
						30267,
						30277,
						30285,
						30362,
						30405,
						30408
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						30411,
						30412,
						30280,
						30231,
						30225
					]
				}
			]
		},
		{
			"id": 33435,
			"name": "EntityClassName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 33436,
			"name": "EntityValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 33437,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 33438,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									33438
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 33439,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 33440,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33441,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 33442,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 33443,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33444,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 33445,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 33446,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 30340,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 33447,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33448,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33449,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33450,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 30340,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 33451,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33449,
														33450,
														33451
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33452,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33453,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 33454,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30352,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 33455,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33456,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 33457,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 30355,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 33458,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33459,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 33460,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 33461,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 33462,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 30358,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						33440,
						33452,
						33455,
						33458
					]
				}
			],
			"typeParameters": [
				{
					"id": 33463,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30285,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 30362,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 33430,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33434,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33431,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 33432,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 33433,
									"name": "k",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 33434,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 33424,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33425,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33425,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 33425,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 33690,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 30225,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33425,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 33694,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33425,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 33426,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33427,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33427,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 33427,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 33427,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 33690,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33691,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33692,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33693,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										33692
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33769,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33770,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33770,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 33770,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 33770,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 33759,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33768,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 33768,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 33760,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 33761,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									33761
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 33769,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 33768,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 33762,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33763,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33763
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 33769,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33768,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 33764,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 33765,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											33765
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 33769,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 33768,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 33766,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33767,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33767
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 33769,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 33748,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33749,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 33749,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 33426,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33749,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33759,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33749,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 33694,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33695,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33748,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33695,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33748,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33695,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33748,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33695,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 33423,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 33428,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33429,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 33429,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 33428,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 33429,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 33429,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 33429,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 33024,
			"name": "DmlTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 33025,
					"name": "IsDmlEntity",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Symbol to identify a DML entity from an object"
							}
						]
					},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 33025,
							"name": "IsDmlEntity",
							"package": "@medusajs/types"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 33026,
					"name": "DMLSchema",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of DML schema. It must be a key-value pair\nwith string based keys and properties/relationships\nas the value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 33060,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PropertyType",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 33078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33027,
					"name": "IDmlEntityConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33028,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33029,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 33030,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33029,
												33030
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 33031,
					"name": "InferDmlEntityNameFromConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33036,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33027,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33036,
							"name": "TConfig",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "reference",
							"target": 30222,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33036,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCase",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 33036,
								"name": "TConfig",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 33032,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33033,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33033
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 30222,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "name"
										},
										"objectType": {
											"type": "reference",
											"target": 33036,
											"name": "TConfig",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "CamelCase",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 33036,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 33034,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33035,
												"name": "tableName",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33035
												]
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"target": 30222,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "tableName"
											},
											"objectType": {
												"type": "reference",
												"target": 33036,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "CamelCase",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						}
					}
				},
				{
					"id": 33037,
					"name": "IDmlEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of a DML entity"
							}
						]
					},
					"children": [
						{
							"id": 33040,
							"name": "[IsDmlEntity]",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 33038,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33031,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33042,
										"name": "Config",
										"package": "@medusajs/types",
										"qualifiedName": "IDmlEntity.Config",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33039,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33041,
								"name": "Schema",
								"package": "@medusajs/types",
								"qualifiedName": "IDmlEntity.Schema",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33040,
								33038,
								33039
							]
						}
					],
					"typeParameters": [
						{
							"id": 33041,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33042,
							"name": "Config",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33027,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 33043,
					"name": "KnownDataTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported data types"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "boolean"
							},
							{
								"type": "literal",
								"value": "enum"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "literal",
								"value": "bigNumber"
							},
							{
								"type": "literal",
								"value": "dateTime"
							},
							{
								"type": "literal",
								"value": "array"
							},
							{
								"type": "literal",
								"value": "json"
							},
							{
								"type": "literal",
								"value": "id"
							}
						]
					}
				},
				{
					"id": 33044,
					"name": "RelationshipTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of available relationships at DML level"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "hasOne"
							},
							{
								"type": "literal",
								"value": "hasMany"
							},
							{
								"type": "literal",
								"value": "belongsTo"
							},
							{
								"type": "literal",
								"value": "manyToMany"
							}
						]
					}
				},
				{
					"id": 33045,
					"name": "PropertyMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the property parse method"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33046,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33047,
									"name": "fieldName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33048,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 33049,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 33050,
									"name": "dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 33051,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33052,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 33043,
														"name": "KnownDataTypes",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 33053,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33052,
														33053
													]
												}
											]
										}
									}
								},
								{
									"id": 33054,
									"name": "indexes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 33055,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 33056,
														"name": "name",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 33057,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "index"
																},
																{
																	"type": "literal",
																	"value": "unique"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															33056,
															33057
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 33058,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33070,
											"name": "RelationshipMetadata",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 33059,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33047,
										33048,
										33049,
										33050,
										33054,
										33058,
										33059
									]
								}
							]
						}
					}
				},
				{
					"id": 33060,
					"name": "PropertyType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a property type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33066,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33061,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33062,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33066,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 33063,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33064,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33065,
													"name": "fieldName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 33045,
												"name": "PropertyMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33062
									]
								},
								{
									"title": "Methods",
									"children": [
										33063
									]
								}
							]
						}
					}
				},
				{
					"id": 33067,
					"name": "RelationshipOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options accepted by all the relationships"
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33068,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33069,
											"name": "mappedBy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
													},
													{
														"kind": "code",
														"text": "`belongsTo`"
													},
													{
														"kind": "text",
														"text": "\nrelationship method."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33069
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 33070,
					"name": "RelationshipMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the relationship parse\nmethod"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33071,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33072,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33073,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33044,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33074,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 33075,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 33076,
									"name": "mappedBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33077,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33072,
										33073,
										33074,
										33075,
										33076,
										33077
									]
								}
							]
						}
					}
				},
				{
					"id": 33078,
					"name": "RelationshipType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a relationship type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33085,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33079,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33080,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33085,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 33081,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33044,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33082,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 33083,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33084,
													"name": "relationshipName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 33070,
												"name": "RelationshipMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33080,
										33081
									]
								},
								{
									"title": "Methods",
									"children": [
										33082
									]
								}
							]
						}
					}
				},
				{
					"id": 33086,
					"name": "EntityConstructor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only representation of a MikroORM entity. Since we generate\nentities on the fly, we need a way to represent a type-safe\nconstructor and its instance properties."
							}
						]
					},
					"children": [
						{
							"id": 33088,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 33089,
									"name": "new EntityConstructor",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33087,
										"name": "Props",
										"package": "@medusajs/types",
										"qualifiedName": "EntityConstructor.Props",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								33088
							]
						}
					],
					"typeParameters": [
						{
							"id": 33087,
							"name": "Props",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Function"
							},
							"name": "Function",
							"package": "typescript"
						}
					]
				},
				{
					"id": 33090,
					"name": "InferForeignKeys",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "From a IDmlEntity, infer the foreign keys name and type for\n\"belongsTo\" relation meaning \"hasOne\" and \"ManyToOne\""
							}
						]
					},
					"typeParameters": [
						{
							"id": 33095,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 33095,
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 33095,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 33091,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33092,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33092
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 33044,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "string"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"nameType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 33095,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 33093,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33094,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33094
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 33044,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "templateLiteral",
									"head": "",
									"tail": [
										[
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"_id"
										]
									]
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 33096,
					"name": "InferBelongsToFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a belongsTo relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33101,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33101,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 33097,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 33098,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 33037,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 33110,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferSchemaFields",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 33101,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 33099,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33100,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 33037,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "R"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "IDmlEntity",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									]
								}
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 33110,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferSchemaFields",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 33102,
					"name": "InferHasOneFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a hasOne relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33103,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 33096,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33103,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferBelongsToFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33104,
					"name": "InferHasManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for hasMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33107,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33107,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 33105,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 33106,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 33037,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 33110,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "R"
										},
										"name": "R",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "InferSchemaFields",
								"package": "@medusajs/types"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 33108,
					"name": "InferManyToManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for manyToMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33109,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 33104,
						"typeArguments": [
							{
								"type": "reference",
								"target": 33109,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferHasManyFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33110,
					"name": "InferSchemaFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inferring the types of the schema fields from the DML\nentity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33111,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 29986,
						"typeArguments": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 33111,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 33111,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 33078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "type"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 33111,
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										"extendsType": {
											"type": "literal",
											"value": "belongsTo"
										},
										"trueType": {
											"type": "reference",
											"target": 33096,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "$dataType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 33111,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "InferBelongsToFields",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "type"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 33111,
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											},
											"extendsType": {
												"type": "literal",
												"value": "hasOne"
											},
											"trueType": {
												"type": "reference",
												"target": 33102,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "$dataType"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 33111,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													}
												],
												"name": "InferHasOneFields",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "type"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 33111,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												"extendsType": {
													"type": "literal",
													"value": "hasMany"
												},
												"trueType": {
													"type": "reference",
													"target": 33104,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "$dataType"
															},
															"objectType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 33111,
																	"name": "Schema",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															}
														}
													],
													"name": "InferHasManyFields",
													"package": "@medusajs/types"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "type"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 33111,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													},
													"extendsType": {
														"type": "literal",
														"value": "manyToMany"
													},
													"trueType": {
														"type": "reference",
														"target": 33108,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "$dataType"
																},
																"objectType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 33111,
																		"name": "Schema",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															}
														],
														"name": "InferManyToManyFields",
														"package": "@medusajs/types"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "$dataType"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 33111,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									}
								}
							}
						],
						"name": "Prettify",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33112,
					"name": "Infer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the schema type of a DmlEntity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33113,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33113,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 33037,
							"typeArguments": [
								{
									"type": "inferred",
									"name": "Schema"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 33086,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33110,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "InferSchemaFields",
									"package": "@medusajs/types"
								}
							],
							"name": "EntityConstructor",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 33114,
					"name": "ExtractEntityRelations",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extracts names of relationships from a schema"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33117,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 33118,
							"name": "OfType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33044,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "intersection",
								"types": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 33117,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"objectType": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intersection",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 33117,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 33117,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 33078,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 33117,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 33115,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 33116,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 33118,
															"name": "OfType",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															33116
														]
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				},
				{
					"id": 33119,
					"name": "EntityCascades",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actions to cascade from a given entity to its\nrelationship."
							}
						]
					},
					"typeParameters": [
						{
							"id": 33122,
							"name": "Relationships",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33120,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33121,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The related models to delete when a record of this data model\nis deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 33122,
										"name": "Relationships",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33121
									]
								}
							]
						}
					}
				},
				{
					"id": 33123,
					"name": "InferTypeOf",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the instance type of a IDmlEntity once converted as an Entity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33124,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33037,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "InstanceType"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 33112,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33124,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Infer",
								"package": "@medusajs/types"
							}
						],
						"name": "InstanceType",
						"package": "typescript"
					}
				},
				{
					"id": 33125,
					"name": "InferEntityType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used in the module sdk internal service to infer propert entity typings from DML"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33126,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 33126,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 33037,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 33123,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33126,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferTypeOf",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 33126,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 33127,
					"name": "InferIndexableProperties",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer all indexable properties from a DML entity including inferred foreign keys and excluding relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 33130,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 33130,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": 33037,
								"typeArguments": [
									{
										"type": "inferred",
										"name": "Schema"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							},
							"trueType": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "intrinsic",
											"name": "string"
										},
										"nameType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Schema"
													},
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "reflection",
												"declaration": {
													"id": 33128,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 33129,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "inferred",
																"name": "Type"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																33129
															]
														}
													]
												}
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Type"
													},
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "reference",
													"target": 33044,
													"name": "RelationshipTypes",
													"package": "@medusajs/types"
												},
												"trueType": {
													"type": "intrinsic",
													"name": "never"
												},
												"falseType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"falseType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									{
										"type": "reference",
										"target": 33090,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferForeignKeys",
										"package": "@medusajs/types"
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 33131,
					"name": "EntityIndex",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33137,
							"name": "TSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33138,
							"name": "TWhere",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33132,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33133,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the index. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33134,
									"name": "unique",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When enabled, a unique index is created on the specified\nproperties."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 33135,
									"name": "on",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of properties to create the index on."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33127,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33037,
													"typeArguments": [
														{
															"type": "reference",
															"target": 33137,
															"name": "TSchema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "IDmlEntity",
													"package": "@medusajs/types"
												}
											],
											"name": "InferIndexableProperties",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 33136,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Conditions to restrict which records are indexed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 33138,
										"name": "TWhere",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33133,
										33134,
										33135,
										33136
									]
								}
							]
						}
					}
				},
				{
					"id": 33139,
					"name": "SimpleQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 33140,
					"name": "NeQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33141,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33142,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33139,
										"name": "SimpleQueryValue",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33142
									]
								}
							]
						}
					}
				},
				{
					"id": 33143,
					"name": "QueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 33139,
								"name": "SimpleQueryValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 33140,
								"name": "NeQueryValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 33144,
					"name": "QueryCondition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33145,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 33026,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "schema"
								},
								"objectType": {
									"type": "reference",
									"target": 33037,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33145,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "IDmlEntity",
									"package": "@medusajs/types"
								}
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 33145,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "reference",
								"target": 33143,
								"name": "QueryValue",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "reference",
								"target": 33144,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33145,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryCondition",
								"package": "@medusajs/types"
							}
						},
						"optionalModifier": "+"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						33037,
						33086
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						33026,
						33027,
						33031,
						33043,
						33044,
						33045,
						33060,
						33067,
						33070,
						33078,
						33090,
						33096,
						33102,
						33104,
						33108,
						33110,
						33112,
						33114,
						33119,
						33123,
						33125,
						33127,
						33131,
						33139,
						33140,
						33143,
						33144
					]
				},
				{
					"title": "Variables",
					"children": [
						33025
					]
				}
			]
		},
		{
			"id": 30413,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30414,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30418,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30415,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 30416,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30417,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 30429,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30418,
														"name": "TData",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Event",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 30419,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30420,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30421,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30421
									]
								}
							]
						}
					}
				},
				{
					"id": 30422,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30423,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30424,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30425,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 30414,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30424,
										30425
									]
								}
							]
						}
					}
				},
				{
					"id": 30426,
					"name": "EventMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 30427,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30428,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30428
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 30429,
					"name": "Event",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30434,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30430,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30431,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30432,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30426,
										"name": "EventMetadata",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 30433,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 30434,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30431,
										30432,
										30433
									]
								}
							]
						}
					}
				},
				{
					"id": 30435,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30438,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 30429,
								"typeArguments": [
									{
										"type": "reference",
										"target": 30438,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 30436,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30437,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30437
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 30439,
					"name": "RawMessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30448,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30440,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30441,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30442,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 30448,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 30443,
									"name": "source",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30444,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30445,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30446,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "eventGroupId"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								},
								{
									"id": 30447,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30441,
										30442,
										30443,
										30444,
										30445,
										30446,
										30447
									]
								}
							]
						}
					}
				},
				{
					"id": 30467,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30468,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30469,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 30470,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 30471,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 30435,
														"typeArguments": [
															{
																"type": "reference",
																"target": 30470,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30435,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 30470,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 30472,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30473,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30474,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30475,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 30476,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 30414,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30477,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30419,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 30478,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30479,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30480,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 30481,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 30414,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30482,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30419,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 30483,
							"name": "releaseGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30484,
									"name": "releaseGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30485,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30486,
							"name": "clearGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30487,
									"name": "clearGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30488,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30468,
								30473,
								30478,
								30483,
								30486
							]
						}
					]
				},
				{
					"id": 30449,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30450,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30451,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30452,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 30453,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 30414,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30454,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30419,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 30455,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30456,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 30457,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 30458,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 30414,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30459,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30419,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 30460,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30461,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 30462,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 30463,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 30435,
														"typeArguments": [
															{
																"type": "reference",
																"target": 30462,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30435,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 30462,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30464,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 30465,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"parameters": [
										{
											"id": 30466,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 32791,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 32790,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30450,
								30455,
								30460,
								30464
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32789,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30467,
						30449
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						30414,
						30419,
						30422,
						30426,
						30429,
						30435,
						30439
					]
				}
			]
		},
		{
			"id": 30489,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30490,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30491,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30492,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 30493,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 30494,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 30495,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30496,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 30497,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 30498,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30491,
								30495
							]
						}
					]
				},
				{
					"id": 30498,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 30499,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 30500,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 30501,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											30500,
											30501
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 30502,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30503,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30504,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30505,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30506,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30507,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30504,
										30505,
										30506,
										30507
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30490
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						30498,
						30502
					]
				}
			]
		},
		{
			"id": 33146,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 33147,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33148,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33147,
						33148
					]
				}
			]
		},
		{
			"id": 33149,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 33150,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 33151,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 33152,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33153,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33150,
						33151,
						33152,
						33153
					]
				}
			]
		},
		{
			"id": 33154,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 33155,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33156,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33155,
						33156
					]
				}
			]
		},
		{
			"id": 33157,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 33158,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33158
					]
				}
			]
		},
		{
			"id": 33159,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 33160,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33161,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33162,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33160,
						33161,
						33162
					]
				}
			]
		},
		{
			"id": 30508,
			"name": "FileTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30509,
					"name": "FileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File details."
							}
						]
					},
					"children": [
						{
							"id": 30510,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30511,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30510,
								30511
							]
						}
					]
				},
				{
					"id": 30512,
					"name": "FilterableFileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a currency."
							}
						]
					},
					"children": [
						{
							"id": 30513,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file ID to filter by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30513
							]
						}
					]
				},
				{
					"id": 30514,
					"name": "CreateFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File to be created."
							}
						]
					},
					"children": [
						{
							"id": 30515,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30516,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30517,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30518,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30515,
								30516,
								30517,
								30518
							]
						}
					]
				},
				{
					"id": 30562,
					"name": "ProviderFileResultDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of a file upload's result."
							}
						]
					},
					"children": [
						{
							"id": 30563,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30564,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30563,
								30564
							]
						}
					]
				},
				{
					"id": 30565,
					"name": "ProviderGetFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a file to retrieve."
							}
						]
					},
					"children": [
						{
							"id": 30566,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30566
							]
						}
					]
				},
				{
					"id": 30567,
					"name": "ProviderDeleteFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to remove."
							}
						]
					},
					"children": [
						{
							"id": 30568,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. When uploading a file, the\nreturned key is used here."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30568
							]
						}
					]
				},
				{
					"id": 30569,
					"name": "ProviderUploadFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to create."
							}
						]
					},
					"children": [
						{
							"id": 30570,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30571,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30572,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30573,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30570,
								30571,
								30572,
								30573
							]
						}
					]
				},
				{
					"id": 30574,
					"name": "IFileProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30575,
							"name": "upload",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30576,
									"name": "upload",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to upload a file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the upload's result."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30577,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contents and metadata of the file.\nAmong the file’s details, you can access the file’s path in the "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": " property of the file object."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30569,
												"name": "ProviderUploadFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 30562,
												"name": "ProviderFileResultDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30578,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30579,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to delete a file from storage."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30580,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30567,
												"name": "ProviderDeleteFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30581,
							"name": "getPresignedDownloadUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30582,
									"name": "getPresignedDownloadUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a download URL of the file. For some file services, such as S3, a presigned URL indicates a temporary URL to get access to a file.\n\nIf your file service doesn’t perform or offer a similar functionality, you can just return the URL to download the file."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL to download the file"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30583,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30565,
												"name": "ProviderGetFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30575,
								30578,
								30581
							]
						}
					]
				},
				{
					"id": 30595,
					"name": "LocalFileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30596,
							"name": "upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30597,
							"name": "private_upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30598,
							"name": "backend_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30596,
								30597,
								30598
							]
						}
					]
				},
				{
					"id": 30584,
					"name": "S3FileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30585,
							"name": "file_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30586,
							"name": "access_key_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30587,
							"name": "secret_access_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30588,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30589,
							"name": "bucket",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30590,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30591,
							"name": "endpoint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30592,
							"name": "cache_control",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30593,
							"name": "download_file_duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30594,
							"name": "additional_client_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30585,
								30586,
								30587,
								30588,
								30589,
								30590,
								30591,
								30592,
								30593,
								30594
							]
						}
					]
				},
				{
					"id": 30519,
					"name": "IFileModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the File Module."
							}
						]
					},
					"children": [
						{
							"id": 30520,
							"name": "createFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30521,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads files to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created files."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst [file] = await fileModuleService.createFiles([{\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n}])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30522,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The files to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30514,
													"name": "CreateFileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 30523,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30509,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30524,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads a file to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.createFiles({\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30525,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30514,
												"name": "CreateFileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30526,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 30509,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30527,
							"name": "deleteFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30528,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes files by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the files are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles([\"file_123\"])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30529,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the files."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 30530,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 30531,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30532,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30533,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30534,
							"name": "retrieveFile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30535,
									"name": "retrieveFile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file with a downloadable URL by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.retrieveFile(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30536,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30537,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the file is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30509,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30538,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 30509,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30539,
							"name": "listFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30540,
									"name": "listFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the list method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30541,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30512,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30542,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30509,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30543,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30509,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 30544,
							"name": "listAndCountFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 30545,
									"name": "listAndCountFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the listAndCount method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files and their count. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 30546,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30512,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30547,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 30509,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30548,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 30509,
															"name": "FileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								30520,
								30527,
								30534,
								30539,
								30544
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32390,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30509,
						30512,
						30514,
						30562,
						30565,
						30567,
						30569,
						30574,
						30595,
						30584,
						30519
					]
				}
			]
		},
		{
			"id": 33491,
			"name": "ClaimReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 33492,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 33493,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 33494,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 33495,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						33492,
						33493,
						33494,
						33495
					]
				}
			]
		},
		{
			"id": 33483,
			"name": "AdminClaimAddItems",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33484,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 33485,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 33486,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 33487,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 33488,
										"name": "reason",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reference",
											"target": 33491,
											"name": "ClaimReason",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 33489,
										"name": "description",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 33490,
										"name": "internal_note",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											33486,
											33487,
											33488,
											33489,
											33490
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33484
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30658,
					"name": "AdminAddClaimItems"
				},
				{
					"type": "reference",
					"target": 30671,
					"name": "AdminAddClaimInboundItems"
				},
				{
					"type": "reference",
					"target": 30684,
					"name": "AdminAddClaimOutboundItems"
				}
			]
		},
		{
			"id": 33496,
			"name": "AdminClaimUpdateItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33497,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33498,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 33491,
						"name": "ClaimReason",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33499,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33500,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33497,
						33498,
						33499,
						33500
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30666,
					"name": "AdminUpdateClaimItem"
				},
				{
					"type": "reference",
					"target": 30679,
					"name": "AdminUpdateClaimInboundItem"
				},
				{
					"type": "reference",
					"target": 30692,
					"name": "AdminUpdateClaimOutboundItem"
				}
			]
		},
		{
			"id": 33501,
			"name": "AdminClaimAddShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33502,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33503,
					"name": "custom_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33504,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33505,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33506,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33502,
						33503,
						33504,
						33505,
						33506
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30697,
					"name": "AdminClaimAddInboundShipping"
				},
				{
					"type": "reference",
					"target": 30707,
					"name": "AdminClaimAddOutboundShipping"
				}
			]
		},
		{
			"id": 33507,
			"name": "AdminClaimUpdateShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33508,
					"name": "custom_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33509,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33510,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33508,
						33509,
						33510
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30703,
					"name": "AdminClaimUpdateInboundShipping"
				},
				{
					"type": "reference",
					"target": 30713,
					"name": "AdminClaimUpdateOutboundShipping"
				}
			]
		},
		{
			"id": 33472,
			"name": "BaseClaimItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33473,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33474,
					"name": "claim_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33475,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33476,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33477,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33478,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33479,
					"name": "raw_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33377,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33480,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 33481,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 33482,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33473,
						33474,
						33475,
						33476,
						33477,
						33478,
						33479,
						33480,
						33481,
						33482
					]
				}
			]
		},
		{
			"id": 33464,
			"name": "BaseClaim",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33465,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33466,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33472,
						"name": "BaseClaimItem",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33467,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 33468,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
							"qualifiedName": "ReturnDTO"
						},
						"name": "ReturnDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33469,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33470,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33471,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33465,
						33466,
						33467,
						33468,
						33469,
						33470,
						33471
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrder"
							},
							"name": "BaseOrder",
							"package": "@medusajs/types"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "status"
								},
								{
									"type": "literal",
									"value": "version"
								},
								{
									"type": "literal",
									"value": "items"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30644,
					"name": "AdminClaim"
				}
			]
		},
		{
			"id": 33511,
			"name": "BaseClaimListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33512,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33513,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33514,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33515,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33516,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33517,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33518,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33522,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30835,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 33519,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30832,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 33520,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30833,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 33521,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30834,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33512,
						33513,
						33514,
						33515,
						33516,
						33517,
						33518,
						33522,
						33519,
						33520,
						33521
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30831,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30720,
					"name": "AdminClaimListParams"
				}
			]
		},
		{
			"id": 33523,
			"name": "BaseCollection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33524,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33525,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33526,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33527,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33528,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33529,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33530,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
								"qualifiedName": "AdminProduct"
							},
							"name": "AdminProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 33531,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33524,
						33525,
						33526,
						33527,
						33528,
						33529,
						33530,
						33531
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30756,
					"name": "AdminCollection"
				},
				{
					"type": "reference",
					"target": 30807,
					"name": "StoreCollection"
				}
			]
		},
		{
			"id": 33545,
			"name": "BaseCollectionParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33546,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30830,
						"name": "SelectParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33546
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30829,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30790,
					"name": "AdminCollectionParams"
				}
			]
		},
		{
			"id": 33532,
			"name": "BaseCollectionListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 33543,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 33532,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 30253,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33532,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30254,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 33544,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 33532,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 30253,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33532,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30255,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 33533,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33534,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33535,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33536,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33537,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33538,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33542,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30835,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 33539,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30832,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 33540,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30833,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 33541,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30834,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33543,
						33544,
						33533,
						33534,
						33535,
						33536,
						33537,
						33538,
						33542,
						33539,
						33540,
						33541
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30831,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 30253,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33532,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30776,
					"name": "AdminCollectionListParams"
				},
				{
					"type": "reference",
					"target": 30816,
					"name": "StoreCollectionFilters"
				}
			]
		},
		{
			"id": 33547,
			"name": "BaseFile",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33548,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33549,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33548,
						33549
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 30857,
					"name": "AdminFile"
				},
				{
					"type": "reference",
					"target": 30861,
					"name": "StoreFile"
				}
			]
		},
		{
			"id": 33550,
			"name": "BaseUploadFile",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 33551,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33552,
									"name": "files",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 33553,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 33554,
																"name": "name",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 33555,
																"name": "content",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	33554,
																	33555
																]
															}
														]
													}
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
														"qualifiedName": "File"
													},
													"name": "File",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33552
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "FileList"
						},
						"name": "FileList",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 33750,
			"name": "AdminUpsertGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33751,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33752,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33753,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33751,
						33752,
						33753
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33696,
					"name": "AdminUpsertFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 33700,
					"name": "AdminUpsertFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 33705,
					"name": "AdminUpsertFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 33711,
					"name": "AdminUpsertFulfillmentSetServiceZoneZip"
				},
				{
					"type": "reference",
					"target": 33754,
					"name": "AdminUpdateGeoZone"
				}
			]
		},
		{
			"id": 33696,
			"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33698,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33752,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 33699,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33753,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 33697,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 33751,
						"name": "AdminUpsertGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33698,
						33699,
						33697
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33750,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33700,
			"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33703,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33752,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 33704,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33753,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 33701,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 33751,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 33702,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33703,
						33704,
						33701,
						33702
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33750,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33705,
			"name": "AdminUpsertFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33709,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33752,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 33710,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33753,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 33706,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 33751,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 33707,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33708,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33709,
						33710,
						33706,
						33707,
						33708
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33750,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33711,
			"name": "AdminUpsertFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33716,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33752,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 33717,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33753,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 33712,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 33751,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 33713,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33714,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33715,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33716,
						33717,
						33712,
						33713,
						33714,
						33715
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33750,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33556,
			"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 33696,
						"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33700,
						"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33705,
						"name": "AdminUpsertFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33711,
						"name": "AdminUpsertFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 33754,
			"name": "AdminUpdateGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33756,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33751,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 33757,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33752,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 33758,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33753,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 33755,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33756,
						33757,
						33758,
						33755
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33750,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33718,
					"name": "AdminUpdateFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 33723,
					"name": "AdminUpdateFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 33729,
					"name": "AdminUpdateFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 33736,
					"name": "AdminUpdateFulfillmentSetServiceZoneZip"
				}
			]
		},
		{
			"id": 33718,
			"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33721,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33757,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 33722,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33758,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 33720,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33755,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 33719,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 33756,
						"name": "AdminUpdateGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33721,
						33722,
						33720,
						33719
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33754,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33723,
			"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33727,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33757,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 33728,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33758,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 33726,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33755,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 33724,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 33756,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 33725,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33727,
						33728,
						33726,
						33724,
						33725
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33754,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33729,
			"name": "AdminUpdateFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33734,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33757,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 33735,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33758,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 33733,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33755,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 33730,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 33756,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 33731,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33732,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33734,
						33735,
						33733,
						33730,
						33731,
						33732
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33754,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33736,
			"name": "AdminUpdateFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33742,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33757,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 33743,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33758,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 33741,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33755,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 33737,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 33756,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 33738,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33739,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33740,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33742,
						33743,
						33741,
						33737,
						33738,
						33739,
						33740
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33754,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 33557,
			"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 33718,
						"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33723,
						"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33729,
						"name": "AdminUpdateFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 33736,
						"name": "AdminUpdateFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 30599,
			"name": "HttpTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 30600,
					"name": "AdminCreateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30601,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30602,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30603,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30604,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30605,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30606,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30607,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 30608,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30609,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 30610,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 30611,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30609,
														30610,
														30611
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30601,
								30602,
								30603,
								30604,
								30605,
								30606,
								30607
							]
						}
					]
				},
				{
					"id": 30612,
					"name": "AdminUpdateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30613,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30614,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30615,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30616,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30617,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30618,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30619,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 30620,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 30621,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 30622,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 30623,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														30621,
														30622,
														30623
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30613,
								30614,
								30615,
								30616,
								30617,
								30618,
								30619
							]
						}
					]
				},
				{
					"id": 30624,
					"name": "CampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30625,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30626,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30627,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30628,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30629,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30630,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30631,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30632,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30633,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30634,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30635,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
													"qualifiedName": "CampaignBudgetTypeValues"
												},
												"name": "CampaignBudgetTypeValues",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 30636,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 30637,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 30638,
											"name": "used",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30634,
												30635,
												30636,
												30637,
												30638
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30625,
								30626,
								30627,
								30628,
								30629,
								30630,
								30631,
								30632
							]
						}
					]
				},
				{
					"id": 30639,
					"name": "AdminCampaignListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 30640,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30641,
											"name": "campaigns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30624,
													"name": "CampaignResponse",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30641
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30642,
					"name": "AdminCampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30643,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30624,
								"name": "CampaignResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30643
							]
						}
					]
				},
				{
					"id": 30644,
					"name": "AdminClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30645,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33465,
								"name": "BaseClaim.order_id"
							}
						},
						{
							"id": 30646,
							"name": "claim_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33472,
								"name": "BaseClaimItem",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33466,
								"name": "BaseClaim.claim_items"
							}
						},
						{
							"id": 30647,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33467,
								"name": "BaseClaim.additional_items"
							}
						},
						{
							"id": 30648,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "ReturnDTO"
								},
								"name": "ReturnDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33468,
								"name": "BaseClaim.return"
							}
						},
						{
							"id": 30649,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33469,
								"name": "BaseClaim.return_id"
							}
						},
						{
							"id": 30650,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33470,
								"name": "BaseClaim.no_notification"
							}
						},
						{
							"id": 30651,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33471,
								"name": "BaseClaim.refund_amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30645,
								30646,
								30647,
								30648,
								30649,
								30650,
								30651
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33464,
							"name": "BaseClaim",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30652,
					"name": "AdminCreateClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30653,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "replace"
									},
									{
										"type": "literal",
										"value": "refund"
									}
								]
							}
						},
						{
							"id": 30654,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30655,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30656,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30657,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30653,
								30654,
								30655,
								30656,
								30657
							]
						}
					]
				},
				{
					"id": 30658,
					"name": "AdminAddClaimItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30659,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 30660,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 30661,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 30662,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 30663,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 33491,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 30664,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 30665,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													30661,
													30662,
													30663,
													30664,
													30665
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33484,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30659
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33483,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30666,
					"name": "AdminUpdateClaimItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30667,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33497,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 30668,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33491,
								"name": "ClaimReason",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33498,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 30669,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33499,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 30670,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33500,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30667,
								30668,
								30669,
								30670
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33496,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30671,
					"name": "AdminAddClaimInboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30672,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 30673,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 30674,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 30675,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 30676,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 33491,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 30677,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 30678,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													30674,
													30675,
													30676,
													30677,
													30678
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33484,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30672
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33483,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30679,
					"name": "AdminUpdateClaimInboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30680,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33497,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 30681,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33491,
								"name": "ClaimReason",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33498,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 30682,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33499,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 30683,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33500,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30680,
								30681,
								30682,
								30683
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33496,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30684,
					"name": "AdminAddClaimOutboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30685,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 30686,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 30687,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 30688,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 30689,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 33491,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 30690,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 30691,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													30687,
													30688,
													30689,
													30690,
													30691
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33484,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30685
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33483,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30692,
					"name": "AdminUpdateClaimOutboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30693,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33497,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 30694,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33491,
								"name": "ClaimReason",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33498,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 30695,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33499,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 30696,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33500,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30693,
								30694,
								30695,
								30696
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33496,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30697,
					"name": "AdminClaimAddInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30698,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33502,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 30699,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33503,
								"name": "AdminClaimAddShippingMethod.custom_price"
							}
						},
						{
							"id": 30700,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33504,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 30701,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33505,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 30702,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33506,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30698,
								30699,
								30700,
								30701,
								30702
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33501,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30703,
					"name": "AdminClaimUpdateInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30704,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33508,
								"name": "AdminClaimUpdateShippingMethod.custom_price"
							}
						},
						{
							"id": 30705,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33509,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 30706,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33510,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30704,
								30705,
								30706
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33507,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30707,
					"name": "AdminClaimAddOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30708,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33502,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 30709,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33503,
								"name": "AdminClaimAddShippingMethod.custom_price"
							}
						},
						{
							"id": 30710,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33504,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 30711,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33505,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 30712,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33506,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30708,
								30709,
								30710,
								30711,
								30712
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33501,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30713,
					"name": "AdminClaimUpdateOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30714,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33508,
								"name": "AdminClaimUpdateShippingMethod.custom_price"
							}
						},
						{
							"id": 30715,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33509,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 30716,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33510,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30714,
								30715,
								30716
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33507,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30717,
					"name": "AdminRequestClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 30718,
					"name": "AdminCancelClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30719,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30719
							]
						}
					]
				},
				{
					"id": 30720,
					"name": "AdminClaimListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 30732,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 30720,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30720,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 30733,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 30720,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 30720,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 30721,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"overwrites": {
								"type": "reference",
								"target": 33518,
								"name": "BaseClaimListParams.deleted_at"
							}
						},
						{
							"id": 30722,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33512,
								"name": "BaseClaimListParams.q"
							}
						},
						{
							"id": 30723,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33513,
								"name": "BaseClaimListParams.id"
							}
						},
						{
							"id": 30724,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33514,
								"name": "BaseClaimListParams.order_id"
							}
						},
						{
							"id": 30725,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33515,
								"name": "BaseClaimListParams.status"
							}
						},
						{
							"id": 30726,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33516,
								"name": "BaseClaimListParams.created_at"
							}
						},
						{
							"id": 30727,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33517,
								"name": "BaseClaimListParams.updated_at"
							}
						},
						{
							"id": 30731,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33522,
								"name": "BaseClaimListParams.fields"
							}
						},
						{
							"id": 30728,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33519,
								"name": "BaseClaimListParams.limit"
							}
						},
						{
							"id": 30729,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33520,
								"name": "BaseClaimListParams.offset"
							}
						},
						{
							"id": 30730,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33521,
								"name": "BaseClaimListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30732,
								30733,
								30721,
								30722,
								30723,
								30724,
								30725,
								30726,
								30727,
								30731,
								30728,
								30729,
								30730
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33511,
							"name": "BaseClaimListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 30720,
									"name": "AdminClaimListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30734,
					"name": "AdminClaimParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30735,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30736,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30737,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30738,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30739,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30740,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30735,
								30736,
								30737,
								30738,
								30739,
								30740
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30741,
					"name": "AdminClaimResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30742,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30644,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30742
							]
						}
					]
				},
				{
					"id": 30743,
					"name": "AdminClaimListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30749,
							"name": "claims",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30644,
									"name": "AdminClaim",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.claims"
							}
						},
						{
							"id": 30746,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 30747,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 30748,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30749,
								30746,
								30747,
								30748
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 30744,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 30745,
												"name": "claims",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 30644,
														"name": "AdminClaim",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													30745
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30750,
					"name": "AdminClaimDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30751,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 30752,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "claim"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 30753,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 30754,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30755,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30751,
								30752,
								30753,
								30754
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "claim"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30756,
					"name": "AdminCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30757,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33524,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 30758,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33525,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 30759,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33526,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 30760,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33527,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 30761,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33528,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 30762,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33529,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 30763,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33530,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 30764,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33531,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30757,
								30758,
								30759,
								30760,
								30761,
								30762,
								30763,
								30764
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33523,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30765,
					"name": "AdminCreateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30766,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30767,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30768,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30766,
								30767,
								30768
							]
						}
					]
				},
				{
					"id": 30769,
					"name": "AdminUpdateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30770,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30771,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30772,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30770,
								30771,
								30772
							]
						}
					]
				},
				{
					"id": 30773,
					"name": "AdminUpdateCollectionProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30774,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 30775,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30774,
								30775
							]
						}
					]
				},
				{
					"id": 30776,
					"name": "AdminCollectionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 30788,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33532,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33532,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33543,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 30789,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33532,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33532,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33544,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 30777,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30778,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33533,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 30779,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33534,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 30780,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33535,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 30781,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33536,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 30782,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33537,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 30783,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33538,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 30787,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33542,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 30784,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33539,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 30785,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33540,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 30786,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33541,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30788,
								30789,
								30777,
								30778,
								30779,
								30780,
								30781,
								30782,
								30783,
								30787,
								30784,
								30785,
								30786
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33532,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30790,
					"name": "AdminCollectionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30791,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33546,
								"name": "BaseCollectionParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30791
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33545,
							"name": "BaseCollectionParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30792,
					"name": "AdminCollectionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30793,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30756,
								"name": "AdminCollection",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30793
							]
						}
					]
				},
				{
					"id": 30794,
					"name": "AdminCollectionListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30800,
							"name": "collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30756,
									"name": "AdminCollection",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.collections"
							}
						},
						{
							"id": 30797,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 30798,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 30799,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30800,
								30797,
								30798,
								30799
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 30795,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 30796,
												"name": "collections",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 30756,
														"name": "AdminCollection",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													30796
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30801,
					"name": "AdminCollectionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30802,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 30803,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 30804,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 30805,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30806,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30802,
								30803,
								30804,
								30805
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "collection"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30807,
					"name": "StoreCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30808,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33524,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 30809,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33525,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 30810,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33526,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 30811,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33527,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 30812,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33528,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 30813,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33529,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 30814,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33530,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 30815,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33531,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30808,
								30809,
								30810,
								30811,
								30812,
								30813,
								30814,
								30815
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33523,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30816,
					"name": "StoreCollectionFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 30827,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33532,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33532,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33543,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 30828,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33532,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33532,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33544,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 30817,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33533,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 30818,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33534,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 30819,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33535,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 30820,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33536,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 30821,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33537,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 30822,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33538,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 30826,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33542,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 30823,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33539,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 30824,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33540,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 30825,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33541,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30827,
								30828,
								30817,
								30818,
								30819,
								30820,
								30821,
								30822,
								30826,
								30823,
								30824,
								30825
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33532,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30854,
					"name": "AdditionalData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the additional_data property accepted in HTTP\nrequests to allow arbitrary values"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30855,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30856,
									"name": "additional_data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30856
									]
								}
							]
						}
					}
				},
				{
					"id": 30829,
					"name": "SelectParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30830,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30830
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 30734,
							"name": "AdminClaimParams"
						},
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams"
						},
						{
							"type": "reference",
							"target": 31074,
							"name": "AdminNotificationParams"
						},
						{
							"type": "reference",
							"target": 31152,
							"name": "AdminPriceListParams"
						},
						{
							"type": "reference",
							"target": 31270,
							"name": "AdminProductTagParams"
						},
						{
							"type": "reference",
							"target": 31313,
							"name": "AdminProductTypeParams"
						},
						{
							"type": "reference",
							"target": 31797,
							"name": "AdminTaxRegionParams"
						},
						{
							"type": "reference",
							"target": 33545,
							"name": "BaseCollectionParams"
						},
						{
							"type": "reference",
							"target": 33593,
							"name": "BaseProductCategoryParams"
						}
					]
				},
				{
					"id": 30831,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30835,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 30832,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30833,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30834,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30835,
								30832,
								30833,
								30834
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 30867,
							"name": "AdminFulfillmentProviderListParams"
						},
						{
							"type": "reference",
							"target": 30977,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 31021,
							"name": "AdminInventoryLevelFilters"
						},
						{
							"type": "reference",
							"target": 31064,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 31139,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 31300,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 31417,
							"name": "AdminReturnFilters"
						},
						{
							"type": "reference",
							"target": 31441,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 31553,
							"name": "AdminShippingOptionListParams"
						},
						{
							"type": "reference",
							"target": 31602,
							"name": "AdminShippingProfileListParams"
						},
						{
							"type": "reference",
							"target": 31661,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 31723,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 31781,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 33511,
							"name": "BaseClaimListParams"
						},
						{
							"type": "reference",
							"target": 33532,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 33573,
							"name": "BaseProductCategoryListParams"
						},
						{
							"type": "reference",
							"target": 33604,
							"name": "BaseProductTagListParams"
						}
					]
				},
				{
					"id": 30836,
					"name": "AdminBatchLink",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30837,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 30838,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30837,
								30838
							]
						}
					]
				},
				{
					"id": 30839,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30845,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30846,
							"name": "TParent",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 30847,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 30840,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 30841,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 30842,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 30845,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 30843,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 30844,
									"name": "parent",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parent resource of the item that was deleted, if applicable."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 30846,
										"name": "TParent",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										30841,
										30842,
										30843,
										30844
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 30750,
							"name": "AdminClaimDeleteResponse"
						},
						{
							"type": "reference",
							"target": 30801,
							"name": "AdminCollectionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 30918,
							"name": "AdminServiceZoneDeleteResponse"
						},
						{
							"type": "reference",
							"target": 30925,
							"name": "AdminFulfillmentSetDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31163,
							"name": "AdminPriceListDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31238,
							"name": "AdminProductCategoryDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31281,
							"name": "AdminProductTagDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31324,
							"name": "AdminProductTypeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31572,
							"name": "AdminShippingOptionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31621,
							"name": "AdminShippingProfileDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31682,
							"name": "AdminStockLocationDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31744,
							"name": "AdminTaxRateDeleteResponse"
						},
						{
							"type": "reference",
							"target": 31804,
							"name": "AdminTaxRegionDeleteResponse"
						}
					]
				},
				{
					"id": 30848,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 30853,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 30849,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30850,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 30851,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 30852,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30850,
												30851,
												30852
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 30853,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 30743,
							"name": "AdminClaimListResponse"
						},
						{
							"type": "reference",
							"target": 30794,
							"name": "AdminCollectionListResponse"
						},
						{
							"type": "reference",
							"target": 30876,
							"name": "AdminFulfillmentProviderListResponse"
						},
						{
							"type": "reference",
							"target": 31078,
							"name": "AdminNotificationListResponse"
						},
						{
							"type": "reference",
							"target": 31156,
							"name": "AdminPriceListListResponse"
						},
						{
							"type": "reference",
							"target": 31231,
							"name": "AdminProductCategoryListResponse"
						},
						{
							"type": "reference",
							"target": 31274,
							"name": "AdminProductTagListResponse"
						},
						{
							"type": "reference",
							"target": 31317,
							"name": "AdminProductTypeListResponse"
						},
						{
							"type": "reference",
							"target": 31675,
							"name": "AdminStockLocationListResponse"
						}
					]
				},
				{
					"id": 30857,
					"name": "AdminFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30858,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33548,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 30859,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33549,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30858,
								30859
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33547,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30860,
					"name": "AdminUploadFile",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33550,
						"name": "BaseUploadFile",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30861,
					"name": "StoreFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30862,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33548,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 30863,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33549,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30862,
								30863
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33547,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30864,
					"name": "AdminFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30865,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30866,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30865,
								30866
							]
						}
					]
				},
				{
					"id": 30867,
					"name": "AdminFulfillmentProviderListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30875,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 30872,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 30873,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 30874,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 30868,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30869,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30870,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30871,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30875,
								30872,
								30873,
								30874,
								30868,
								30869,
								30870,
								30871
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30876,
					"name": "AdminFulfillmentProviderListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30879,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 30880,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 30881,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 30882,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30864,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.fulfillment_providers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30879,
								30880,
								30881,
								30882
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 30877,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 30878,
												"name": "fulfillment_providers",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 30864,
														"name": "AdminFulfillmentProvider",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													30878
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30883,
					"name": "AdminGeoZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30884,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30885,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/geo-zone.ts",
									"qualifiedName": "GeoZoneType"
								},
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 30886,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30887,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30888,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30889,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 30890,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30891,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30892,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30884,
								30885,
								30886,
								30887,
								30888,
								30889,
								30890,
								30891,
								30892
							]
						}
					]
				},
				{
					"id": 30893,
					"name": "AdminServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30894,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30895,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30896,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30897,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30883,
									"name": "AdminGeoZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 30898,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31484,
									"name": "AdminShippingOption",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 30899,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30900,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30901,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30894,
								30895,
								30896,
								30897,
								30898,
								30899,
								30900,
								30901
							]
						}
					]
				},
				{
					"id": 30902,
					"name": "AdminFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30903,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30904,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30905,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30906,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30893,
									"name": "AdminServiceZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 30907,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30908,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30909,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30903,
								30904,
								30905,
								30906,
								30907,
								30908,
								30909
							]
						}
					]
				},
				{
					"id": 30910,
					"name": "AdminCreateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30911,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30912,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33556,
									"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30911,
								30912
							]
						}
					]
				},
				{
					"id": 30913,
					"name": "AdminUpdateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30914,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30915,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33557,
									"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30914,
								30915
							]
						}
					]
				},
				{
					"id": 30916,
					"name": "AdminServiceZoneResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30917,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30893,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30917
							]
						}
					]
				},
				{
					"id": 30918,
					"name": "AdminServiceZoneDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30919,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 30920,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "service_zone"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 30921,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 30922,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30902,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30919,
								30920,
								30921,
								30922
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "service_zone"
								},
								{
									"type": "reference",
									"target": 30902,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30923,
					"name": "AdminFulfillmentSetResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30924,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30902,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30924
							]
						}
					]
				},
				{
					"id": 30925,
					"name": "AdminFulfillmentSetDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30926,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 30927,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "fulfillment_set"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 30928,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 30929,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 30930,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30926,
								30927,
								30928,
								30929
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "fulfillment_set"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31001,
					"name": "InventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31002,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31003,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31004,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31005,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31006,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31007,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31008,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31009,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31002,
								31003,
								31004,
								31005,
								31006,
								31007,
								31008,
								31009
							]
						}
					]
				},
				{
					"id": 31010,
					"name": "AdminUpdateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31011,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31012,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31011,
								31012
							]
						}
					]
				},
				{
					"id": 31013,
					"name": "AdminCreateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31014,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31015,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31016,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31014,
								31015,
								31016
							]
						}
					]
				},
				{
					"id": 31017,
					"name": "AdminBatchUpdateInventoryLevelLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31018,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31019,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 31020,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31013,
									"name": "AdminCreateInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31018,
								31019,
								31020
							]
						}
					]
				},
				{
					"id": 31021,
					"name": "AdminInventoryLevelFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31026,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31023,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31024,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31025,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31022,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31026,
								31023,
								31024,
								31025,
								31022
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31027,
					"name": "AdminInventoryLevelResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31028,
							"name": "inventory_level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31001,
								"name": "InventoryLevel",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31028
							]
						}
					]
				},
				{
					"id": 31029,
					"name": "AdminInventoryLevelListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31030,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31031,
											"name": "inventory_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31001,
													"name": "InventoryLevel",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31031
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 30931,
					"name": "AdminInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30932,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30933,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30934,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30935,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30936,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30937,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30938,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30939,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30940,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30941,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30942,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 30943,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30944,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30945,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 30946,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30932,
								30933,
								30934,
								30935,
								30936,
								30937,
								30938,
								30939,
								30940,
								30941,
								30942,
								30943,
								30944,
								30945,
								30946
							]
						}
					]
				},
				{
					"id": 30947,
					"name": "AdminCreateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30948,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30949,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30950,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30951,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30952,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30953,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 30954,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30955,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30956,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30957,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30958,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30959,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30960,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30961,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30948,
								30949,
								30950,
								30951,
								30952,
								30953,
								30954,
								30955,
								30956,
								30957,
								30958,
								30959,
								30960,
								30961
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 30962,
							"name": "AdminUpdateInventoryItem"
						}
					]
				},
				{
					"id": 30962,
					"name": "AdminUpdateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30963,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30948,
								"name": "AdminCreateInventoryItem.sku"
							}
						},
						{
							"id": 30964,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30949,
								"name": "AdminCreateInventoryItem.hs_code"
							}
						},
						{
							"id": 30965,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30950,
								"name": "AdminCreateInventoryItem.weight"
							}
						},
						{
							"id": 30966,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30951,
								"name": "AdminCreateInventoryItem.length"
							}
						},
						{
							"id": 30967,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30952,
								"name": "AdminCreateInventoryItem.height"
							}
						},
						{
							"id": 30968,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30953,
								"name": "AdminCreateInventoryItem.width"
							}
						},
						{
							"id": 30969,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30954,
								"name": "AdminCreateInventoryItem.origin_country"
							}
						},
						{
							"id": 30970,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30955,
								"name": "AdminCreateInventoryItem.mid_code"
							}
						},
						{
							"id": 30971,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30956,
								"name": "AdminCreateInventoryItem.material"
							}
						},
						{
							"id": 30972,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30957,
								"name": "AdminCreateInventoryItem.title"
							}
						},
						{
							"id": 30973,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30958,
								"name": "AdminCreateInventoryItem.description"
							}
						},
						{
							"id": 30974,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30959,
								"name": "AdminCreateInventoryItem.requires_shipping"
							}
						},
						{
							"id": 30975,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30960,
								"name": "AdminCreateInventoryItem.thumbnail"
							}
						},
						{
							"id": 30976,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30961,
								"name": "AdminCreateInventoryItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30963,
								30964,
								30965,
								30966,
								30967,
								30968,
								30969,
								30970,
								30971,
								30972,
								30973,
								30974,
								30975,
								30976
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30947,
							"name": "AdminCreateInventoryItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30977,
					"name": "AdminInventoryItemParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30994,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 30991,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 30992,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 30993,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 30978,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30979,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 30980,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30981,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30982,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30983,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30984,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 30985,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 30986,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 30987,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 30988,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 30989,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 30990,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "location_id"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30994,
								30991,
								30992,
								30993,
								30978,
								30979,
								30980,
								30981,
								30982,
								30983,
								30984,
								30985,
								30986,
								30987,
								30988,
								30989,
								30990
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 30995,
					"name": "AdminInventoryItemResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 30996,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30931,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								30996
							]
						}
					]
				},
				{
					"id": 30997,
					"name": "AdminInventoryItemListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 30998,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 30999,
											"name": "inventory_items",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30931,
													"name": "AdminInventoryItem",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												30999
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31000,
					"name": "AdminInventoryItemDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30839,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory_item"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31032,
					"name": "AdminAcceptInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31033,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31034,
									"name": "first_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31035,
									"name": "last_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31034,
										31035
									]
								}
							]
						}
					}
				},
				{
					"id": 31036,
					"name": "AdminCreateInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31037,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31038,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31039,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31038,
										31039
									]
								}
							]
						}
					}
				},
				{
					"id": 31040,
					"name": "AdminInviteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 31041,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 31042,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31043,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31044,
									"name": "accepted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 31045,
									"name": "token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31046,
									"name": "expires_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 31047,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 31048,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 31049,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										31042,
										31043,
										31044,
										31045,
										31046,
										31047,
										31048,
										31049
									]
								}
							]
						}
					}
				},
				{
					"id": 31050,
					"name": "AdminNotification",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31051,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31052,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31053,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31054,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31055,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31056,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31057,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31058,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31059,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31060,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31061,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31062,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31063,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31051,
								31052,
								31053,
								31054,
								31055,
								31056,
								31057,
								31058,
								31059,
								31060,
								31061,
								31062,
								31063
							]
						}
					]
				},
				{
					"id": 31064,
					"name": "AdminNotificationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31068,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31064,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31064,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31069,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31064,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31064,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31073,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31070,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31071,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31072,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31065,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31066,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31067,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31068,
								31069,
								31073,
								31070,
								31071,
								31072,
								31065,
								31066,
								31067
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31064,
									"name": "AdminNotificationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31074,
					"name": "AdminNotificationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31075,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31075
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31076,
					"name": "AdminNotificationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31077,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31050,
								"name": "AdminNotification",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31077
							]
						}
					]
				},
				{
					"id": 31078,
					"name": "AdminNotificationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31081,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 31082,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 31083,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 31084,
							"name": "notifications",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31050,
									"name": "AdminNotification",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.notifications"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31081,
								31082,
								31083,
								31084
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 31079,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31080,
												"name": "notifications",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 31050,
														"name": "AdminNotification",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31080
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31085,
					"name": "AdminPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31086,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31087,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31086,
								31087
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31088,
					"name": "AdminPriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31089,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31090,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31091,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31092,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31093,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31094,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31095,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31096,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31097,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31085,
									"name": "AdminPriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31098,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31099,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31100,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31089,
								31090,
								31091,
								31092,
								31093,
								31094,
								31095,
								31096,
								31097,
								31098,
								31099,
								31100
							]
						}
					]
				},
				{
					"id": 31101,
					"name": "AdminCreatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31102,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31103,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31104,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31105,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31106,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31107,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31102,
								31103,
								31104,
								31105,
								31106,
								31107
							]
						}
					]
				},
				{
					"id": 31108,
					"name": "AdminCreatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31109,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31110,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31111,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31112,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31113,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31114,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31115,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31116,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31101,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31109,
								31110,
								31111,
								31112,
								31113,
								31114,
								31115,
								31116
							]
						}
					]
				},
				{
					"id": 31117,
					"name": "AdminUpdatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31118,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31119,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31120,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31121,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31122,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31123,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31124,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31118,
								31119,
								31120,
								31121,
								31122,
								31123,
								31124
							]
						}
					]
				},
				{
					"id": 31125,
					"name": "AdminUpdatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31126,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31127,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31128,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31129,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31130,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31131,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31132,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31126,
								31127,
								31128,
								31129,
								31130,
								31131,
								31132
							]
						}
					]
				},
				{
					"id": 31133,
					"name": "AdminBatchPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31134,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31101,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31135,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31117,
									"name": "AdminUpdatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31136,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31134,
								31135,
								31136
							]
						}
					]
				},
				{
					"id": 31137,
					"name": "AdminLinkPriceListProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31138,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31138
							]
						}
					]
				},
				{
					"id": 31139,
					"name": "AdminPriceListListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31150,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31139,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31139,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31151,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31139,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31139,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31149,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31146,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31147,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31148,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31140,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31141,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31142,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31143,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31144,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
										"qualifiedName": "PriceListStatus"
									},
									"name": "PriceListStatus",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31145,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31150,
								31151,
								31149,
								31146,
								31147,
								31148,
								31140,
								31141,
								31142,
								31143,
								31144,
								31145
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31139,
									"name": "AdminPriceListListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31152,
					"name": "AdminPriceListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31153,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31153
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31154,
					"name": "AdminPriceListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31155,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31088,
								"name": "AdminPriceList",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31155
							]
						}
					]
				},
				{
					"id": 31156,
					"name": "AdminPriceListListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31159,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 31160,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 31161,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 31162,
							"name": "price_lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31088,
									"name": "AdminPriceList",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.price_lists"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31159,
								31160,
								31161,
								31162
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 31157,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31158,
												"name": "price_lists",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 31088,
														"name": "AdminPriceList",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31158
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31163,
					"name": "AdminPriceListDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31164,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31165,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "price_list"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31166,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31167,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31168,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31164,
								31165,
								31166,
								31167
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "price_list"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31169,
					"name": "AdminProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31170,
							"name": "category_children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31169,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31171,
							"name": "parent_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 31169,
										"name": "AdminProductCategory",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31172,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31174,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 31173,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.name"
							}
						},
						{
							"id": 31178,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.description"
							}
						},
						{
							"id": 31179,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.handle"
							}
						},
						{
							"id": 31181,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_active"
							}
						},
						{
							"id": 31182,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_internal"
							}
						},
						{
							"id": 31183,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rank"
							}
						},
						{
							"id": 31180,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.parent_category_id"
							}
						},
						{
							"id": 31175,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.created_at"
							}
						},
						{
							"id": 31176,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.updated_at"
							}
						},
						{
							"id": 31177,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31170,
								31171,
								31172,
								31174,
								31173,
								31178,
								31179,
								31181,
								31182,
								31183,
								31180,
								31175,
								31176,
								31177
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 33558,
									"name": "BaseProductCategory",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "products"
										},
										{
											"type": "literal",
											"value": "category_children"
										},
										{
											"type": "literal",
											"value": "parent_category"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 31184,
					"name": "AdminCreateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31185,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31186,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31187,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31188,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31189,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31190,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31191,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31192,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31185,
								31186,
								31187,
								31188,
								31189,
								31190,
								31191,
								31192
							]
						}
					]
				},
				{
					"id": 31193,
					"name": "AdminUpdateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31194,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31195,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31196,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31197,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31198,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31199,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31200,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31201,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31194,
								31195,
								31196,
								31197,
								31198,
								31199,
								31200,
								31201
							]
						}
					]
				},
				{
					"id": 31202,
					"name": "AdminUpdateProductCategoryProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31203,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31204,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31203,
								31204
							]
						}
					]
				},
				{
					"id": 31205,
					"name": "AdminProductCategoryListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31223,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33573,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33573,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33591,
								"name": "BaseProductCategoryListParams.$and"
							}
						},
						{
							"id": 31224,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33573,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33573,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33592,
								"name": "BaseProductCategoryListParams.$or"
							}
						},
						{
							"id": 31222,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33590,
								"name": "BaseProductCategoryListParams.fields"
							}
						},
						{
							"id": 31219,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33587,
								"name": "BaseProductCategoryListParams.limit"
							}
						},
						{
							"id": 31220,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33588,
								"name": "BaseProductCategoryListParams.offset"
							}
						},
						{
							"id": 31221,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33589,
								"name": "BaseProductCategoryListParams.order"
							}
						},
						{
							"id": 31206,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 33581,
								"name": "BaseProductCategoryListParams.is_internal"
							}
						},
						{
							"id": 31207,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 33580,
								"name": "BaseProductCategoryListParams.is_active"
							}
						},
						{
							"id": 31208,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33574,
								"name": "BaseProductCategoryListParams.q"
							}
						},
						{
							"id": 31209,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33575,
								"name": "BaseProductCategoryListParams.id"
							}
						},
						{
							"id": 31210,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33576,
								"name": "BaseProductCategoryListParams.name"
							}
						},
						{
							"id": 31211,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33577,
								"name": "BaseProductCategoryListParams.description"
							}
						},
						{
							"id": 31212,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33578,
								"name": "BaseProductCategoryListParams.parent_category_id"
							}
						},
						{
							"id": 31213,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33579,
								"name": "BaseProductCategoryListParams.handle"
							}
						},
						{
							"id": 31214,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33582,
								"name": "BaseProductCategoryListParams.include_descendants_tree"
							}
						},
						{
							"id": 31215,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33583,
								"name": "BaseProductCategoryListParams.include_ancestors_tree"
							}
						},
						{
							"id": 31216,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33584,
								"name": "BaseProductCategoryListParams.created_at"
							}
						},
						{
							"id": 31217,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33585,
								"name": "BaseProductCategoryListParams.updated_at"
							}
						},
						{
							"id": 31218,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33586,
								"name": "BaseProductCategoryListParams.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31223,
								31224,
								31222,
								31219,
								31220,
								31221,
								31206,
								31207,
								31208,
								31209,
								31210,
								31211,
								31212,
								31213,
								31214,
								31215,
								31216,
								31217,
								31218
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33573,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31225,
					"name": "AdminProductCategoryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31228,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33596,
								"name": "BaseProductCategoryParams.fields"
							}
						},
						{
							"id": 31226,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33594,
								"name": "BaseProductCategoryParams.include_ancestors_tree"
							}
						},
						{
							"id": 31227,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33595,
								"name": "BaseProductCategoryParams.include_descendants_tree"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31228,
								31226,
								31227
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33593,
							"name": "BaseProductCategoryParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31229,
					"name": "AdminProductCategoryResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31230,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31169,
								"name": "AdminProductCategory",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31230
							]
						}
					]
				},
				{
					"id": 31231,
					"name": "AdminProductCategoryListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31234,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 31235,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 31236,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 31237,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31169,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_categories"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31234,
								31235,
								31236,
								31237
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 31232,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31233,
												"name": "product_categories",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 31169,
														"name": "AdminProductCategory",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31233
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31238,
					"name": "AdminProductCategoryDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31239,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31240,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_category"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31241,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31242,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31243,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31239,
								31240,
								31241,
								31242
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_category"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31244,
					"name": "AdminProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31245,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33598,
								"name": "BaseProductTag.id"
							}
						},
						{
							"id": 31246,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33599,
								"name": "BaseProductTag.value"
							}
						},
						{
							"id": 31247,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33600,
								"name": "BaseProductTag.created_at"
							}
						},
						{
							"id": 31248,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33601,
								"name": "BaseProductTag.updated_at"
							}
						},
						{
							"id": 31249,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33602,
								"name": "BaseProductTag.deleted_at"
							}
						},
						{
							"id": 31250,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33603,
								"name": "BaseProductTag.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31245,
								31246,
								31247,
								31248,
								31249,
								31250
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33597,
							"name": "BaseProductTag",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31251,
					"name": "AdminCreateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31252,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31253,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31252,
								31253
							]
						}
					]
				},
				{
					"id": 31254,
					"name": "AdminUpdateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31255,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31256,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31255,
								31256
							]
						}
					]
				},
				{
					"id": 31257,
					"name": "AdminProductTagListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31268,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31257,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31257,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31269,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31257,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31257,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31267,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33613,
								"name": "BaseProductTagListParams.fields"
							}
						},
						{
							"id": 31264,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33610,
								"name": "BaseProductTagListParams.limit"
							}
						},
						{
							"id": 31265,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33611,
								"name": "BaseProductTagListParams.offset"
							}
						},
						{
							"id": 31266,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33612,
								"name": "BaseProductTagListParams.order"
							}
						},
						{
							"id": 31258,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31259,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33605,
								"name": "BaseProductTagListParams.q"
							}
						},
						{
							"id": 31260,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33606,
								"name": "BaseProductTagListParams.id"
							}
						},
						{
							"id": 31261,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33607,
								"name": "BaseProductTagListParams.value"
							}
						},
						{
							"id": 31262,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33608,
								"name": "BaseProductTagListParams.created_at"
							}
						},
						{
							"id": 31263,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33609,
								"name": "BaseProductTagListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31268,
								31269,
								31267,
								31264,
								31265,
								31266,
								31258,
								31259,
								31260,
								31261,
								31262,
								31263
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33604,
							"name": "BaseProductTagListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31257,
									"name": "AdminProductTagListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31270,
					"name": "AdminProductTagParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31271,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31271
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31272,
					"name": "AdminProductTagResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31273,
							"name": "product_tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31244,
								"name": "AdminProductTag",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31273
							]
						}
					]
				},
				{
					"id": 31274,
					"name": "AdminProductTagListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31277,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 31278,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 31279,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 31280,
							"name": "product_tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31244,
									"name": "AdminProductTag",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_tags"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31277,
								31278,
								31279,
								31280
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 31275,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31276,
												"name": "product_tags",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 31244,
														"name": "AdminProductTag",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31276
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31281,
					"name": "AdminProductTagDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31282,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31283,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_tag"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31284,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31285,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31286,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31282,
								31283,
								31284,
								31285
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_tag"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31287,
					"name": "AdminProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31288,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33615,
								"name": "BaseProductType.id"
							}
						},
						{
							"id": 31289,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33616,
								"name": "BaseProductType.value"
							}
						},
						{
							"id": 31290,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33617,
								"name": "BaseProductType.created_at"
							}
						},
						{
							"id": 31291,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33618,
								"name": "BaseProductType.updated_at"
							}
						},
						{
							"id": 31292,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33619,
								"name": "BaseProductType.deleted_at"
							}
						},
						{
							"id": 31293,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33620,
								"name": "BaseProductType.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31288,
								31289,
								31290,
								31291,
								31292,
								31293
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33614,
							"name": "BaseProductType",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31294,
					"name": "AdminCreateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31295,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31296,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31295,
								31296
							]
						}
					]
				},
				{
					"id": 31297,
					"name": "AdminUpdateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31298,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31299,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31298,
								31299
							]
						}
					]
				},
				{
					"id": 31300,
					"name": "AdminProductTypeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31311,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31300,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31300,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31312,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31300,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31300,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31310,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31307,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31308,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31309,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31301,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31302,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31303,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31304,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31305,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31306,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31311,
								31312,
								31310,
								31307,
								31308,
								31309,
								31301,
								31302,
								31303,
								31304,
								31305,
								31306
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31300,
									"name": "AdminProductTypeListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31313,
					"name": "AdminProductTypeParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31314,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31314
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31315,
					"name": "AdminProductTypeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31316,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31287,
								"name": "AdminProductType",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31316
							]
						}
					]
				},
				{
					"id": 31317,
					"name": "AdminProductTypeListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31320,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 31321,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 31322,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 31323,
							"name": "product_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31287,
									"name": "AdminProductType",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31320,
								31321,
								31322,
								31323
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 31318,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31319,
												"name": "product_types",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 31287,
														"name": "AdminProductType",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31319
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31324,
					"name": "AdminProductTypeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31325,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31326,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_type"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31327,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31328,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31329,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31325,
								31326,
								31327,
								31328
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_type"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31455,
					"name": "AdminReservationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31456,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33629,
								"name": "ReservationResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31456
							]
						}
					]
				},
				{
					"id": 31457,
					"name": "AdminReservationListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31458,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31459,
											"name": "reservations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33629,
													"name": "ReservationResponse",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31459
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31427,
					"name": "AdminReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31428,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33622,
								"name": "BaseReturnReason.id"
							}
						},
						{
							"id": 31429,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33623,
								"name": "BaseReturnReason.value"
							}
						},
						{
							"id": 31430,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33624,
								"name": "BaseReturnReason.label"
							}
						},
						{
							"id": 31431,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33625,
								"name": "BaseReturnReason.description"
							}
						},
						{
							"id": 31432,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33626,
								"name": "BaseReturnReason.metadata"
							}
						},
						{
							"id": 31433,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33627,
								"name": "BaseReturnReason.created_at"
							}
						},
						{
							"id": 31434,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33628,
								"name": "BaseReturnReason.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31428,
								31429,
								31430,
								31431,
								31432,
								31433,
								31434
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33621,
							"name": "BaseReturnReason",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31435,
					"name": "AdminCreateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31436,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31437,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31438,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31436,
								31437,
								31438
							]
						}
					]
				},
				{
					"id": 31439,
					"name": "AdminReturnReasonsResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31440,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31427,
									"name": "AdminReturnReason",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31440
							]
						}
					]
				},
				{
					"id": 31441,
					"name": "AdminReturnReasonListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31453,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31441,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31441,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31454,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31441,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31441,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31452,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31449,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31450,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31451,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31442,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31443,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31444,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31445,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31446,
							"name": "parent_return_reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31447,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31448,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31453,
								31454,
								31452,
								31449,
								31450,
								31451,
								31442,
								31443,
								31444,
								31445,
								31446,
								31447,
								31448
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31441,
									"name": "AdminReturnReasonListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31330,
					"name": "AdminBaseReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31331,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31332,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31333,
							"name": "received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31334,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31335,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31336,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31337,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31338,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31331,
								31332,
								31333,
								31334,
								31335,
								31336,
								31337,
								31338
							]
						}
					]
				},
				{
					"id": 31339,
					"name": "AdminReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31340,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31341,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31342,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31343,
							"name": "exchange_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31344,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31345,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31346,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31347,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31348,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31349,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31330,
									"name": "AdminBaseReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31340,
								31341,
								31342,
								31343,
								31344,
								31345,
								31346,
								31347,
								31348,
								31349
							]
						}
					]
				},
				{
					"id": 31350,
					"name": "AdminReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31351,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31339,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31351
							]
						}
					]
				},
				{
					"id": 31352,
					"name": "AdminReturnsResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31353,
							"name": "returns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31339,
									"name": "AdminReturn",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31353
							]
						}
					]
				},
				{
					"id": 31354,
					"name": "AdminInitiateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31355,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31356,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31357,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31358,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31359,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31360,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31355,
								31356,
								31357,
								31358,
								31359,
								31360
							]
						}
					]
				},
				{
					"id": 31361,
					"name": "AdminAddReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31362,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31363,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31364,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31365,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31366,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31362,
								31363,
								31364,
								31365,
								31366
							]
						}
					]
				},
				{
					"id": 31367,
					"name": "AdminAddReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31368,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31361,
									"name": "AdminAddReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31368
							]
						}
					]
				},
				{
					"id": 31369,
					"name": "AdminUpdateReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31370,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31371,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31372,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31370,
								31371,
								31372
							]
						}
					]
				},
				{
					"id": 31373,
					"name": "AdminAddReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31374,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31375,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31376,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31377,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31378,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31374,
								31375,
								31376,
								31377,
								31378
							]
						}
					]
				},
				{
					"id": 31379,
					"name": "AdminUpdateReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31380,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31381,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31382,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31380,
								31381,
								31382
							]
						}
					]
				},
				{
					"id": 31383,
					"name": "AdminConfirmReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31384,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31384
							]
						}
					]
				},
				{
					"id": 31385,
					"name": "AdminUpdateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31386,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31387,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31388,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31386,
								31387,
								31388
							]
						}
					]
				},
				{
					"id": 31389,
					"name": "AdminConfirmReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31390,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31390
							]
						}
					]
				},
				{
					"id": 31391,
					"name": "AdminInitiateReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31392,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31393,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31394,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31392,
								31393,
								31394
							]
						}
					]
				},
				{
					"id": 31395,
					"name": "AdminReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31396,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 31397,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31398,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 31399,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 31400,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31398,
													31399,
													31400
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31396
							]
						}
					]
				},
				{
					"id": 31401,
					"name": "AdminDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31402,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 31403,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31404,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 31405,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 31406,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31404,
													31405,
													31406
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31402
							]
						}
					]
				},
				{
					"id": 31407,
					"name": "AdminUpdateReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31408,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31409,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31410,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31411,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31408,
								31409,
								31410,
								31411
							]
						}
					]
				},
				{
					"id": 31412,
					"name": "AdminUpdateDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31413,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31414,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31415,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31416,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31413,
								31414,
								31415,
								31416
							]
						}
					]
				},
				{
					"id": 31417,
					"name": "AdminReturnFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31426,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31423,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31424,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31425,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31418,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31419,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31420,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31421,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31422,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31426,
								31423,
								31424,
								31425,
								31418,
								31419,
								31420,
								31421,
								31422
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31460,
					"name": "AdminShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31461,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31462,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31463,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31464,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31465,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31466,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31467,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31468,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31461,
								31462,
								31463,
								31464,
								31465,
								31466,
								31467,
								31468
							]
						}
					]
				},
				{
					"id": 31469,
					"name": "AdminShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31470,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31471,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31472,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31473,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31474,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31475,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31476,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31477,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31470,
								31471,
								31472,
								31473,
								31474,
								31475,
								31476,
								31477
							]
						}
					]
				},
				{
					"id": 31478,
					"name": "AdminShippingOptionPriceRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31479,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31480,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31479,
								31480
							]
						}
					]
				},
				{
					"id": 31481,
					"name": "AdminShippingOptionPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31482,
							"name": "price_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31478,
									"name": "AdminShippingOptionPriceRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31483,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31482,
								31483
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31484,
					"name": "AdminShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31485,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31486,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31487,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31488,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31489,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30893,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31490,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31491,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30864,
								"name": "AdminFulfillmentProvider",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31492,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31493,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31460,
								"name": "AdminShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31494,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31495,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31586,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31496,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31469,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31497,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31481,
									"name": "AdminShippingOptionPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31498,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31499,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31500,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 31501,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 31502,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31485,
								31486,
								31487,
								31488,
								31489,
								31490,
								31491,
								31492,
								31493,
								31494,
								31495,
								31496,
								31497,
								31498,
								31499,
								31500,
								31501,
								31502
							]
						}
					]
				},
				{
					"id": 31503,
					"name": "AdminCreateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31504,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 30091,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31505,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31506,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31504,
								31505,
								31506
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 31527,
							"name": "AdminUpdateShippingOptionRule"
						}
					]
				},
				{
					"id": 31507,
					"name": "AdminCreateShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31508,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31509,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31510,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31508,
								31509,
								31510
							]
						}
					]
				},
				{
					"id": 31511,
					"name": "AdminCreateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31512,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31513,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31512,
								31513
							]
						}
					]
				},
				{
					"id": 31514,
					"name": "AdminCreateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31515,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31516,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31515,
								31516
							]
						}
					]
				},
				{
					"id": 31517,
					"name": "AdminCreateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31518,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31519,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31520,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31521,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31522,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31523,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31524,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31507,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31525,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31511,
											"name": "AdminCreateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 31514,
											"name": "AdminCreateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 31526,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31503,
									"name": "AdminCreateShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31518,
								31519,
								31520,
								31521,
								31522,
								31523,
								31524,
								31525,
								31526
							]
						}
					]
				},
				{
					"id": 31527,
					"name": "AdminUpdateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31529,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 30091,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 31504,
								"name": "AdminCreateShippingOptionRule.operator"
							}
						},
						{
							"id": 31530,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 31505,
								"name": "AdminCreateShippingOptionRule.attribute"
							}
						},
						{
							"id": 31531,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 31506,
								"name": "AdminCreateShippingOptionRule.value"
							}
						},
						{
							"id": 31528,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31529,
								31530,
								31531,
								31528
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 31503,
							"name": "AdminCreateShippingOptionRule",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31532,
					"name": "AdminUpdateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31533,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31534,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31535,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31533,
								31534,
								31535
							]
						}
					]
				},
				{
					"id": 31536,
					"name": "AdminUpdateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31537,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31538,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31539,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31537,
								31538,
								31539
							]
						}
					]
				},
				{
					"id": 31540,
					"name": "AdminUpdateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31541,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31542,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 31543,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31544,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31545,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31546,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 31507,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31547,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31532,
											"name": "AdminUpdateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 31536,
											"name": "AdminUpdateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 31548,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31503,
											"name": "AdminCreateShippingOptionRule",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 31527,
											"name": "AdminUpdateShippingOptionRule",
											"package": "@medusajs/types"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31541,
								31542,
								31543,
								31544,
								31545,
								31546,
								31547,
								31548
							]
						}
					]
				},
				{
					"id": 31549,
					"name": "AdminUpdateShippingOptionRules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31550,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 31551,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 31552,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31550,
								31551,
								31552
							]
						}
					]
				},
				{
					"id": 31553,
					"name": "AdminShippingOptionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31566,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31563,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31564,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31565,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31554,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31555,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31556,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31557,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31558,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31559,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31560,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31561,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31562,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31566,
								31563,
								31564,
								31565,
								31554,
								31555,
								31556,
								31557,
								31558,
								31559,
								31560,
								31561,
								31562
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31567,
					"name": "AdminShippingOptionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31568,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31484,
								"name": "AdminShippingOption",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31568
							]
						}
					]
				},
				{
					"id": 31569,
					"name": "AdminShippingOptionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31570,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31571,
											"name": "shipping_options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31484,
													"name": "AdminShippingOption",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31571
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31572,
					"name": "AdminShippingOptionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31573,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31574,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_option"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31575,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31576,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31577,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31573,
								31574,
								31575,
								31576
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_option"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31578,
					"name": "AdminUpdateShippingOptionRulesResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31579,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31469,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31580,
							"name": "updated",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31469,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31581,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31582,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31583,
											"name": "ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 31584,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "shipping_option_rule"
											}
										},
										{
											"id": 31585,
											"name": "deleted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31583,
												31584,
												31585
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31579,
								31580,
								31581
							]
						}
					]
				},
				{
					"id": 31586,
					"name": "AdminShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31587,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31588,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31589,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31590,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31591,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31592,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31593,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31587,
								31588,
								31589,
								31590,
								31591,
								31592,
								31593
							]
						}
					]
				},
				{
					"id": 31594,
					"name": "AdminCreateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31595,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31596,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31597,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31595,
								31596,
								31597
							]
						}
					]
				},
				{
					"id": 31598,
					"name": "AdminUpdateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31599,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31600,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31601,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31599,
								31600,
								31601
							]
						}
					]
				},
				{
					"id": 31602,
					"name": "AdminShippingProfileListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31615,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31612,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31613,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31614,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31603,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31604,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31605,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31606,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31607,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31608,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31609,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31610,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31602,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31611,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31602,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31615,
								31612,
								31613,
								31614,
								31603,
								31604,
								31605,
								31606,
								31607,
								31608,
								31609,
								31610,
								31611
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31616,
					"name": "AdminShippingProfileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31617,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31586,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31617
							]
						}
					]
				},
				{
					"id": 31618,
					"name": "AdminShippingProfileListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31619,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31620,
											"name": "shipping_profiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31586,
													"name": "AdminShippingProfile",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31620
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31621,
					"name": "AdminShippingProfileDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31622,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31623,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_profile"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31624,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31625,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31626,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31622,
								31623,
								31624,
								31625
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_profile"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31627,
					"name": "AdminStockLocationAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31628,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31629,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31630,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31631,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31632,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31633,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31634,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31635,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31636,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31628,
								31629,
								31630,
								31631,
								31632,
								31633,
								31634,
								31635,
								31636
							]
						}
					]
				},
				{
					"id": 31637,
					"name": "AdminStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31638,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31639,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31640,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31641,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 31627,
								"name": "AdminStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31642,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/entities.ts",
										"qualifiedName": "AdminSalesChannel"
									},
									"name": "AdminSalesChannel",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31643,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30864,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31644,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 30902,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31638,
								31639,
								31640,
								31641,
								31642,
								31643,
								31644
							]
						}
					]
				},
				{
					"id": 31645,
					"name": "AdminCreateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31646,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31647,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31648,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33643,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31649,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31646,
								31647,
								31648,
								31649
							]
						}
					]
				},
				{
					"id": 31650,
					"name": "AdminUpdateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31651,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31652,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31653,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33643,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31654,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31651,
								31652,
								31653,
								31654
							]
						}
					]
				},
				{
					"id": 31655,
					"name": "AdminUpdateStockLocationSalesChannels",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31656,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 31657,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31656,
								31657
							]
						}
					]
				},
				{
					"id": 31658,
					"name": "AdminCreateStockLocationFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31659,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31660,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31659,
								31660
							]
						}
					]
				},
				{
					"id": 31661,
					"name": "AdminStockLocationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31672,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31669,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31670,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31671,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31662,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31663,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31664,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31665,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31666,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31667,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31661,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31668,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31661,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31672,
								31669,
								31670,
								31671,
								31662,
								31663,
								31664,
								31665,
								31666,
								31667,
								31668
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31673,
					"name": "AdminStockLocationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31674,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31637,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31674
							]
						}
					]
				},
				{
					"id": 31675,
					"name": "AdminStockLocationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31678,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 31679,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 31680,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 31681,
							"name": "stock_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31637,
									"name": "AdminStockLocation",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.stock_locations"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31678,
								31679,
								31680,
								31681
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30848,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 31676,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 31677,
												"name": "stock_locations",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 31637,
														"name": "AdminStockLocation",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													31677
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31682,
					"name": "AdminStockLocationDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31683,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31684,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "stock_location"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31685,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31686,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31687,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31683,
								31684,
								31685,
								31686
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "stock_location"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31688,
					"name": "AdminTaxRateRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31689,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31690,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31689,
								31690
							]
						}
					]
				},
				{
					"id": 31691,
					"name": "AdminTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31692,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31693,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31694,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31695,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31696,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31697,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31698,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31699,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31700,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31701,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31702,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 31703,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31704,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31750,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31705,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31688,
									"name": "AdminTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31692,
								31693,
								31694,
								31695,
								31696,
								31697,
								31698,
								31699,
								31700,
								31701,
								31702,
								31703,
								31704,
								31705
							]
						}
					]
				},
				{
					"id": 31706,
					"name": "AdminCreateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31707,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31708,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31709,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31710,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31711,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33652,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31712,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31713,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31714,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31707,
								31708,
								31709,
								31710,
								31711,
								31712,
								31713,
								31714
							]
						}
					]
				},
				{
					"id": 31715,
					"name": "AdminUpdateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31716,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31717,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31718,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31719,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33652,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31720,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31721,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31722,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31716,
								31717,
								31718,
								31719,
								31720,
								31721,
								31722
							]
						}
					]
				},
				{
					"id": 31723,
					"name": "AdminTaxRateListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31738,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31735,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31736,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31737,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31724,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31725,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31726,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31727,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31728,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31729,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31730,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31731,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31732,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31733,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31734,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31738,
								31735,
								31736,
								31737,
								31724,
								31725,
								31726,
								31727,
								31728,
								31729,
								31730,
								31731,
								31732,
								31733,
								31734
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31739,
					"name": "AdminTaxRateResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31740,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31691,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31740
							]
						}
					]
				},
				{
					"id": 31741,
					"name": "AdminTaxRateListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31742,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31743,
											"name": "tax_rates",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31691,
													"name": "AdminTaxRate",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31743
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31744,
					"name": "AdminTaxRateDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31745,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31746,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_rate"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31747,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31748,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31749,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31745,
								31746,
								31747,
								31748
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_rate"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31750,
					"name": "AdminTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31751,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31752,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31753,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31754,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31755,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31756,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31757,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31758,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31759,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31760,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31761,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31762,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31763,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31764,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31765,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31766,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31691,
									"name": "AdminTaxRate",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 31767,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 31750,
										"name": "AdminTaxRegion",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31768,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31750,
									"name": "AdminTaxRegion",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31751,
								31752,
								31753,
								31754,
								31755,
								31756,
								31757,
								31758,
								31759,
								31760,
								31761,
								31762,
								31763,
								31764,
								31765,
								31766,
								31767,
								31768
							]
						}
					]
				},
				{
					"id": 31769,
					"name": "AdminCreateTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31770,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31771,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31772,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31773,
							"name": "default_tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31774,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31775,
											"name": "rate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 31776,
											"name": "code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31777,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31778,
											"name": "is_combinable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 31779,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31775,
												31776,
												31777,
												31778,
												31779
											]
										}
									]
								}
							}
						},
						{
							"id": 31780,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31770,
								31771,
								31772,
								31773,
								31780
							]
						}
					]
				},
				{
					"id": 31781,
					"name": "AdminTaxRegionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 31795,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31781,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31781,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31796,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31781,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31781,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31794,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30835,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 31791,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30832,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 31792,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30833,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 31793,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30834,
								"name": "FindParams.order"
							}
						},
						{
							"id": 31782,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31783,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31784,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31785,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31786,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31787,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31788,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31789,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31790,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31795,
								31796,
								31794,
								31791,
								31792,
								31793,
								31782,
								31783,
								31784,
								31785,
								31786,
								31787,
								31788,
								31789,
								31790
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30831,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31781,
									"name": "AdminTaxRegionListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31797,
					"name": "AdminTaxRegionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31798,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30830,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31798
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30829,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31799,
					"name": "AdminTaxRegionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31800,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 31750,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31800
							]
						}
					]
				},
				{
					"id": 31801,
					"name": "AdminTaxRegionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 30848,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31802,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31803,
											"name": "tax_regions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31750,
													"name": "AdminTaxRegion",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31803
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 31804,
					"name": "AdminTaxRegionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31805,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 31806,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_region"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 31807,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 31808,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 31809,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31805,
								31806,
								31807,
								31808
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30839,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_region"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						30600,
						30612,
						30624,
						30642,
						30644,
						30652,
						30658,
						30666,
						30671,
						30679,
						30684,
						30692,
						30697,
						30703,
						30707,
						30713,
						30717,
						30718,
						30720,
						30734,
						30741,
						30743,
						30750,
						30756,
						30765,
						30769,
						30773,
						30776,
						30790,
						30792,
						30794,
						30801,
						30807,
						30816,
						30829,
						30831,
						30836,
						30857,
						30861,
						30864,
						30867,
						30876,
						30883,
						30893,
						30902,
						30910,
						30913,
						30916,
						30918,
						30923,
						30925,
						31001,
						31010,
						31013,
						31017,
						31021,
						31027,
						30931,
						30947,
						30962,
						30977,
						30995,
						31050,
						31064,
						31074,
						31076,
						31078,
						31085,
						31088,
						31101,
						31108,
						31117,
						31125,
						31133,
						31137,
						31139,
						31152,
						31154,
						31156,
						31163,
						31169,
						31184,
						31193,
						31202,
						31205,
						31225,
						31229,
						31231,
						31238,
						31244,
						31251,
						31254,
						31257,
						31270,
						31272,
						31274,
						31281,
						31287,
						31294,
						31297,
						31300,
						31313,
						31315,
						31317,
						31324,
						31455,
						31427,
						31435,
						31439,
						31441,
						31330,
						31339,
						31350,
						31352,
						31354,
						31361,
						31367,
						31369,
						31373,
						31379,
						31383,
						31385,
						31389,
						31391,
						31395,
						31401,
						31407,
						31412,
						31417,
						31460,
						31469,
						31478,
						31481,
						31484,
						31503,
						31507,
						31511,
						31514,
						31517,
						31527,
						31532,
						31536,
						31540,
						31549,
						31553,
						31567,
						31572,
						31578,
						31586,
						31594,
						31598,
						31602,
						31616,
						31621,
						31627,
						31637,
						31645,
						31650,
						31655,
						31658,
						31661,
						31673,
						31675,
						31682,
						31688,
						31691,
						31706,
						31715,
						31723,
						31739,
						31744,
						31750,
						31769,
						31781,
						31797,
						31799,
						31804
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						30639,
						30854,
						30839,
						30848,
						30860,
						31029,
						30997,
						31000,
						31032,
						31036,
						31040,
						31457,
						31569,
						31618,
						31741,
						31801
					]
				}
			]
		},
		{
			"id": 33558,
			"name": "BaseProductCategory",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33559,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33560,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33561,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33562,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33563,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33564,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33565,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 33566,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33567,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 33558,
								"name": "BaseProductCategory",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 33568,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33558,
							"name": "BaseProductCategory",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 33569,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
								"qualifiedName": "BaseProduct"
							},
							"name": "BaseProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 33570,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33571,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33572,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33559,
						33560,
						33561,
						33562,
						33563,
						33564,
						33565,
						33566,
						33567,
						33568,
						33569,
						33570,
						33571,
						33572
					]
				}
			]
		},
		{
			"id": 33573,
			"name": "BaseProductCategoryListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 33591,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 33573,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 30253,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33573,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30254,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 33592,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 33573,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 30253,
									"typeArguments": [
										{
											"type": "reference",
											"target": 33573,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30255,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 33590,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30835,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 33587,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30832,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 33588,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30833,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 33589,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30834,
						"name": "FindParams.order"
					}
				},
				{
					"id": 33574,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33575,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33576,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33577,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33578,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33579,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33580,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33581,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33582,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33583,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33584,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33585,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33586,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33591,
						33592,
						33590,
						33587,
						33588,
						33589,
						33574,
						33575,
						33576,
						33577,
						33578,
						33579,
						33580,
						33581,
						33582,
						33583,
						33584,
						33585,
						33586
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30831,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 30253,
					"typeArguments": [
						{
							"type": "reference",
							"target": 33573,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31205,
					"name": "AdminProductCategoryListParams"
				}
			]
		},
		{
			"id": 33593,
			"name": "BaseProductCategoryParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33596,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30830,
						"name": "SelectParams.fields"
					}
				},
				{
					"id": 33594,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33595,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33596,
						33594,
						33595
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30829,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31225,
					"name": "AdminProductCategoryParams"
				}
			]
		},
		{
			"id": 33597,
			"name": "BaseProductTag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33598,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33599,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33600,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33601,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33602,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33603,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33598,
						33599,
						33600,
						33601,
						33602,
						33603
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31244,
					"name": "AdminProductTag"
				}
			]
		},
		{
			"id": 33604,
			"name": "BaseProductTagListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33613,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30835,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 33610,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30832,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 33611,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30833,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 33612,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 30834,
						"name": "FindParams.order"
					}
				},
				{
					"id": 33605,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33606,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33607,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33608,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33609,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 30231,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33613,
						33610,
						33611,
						33612,
						33605,
						33606,
						33607,
						33608,
						33609
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30831,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31257,
					"name": "AdminProductTagListParams"
				}
			]
		},
		{
			"id": 33614,
			"name": "BaseProductType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33615,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33616,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33617,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33618,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33619,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33620,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33615,
						33616,
						33617,
						33618,
						33619,
						33620
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31287,
					"name": "AdminProductType"
				}
			]
		},
		{
			"id": 33629,
			"name": "ReservationResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33630,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33631,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33632,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33633,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33634,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33635,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33636,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33637,
					"name": "inventory_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33638,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33639,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33640,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 33641,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 33642,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33630,
						33631,
						33632,
						33633,
						33634,
						33635,
						33636,
						33637,
						33638,
						33639,
						33640,
						33641,
						33642
					]
				}
			]
		},
		{
			"id": 33621,
			"name": "BaseReturnReason",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33622,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33623,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33624,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33625,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 33626,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 33627,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33628,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33622,
						33623,
						33624,
						33625,
						33626,
						33627,
						33628
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 31427,
					"name": "AdminReturnReason"
				}
			]
		},
		{
			"id": 33643,
			"name": "AdminUpsertStockLocationAddress",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33644,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33645,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33646,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33647,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33648,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33649,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33650,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33651,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33644,
						33645,
						33646,
						33647,
						33648,
						33649,
						33650,
						33651
					]
				}
			]
		},
		{
			"id": 33652,
			"name": "AdminCreateTaxRateRule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33653,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33654,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33653,
						33654
					]
				}
			]
		},
		{
			"id": 31810,
			"name": "InventoryTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 31811,
					"name": "InventoryItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item details."
							}
						]
					},
					"children": [
						{
							"id": 31812,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31813,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31814,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31815,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31816,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31817,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mid code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31818,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31819,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31820,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31821,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31822,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31823,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31824,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31825,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31826,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31827,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31828,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31829,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31812,
								31813,
								31814,
								31815,
								31816,
								31817,
								31818,
								31819,
								31820,
								31821,
								31822,
								31823,
								31824,
								31825,
								31826,
								31827,
								31828,
								31829
							]
						}
					]
				},
				{
					"id": 31830,
					"name": "FilterableInventoryItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved inventory items."
							}
						]
					},
					"children": [
						{
							"id": 31831,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search term to search inventory items' attributes."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31832,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31833,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31834,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKUs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30067,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31835,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31836,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS Codes to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30067,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31837,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by whether they require shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31831,
								31832,
								31833,
								31834,
								31835,
								31836,
								31837
							]
						}
					]
				},
				{
					"id": 31838,
					"name": "InventoryLevelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory level details."
							}
						]
					},
					"children": [
						{
							"id": 31839,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31840,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31841,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31842,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31843,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31844,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31845,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The available quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31846,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31847,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31848,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31849,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31839,
								31840,
								31841,
								31842,
								31843,
								31844,
								31845,
								31846,
								31847,
								31848,
								31849
							]
						}
					]
				},
				{
					"id": 31850,
					"name": "FilterableInventoryLevelProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved inventory levels."
							}
						]
					},
					"children": [
						{
							"id": 31856,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31850,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31850,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 31857,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 31850,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 31850,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 31851,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31852,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31853,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`stocked_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31854,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`reserved_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31855,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`incoming_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31856,
								31857,
								31851,
								31852,
								31853,
								31854,
								31855
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 31850,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 31858,
					"name": "ReservationItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation item details."
							}
						]
					},
					"children": [
						{
							"id": 31859,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reservation item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31860,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31861,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31862,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the reservation item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 33382,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31863,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31864,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31865,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31866,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The created by of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31867,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31868,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31869,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31870,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31859,
								31860,
								31861,
								31862,
								31863,
								31864,
								31865,
								31866,
								31867,
								31868,
								31869,
								31870
							]
						}
					]
				},
				{
					"id": 31871,
					"name": "FilterableReservationItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved reservation items."
							}
						]
					},
					"children": [
						{
							"id": 31872,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31874,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31875,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31876,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31877,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`description`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 30067,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 31878,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The \"created by\" values to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 31879,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 30075,
										"name": "NumericalComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31872,
								31874,
								31875,
								31876,
								31877,
								31878,
								31879
							]
						}
					]
				},
				{
					"id": 31880,
					"name": "UpdateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31881,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31882,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.sku"
							}
						},
						{
							"id": 31883,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.origin_country"
							}
						},
						{
							"id": 31884,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.mid_code"
							}
						},
						{
							"id": 31885,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.material"
							}
						},
						{
							"id": 31886,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.weight"
							}
						},
						{
							"id": 31887,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.length"
							}
						},
						{
							"id": 31888,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.height"
							}
						},
						{
							"id": 31889,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.width"
							}
						},
						{
							"id": 31890,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.title"
							}
						},
						{
							"id": 31891,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 31892,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.thumbnail"
							}
						},
						{
							"id": 31893,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 31894,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.hs_code"
							}
						},
						{
							"id": 31895,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.requires_shipping"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31881,
								31882,
								31883,
								31884,
								31885,
								31886,
								31887,
								31888,
								31889,
								31890,
								31891,
								31892,
								31893,
								31894,
								31895
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 31896,
									"name": "CreateInventoryItemInput",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 31896,
					"name": "CreateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the inventory item to be created."
							}
						]
					},
					"children": [
						{
							"id": 31897,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31898,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31899,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31900,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31901,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31902,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31903,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31904,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 31905,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31906,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31907,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31908,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 31909,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31910,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31897,
								31898,
								31899,
								31900,
								31901,
								31902,
								31903,
								31904,
								31905,
								31906,
								31907,
								31908,
								31909,
								31910
							]
						}
					]
				},
				{
					"id": 31911,
					"name": "CreateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31912,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31913,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31914,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31915,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31912,
								31913,
								31914,
								31915
							]
						}
					]
				},
				{
					"id": 31916,
					"name": "UpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level."
							}
						]
					},
					"children": [
						{
							"id": 31917,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31918,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31919,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31917,
								31918,
								31919
							]
						}
					]
				},
				{
					"id": 31920,
					"name": "BulkUpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
							}
						]
					},
					"children": [
						{
							"id": 31923,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31924,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31925,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 31921,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31922,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31923,
								31924,
								31925,
								31921,
								31922
							]
						}
					]
				},
				{
					"id": 31926,
					"name": "BulkAdjustInventoryLevelInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 31927,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 31928,
											"name": "inventory_item_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated inventory level."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31929,
											"name": "location_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31930,
											"name": "adjustment",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to adjust the inventory level by."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33382,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												31928,
												31929,
												31930
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 31916,
								"name": "UpdateInventoryLevelInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 31931,
					"name": "UpdateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in a reservation item."
							}
						]
					},
					"children": [
						{
							"id": 31932,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31933,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 33382,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31934,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31935,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31936,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31937,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31932,
								31933,
								31934,
								31935,
								31936,
								31937
							]
						}
					]
				},
				{
					"id": 31938,
					"name": "CreateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the reservation item to be created."
							}
						]
					},
					"children": [
						{
							"id": 31939,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31940,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31941,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 31942,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 33382,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 31943,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 31944,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31945,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user or system that created the reservation. Can be any form of identification string."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31946,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An ID associated with an external third-party system that the reservation item is connected to."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31947,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31939,
								31940,
								31941,
								31942,
								31943,
								31944,
								31945,
								31946,
								31947
							]
						}
					]
				},
				{
					"id": 31948,
					"name": "ReserveQuantityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 31949,
							"name": "locationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31950,
							"name": "lineItemId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 31951,
							"name": "salesChannelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								31949,
								31950,
								31951
							]
						}
					]
				},
				{
					"id": 31952,
					"name": "IInventoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Inventory Module."
							}
						]
					},
					"children": [
						{
							"id": 31953,
							"name": "listInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31954,
									"name": "listInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31955,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31830,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31956,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31811,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31957,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31811,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31958,
							"name": "listAndCountInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31959,
									"name": "listAndCountInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31960,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31830,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31961,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31811,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31962,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31811,
															"name": "InventoryItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31963,
							"name": "listReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31964,
									"name": "listReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31965,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31871,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31966,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31858,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31967,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31858,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31968,
							"name": "listAndCountReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31969,
									"name": "listAndCountReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31970,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31871,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31971,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31858,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31972,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31858,
															"name": "ReservationItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31973,
							"name": "listInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31974,
									"name": "listInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31975,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31850,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31976,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31838,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31977,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31838,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31978,
							"name": "listAndCountInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31979,
									"name": "listAndCountInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31980,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31850,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31981,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31838,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31982,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 31838,
															"name": "InventoryLevelDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31983,
							"name": "retrieveInventoryItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31984,
									"name": "retrieveInventoryItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31985,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31986,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31811,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31987,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31811,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31988,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31989,
									"name": "retrieveInventoryLevelByItemAndLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level based on its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31990,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31991,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31992,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31838,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31993,
							"name": "retrieveInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31994,
									"name": "retrieveInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory level by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 31995,
											"name": "inventoryLevelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory level's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 31996,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31838,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 31997,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31838,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 31998,
							"name": "retrieveReservationItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 31999,
									"name": "retrieveReservationItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a reservation item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32000,
											"name": "reservationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32001,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 31858,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32002,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31858,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32003,
							"name": "createReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32004,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32005,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31938,
													"name": "CreateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32006,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31858,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32007,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32008,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31938,
												"name": "CreateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32009,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31858,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32010,
							"name": "createInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32011,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32012,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31896,
													"name": "CreateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32013,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31811,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32014,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32015,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31896,
												"name": "CreateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32016,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31811,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32017,
							"name": "createInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32018,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32019,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory levels to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31911,
													"name": "CreateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32020,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31838,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32021,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32022,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory level to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31911,
												"name": "CreateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32023,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31838,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32024,
							"name": "updateInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32025,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32026,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31920,
													"name": "BulkUpdateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32027,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31838,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32028,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32029,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31920,
												"name": "BulkUpdateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32030,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31838,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32031,
							"name": "updateInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32032,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32033,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31880,
												"name": "UpdateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32034,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31811,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32035,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32036,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31880,
													"name": "UpdateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32037,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31811,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32038,
							"name": "updateReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32039,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32040,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 31931,
												"name": "UpdateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32041,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31858,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32042,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32043,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the reservation items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31931,
													"name": "UpdateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32044,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31858,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32045,
							"name": "deleteReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32046,
									"name": "deleteReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation item by its associated line item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32047,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The line item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32048,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32049,
							"name": "restoreReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32050,
									"name": "restoreReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation items are successfully deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32051,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID(s) of the line item(s)."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32052,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32053,
							"name": "deleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32054,
									"name": "deleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32055,
											"name": "reservationItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation items' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32056,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32057,
							"name": "softDeleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32058,
									"name": "softDeleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32059,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32060,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32061,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30405,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32059,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32062,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32063,
							"name": "restoreReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32064,
									"name": "restoreReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32065,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32066,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32067,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the reservation's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30408,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32065,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32068,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32069,
							"name": "deleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32070,
									"name": "deleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory items are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32071,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32072,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32073,
							"name": "softDeleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32074,
									"name": "softDeleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32075,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32076,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32077,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30405,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32075,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32078,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32079,
							"name": "restoreInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32080,
									"name": "restoreInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32081,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32082,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32083,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory item's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`location_levels`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30408,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32081,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32084,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32085,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32086,
									"name": "deleteInventoryItemLevelByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory item's level by the associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32087,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32088,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32089,
							"name": "deleteReservationItemByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32090,
									"name": "deleteReservationItemByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when then reservation items are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32091,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32092,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32093,
							"name": "deleteInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32094,
									"name": "deleteInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level by its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory level is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32095,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32096,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32097,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32098,
							"name": "deleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32099,
									"name": "deleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory levels are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32100,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32101,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32102,
							"name": "softDeleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32103,
									"name": "softDeleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32104,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32105,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32106,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30405,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32104,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32107,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32108,
							"name": "restoreInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32109,
									"name": "restoreInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32110,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32111,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32112,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory level's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30408,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32110,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32113,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32114,
							"name": "adjustInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32115,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adjusts the inventory quantity of an item in a location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32116,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 32117,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 32118,
																"name": "inventoryItemId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 32119,
																"name": "locationId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 32120,
																"name": "adjustment",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 33382,
																	"name": "BigNumberInput",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	32118,
																	32119,
																	32120
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 32121,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 31838,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32122,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32123,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32124,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32125,
											"name": "adjustment",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 33382,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32126,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 31838,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32127,
							"name": "confirmInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32128,
									"name": "confirmInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the quantity is available."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32129,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32130,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32131,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to confirm its availability."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33382,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32132,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32133,
							"name": "retrieveAvailableQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32134,
									"name": "retrieveAvailableQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the available quantity of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The available quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32135,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32136,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32137,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33369,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32138,
							"name": "retrieveStockedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32139,
									"name": "retrieveStockedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stocked quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32140,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32141,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32142,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33369,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32143,
							"name": "retrieveReservedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32144,
									"name": "retrieveReservedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reserved quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32145,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32146,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32147,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33369,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								31953,
								31958,
								31963,
								31968,
								31973,
								31978,
								31983,
								31988,
								31993,
								31998,
								32003,
								32010,
								32017,
								32024,
								32031,
								32038,
								32045,
								32049,
								32053,
								32057,
								32063,
								32069,
								32073,
								32079,
								32085,
								32089,
								32093,
								32098,
								32102,
								32108,
								32114,
								32127,
								32133,
								32138,
								32143
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32390,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						31811,
						31830,
						31838,
						31850,
						31858,
						31871,
						31880,
						31896,
						31911,
						31916,
						31920,
						31931,
						31938,
						31948,
						31952
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						31926
					]
				}
			]
		},
		{
			"id": 33163,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33164,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33165,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33166,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33167,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33168,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33169,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33170,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33171,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33165,
								33166,
								33167,
								33168,
								33169,
								33170,
								33171
							]
						}
					]
				}
			}
		},
		{
			"id": 33172,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33173,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 33174,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33173,
						33174
					]
				}
			]
		},
		{
			"id": 33175,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33176,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33177,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 33172,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33172,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 33178,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 33179,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33180,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 33181,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33180,
														33181
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 33182,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33183,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33163,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 33184,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 33185,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 33186,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 33187,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 33163,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											33186,
											33187
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 33188,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33176,
						33177,
						33178,
						33182,
						33183,
						33184,
						33188
					]
				}
			]
		},
		{
			"id": 33189,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33190,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33191,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33190,
						33191
					]
				}
			]
		},
		{
			"id": 33192,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33193,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33194,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33193,
						33194
					]
				}
			]
		},
		{
			"id": 33195,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33196,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33197,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33198,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 33199,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 33200,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 33201,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 33202,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 33189,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 33203,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 33204,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 33205,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 33206,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": 33192,
																"name": "JoinerDirective",
																"package": "@medusajs/types"
															}
														}
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											33200,
											33201,
											33202,
											33203
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 33207,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33208,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33189,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 33209,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33210,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 33211,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 33212,
											"name": "field",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33192,
											"name": "JoinerDirective",
											"package": "@medusajs/types"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33196,
						33197,
						33198,
						33207,
						33208,
						33209
					]
				}
			]
		},
		{
			"id": 33213,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33214,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33215,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33214,
						33215
					]
				}
			]
		},
		{
			"id": 33216,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignatures": [
				{
					"id": 33217,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 33218,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33219,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33220,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 33221,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33189,
											"name": "JoinerArgument",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 33222,
									"name": "expands",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33216,
										"name": "RemoteNestedExpands",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33220,
										33221,
										33222
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 33223,
			"name": "InternalJoinerServiceConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 33175,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "relationships"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33224,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33225,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 33163,
												"name": "JoinerRelationship",
												"package": "@medusajs/types"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33225
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33226,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33227,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33228,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33229,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 33223,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33230,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33223,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33231,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33232,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33189,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 33233,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 33216,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33227,
						33228,
						33229,
						33230,
						33231,
						33232,
						33233
					]
				}
			]
		},
		{
			"id": 33282,
			"name": "PlannerActionLinkDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Link descriptor containing metadata about the link's\nmodules and models."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33283,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33284,
							"name": "fromModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33285,
							"name": "toModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33286,
							"name": "fromModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33287,
							"name": "toModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33284,
								33285,
								33286,
								33287
							]
						}
					]
				}
			}
		},
		{
			"id": 33288,
			"name": "LinkMigrationsPlannerAction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of actions prepared and executed by\nthe \"ILinkMigrationsPlanner\"."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 33289,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33290,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "create"
											},
											{
												"type": "literal",
												"value": "update"
											},
											{
												"type": "literal",
												"value": "notify"
											}
										]
									}
								},
								{
									"id": 33291,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33282,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33292,
									"name": "sql",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33293,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33290,
										33291,
										33292,
										33293
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33294,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33295,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "noop"
									}
								},
								{
									"id": 33296,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33297,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33282,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33295,
										33296,
										33297
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33298,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33299,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "delete"
									}
								},
								{
									"id": 33300,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33282,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33301,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33299,
										33300,
										33301
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33302,
			"name": "ILinkMigrationsPlanner",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33303,
					"name": "createPlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33304,
							"name": "createPlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33288,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33305,
					"name": "executePlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33306,
							"name": "executePlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33307,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33288,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						33303,
						33305
					]
				}
			]
		},
		{
			"id": 33234,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33235,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33236,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33237,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 33238,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30006,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33239,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33240,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33241,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33242,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 33243,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30006,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33244,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33245,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33246,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33247,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 33248,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33249,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33250,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33251,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33252,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 33253,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33254,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33255,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33256,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33257,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 33258,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33259,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33260,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33261,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 33262,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30405,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33263,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33264,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33265,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33266,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 33267,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 30408,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33268,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33334,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						33235,
						33240,
						33245,
						33250,
						33255,
						33259,
						33264
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 32390,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 32161,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32162,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32163,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32164,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32165,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32166,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32167,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32168,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32169,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32170,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32171,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32172,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32173,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32174,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32175,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32176,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32177,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32178,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32179,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32180,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32181,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 32182,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32183,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32184,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32185,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32186,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 32187,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32188,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32189,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32190,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32191,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 32192,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32193,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32194,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32195,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32196,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 32197,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32198,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32199,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32200,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32201,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 32202,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32203,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32204,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32205,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32206,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32207,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32208,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32209,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32210,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32211,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32212,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32213,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32214,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 32215,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32216,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32217,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32218,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32163,
								32167,
								32171,
								32175,
								32178,
								32183,
								32188,
								32193,
								32198,
								32203,
								32207,
								32211,
								32215
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32162
					]
				}
			]
		},
		{
			"id": 32219,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32220,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32226,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32221,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 32222,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 32225,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 32226,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 32223,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 32224,
															"name": "__type",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 32226,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 32227,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 32228,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 32227,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 32229,
					"name": "CustomModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32230,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32231,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32232,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32233,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32234,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 32235,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32231,
										32232,
										32233,
										32234,
										32235
									]
								}
							]
						}
					}
				},
				{
					"id": 32236,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32237,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32238,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "internal"
									}
								},
								{
									"id": 32239,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "isolated"
											}
										]
									}
								},
								{
									"id": 32240,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32241,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32229,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32242,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 32343,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 32243,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32244,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32245,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 32246,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32238,
										32239,
										32240,
										32241,
										32242,
										32243,
										32244,
										32245,
										32246
									]
								}
							]
						}
					}
				},
				{
					"id": 32247,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32248,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32249,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "external"
									}
								},
								{
									"id": 32250,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32229,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32251,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32252,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32253,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 32254,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 32255,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32253,
														32254,
														32255
													]
												}
											]
										}
									}
								},
								{
									"id": 32256,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32257,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32258,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32249,
										32250,
										32251,
										32256,
										32257,
										32258
									]
								}
							]
						}
					}
				},
				{
					"id": 32259,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32260,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32261,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 32262,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 32267,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32263,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32264,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32265,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 32236,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 32247,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 32266,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32343,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32261,
										32262,
										32263,
										32264,
										32265,
										32266
									]
								}
							]
						}
					}
				},
				{
					"id": 32267,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32268,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32269,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32270,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32271,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 32272,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32273,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 32274,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 32275,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32277,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 32236,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 32247,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32269,
										32270,
										32271,
										32272,
										32273,
										32274,
										32275,
										32277
									]
								}
							]
						}
					}
				},
				{
					"id": 32278,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32279,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32280,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32281,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32282,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32283,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32284,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 32236,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32280,
										32281,
										32282,
										32283,
										32284
									]
								}
							]
						}
					}
				},
				{
					"id": 32285,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33655,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32286,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32287,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32288,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32289,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32267,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32287,
												32288,
												32289
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 32290,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32291,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32292,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32316,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32293,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32267,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32292,
												32293
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 32294,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32300,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32295,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32296,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 30190,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32297,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32300,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 32298,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32162,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32299,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32296,
										32297,
										32298,
										32299
									]
								}
							]
						}
					}
				},
				{
					"id": 32301,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32302,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 32303,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32304,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32294,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32305,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32236,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 32306,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 32307,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 32308,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 32309,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											32308,
											32309
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 32310,
					"name": "LinkModulesExtraFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32311,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32312,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "date"
													},
													{
														"type": "literal",
														"value": "time"
													},
													{
														"type": "literal",
														"value": "datetime"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "blob"
													},
													{
														"type": "literal",
														"value": "uint8array"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "enumArray"
													},
													{
														"type": "literal",
														"value": "enum"
													},
													{
														"type": "literal",
														"value": "json"
													},
													{
														"type": "literal",
														"value": "integer"
													},
													{
														"type": "literal",
														"value": "smallint"
													},
													{
														"type": "literal",
														"value": "tinyint"
													},
													{
														"type": "literal",
														"value": "mediumint"
													},
													{
														"type": "literal",
														"value": "float"
													},
													{
														"type": "literal",
														"value": "double"
													},
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "decimal"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "uuid"
													},
													{
														"type": "literal",
														"value": "text"
													}
												]
											}
										},
										{
											"id": 32313,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32314,
											"name": "nullable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 32315,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Mikro-orm options for the column"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32312,
												32313,
												32314,
												32315
											]
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 32316,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 33175,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32317,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32318,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32319,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32340,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32320,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 32321,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 32322,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 32323,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 32324,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 32325,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 32326,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 32327,
																								"name": "isList",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									32325,
																									32326,
																									32327
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 32328,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 32340,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	32322,
																	32323,
																	32328
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 32329,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32330,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32331,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 32332,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 32333,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 32334,
											"name": "extraDataFields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32335,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32336,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32337,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 32338,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 32339,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 32310,
																"name": "LinkModulesExtraFields",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32337,
																32338,
																32339
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32318,
												32319,
												32320,
												32329,
												32330,
												32331,
												32332,
												32333,
												32334,
												32335
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 32340,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33163,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32341,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32342,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32342
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 32343,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32359,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 32220,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32344,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32345,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 32359,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 32346,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32301,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32347,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 32348,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32349,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 32294,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 32350,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 32236,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 32351,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 32352,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32353,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 32294,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 32354,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 32236,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 32355,
									"name": "generateMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 32356,
											"name": "generateMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32357,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 32294,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 32358,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 32236,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32345,
										32346
									]
								},
								{
									"title": "Methods",
									"children": [
										32347,
										32351,
										32355
									]
								}
							]
						}
					}
				},
				{
					"id": 32360,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32361,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32362,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32363,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 32364,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32365,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32366,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32367,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 32368,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32369,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32370,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32371,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32372,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 32373,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		32373
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 32374,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 32375,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32363,
												32364,
												32365,
												32366,
												32367,
												32368,
												32369,
												32370,
												32371,
												32374,
												32375
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32361
							]
						}
					]
				},
				{
					"id": 32376,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32377,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32378,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 32379,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32380,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignatures": [
												{
													"id": 32381,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 32382,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 32220,
														"typeArguments": [
															{
																"type": "reference",
																"target": 30285,
																"name": "RepositoryService",
																"package": "@medusajs/types"
															}
														],
														"name": "Constructor",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32378,
										32379
									]
								}
							]
						}
					}
				},
				{
					"id": 32383,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 32236,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 32247,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 32384,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32385,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 32386,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32387,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 33195,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 32388,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 32389,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33213,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 32390,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 30519,
							"name": "IFileModuleService"
						},
						{
							"type": "reference",
							"target": 31952,
							"name": "IInventoryService"
						},
						{
							"type": "reference",
							"target": 32565,
							"name": "INotificationModuleService"
						},
						{
							"type": "reference",
							"target": 32720,
							"name": "IStockLocationService"
						},
						{
							"type": "reference",
							"target": 32943,
							"name": "IWorkflowEngineService"
						},
						{
							"type": "reference",
							"target": 33234,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 32404,
					"name": "IMedusaInternalService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32405,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 32406,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 32508,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "IMedusaInternalService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 32407,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32408,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32409,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32410,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32411,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33125,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32506,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32412,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32413,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 32414,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32415,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33125,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32506,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32416,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32417,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32418,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 32419,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 30253,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 32420,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 32421,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32422,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33125,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32506,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32423,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32424,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32425,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 32426,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 30253,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 32427,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 32428,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32429,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 33125,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 32506,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32430,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32431,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32432,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32433,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33125,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32506,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32434,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32435,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 32436,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33125,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32506,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32437,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32438,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32439,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32440,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33125,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32506,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32441,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32442,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 32443,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33125,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32506,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32444,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32445,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32446,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32447,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 32448,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 30253,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 32449,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 32450,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32447,
																32450
															]
														}
													]
												}
											}
										},
										{
											"id": 32451,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33125,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32506,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32452,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32453,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 32454,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 32455,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 32456,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 30253,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 32457,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 32458,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	32455,
																	32458
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 32459,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33125,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32506,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32460,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32461,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32462,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32463,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32464,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32465,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32466,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32467,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32468,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 32469,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32470,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32471,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 32472,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32473,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32474,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32475,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32476,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 32477,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 30253,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 32478,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32476
															]
														}
													]
												}
											}
										},
										{
											"id": 32479,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32480,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32481,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32482,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32483,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 32484,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 32485,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 33125,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 32506,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32486,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32487,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32488,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32489,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 32490,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 33125,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 32506,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32491,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32492,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32493,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32494,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33125,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32506,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32495,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32496,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 32497,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33125,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32506,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32498,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32499,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32500,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32501,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30277,
												"typeArguments": [
													{
														"type": "reference",
														"target": 33125,
														"typeArguments": [
															{
																"type": "reference",
																"target": 32506,
																"name": "TEntity",
																"package": "@medusajs/types",
																"qualifiedName": "IMedusaInternalService.TEntity",
																"refersToTypeParameter": true
															}
														],
														"name": "InferEntityType",
														"package": "@medusajs/types"
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32502,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 32503,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32504,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 33125,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 32506,
																			"name": "TEntity",
																			"package": "@medusajs/types",
																			"qualifiedName": "IMedusaInternalService.TEntity",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferEntityType",
																	"package": "@medusajs/types"
																}
															}
														},
														{
															"id": 32505,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 30280,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32504,
																32505
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								32405
							]
						},
						{
							"title": "Methods",
							"children": [
								32407,
								32416,
								32423,
								32430,
								32437,
								32460,
								32480,
								32486,
								32491,
								32498
							]
						}
					],
					"typeParameters": [
						{
							"id": 32506,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32507,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 32508,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 32509,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32510,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32511,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32220,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32511
									]
								}
							]
						}
					}
				},
				{
					"id": 32512,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32513,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32514,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 32509,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 32515,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32516,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32514,
										32515,
										32516
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32360,
						32390,
						32404
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32220,
						32227,
						32228,
						32229,
						32236,
						32247,
						32259,
						32267,
						32278,
						32285,
						32290,
						32294,
						32301,
						32306,
						32310,
						32316,
						32340,
						32343,
						32376,
						32383,
						32384,
						32509,
						32512
					]
				}
			]
		},
		{
			"id": 33655,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 32247,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 32236,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 32517,
			"name": "NotificationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32518,
					"name": "NotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification's data."
							}
						]
					},
					"children": [
						{
							"id": 32519,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32520,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32521,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32522,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32523,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32524,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32525,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32526,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32527,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32528,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32529,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the notification in the external system, if applicable"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32530,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32531,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the notification provider"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32533,
								"name": "NotificationProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32532,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date and time the notification was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32519,
								32520,
								32521,
								32522,
								32523,
								32524,
								32525,
								32526,
								32527,
								32528,
								32529,
								32530,
								32531,
								32532
							]
						}
					]
				},
				{
					"id": 32533,
					"name": "NotificationProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the notification provider"
							}
						]
					},
					"children": [
						{
							"id": 32534,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32535,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32536,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A user-friendly name of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32537,
							"name": "channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The supported channels by the notification provider."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32534,
								32535,
								32536,
								32537
							]
						}
					]
				},
				{
					"id": 32538,
					"name": "FilterableNotificationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved notifications."
							}
						]
					},
					"children": [
						{
							"id": 32548,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32538,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32538,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 32549,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32538,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32538,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 32539,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search through the notifications' attributes, such as trigger types and recipients, using this search term."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32540,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the recipient of the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32541,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32542,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the template name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32543,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the trigger type."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32544,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the resource that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32545,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "T* Filter based on the resource type that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32546,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the customer ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32547,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters a notification based on when it was sent and created in the database"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30231,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32548,
								32549,
								32539,
								32540,
								32541,
								32542,
								32543,
								32544,
								32545,
								32546,
								32547
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32538,
									"name": "FilterableNotificationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32554,
					"name": "CreateNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification to send and have created in the DB"
							}
						]
					},
					"children": [
						{
							"id": 32555,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32556,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32557,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32558,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32559,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32560,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32561,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32562,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32563,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32564,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An idempotency key that ensures the same notification is not sent multiple times."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32555,
								32556,
								32557,
								32558,
								32559,
								32560,
								32561,
								32562,
								32563,
								32564
							]
						}
					]
				},
				{
					"id": 32601,
					"name": "ProviderSendNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the notification to send."
							}
						]
					},
					"children": [
						{
							"id": 32602,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32603,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32604,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32605,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32602,
								32603,
								32604,
								32605
							]
						}
					]
				},
				{
					"id": 32606,
					"name": "ProviderSendNotificationResultsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of sending the notification"
							}
						]
					},
					"children": [
						{
							"id": 32607,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification in the external system, if provided in the response"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32607
							]
						}
					]
				},
				{
					"id": 32608,
					"name": "INotificationProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32609,
							"name": "send",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32610,
									"name": "send",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The result of sending the notification."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32611,
											"name": "notification",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "All information needed to send a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32601,
												"name": "ProviderSendNotificationDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32606,
												"name": "ProviderSendNotificationResultsDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32609
							]
						}
					]
				},
				{
					"id": 32550,
					"name": "LocalNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 32551,
					"name": "SendgridNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32552,
							"name": "api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32553,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32552,
								32553
							]
						}
					]
				},
				{
					"id": 32565,
					"name": "INotificationModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Notification Module."
							}
						]
					},
					"children": [
						{
							"id": 32566,
							"name": "createNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32567,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send multiple notifications, and store the requests in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sent notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.createNotifications([\n  {\n    to: \"john@doe.me\",\n    template: \"order-confirmation\",\n    channel: \"email\",\n  },\n  {\n    to: \"+38975123456\",\n    template: \"order-confirmation\",\n    channel: \"sms\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32568,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notifications to be sent."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32554,
													"name": "CreateNotificationDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32569,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32518,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32570,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification, and store the request in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sent notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.createNotifications({\n  to: \"john@doe.me\",\n  template: \"order-confirmation\",\n  channel: \"email\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32571,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification to be sent."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32554,
												"name": "CreateNotificationDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32572,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32518,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32573,
							"name": "retrieveNotification",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32574,
									"name": "retrieveNotification",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a notification by its ID"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification =\n  await notificationModuleService.retrieveNotification(\"noti_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.retrieveNotification(\n  \"noti_123\",\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32575,
											"name": "notificationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the notification to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32576,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notification is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32518,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32577,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32518,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32578,
							"name": "listNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32579,
									"name": "listNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications({\n  id: [\"noti_123\", \"noti_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32580,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32538,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32581,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32518,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32582,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32518,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32583,
							"name": "listAndCountNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32584,
									"name": "listAndCountNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications along with the total count of available notifications satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications along with the total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications({\n    id: [\"noti_123\", \"noti_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32585,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32538,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32586,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32518,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32587,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32518,
															"name": "NotificationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32566,
								32573,
								32578,
								32583
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32390,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32518,
						32533,
						32538,
						32554,
						32601,
						32606,
						32608,
						32550,
						32551,
						32565
					]
				}
			]
		},
		{
			"id": 33308,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33309,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33310,
					"name": "includeAncestorsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33309,
						33310
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 30061,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 32612,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32613,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32614,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32615,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32616,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32617,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32618,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 32619,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 32620,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32615,
										32616,
										32617
									]
								}
							]
						}
					}
				},
				{
					"id": 32621,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32622,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 32623,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32624,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32625,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32626,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32627,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32628,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32629,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32630,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32631,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32632,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32633,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 32634,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32635,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32636,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32637,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32638,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 32639,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32640,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32641,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32642,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32643,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32644,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32645,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32646,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32647,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32648,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32649,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32650,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 32651,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 32652,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32653,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32654,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32655,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32622
							]
						},
						{
							"title": "Methods",
							"children": [
								32623,
								32627,
								32630,
								32635,
								32640,
								32644,
								32647,
								32652
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32621
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32613
					]
				}
			]
		},
		{
			"id": 33311,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 33312,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 33313,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33312,
						33313
					]
				}
			]
		},
		{
			"id": 33314,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33315,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 33316,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33317,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 33318,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 33319,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33315,
						33316
					]
				}
			]
		},
		{
			"id": 33320,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33321,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33322,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33323,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 30435,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30435,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 33324,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33325,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 33326,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 33314,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 30435,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 33327,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33328,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 33329,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33330,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 33331,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 33332,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 30439,
												"typeArguments": [
													{
														"type": "reference",
														"target": 33331,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 30439,
													"typeArguments": [
														{
															"type": "reference",
															"target": 33331,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 33333,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						33321,
						33324,
						33327,
						33329
					]
				}
			]
		},
		{
			"id": 33334,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 33335,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 33336,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33345,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 33337,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33345,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 33338,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33339,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 33340,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33341,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33342,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 33320,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33343,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33344,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33335,
						33336,
						33337,
						33338,
						33339,
						33340,
						33341,
						33342,
						33343,
						33344
					]
				}
			],
			"typeParameters": [
				{
					"id": 33345,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 32656,
			"name": "StockLocationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32657,
					"name": "StockLocationAddressDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32658,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32659,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32660,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 1 of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32661,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 2 of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32662,
									"name": "company",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The company of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32663,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32664,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32665,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32666,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32667,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32668,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 30086,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32669,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 32670,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 32671,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32659,
										32660,
										32661,
										32662,
										32663,
										32664,
										32665,
										32666,
										32667,
										32668,
										32669,
										32670,
										32671
									]
								}
							]
						}
					}
				},
				{
					"id": 32672,
					"name": "StockLocationDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32673,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32674,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32675,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32676,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32677,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32678,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the stock location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 32657,
										"name": "StockLocationAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32679,
									"name": "fulfillment_sets",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fulfillment sets for the location"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment-set.ts",
												"qualifiedName": "FulfillmentSetDTO"
											},
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32680,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 32681,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 32682,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32674,
										32675,
										32676,
										32677,
										32678,
										32679,
										32680,
										32681,
										32682
									]
								}
							]
						}
					}
				},
				{
					"id": 32683,
					"name": "StockLocationExpandedDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 32672,
								"name": "StockLocationDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32684,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32685,
											"name": "sales_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32685
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 32686,
					"name": "FilterableStockLocationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved stock locations."
							}
						]
					},
					"children": [
						{
							"id": 32690,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32686,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32686,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 32691,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32686,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32686,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 32687,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search parameter for stock location names"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32688,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 32689,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32690,
								32691,
								32687,
								32688,
								32689
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32686,
									"name": "FilterableStockLocationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32692,
					"name": "StockLocationAddressInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address Input"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32693,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32694,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32695,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32696,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32697,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32698,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32699,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32700,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32701,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 30086,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32694,
										32695,
										32696,
										32697,
										32698,
										32699,
										32700,
										32701
									]
								}
							]
						}
					}
				},
				{
					"id": 32702,
					"name": "CreateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to create a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32703,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32704,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32705,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32706,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 32692,
												"name": "StockLocationAddressInput",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 32707,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 30086,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32704,
										32705,
										32706,
										32707
									]
								}
							]
						}
					}
				},
				{
					"id": 32708,
					"name": "UpdateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to update a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32709,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32710,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32711,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 32712,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 32692,
										"name": "StockLocationAddressInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32713,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 30086,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32710,
										32711,
										32712,
										32713
									]
								}
							]
						}
					}
				},
				{
					"id": 32714,
					"name": "UpsertStockLocationInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stock location to create or update. If the "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " property isn't provided,\nthe stock location is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"children": [
						{
							"id": 32715,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32716,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 32717,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32692,
								"name": "StockLocationAddressInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32718,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 30086,
								"name": "MetadataType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32719,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location, if updating."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32715,
								32716,
								32717,
								32718,
								32719
							]
						}
					]
				},
				{
					"id": 32720,
					"name": "IStockLocationService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Stock Location Module."
							}
						]
					},
					"children": [
						{
							"id": 32721,
							"name": "listStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32722,
									"name": "listStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations({\n  id: [\"sloc_123\", \"sloc_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32723,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32686,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32724,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32672,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32725,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32672,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32726,
							"name": "listAndCountStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32727,
									"name": "listAndCountStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations along with the total count of available stock locations satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations({\n    id: [\"sloc_123\", \"sloc_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32728,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32686,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32729,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32672,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32730,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32672,
															"name": "StockLocationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32731,
							"name": "retrieveStockLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32732,
									"name": "retrieveStockLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation =\n  await stockLocationModuleService.retrieveStockLocation(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32733,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32734,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32672,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32735,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32672,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32736,
							"name": "createStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32737,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a stock location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation = await stockLocationModuleService.createStockLocations(\n  {\n    name: \"Warehouse\",\n    address: {\n      address_1: \"1855 Powder Mill Rd\",\n      country_code: \"us\",\n    },\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32738,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32702,
												"name": "CreateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32739,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32672,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32740,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.createStockLocations([\n    {\n      name: \"Warehouse\",\n      address: {\n        address_1: \"1855 Powder Mill Rd\",\n        country_code: \"us\",\n      },\n    },\n    {\n      name: \"Warehouse 2\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32741,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock locations to create."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32702,
													"name": "CreateStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32742,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32672,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32743,
							"name": "upsertStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32744,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates stock location service nexts if they don't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service nexts."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32745,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of Make all properties in t optional"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32714,
													"name": "UpsertStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 32746,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32672,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32747,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates a stock location service next if it doesn't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service next."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32748,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32714,
												"name": "UpsertStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32749,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32672,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32750,
							"name": "updateStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32751,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations([\n    {\n      id: \"sloc_123\",\n      name: \"Warehouse\",\n    },\n    {\n      id: \"sloc_321\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32752,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32753,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32708,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32754,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32672,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 32755,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations matching the specified filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations(\n    {\n      name: \"Warehouse\",\n    },\n    {\n      address_id: \"laddr_123\",\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32756,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters specifying which stock locations to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32686,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32757,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32708,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32758,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32672,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32759,
							"name": "deleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32760,
									"name": "deleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the stock location is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.deleteStockLocations(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32761,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 32762,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32763,
							"name": "softDeleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32764,
									"name": "softDeleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the stock location through this relation, such as the IDs of associated address.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.softDeleteStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32765,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32766,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32767,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30405,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32765,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32768,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32769,
							"name": "restoreStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32770,
									"name": "restoreStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the stock location through this relation,\nsuch as the ID of associated address.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.restoreStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 32771,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 32772,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32773,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the stock location. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the stock location's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`address`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 30408,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32771,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32774,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32721,
								32726,
								32731,
								32736,
								32743,
								32750,
								32759,
								32763,
								32769
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32390,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32686,
						32714,
						32720
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32657,
						32672,
						32683,
						32692,
						32702,
						32708
					]
				}
			]
		},
		{
			"id": 33369,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33370,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33371,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 33377,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33372,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 33373,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33374,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 33375,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 33376,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33370,
						33371,
						33372
					]
				},
				{
					"title": "Methods",
					"children": [
						33373,
						33375
					]
				}
			]
		},
		{
			"id": 33377,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33378,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33379,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33379
							]
						}
					],
					"indexSignatures": [
						{
							"id": 33380,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 33381,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 33382,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 33377,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 33369,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 33383,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 33369,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 33346,
			"name": "CartLikeWithTotals",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33347,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33348,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33349,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33350,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33351,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33352,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33353,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33354,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33355,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33356,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33357,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33358,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33359,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33360,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33361,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33362,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33363,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33364,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33365,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33366,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33367,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33368,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33383,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33348,
								33349,
								33350,
								33351,
								33352,
								33353,
								33354,
								33355,
								33356,
								33357,
								33358,
								33359,
								33360,
								33361,
								33362,
								33363,
								33364,
								33365,
								33366,
								33367,
								33368
							]
						}
					]
				}
			}
		},
		{
			"id": 32788,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32789,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32790,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32791,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32792,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32790
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 30449,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32789
					]
				}
			]
		},
		{
			"id": 32793,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32794,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32795,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32796,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32797,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32798,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 32799,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32798,
														32799
													]
												}
											]
										}
									}
								},
								{
									"id": 32800,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32801,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32802,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 32803,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32802,
														32803
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32796,
										32800
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32795
							]
						}
					]
				},
				{
					"id": 32804,
					"name": "InventoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32805,
							"name": "CreateInventoryItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32806,
									"name": "sku",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32807,
									"name": "hs_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32808,
									"name": "weight",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32809,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32810,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32811,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32812,
									"name": "origin_country",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32813,
									"name": "mid_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32814,
									"name": "material",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32815,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32816,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32817,
									"name": "thumbnail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32818,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32806,
										32807,
										32808,
										32809,
										32810,
										32811,
										32812,
										32813,
										32814,
										32815,
										32816,
										32817,
										32818
									]
								}
							]
						},
						{
							"id": 32819,
							"name": "CreateInventoryItemsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32820,
									"name": "inventoryItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32805,
											"name": "CreateInventoryItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32820
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32805,
								32819
							]
						}
					]
				},
				{
					"id": 32821,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32826,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32827,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32828,
									"name": "auth_identity_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32829,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32830,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32831,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 32832,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 32833,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 32834,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 32835,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32831,
														32832,
														32833,
														32834,
														32835
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32827,
										32828,
										32829
									]
								}
							]
						},
						{
							"id": 32822,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32823,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32823
									]
								}
							]
						},
						{
							"id": 32824,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32825,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32825
									]
								}
							]
						},
						{
							"id": 32836,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32837,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32837
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32826,
								32822,
								32824,
								32836
							]
						}
					]
				},
				{
					"id": 32838,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32839,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32840,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32841,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32842,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32843,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32844,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 32845,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 32846,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 32847,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 32848,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 32849,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 32850,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															32846,
															32847,
															32848,
															32849,
															32850
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 32851,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 32852,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 32853,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															32853
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32840,
										32841,
										32842,
										32843,
										32844,
										32851
									]
								}
							]
						},
						{
							"id": 32854,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32855,
									"name": "attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32856,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32855,
										32856
									]
								}
							]
						},
						{
							"id": 32857,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32858,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32859,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32860,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 32861,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32862,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32863,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32858,
										32859,
										32860,
										32861,
										32862,
										32863
									]
								}
							]
						},
						{
							"id": 32864,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32865,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32875,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32865
									]
								}
							]
						},
						{
							"id": 32866,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32867,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32868,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32867,
										32868
									]
								}
							]
						},
						{
							"id": 32869,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32870,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32871,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32870,
										32871
									]
								}
							]
						},
						{
							"id": 32872,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32873,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32874,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32873,
										32874
									]
								}
							]
						},
						{
							"id": 32875,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32876,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32877,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32878,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32879,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32880,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 32881,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 32882,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32883,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 32884,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33656,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32885,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32876,
										32877,
										32878,
										32879,
										32880,
										32881,
										32882,
										32883,
										32884,
										32885
									]
								}
							]
						},
						{
							"id": 32886,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32887,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32887
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32839,
								32854,
								32857,
								32864,
								32866,
								32869,
								32872,
								32875,
								32886
							]
						}
					]
				},
				{
					"id": 32888,
					"name": "ProductCategoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32889,
							"name": "CreateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32890,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductCategoryDTO"
											},
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32890
									]
								}
							]
						},
						{
							"id": 32891,
							"name": "UpdateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32892,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "FilterableProductCategoryProps"
										},
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32893,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "UpdateProductCategoryDTO"
										},
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32892,
										32893
									]
								}
							]
						},
						{
							"id": 32894,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32895,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.id"
									}
								},
								{
									"id": 32896,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.add"
									}
								},
								{
									"id": 32897,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.remove"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32895,
										32896,
										32897
									]
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 30096,
									"name": "LinkWorkflowInput",
									"package": "@medusajs/types"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32889,
								32891,
								32894
							]
						}
					]
				},
				{
					"id": 32898,
					"name": "ReservationWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 32899,
							"name": "CreateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32900,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31938,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32900
									]
								}
							]
						},
						{
							"id": 32901,
							"name": "CreateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31858,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 32902,
							"name": "UpdateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 32903,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 31931,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32903
									]
								}
							]
						},
						{
							"id": 32904,
							"name": "UpdateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 31858,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								32899,
								32902
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								32901,
								32904
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						32794,
						32804,
						32821,
						32838,
						32888,
						32898
					]
				}
			]
		},
		{
			"id": 33656,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33657,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33658,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33659,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33660,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33661,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 33662,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33657,
						33658,
						33659,
						33660,
						33661,
						33662
					]
				}
			]
		},
		{
			"id": 32905,
			"name": "WorkflowsSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32906,
					"name": "WorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32907,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32908,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32909,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32910,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32911,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32912,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 32913,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 32914,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 32915,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32907,
								32908,
								32909,
								32910,
								32911,
								32912,
								32913,
								32914,
								32915
							]
						}
					]
				},
				{
					"id": 32916,
					"name": "FilterableWorkflowExecutionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 32921,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32916,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32916,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30254,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 32922,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32916,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 30253,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32916,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 30255,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 32917,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32918,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32919,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32920,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 30231,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32921,
								32922,
								32917,
								32918,
								32919,
								32920
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 30253,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32916,
									"name": "FilterableWorkflowExecutionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32923,
					"name": "UpsertWorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32924,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32925,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32926,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 32927,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 32928,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32924,
								32925,
								32926,
								32927,
								32928
							]
						}
					]
				},
				{
					"id": 32929,
					"name": "WorkflowOrchestratorRunDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32931,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32936,
								"name": "T",
								"package": "@medusajs/types",
								"qualifiedName": "WorkflowOrchestratorRunDTO.T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.input"
							}
						},
						{
							"id": 32932,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33334,
								"name": "Context",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.context"
							}
						},
						{
							"id": 32933,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.resultFrom"
							}
						},
						{
							"id": 32934,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.throwOnError"
							}
						},
						{
							"id": 32935,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.events"
							}
						},
						{
							"id": 32930,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32931,
								32932,
								32933,
								32934,
								32935,
								32930
							]
						}
					],
					"typeParameters": [
						{
							"id": 32936,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33663,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32936,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "WorkflowOrchestratorRunDTO.T",
									"refersToTypeParameter": true
								}
							],
							"name": "FlowRunOptions",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32937,
					"name": "IdempotencyKeyParts",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32938,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32939,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32940,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32941,
									"name": "stepId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32942,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32939,
										32940,
										32941,
										32942
									]
								}
							]
						}
					}
				},
				{
					"id": 32943,
					"name": "IWorkflowEngineService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32944,
							"name": "retrieveWorkflowExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32945,
									"name": "retrieveWorkflowExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32946,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32947,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 32948,
																	"name": "workflow_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 32949,
																	"name": "transaction_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		32948,
																		32949
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 32950,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32906,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32951,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32906,
												"name": "WorkflowExecutionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32952,
							"name": "listWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32953,
									"name": "listWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32954,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32916,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32955,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32906,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32956,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32906,
													"name": "WorkflowExecutionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32957,
							"name": "listAndCountWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32958,
									"name": "listAndCountWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32959,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32916,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32960,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 30006,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32906,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32961,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32906,
															"name": "WorkflowExecutionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32962,
							"name": "run",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32963,
									"name": "run",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32964,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32965,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32929,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowOrchestratorRunDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32966,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 32967,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32968,
															"name": "errors",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Error"
																	},
																	"name": "Error",
																	"package": "typescript"
																}
															}
														},
														{
															"id": 32969,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 32970,
															"name": "result",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 32971,
															"name": "acknowledgement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32968,
																32969,
																32970,
																32971
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32972,
							"name": "getRunningTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32973,
									"name": "getRunningTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32974,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32975,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32976,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 32977,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32978,
							"name": "setStepSuccess",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32979,
									"name": "setStepSuccess",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32980,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32981,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32982,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 32937,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 32983,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 32984,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32982,
																32983,
																32984
															]
														}
													]
												}
											}
										},
										{
											"id": 32985,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 32986,
							"name": "setStepFailure",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32987,
									"name": "setStepFailure",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32988,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32989,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32990,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 32937,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 32991,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 32992,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32990,
																32991,
																32992
															]
														}
													]
												}
											}
										},
										{
											"id": 32993,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 32994,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32995,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32996,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32997,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32998,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 32999,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 33000,
															"name": "subscriber",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Function"
																},
																"name": "Function",
																"package": "typescript"
															}
														},
														{
															"id": 33001,
															"name": "subscriberId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32998,
																32999,
																33000,
																33001
															]
														}
													]
												}
											}
										},
										{
											"id": 33002,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33003,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33004,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33005,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 33006,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 33007,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 33008,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 33009,
															"name": "subscriberOrId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Function"
																		},
																		"name": "Function",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																33007,
																33008,
																33009
															]
														}
													]
												}
											}
										},
										{
											"id": 33010,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 33334,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32944,
								32952,
								32957,
								32962,
								32972,
								32978,
								32986,
								32994,
								33003
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32390,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32906,
						32916,
						32923,
						32929,
						32943
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32937
					]
				}
			]
		},
		{
			"id": 33663,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 33670,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 33664,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 33665,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33670,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 33666,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 33334,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33667,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33668,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33669,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33665,
								33666,
								33667,
								33668,
								33669
							]
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 32929,
					"name": "WorkflowOrchestratorRunDTO"
				}
			]
		},
		{
			"id": 33390,
			"name": "CreateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "CreateProductVariantDTO"
						},
						"name": "ProductTypes.CreateProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "CreateProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33391,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33392,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33392
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33393,
			"name": "UpdateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductVariantDTO"
						},
						"name": "ProductTypes.UpsertProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33394,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33395,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33395
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33396,
			"name": "CreateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
									"qualifiedName": "CreateProductDTO"
								},
								"name": "ProductTypes.CreateProductDTO",
								"package": "@medusajs/types",
								"qualifiedName": "CreateProductDTO"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33397,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33398,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 33399,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 33400,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															33400
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 33401,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33390,
											"name": "CreateProductVariantWorkflowInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33398,
										33401
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33402,
			"name": "UpdateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductDTO"
						},
						"name": "ProductTypes.UpsertProductDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 33403,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33404,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 33405,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 33406,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															33406
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33404
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 33384,
			"name": "CreateLocationFulfillmentSetWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 33385,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 33386,
					"name": "fulfillment_set_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33387,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33388,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33389,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33388,
										33389
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						33385,
						33386
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				29970,
				29971,
				29985,
				30224,
				33024,
				30413,
				30489,
				30508,
				30599,
				31810,
				32161,
				32219,
				32517,
				32612,
				32656,
				32788,
				32793,
				32905
			]
		},
		{
			"title": "Enumerations",
			"children": [
				33491
			]
		},
		{
			"title": "Interfaces",
			"children": [
				29967,
				33407,
				33439,
				33146,
				33149,
				33154,
				33157,
				33159,
				33483,
				33496,
				33501,
				33507,
				33472,
				33464,
				33511,
				33523,
				33545,
				33532,
				33547,
				33750,
				33696,
				33700,
				33705,
				33711,
				33754,
				33718,
				33723,
				33729,
				33736,
				33558,
				33573,
				33593,
				33597,
				33604,
				33614,
				33629,
				33621,
				33643,
				33652,
				33172,
				33175,
				33189,
				33192,
				33195,
				33213,
				33216,
				33226,
				33302,
				33234,
				33308,
				33311,
				33314,
				33320,
				33334,
				33369,
				33656,
				33384
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				29952,
				33414,
				33745,
				33744,
				33674,
				33679,
				33681,
				33686,
				33676,
				33683,
				33688,
				33421,
				33671,
				33419,
				33416,
				33435,
				33436,
				33430,
				33424,
				33426,
				33690,
				33769,
				33759,
				33748,
				33694,
				33423,
				33428,
				33550,
				33556,
				33557,
				33163,
				33223,
				33282,
				33288,
				33655,
				33377,
				33382,
				33383,
				33346,
				33663,
				33390,
				33393,
				33396,
				33402
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"29951": {
			"sourceFileName": "../../../../packages/core/types/src/index.ts",
			"qualifiedName": ""
		},
		"29952": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"29953": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"29954": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"29955": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"29956": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"29957": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"29958": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"29959": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"29960": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"29961": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"29962": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"29963": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"29964": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"29965": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"29966": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"29967": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps"
		},
		"29968": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.data"
		},
		"29969": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.TData"
		},
		"29970": {
			"sourceFileName": "../../../../packages/core/types/src/admin/index.ts",
			"qualifiedName": ""
		},
		"29971": {
			"sourceFileName": "../../../../packages/core/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"29972": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"29973": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"29974": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"29975": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"29976": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"29977": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"29978": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"29979": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"29980": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"29981": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"29982": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"29983": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"29984": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"29985": {
			"sourceFileName": "../../../../packages/core/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"29986": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "Prettify"
		},
		"29987": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"29988": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"29989": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"29990": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"29991": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"29995": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"29996": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"29997": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"29998": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"29999": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"30000": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"30001": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"30002": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"30003": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"30006": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"30007": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"30008": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"30009": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"30010": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"30011": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"30012": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"30013": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"30015": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"30016": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"30017": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"30018": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"30054": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"30055": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"30056": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"30057": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"30058": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"30059": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"30060": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"30061": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"30062": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"30063": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"30064": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"30065": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"30066": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"30067": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"30068": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"30069": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"30070": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"30071": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"30072": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"30073": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"30074": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"30075": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"30076": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"30077": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"30078": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"30079": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"30082": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"30083": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"30084": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"30085": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"30086": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"30087": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RawRounding"
		},
		"30088": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"30089": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.value"
		},
		"30090": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.precision"
		},
		"30091": {
			"sourceFileName": "../../../../packages/core/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"30092": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkMethodRequest"
		},
		"30093": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"30094": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"30095": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"30096": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkWorkflowInput"
		},
		"30097": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"30098": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"30099": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"30100": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"30101": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodRequest"
		},
		"30102": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"30103": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.create"
		},
		"30104": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.update"
		},
		"30105": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.delete"
		},
		"30106": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"30107": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"30108": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"30109": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodResponse"
		},
		"30110": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"30111": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.created"
		},
		"30112": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.updated"
		},
		"30113": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"30114": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"30115": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"30116": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"30117": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"30118": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"30119": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowInput"
		},
		"30120": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"30121": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"30122": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"30123": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowOutput"
		},
		"30124": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"30125": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions"
		},
		"30126": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.disable"
		},
		"30127": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.path"
		},
		"30128": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.outDir"
		},
		"30129": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.backendUrl"
		},
		"30130": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.vite"
		},
		"30131": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30132": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30133": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "config"
		},
		"30134": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"30135": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"30136": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"30137": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"30138": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"30139": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"30140": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseName"
		},
		"30141": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseUrl"
		},
		"30142": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseSchema"
		},
		"30143": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseLogging"
		},
		"30145": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseDriverOptions"
		},
		"30146": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30147": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"30148": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30149": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"30150": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30151": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"30152": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisUrl"
		},
		"30153": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisPrefix"
		},
		"30154": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisOptions"
		},
		"30155": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.sessionOptions"
		},
		"30157": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobsBatchSize"
		},
		"30158": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.workerMode"
		},
		"30159": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.http"
		},
		"30160": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30161": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtSecret"
		},
		"30162": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtExpiresIn"
		},
		"30163": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookieSecret"
		},
		"30164": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authCors"
		},
		"30165": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.compression"
		},
		"30166": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.storeCors"
		},
		"30167": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.adminCors"
		},
		"30168": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authMethodsPerActor"
		},
		"30169": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"30170": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"30171": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin"
		},
		"30176": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"30177": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"30178": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "PluginDetails"
		},
		"30179": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"30180": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"30181": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"30182": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.id"
		},
		"30183": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"30184": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.version"
		},
		"30185": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "ExecArgs"
		},
		"30186": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type"
		},
		"30187": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.container"
		},
		"30188": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.args"
		},
		"30189": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"30190": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"30191": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"30192": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"30193": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"30194": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"30195": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"30196": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"30197": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"30198": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"30199": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"30200": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"30210": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"30211": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"30212": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"30213": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"30214": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"30215": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"30216": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"30217": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice"
		},
		"30218": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice.calculated_price"
		},
		"30219": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type"
		},
		"30220": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.calculated_amount"
		},
		"30221": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.is_calculated_price_tax_inclusive"
		},
		"30222": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCase"
		},
		"30223": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"30224": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"30225": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"30226": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30227": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"30229": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30230": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"30231": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"30232": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30233": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"30234": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"30235": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"30236": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"30237": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"30238": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"30239": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"30240": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"30241": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"30242": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"30243": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"30244": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"30245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"30246": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"30247": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"30248": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"30249": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"30250": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"30251": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"30252": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"30253": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"30254": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"30255": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"30256": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"30257": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"30258": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"30259": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"30260": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"30261": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"30262": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"30263": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"30264": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"30265": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"30266": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"30267": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"30268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"30269": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30270": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"30272": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30273": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"30275": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"30276": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"30277": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"30278": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"30279": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"30280": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "PerformedActions"
		},
		"30281": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30282": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.created"
		},
		"30283": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.updated"
		},
		"30284": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.deleted"
		},
		"30285": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"30286": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"30287": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"30288": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30289": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30290": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"30291": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"30292": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30293": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30294": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"30295": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"30296": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30297": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30298": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"30299": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"30300": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30301": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30302": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"30303": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"30304": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30305": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"30306": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"30307": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"30308": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30309": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"30311": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30312": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"30314": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30315": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"30316": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"30317": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"30318": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30319": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30320": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30321": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"30322": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"30323": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"30324": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"30325": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30326": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"30327": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"30328": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30329": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30330": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"30331": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"30332": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30333": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"30334": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30335": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30336": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entities"
		},
		"30337": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"30338": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"30339": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"30340": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30341": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"30342": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30343": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30344": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"30345": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30346": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30347": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"30348": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"30349": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"30350": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"30351": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"30352": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30353": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"30354": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"30355": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30356": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"30357": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"30358": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"30359": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30360": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30361": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"30362": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"30363": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"30364": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"30365": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30366": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"30367": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30368": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"30369": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"30370": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30371": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"30372": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30373": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"30374": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"30375": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30376": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30377": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"30378": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"30379": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"30380": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30381": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"30382": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"30383": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30384": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"30385": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30386": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30387": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"30388": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"30389": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"30390": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"30391": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"30392": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"30393": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"30394": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"30395": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30396": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"30397": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"30398": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"30399": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"30400": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"30401": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"30402": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"30403": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"30404": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"30405": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"30406": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"30407": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"30408": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"30409": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"30410": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"30411": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "ModelDateColumns"
		},
		"30412": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableModelDateColumns"
		},
		"30413": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"30414": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"30415": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30416": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30417": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"30418": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"30419": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"30420": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30421": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"30422": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"30423": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30424": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"30425": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"30426": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"30427": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30428": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"30429": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"30430": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30431": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"30432": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"30433": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"30434": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"30435": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"30436": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30437": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"30438": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"30439": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"30440": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"30441": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"30442": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"30443": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"30444": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"30445": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"30446": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"30447": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"30448": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"30449": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"30450": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"30451": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"30452": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"30453": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"30454": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"30455": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"30456": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"30457": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"30458": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"30459": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"30460": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"30461": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"30462": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"30463": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"30464": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"30465": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"30466": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"30467": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"30468": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"30469": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"30470": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"30471": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"30472": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"30473": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"30474": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"30475": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"30476": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"30477": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"30478": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"30479": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"30480": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"30481": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"30482": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"30483": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"30484": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"30485": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"30486": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"30487": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"30488": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"30489": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"30490": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"30491": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"30492": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"30493": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"30494": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"30495": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"30496": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"30497": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"30498": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"30499": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"30500": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"30501": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"30502": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"30503": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"30504": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"30505": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"30506": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"30507": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"30508": {
			"sourceFileName": "../../../../packages/core/types/src/file/index.ts",
			"qualifiedName": ""
		},
		"30509": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO"
		},
		"30510": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.id"
		},
		"30511": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.url"
		},
		"30512": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps"
		},
		"30513": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps.id"
		},
		"30514": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO"
		},
		"30515": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.filename"
		},
		"30516": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.mimeType"
		},
		"30517": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.content"
		},
		"30518": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.access"
		},
		"30519": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService"
		},
		"30520": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"30521": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"30522": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"30523": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30524": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"30525": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"30526": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30527": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"30528": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"30529": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "ids"
		},
		"30530": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30531": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"30532": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"30533": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30534": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"30535": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"30536": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"30537": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"30538": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30539": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"30540": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"30541": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"30542": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"30543": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30544": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"30545": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"30546": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"30547": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"30548": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"30562": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderFileResultDTO"
		},
		"30563": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.url"
		},
		"30564": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.key"
		},
		"30565": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderGetFileDTO"
		},
		"30566": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"30567": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderDeleteFileDTO"
		},
		"30568": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"30569": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderUploadFileDTO"
		},
		"30570": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.filename"
		},
		"30571": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.mimeType"
		},
		"30572": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.content"
		},
		"30573": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.access"
		},
		"30574": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider"
		},
		"30575": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"30576": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"30577": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "file"
		},
		"30578": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"30579": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"30580": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"30581": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"30582": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"30583": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"30584": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions"
		},
		"30585": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.file_url"
		},
		"30586": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.access_key_id"
		},
		"30587": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.secret_access_key"
		},
		"30588": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.region"
		},
		"30589": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.bucket"
		},
		"30590": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.prefix"
		},
		"30591": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.endpoint"
		},
		"30592": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.cache_control"
		},
		"30593": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.download_file_duration"
		},
		"30594": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.additional_client_config"
		},
		"30595": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions"
		},
		"30596": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.upload_dir"
		},
		"30597": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.private_upload_dir"
		},
		"30598": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.backend_url"
		},
		"30599": {
			"sourceFileName": "../../../../packages/core/types/src/http/index.ts",
			"qualifiedName": ""
		},
		"30600": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign"
		},
		"30601": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.name"
		},
		"30602": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.description"
		},
		"30603": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.currency"
		},
		"30604": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.campaign_identifier"
		},
		"30605": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.starts_at"
		},
		"30606": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.ends_at"
		},
		"30607": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.budget"
		},
		"30608": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"30609": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"30610": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"30611": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"30612": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign"
		},
		"30613": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.name"
		},
		"30614": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.description"
		},
		"30615": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.currency"
		},
		"30616": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.campaign_identifier"
		},
		"30617": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.starts_at"
		},
		"30618": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.ends_at"
		},
		"30619": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.budget"
		},
		"30620": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"30621": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"30622": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"30623": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"30624": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse"
		},
		"30625": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.id"
		},
		"30626": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.name"
		},
		"30627": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.description"
		},
		"30628": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.currency"
		},
		"30629": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.campaign_identifier"
		},
		"30630": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.starts_at"
		},
		"30631": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.ends_at"
		},
		"30632": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.budget"
		},
		"30633": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"30634": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.id"
		},
		"30635": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.type"
		},
		"30636": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.currency_code"
		},
		"30637": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.limit"
		},
		"30638": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.used"
		},
		"30639": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignListResponse"
		},
		"30640": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"30641": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.campaigns"
		},
		"30642": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse"
		},
		"30643": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse.campaign"
		},
		"30644": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim"
		},
		"30645": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"30646": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"30647": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"30648": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"30649": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"30650": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"30651": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"30652": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim"
		},
		"30653": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.type"
		},
		"30654": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.order_id"
		},
		"30655": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.description"
		},
		"30656": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.internal_note"
		},
		"30657": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.metadata"
		},
		"30658": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimItems"
		},
		"30659": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"30660": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"30661": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"30662": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"30663": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"30664": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"30665": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"30666": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimItem"
		},
		"30667": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"30668": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"30669": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"30670": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"30671": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimInboundItems"
		},
		"30672": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"30673": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"30674": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"30675": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"30676": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"30677": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"30678": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"30679": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimInboundItem"
		},
		"30680": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"30681": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"30682": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"30683": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"30684": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimOutboundItems"
		},
		"30685": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"30686": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"30687": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"30688": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"30689": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"30690": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"30691": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"30692": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimOutboundItem"
		},
		"30693": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"30694": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"30695": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"30696": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"30697": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddInboundShipping"
		},
		"30698": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"30699": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_price"
		},
		"30700": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"30701": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"30702": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"30703": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateInboundShipping"
		},
		"30704": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_price"
		},
		"30705": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"30706": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"30707": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddOutboundShipping"
		},
		"30708": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"30709": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_price"
		},
		"30710": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"30711": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"30712": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"30713": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateOutboundShipping"
		},
		"30714": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_price"
		},
		"30715": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"30716": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"30717": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminRequestClaim"
		},
		"30718": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim"
		},
		"30719": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim.no_notification"
		},
		"30720": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams"
		},
		"30721": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams.deleted_at"
		},
		"30722": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"30723": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"30724": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"30725": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"30726": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"30727": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"30728": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"30729": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"30730": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"30731": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30732": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"30733": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"30734": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams"
		},
		"30735": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.id"
		},
		"30736": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.status"
		},
		"30737": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.created_at"
		},
		"30738": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.updated_at"
		},
		"30739": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.deleted_at"
		},
		"30740": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30741": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse"
		},
		"30742": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse.claim"
		},
		"30743": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimListResponse"
		},
		"30744": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"30745": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"30746": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"30747": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"30748": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"30749": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"30750": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimDeleteResponse"
		},
		"30751": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"30752": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"30753": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"30754": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"30755": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"30756": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/entities.ts",
			"qualifiedName": "AdminCollection"
		},
		"30757": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"30758": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"30759": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"30760": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"30761": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"30762": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"30763": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"30764": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"30765": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection"
		},
		"30766": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.title"
		},
		"30767": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.handle"
		},
		"30768": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.metadata"
		},
		"30769": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection"
		},
		"30770": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.title"
		},
		"30771": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.handle"
		},
		"30772": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.metadata"
		},
		"30773": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts"
		},
		"30774": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.add"
		},
		"30775": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.remove"
		},
		"30776": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams"
		},
		"30777": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams.deleted_at"
		},
		"30778": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"30779": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"30780": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"30781": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"30782": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"30783": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"30784": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"30785": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"30786": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"30787": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30788": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"30789": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"30790": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionParams"
		},
		"30791": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30792": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse"
		},
		"30793": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse.collection"
		},
		"30794": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionListResponse"
		},
		"30795": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"30796": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"30797": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"30798": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"30799": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"30800": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"30801": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionDeleteResponse"
		},
		"30802": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"30803": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"30804": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"30805": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"30806": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"30807": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/store.ts",
			"qualifiedName": "StoreCollection"
		},
		"30808": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"30809": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"30810": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"30811": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"30812": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"30813": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"30814": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"30815": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"30816": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/store.ts",
			"qualifiedName": "StoreCollectionFilters"
		},
		"30817": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"30818": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"30819": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"30820": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"30821": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"30822": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"30823": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"30824": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"30825": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"30826": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30827": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"30828": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"30829": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams"
		},
		"30830": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30831": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams"
		},
		"30832": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"30833": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"30834": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"30835": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30836": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink"
		},
		"30837": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.add"
		},
		"30838": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.remove"
		},
		"30839": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponse"
		},
		"30840": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"30841": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"30842": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"30843": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"30844": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"30845": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"30846": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TParent"
		},
		"30847": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"30848": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"30849": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"30850": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"30851": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"30852": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"30853": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"30854": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "AdditionalData"
		},
		"30855": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type"
		},
		"30856": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type.additional_data"
		},
		"30857": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin.ts",
			"qualifiedName": "AdminFile"
		},
		"30858": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"30859": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"30860": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin.ts",
			"qualifiedName": "AdminUploadFile"
		},
		"30861": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/store.ts",
			"qualifiedName": "StoreFile"
		},
		"30862": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"30863": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"30864": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider"
		},
		"30865": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider.id"
		},
		"30866": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider.is_enabled"
		},
		"30867": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams"
		},
		"30868": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.id"
		},
		"30869": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.q"
		},
		"30870": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.is_enabled"
		},
		"30871": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.stock_location_id"
		},
		"30872": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"30873": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"30874": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"30875": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30876": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentProviderListResponse"
		},
		"30877": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"30878": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"30879": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"30880": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"30881": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"30882": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"30883": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone"
		},
		"30884": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.id"
		},
		"30885": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.type"
		},
		"30886": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.country_code"
		},
		"30887": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.province_code"
		},
		"30888": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.city"
		},
		"30889": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.postal_expression"
		},
		"30890": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.created_at"
		},
		"30891": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.updated_at"
		},
		"30892": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.deleted_at"
		},
		"30893": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone"
		},
		"30894": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.id"
		},
		"30895": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.name"
		},
		"30896": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set_id"
		},
		"30897": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.geo_zones"
		},
		"30898": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.shipping_options"
		},
		"30899": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.created_at"
		},
		"30900": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.updated_at"
		},
		"30901": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.deleted_at"
		},
		"30902": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet"
		},
		"30903": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.id"
		},
		"30904": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.name"
		},
		"30905": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.type"
		},
		"30906": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.service_zones"
		},
		"30907": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.created_at"
		},
		"30908": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.updated_at"
		},
		"30909": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.deleted_at"
		},
		"30910": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
		},
		"30911": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.name"
		},
		"30912": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.geo_zones"
		},
		"30913": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
		},
		"30914": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.name"
		},
		"30915": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.geo_zones"
		},
		"30916": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse"
		},
		"30917": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse.service_zone"
		},
		"30918": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneDeleteResponse"
		},
		"30919": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"30920": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"30921": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"30922": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"30923": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse"
		},
		"30924": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse.fulfillment_set"
		},
		"30925": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetDeleteResponse"
		},
		"30926": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"30927": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"30928": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"30929": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"30930": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"30931": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem"
		},
		"30932": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.id"
		},
		"30933": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.sku"
		},
		"30934": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.origin_country"
		},
		"30935": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.hs_code"
		},
		"30936": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.requires_shipping"
		},
		"30937": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.mid_code"
		},
		"30938": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.material"
		},
		"30939": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.weight"
		},
		"30940": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.length"
		},
		"30941": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.height"
		},
		"30942": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.width"
		},
		"30943": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.title"
		},
		"30944": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.description"
		},
		"30945": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.thumbnail"
		},
		"30946": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.metadata"
		},
		"30947": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem"
		},
		"30948": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"30949": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"30950": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"30951": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"30952": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"30953": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"30954": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"30955": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"30956": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"30957": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"30958": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"30959": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"30960": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"30961": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"30962": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryItem"
		},
		"30963": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"30964": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"30965": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"30966": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"30967": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"30968": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"30969": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"30970": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"30971": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"30972": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"30973": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"30974": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"30975": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"30976": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"30977": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams"
		},
		"30978": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.id"
		},
		"30979": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.q"
		},
		"30980": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.sku"
		},
		"30981": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.origin_country"
		},
		"30982": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.mid_code"
		},
		"30983": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.hs_code"
		},
		"30984": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.material"
		},
		"30985": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.requires_shipping"
		},
		"30986": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.weight"
		},
		"30987": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.length"
		},
		"30988": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.height"
		},
		"30989": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.width"
		},
		"30990": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.location_levels"
		},
		"30991": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"30992": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"30993": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"30994": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"30995": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse"
		},
		"30996": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse.inventory_item"
		},
		"30997": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemListResponse"
		},
		"30998": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"30999": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"31000": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemDeleteResponse"
		},
		"31001": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel"
		},
		"31002": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.id"
		},
		"31003": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.inventory_item_id"
		},
		"31004": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.location_id"
		},
		"31005": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.stocked_quantity"
		},
		"31006": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.reserved_quantity"
		},
		"31007": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.available_quantity"
		},
		"31008": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.incoming_quantity"
		},
		"31009": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.metadata"
		},
		"31010": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel"
		},
		"31011": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.stocked_quantity"
		},
		"31012": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.incoming_quantity"
		},
		"31013": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel"
		},
		"31014": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.location_id"
		},
		"31015": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.stocked_quantity"
		},
		"31016": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.incoming_quantity"
		},
		"31017": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation"
		},
		"31018": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.delete"
		},
		"31019": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.update"
		},
		"31020": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.create"
		},
		"31021": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters"
		},
		"31022": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters.location_id"
		},
		"31023": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31024": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31025": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31026": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31027": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse"
		},
		"31028": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse.inventory_level"
		},
		"31029": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelListResponse"
		},
		"31030": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31031": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type.inventory_levels"
		},
		"31032": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "AdminAcceptInvite"
		},
		"31033": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type"
		},
		"31034": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.first_name"
		},
		"31035": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.last_name"
		},
		"31036": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "AdminCreateInvite"
		},
		"31037": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type"
		},
		"31038": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.email"
		},
		"31039": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.metadata"
		},
		"31040": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "AdminInviteResponse"
		},
		"31041": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type"
		},
		"31042": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.id"
		},
		"31043": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.email"
		},
		"31044": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.accepted"
		},
		"31045": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.token"
		},
		"31046": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.expires_at"
		},
		"31047": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.metadata"
		},
		"31048": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.created_at"
		},
		"31049": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin.ts",
			"qualifiedName": "__type.updated_at"
		},
		"31050": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification"
		},
		"31051": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.id"
		},
		"31052": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.to"
		},
		"31053": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.channel"
		},
		"31054": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.template"
		},
		"31055": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.data"
		},
		"31056": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.trigger_type"
		},
		"31057": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_id"
		},
		"31058": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_type"
		},
		"31059": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.receiver_id"
		},
		"31060": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.original_notification_id"
		},
		"31061": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.external_id"
		},
		"31062": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.provider_id"
		},
		"31063": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.created_at"
		},
		"31064": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams"
		},
		"31065": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.q"
		},
		"31066": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.id"
		},
		"31067": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.channel"
		},
		"31068": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31069": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31070": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31071": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31072": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31073": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31074": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationParams"
		},
		"31075": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31076": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse"
		},
		"31077": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse.notification"
		},
		"31078": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationListResponse"
		},
		"31079": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31080": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"31081": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"31082": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"31083": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"31084": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"31085": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice"
		},
		"31086": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.variant_id"
		},
		"31087": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.rules"
		},
		"31088": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList"
		},
		"31089": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.id"
		},
		"31090": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.title"
		},
		"31091": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.description"
		},
		"31092": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.rules"
		},
		"31093": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.starts_at"
		},
		"31094": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.ends_at"
		},
		"31095": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.status"
		},
		"31096": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.type"
		},
		"31097": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.prices"
		},
		"31098": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.created_at"
		},
		"31099": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.updated_at"
		},
		"31100": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.deleted_at"
		},
		"31101": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice"
		},
		"31102": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.currency_code"
		},
		"31103": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.amount"
		},
		"31104": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.variant_id"
		},
		"31105": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.min_quantity"
		},
		"31106": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.max_quantity"
		},
		"31107": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.rules"
		},
		"31108": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList"
		},
		"31109": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.title"
		},
		"31110": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.description"
		},
		"31111": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.starts_at"
		},
		"31112": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.ends_at"
		},
		"31113": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.status"
		},
		"31114": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.type"
		},
		"31115": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.rules"
		},
		"31116": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.prices"
		},
		"31117": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice"
		},
		"31118": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.id"
		},
		"31119": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.currency_code"
		},
		"31120": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.amount"
		},
		"31121": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.variant_id"
		},
		"31122": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.min_quantity"
		},
		"31123": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.max_quantity"
		},
		"31124": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.rules"
		},
		"31125": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList"
		},
		"31126": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.title"
		},
		"31127": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.description"
		},
		"31128": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.starts_at"
		},
		"31129": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.ends_at"
		},
		"31130": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.status"
		},
		"31131": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.type"
		},
		"31132": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.rules"
		},
		"31133": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice"
		},
		"31134": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.create"
		},
		"31135": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.update"
		},
		"31136": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.delete"
		},
		"31137": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts"
		},
		"31138": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts.remove"
		},
		"31139": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams"
		},
		"31140": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.q"
		},
		"31141": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.id"
		},
		"31142": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.starts_at"
		},
		"31143": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.ends_at"
		},
		"31144": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.status"
		},
		"31145": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.rules_count"
		},
		"31146": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31147": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31148": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31149": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31150": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31151": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31152": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListParams"
		},
		"31153": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31154": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse"
		},
		"31155": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse.price_list"
		},
		"31156": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListListResponse"
		},
		"31157": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31158": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"31159": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"31160": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"31161": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"31162": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"31163": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListDeleteResponse"
		},
		"31164": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31165": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31166": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31167": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31168": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31169": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory"
		},
		"31170": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.category_children"
		},
		"31171": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.parent_category"
		},
		"31172": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.products"
		},
		"31173": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "name"
		},
		"31174": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "id"
		},
		"31175": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "created_at"
		},
		"31176": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "updated_at"
		},
		"31177": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "deleted_at"
		},
		"31178": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "description"
		},
		"31179": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "handle"
		},
		"31180": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "parent_category_id"
		},
		"31181": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_active"
		},
		"31182": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_internal"
		},
		"31183": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "rank"
		},
		"31184": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory"
		},
		"31185": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.name"
		},
		"31186": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.description"
		},
		"31187": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.handle"
		},
		"31188": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_internal"
		},
		"31189": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_active"
		},
		"31190": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.parent_category_id"
		},
		"31191": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.rank"
		},
		"31192": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.metadata"
		},
		"31193": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory"
		},
		"31194": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.name"
		},
		"31195": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.description"
		},
		"31196": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.handle"
		},
		"31197": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_internal"
		},
		"31198": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_active"
		},
		"31199": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.parent_category_id"
		},
		"31200": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.rank"
		},
		"31201": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.metadata"
		},
		"31202": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts"
		},
		"31203": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.add"
		},
		"31204": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.remove"
		},
		"31205": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams"
		},
		"31206": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_internal"
		},
		"31207": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_active"
		},
		"31208": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"31209": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"31210": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"31211": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"31212": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"31213": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"31214": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"31215": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"31216": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"31217": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"31218": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"31219": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31220": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31221": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31222": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31223": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31224": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31225": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryParams"
		},
		"31226": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"31227": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"31228": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31229": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse"
		},
		"31230": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse.product_category"
		},
		"31231": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryListResponse"
		},
		"31232": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31233": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"31234": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"31235": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"31236": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"31237": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"31238": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryDeleteResponse"
		},
		"31239": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31240": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31241": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31242": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31243": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31244": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/entities.ts",
			"qualifiedName": "AdminProductTag"
		},
		"31245": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"31246": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"31247": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"31248": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"31249": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"31250": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"31251": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag"
		},
		"31252": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.value"
		},
		"31253": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.metadata"
		},
		"31254": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag"
		},
		"31255": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.value"
		},
		"31256": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.metadata"
		},
		"31257": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams"
		},
		"31258": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams.deleted_at"
		},
		"31259": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"31260": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"31261": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"31262": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"31263": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"31264": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31265": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31266": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31267": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31269": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31270": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagParams"
		},
		"31271": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31272": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse"
		},
		"31273": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse.product_tag"
		},
		"31274": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagListResponse"
		},
		"31275": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31276": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"31277": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"31278": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"31279": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"31280": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"31281": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagDeleteResponse"
		},
		"31282": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31283": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31284": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31285": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31286": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31287": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/entities.ts",
			"qualifiedName": "AdminProductType"
		},
		"31288": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"31289": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"31290": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"31291": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"31292": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"31293": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"31294": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType"
		},
		"31295": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.value"
		},
		"31296": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.metadata"
		},
		"31297": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType"
		},
		"31298": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.value"
		},
		"31299": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.metadata"
		},
		"31300": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams"
		},
		"31301": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.q"
		},
		"31302": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.id"
		},
		"31303": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.value"
		},
		"31304": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.created_at"
		},
		"31305": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.updated_at"
		},
		"31306": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.deleted_at"
		},
		"31307": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31308": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31309": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31310": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31311": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31312": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31313": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeParams"
		},
		"31314": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31315": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse"
		},
		"31316": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse.product_type"
		},
		"31317": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeListResponse"
		},
		"31318": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31319": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"31320": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"31321": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"31322": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"31323": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"31324": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeDeleteResponse"
		},
		"31325": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31326": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31327": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31328": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31329": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31330": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem"
		},
		"31331": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.id"
		},
		"31332": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.quantity"
		},
		"31333": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.received_quantity"
		},
		"31334": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.reason_id"
		},
		"31335": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.note"
		},
		"31336": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.item_id"
		},
		"31337": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.return_id"
		},
		"31338": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.metadata"
		},
		"31339": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn"
		},
		"31340": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.id"
		},
		"31341": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.order_id"
		},
		"31342": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.status"
		},
		"31343": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.exchange_id"
		},
		"31344": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.claim_id"
		},
		"31345": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.order_version"
		},
		"31346": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.display_id"
		},
		"31347": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.no_notification"
		},
		"31348": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.refund_amount"
		},
		"31349": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.items"
		},
		"31350": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnResponse"
		},
		"31351": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnResponse.return"
		},
		"31352": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnsResponse"
		},
		"31353": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnsResponse.returns"
		},
		"31354": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest"
		},
		"31355": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.order_id"
		},
		"31356": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.location_id"
		},
		"31357": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.description"
		},
		"31358": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.internal_note"
		},
		"31359": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.no_notification"
		},
		"31360": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.metadata"
		},
		"31361": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem"
		},
		"31362": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.id"
		},
		"31363": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.quantity"
		},
		"31364": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.description"
		},
		"31365": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.internal_note"
		},
		"31366": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.metadata"
		},
		"31367": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItems"
		},
		"31368": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItems.items"
		},
		"31369": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems"
		},
		"31370": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.quantity"
		},
		"31371": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.internal_note"
		},
		"31372": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.reason_id"
		},
		"31373": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping"
		},
		"31374": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.shipping_option_id"
		},
		"31375": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.custom_price"
		},
		"31376": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.description"
		},
		"31377": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.internal_note"
		},
		"31378": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.metadata"
		},
		"31379": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping"
		},
		"31380": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.custom_price"
		},
		"31381": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.internal_note"
		},
		"31382": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.metadata"
		},
		"31383": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReturnRequest"
		},
		"31384": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReturnRequest.no_notification"
		},
		"31385": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest"
		},
		"31386": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.location_id"
		},
		"31387": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.no_notification"
		},
		"31388": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.metadata"
		},
		"31389": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReceiveReturn"
		},
		"31390": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReceiveReturn.no_notification"
		},
		"31391": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn"
		},
		"31392": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.internal_note"
		},
		"31393": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.description"
		},
		"31394": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.metadata"
		},
		"31395": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReceiveItems"
		},
		"31396": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReceiveItems.items"
		},
		"31397": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type"
		},
		"31398": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.id"
		},
		"31399": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.quantity"
		},
		"31400": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.internal_note"
		},
		"31401": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminDismissItems"
		},
		"31402": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminDismissItems.items"
		},
		"31403": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type"
		},
		"31404": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.id"
		},
		"31405": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.quantity"
		},
		"31406": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.internal_note"
		},
		"31407": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems"
		},
		"31408": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.quantity"
		},
		"31409": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.internal_note"
		},
		"31410": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.reason_id"
		},
		"31411": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.metadata"
		},
		"31412": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems"
		},
		"31413": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.quantity"
		},
		"31414": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.internal_note"
		},
		"31415": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.reason_id"
		},
		"31416": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.metadata"
		},
		"31417": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters"
		},
		"31418": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.id"
		},
		"31419": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.order_id"
		},
		"31420": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.status"
		},
		"31421": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.created_at"
		},
		"31422": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.updated_at"
		},
		"31423": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31424": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31425": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31426": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31427": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReason"
		},
		"31428": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"31429": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"31430": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"31431": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"31432": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"31433": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"31434": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"31435": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason"
		},
		"31436": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason.value"
		},
		"31437": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason.label"
		},
		"31438": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminCreateReturnReason.description"
		},
		"31439": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonsResponse"
		},
		"31440": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonsResponse.return_reasons"
		},
		"31441": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams"
		},
		"31442": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.id"
		},
		"31443": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.value"
		},
		"31444": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.label"
		},
		"31445": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.description"
		},
		"31446": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.parent_return_reason_id"
		},
		"31447": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.created_at"
		},
		"31448": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin.ts",
			"qualifiedName": "AdminReturnReasonListParams.updated_at"
		},
		"31449": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31450": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31451": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31452": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31455": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationResponse"
		},
		"31456": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationResponse.reservation"
		},
		"31457": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationListResponse"
		},
		"31458": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "__type"
		},
		"31459": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "__type.reservations"
		},
		"31460": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType"
		},
		"31461": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.id"
		},
		"31462": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.label"
		},
		"31463": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.description"
		},
		"31464": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.code"
		},
		"31465": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.shipping_option_id"
		},
		"31466": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.created_at"
		},
		"31467": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.updated_at"
		},
		"31468": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.deleted_at"
		},
		"31469": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule"
		},
		"31470": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.id"
		},
		"31471": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.attribute"
		},
		"31472": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.operator"
		},
		"31473": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.value"
		},
		"31474": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.shipping_option_id"
		},
		"31475": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.created_at"
		},
		"31476": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.updated_at"
		},
		"31477": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.deleted_at"
		},
		"31478": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule"
		},
		"31479": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.id"
		},
		"31480": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.value"
		},
		"31481": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice"
		},
		"31482": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.price_rules"
		},
		"31483": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.rules_count"
		},
		"31484": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption"
		},
		"31485": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.id"
		},
		"31486": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.name"
		},
		"31487": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.price_type"
		},
		"31488": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone_id"
		},
		"31489": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone"
		},
		"31490": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider_id"
		},
		"31491": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider"
		},
		"31492": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_option_type_id"
		},
		"31493": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.type"
		},
		"31494": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile_id"
		},
		"31495": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile"
		},
		"31496": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.rules"
		},
		"31497": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.prices"
		},
		"31498": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.data"
		},
		"31499": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.metadata"
		},
		"31500": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.created_at"
		},
		"31501": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.updated_at"
		},
		"31502": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.deleted_at"
		},
		"31503": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule"
		},
		"31504": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"31505": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"31506": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"31507": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType"
		},
		"31508": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.label"
		},
		"31509": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.description"
		},
		"31510": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.code"
		},
		"31511": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency"
		},
		"31512": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.currency_code"
		},
		"31513": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.amount"
		},
		"31514": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion"
		},
		"31515": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.region_id"
		},
		"31516": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.amount"
		},
		"31517": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption"
		},
		"31518": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.name"
		},
		"31519": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.service_zone_id"
		},
		"31520": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.shipping_profile_id"
		},
		"31521": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.data"
		},
		"31522": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.price_type"
		},
		"31523": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.provider_id"
		},
		"31524": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.type"
		},
		"31525": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.prices"
		},
		"31526": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.rules"
		},
		"31527": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule"
		},
		"31528": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule.id"
		},
		"31529": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"31530": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"31531": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"31532": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency"
		},
		"31533": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.id"
		},
		"31534": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.currency_code"
		},
		"31535": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.amount"
		},
		"31536": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion"
		},
		"31537": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.id"
		},
		"31538": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.region_id"
		},
		"31539": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.amount"
		},
		"31540": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption"
		},
		"31541": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.name"
		},
		"31542": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.data"
		},
		"31543": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.price_type"
		},
		"31544": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.provider_id"
		},
		"31545": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.shipping_profile_id"
		},
		"31546": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.type"
		},
		"31547": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.prices"
		},
		"31548": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.rules"
		},
		"31549": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules"
		},
		"31550": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.create"
		},
		"31551": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.update"
		},
		"31552": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.delete"
		},
		"31553": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams"
		},
		"31554": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.id"
		},
		"31555": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.q"
		},
		"31556": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.service_zone_id"
		},
		"31557": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_profile_id"
		},
		"31558": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.provider_id"
		},
		"31559": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_option_type_id"
		},
		"31560": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.created_at"
		},
		"31561": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.updated_at"
		},
		"31562": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.deleted_at"
		},
		"31563": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31564": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31565": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31566": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31567": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse"
		},
		"31568": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse.shipping_option"
		},
		"31569": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionListResponse"
		},
		"31570": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31571": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"31572": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionDeleteResponse"
		},
		"31573": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31574": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31575": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31576": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31577": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31578": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
		},
		"31579": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.created"
		},
		"31580": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.updated"
		},
		"31581": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.deleted"
		},
		"31582": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31583": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.ids"
		},
		"31584": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.object"
		},
		"31585": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.deleted"
		},
		"31586": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile"
		},
		"31587": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.id"
		},
		"31588": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.name"
		},
		"31589": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.type"
		},
		"31590": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.metadata"
		},
		"31591": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.created_at"
		},
		"31592": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.updated_at"
		},
		"31593": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.deleted_at"
		},
		"31594": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile"
		},
		"31595": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.name"
		},
		"31596": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.type"
		},
		"31597": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.metadata"
		},
		"31598": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile"
		},
		"31599": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.name"
		},
		"31600": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.type"
		},
		"31601": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.metadata"
		},
		"31602": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams"
		},
		"31603": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.id"
		},
		"31604": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.q"
		},
		"31605": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.type"
		},
		"31606": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.name"
		},
		"31607": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.created_at"
		},
		"31608": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.updated_at"
		},
		"31609": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.deleted_at"
		},
		"31610": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$and"
		},
		"31611": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$or"
		},
		"31612": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31613": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31614": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31615": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31616": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse"
		},
		"31617": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse.shipping_profile"
		},
		"31618": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileListResponse"
		},
		"31619": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31620": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"31621": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileDeleteResponse"
		},
		"31622": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31623": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31624": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31625": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31626": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31627": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress"
		},
		"31628": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.id"
		},
		"31629": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_1"
		},
		"31630": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_2"
		},
		"31631": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.company"
		},
		"31632": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.country_code"
		},
		"31633": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.city"
		},
		"31634": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.phone"
		},
		"31635": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.postal_code"
		},
		"31636": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.province"
		},
		"31637": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation"
		},
		"31638": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.id"
		},
		"31639": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.name"
		},
		"31640": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address_id"
		},
		"31641": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address"
		},
		"31642": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.sales_channels"
		},
		"31643": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_providers"
		},
		"31644": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_sets"
		},
		"31645": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation"
		},
		"31646": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.name"
		},
		"31647": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address_id"
		},
		"31648": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address"
		},
		"31649": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.metadata"
		},
		"31650": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation"
		},
		"31651": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.name"
		},
		"31652": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address_id"
		},
		"31653": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address"
		},
		"31654": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.metadata"
		},
		"31655": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels"
		},
		"31656": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.add"
		},
		"31657": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.remove"
		},
		"31658": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
		},
		"31659": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.name"
		},
		"31660": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.type"
		},
		"31661": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams"
		},
		"31662": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.id"
		},
		"31663": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.q"
		},
		"31664": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.name"
		},
		"31665": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.address_id"
		},
		"31666": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.sales_channel_id"
		},
		"31667": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$and"
		},
		"31668": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$or"
		},
		"31669": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31670": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31671": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31672": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31673": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse"
		},
		"31674": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse.stock_location"
		},
		"31675": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationListResponse"
		},
		"31676": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31677": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"31678": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"31679": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"31680": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"31681": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"31682": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationDeleteResponse"
		},
		"31683": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31684": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31685": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31686": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31687": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31688": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule"
		},
		"31689": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference"
		},
		"31690": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference_id"
		},
		"31691": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate"
		},
		"31692": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.id"
		},
		"31693": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rate"
		},
		"31694": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.code"
		},
		"31695": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.name"
		},
		"31696": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.metadata"
		},
		"31697": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region_id"
		},
		"31698": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_combinable"
		},
		"31699": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_default"
		},
		"31700": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_at"
		},
		"31701": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.updated_at"
		},
		"31702": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.deleted_at"
		},
		"31703": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_by"
		},
		"31704": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region"
		},
		"31705": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rules"
		},
		"31706": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate"
		},
		"31707": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.name"
		},
		"31708": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.tax_region_id"
		},
		"31709": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rate"
		},
		"31710": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.code"
		},
		"31711": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rules"
		},
		"31712": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_default"
		},
		"31713": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_combinable"
		},
		"31714": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.metadata"
		},
		"31715": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate"
		},
		"31716": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.name"
		},
		"31717": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rate"
		},
		"31718": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.code"
		},
		"31719": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rules"
		},
		"31720": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_default"
		},
		"31721": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_combinable"
		},
		"31722": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.metadata"
		},
		"31723": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams"
		},
		"31724": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.id"
		},
		"31725": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.q"
		},
		"31726": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.tax_region_id"
		},
		"31727": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.is_default"
		},
		"31728": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.service_zone_id"
		},
		"31729": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_profile_id"
		},
		"31730": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.provider_id"
		},
		"31731": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_option_type_id"
		},
		"31732": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.created_at"
		},
		"31733": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.updated_at"
		},
		"31734": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.deleted_at"
		},
		"31735": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31736": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31737": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31738": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31739": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse"
		},
		"31740": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse.tax_rate"
		},
		"31741": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateListResponse"
		},
		"31742": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31743": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"31744": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateDeleteResponse"
		},
		"31745": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31746": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31747": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31748": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31749": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31750": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion"
		},
		"31751": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.id"
		},
		"31752": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.rate"
		},
		"31753": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.code"
		},
		"31754": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.country_code"
		},
		"31755": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.province_code"
		},
		"31756": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.name"
		},
		"31757": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.metadata"
		},
		"31758": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_region_id"
		},
		"31759": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_combinable"
		},
		"31760": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_default"
		},
		"31761": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent_id"
		},
		"31762": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_at"
		},
		"31763": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.updated_at"
		},
		"31764": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.deleted_at"
		},
		"31765": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_by"
		},
		"31766": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_rates"
		},
		"31767": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent"
		},
		"31768": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.children"
		},
		"31769": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion"
		},
		"31770": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.country_code"
		},
		"31771": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.province_code"
		},
		"31772": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.parent_id"
		},
		"31773": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.default_tax_rate"
		},
		"31774": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"31775": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.rate"
		},
		"31776": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.code"
		},
		"31777": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.name"
		},
		"31778": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.is_combinable"
		},
		"31779": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"31780": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.metadata"
		},
		"31781": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams"
		},
		"31782": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.id"
		},
		"31783": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.q"
		},
		"31784": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.parent_id"
		},
		"31785": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.country_code"
		},
		"31786": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.province_code"
		},
		"31787": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_at"
		},
		"31788": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.updated_at"
		},
		"31789": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.deleted_at"
		},
		"31790": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_by"
		},
		"31791": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"31792": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"31793": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"31794": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31795": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31796": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31797": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionParams"
		},
		"31798": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"31799": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse"
		},
		"31800": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse.tax_region"
		},
		"31801": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionListResponse"
		},
		"31802": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"31803": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type.tax_regions"
		},
		"31804": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionDeleteResponse"
		},
		"31805": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"31806": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"31807": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"31808": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"31809": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"31810": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/index.ts",
			"qualifiedName": ""
		},
		"31811": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"31812": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"31813": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"31814": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"31815": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"31816": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"31817": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"31818": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"31819": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"31820": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"31821": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"31822": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"31823": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"31824": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"31825": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"31826": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"31827": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"31828": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"31829": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"31830": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"31831": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"31832": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"31833": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"31834": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"31835": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"31836": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"31837": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"31838": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"31839": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"31840": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"31841": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"31842": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"31843": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"31844": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"31845": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"31846": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"31847": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"31848": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"31849": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"31850": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"31851": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"31852": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"31853": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"31854": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"31855": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"31856": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"31857": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"31858": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"31859": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"31860": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"31861": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"31862": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"31863": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"31864": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"31865": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"31866": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"31867": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"31868": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"31869": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"31870": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"31871": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"31872": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"31874": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"31875": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"31876": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"31877": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"31878": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"31879": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"31880": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"31881": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"31882": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"31883": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"31884": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"31885": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"31886": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"31887": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"31888": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"31889": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"31890": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"31891": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"31892": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"31893": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"31894": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"31895": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"31896": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"31897": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"31898": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"31899": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"31900": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"31901": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"31902": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"31903": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"31904": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"31905": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"31906": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"31907": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"31908": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"31909": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"31910": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"31911": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"31912": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"31913": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"31914": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"31915": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"31916": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"31917": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"31918": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"31919": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"31920": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"31921": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"31922": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"31923": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"31924": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"31925": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"31926": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkAdjustInventoryLevelInput"
		},
		"31927": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type"
		},
		"31928": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"31929": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"31930": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.adjustment"
		},
		"31931": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"31932": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"31933": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"31934": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"31935": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"31936": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"31937": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"31938": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"31939": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"31940": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"31941": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"31942": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"31943": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"31944": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"31945": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"31946": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"31947": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"31948": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext"
		},
		"31949": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.locationId"
		},
		"31950": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.lineItemId"
		},
		"31951": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.salesChannelId"
		},
		"31952": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"31953": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"31954": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"31955": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"31956": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31957": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31958": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"31959": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"31960": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"31961": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31962": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31963": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"31964": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"31965": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"31966": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31967": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31968": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"31969": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"31970": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"31971": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31972": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31973": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"31974": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"31975": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"31976": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31977": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31978": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"31979": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"31980": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"31981": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31982": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31983": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"31984": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"31985": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"31986": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31987": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31988": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"31989": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"31990": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"31991": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"31992": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31993": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"31994": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"31995": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"31996": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"31997": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"31998": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"31999": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"32000": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"32001": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32002": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32003": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"32004": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"32005": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32006": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32007": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"32008": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32009": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32010": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"32011": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"32012": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32013": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32014": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"32015": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32016": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32017": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"32018": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"32019": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"32020": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32021": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"32022": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"32023": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32024": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"32025": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"32026": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"32027": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32028": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"32029": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"32030": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32031": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"32032": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"32033": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32034": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32035": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"32036": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32037": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32038": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"32039": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"32040": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32041": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32042": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"32043": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"32044": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32045": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"32046": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"32047": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"32048": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32049": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"32050": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"32051": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"32052": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32053": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"32054": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"32055": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"32056": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32057": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"32058": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"32059": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32060": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"32061": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32062": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32063": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"32064": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"32065": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32066": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"32067": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32068": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32069": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"32070": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"32071": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32072": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32073": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"32074": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"32075": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32076": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"32077": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32078": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32079": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"32080": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"32081": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32082": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"32083": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32084": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32085": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"32086": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"32087": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"32088": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32089": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"32090": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"32091": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"32092": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32093": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"32094": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"32095": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32096": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"32097": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32098": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"32099": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"32100": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"32101": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32102": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"32103": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"32104": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32105": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"32106": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32107": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32108": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"32109": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"32110": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32111": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"32112": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"32113": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32114": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"32115": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"32116": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"32117": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"32118": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"32119": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"32120": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"32121": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32122": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"32123": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32124": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"32125": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"32126": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32127": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"32128": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"32129": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32130": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"32131": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"32132": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32133": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"32134": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"32135": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32136": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"32137": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32138": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"32139": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"32140": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32141": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"32142": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32143": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"32144": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"32145": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"32146": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"32147": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"32161": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"32162": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"32163": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"32164": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32165": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32166": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"32167": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"32168": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32169": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32170": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"32171": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"32172": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32173": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32174": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"32175": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"32176": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32177": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32178": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"32179": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32180": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32181": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32182": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"32183": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"32184": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32185": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32186": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"32187": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32188": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"32189": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32190": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32191": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"32192": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"32193": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"32194": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32195": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32196": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"32197": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32198": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"32199": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32200": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32201": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"32202": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32203": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"32204": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32205": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32206": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32207": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"32208": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32209": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32210": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32211": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"32212": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32213": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32214": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"32215": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"32216": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32217": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"32218": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"32219": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"32220": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"32221": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32222": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32223": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32224": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32225": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"32226": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"32227": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"32228": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"32229": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"32230": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32231": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"32232": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"32233": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"32234": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"32235": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"32236": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"32237": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32238": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"32239": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"32240": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"32241": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"32242": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"32243": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"32244": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"32245": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"32246": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"32247": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"32248": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32249": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"32250": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"32251": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"32252": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32253": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"32254": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"32255": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"32256": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"32257": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"32258": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"32259": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"32260": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32261": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"32262": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"32263": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"32264": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"32265": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"32266": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"32267": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"32268": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32269": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"32270": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"32271": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"32272": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"32273": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"32274": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"32275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"32277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"32278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"32279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32280": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"32281": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"32282": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"32283": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"32284": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"32285": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"32286": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32287": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"32288": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"32289": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"32290": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"32291": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32292": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"32293": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"32294": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"32295": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32296": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"32297": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"32298": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"32299": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"32300": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"32301": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"32302": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32303": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32304": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"32305": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"32306": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"32307": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32308": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"32309": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"32310": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"32311": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32312": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"32313": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"32314": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"32315": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"32316": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"32317": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32318": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"32319": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"32320": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"32321": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32322": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"32323": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"32324": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32325": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"32326": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"32327": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"32328": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"32329": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"32330": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"32331": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"32332": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"32333": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"32334": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"32335": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"32336": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32337": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"32338": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"32339": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"32340": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"32341": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32342": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"32343": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"32344": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32345": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"32346": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"32347": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"32348": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"32349": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"32350": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"32351": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"32352": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"32353": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"32354": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"32355": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"32356": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"32357": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"32358": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"32359": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"32360": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"32361": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"32362": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32363": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"32364": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"32365": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"32366": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"32367": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"32368": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"32369": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"32370": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"32371": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"32372": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32373": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"32374": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"32375": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"32376": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"32377": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32378": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"32379": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"32380": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32381": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"32383": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"32384": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"32385": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32386": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"32387": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"32388": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"32389": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"32390": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"32404": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService"
		},
		"32405": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"32406": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"32407": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"32408": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"32409": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"32410": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"32411": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32412": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"32413": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"32414": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"32415": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32416": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"32417": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"32418": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"32419": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32420": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32421": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"32422": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32423": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"32424": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"32425": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"32426": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32427": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32428": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"32429": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32430": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"32431": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"32432": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32433": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32434": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"32435": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32436": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32437": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"32438": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"32439": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32440": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32441": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"32442": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32443": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32444": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"32445": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"32446": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"32447": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"32448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32450": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"32451": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32452": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"32453": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"32454": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"32455": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"32456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32458": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"32459": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32460": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"32461": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"32462": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"32463": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32464": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"32465": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"32466": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32467": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"32468": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"32469": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32470": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"32471": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"32472": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32473": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"32474": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"32475": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"32476": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"32477": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32478": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32479": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32480": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"32481": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"32482": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"32483": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32484": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32485": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32486": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"32487": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"32488": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"32489": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32490": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32491": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"32492": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"32493": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32494": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32495": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"32496": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32497": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32498": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"32499": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"32500": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"32501": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"32502": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"32503": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"32504": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.entities"
		},
		"32505": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"32506": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TEntity"
		},
		"32507": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"32508": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TContainer"
		},
		"32509": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"32510": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"32511": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"32512": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"32513": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"32514": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"32515": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.id"
		},
		"32516": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"32517": {
			"sourceFileName": "../../../../packages/core/types/src/notification/index.ts",
			"qualifiedName": ""
		},
		"32518": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO"
		},
		"32519": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.id"
		},
		"32520": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.to"
		},
		"32521": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.channel"
		},
		"32522": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.template"
		},
		"32523": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.data"
		},
		"32524": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.trigger_type"
		},
		"32525": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_id"
		},
		"32526": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_type"
		},
		"32527": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.receiver_id"
		},
		"32528": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.original_notification_id"
		},
		"32529": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.external_id"
		},
		"32530": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider_id"
		},
		"32531": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider"
		},
		"32532": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.created_at"
		},
		"32533": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO"
		},
		"32534": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.id"
		},
		"32535": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.handle"
		},
		"32536": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.name"
		},
		"32537": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.channels"
		},
		"32538": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps"
		},
		"32539": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.q"
		},
		"32540": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.to"
		},
		"32541": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.channel"
		},
		"32542": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.template"
		},
		"32543": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.trigger_type"
		},
		"32544": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_id"
		},
		"32545": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_type"
		},
		"32546": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.receiver_id"
		},
		"32547": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.created_at"
		},
		"32548": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"32549": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"32550": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/logger.ts",
			"qualifiedName": "LocalNotificationServiceOptions"
		},
		"32551": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions"
		},
		"32552": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.api_key"
		},
		"32553": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.from"
		},
		"32554": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO"
		},
		"32555": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.to"
		},
		"32556": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.channel"
		},
		"32557": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.template"
		},
		"32558": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.data"
		},
		"32559": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.trigger_type"
		},
		"32560": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_id"
		},
		"32561": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_type"
		},
		"32562": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.receiver_id"
		},
		"32563": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.original_notification_id"
		},
		"32564": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.idempotency_key"
		},
		"32565": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService"
		},
		"32566": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"32567": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"32568": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"32569": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32570": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"32571": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"32572": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32573": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"32574": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"32575": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "notificationId"
		},
		"32576": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"32577": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32578": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"32579": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"32580": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"32581": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"32582": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32583": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"32584": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"32585": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"32586": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"32587": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32601": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationDTO"
		},
		"32602": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.to"
		},
		"32603": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.channel"
		},
		"32604": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.template"
		},
		"32605": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.data"
		},
		"32606": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationResultsDTO"
		},
		"32607": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.id"
		},
		"32608": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider"
		},
		"32609": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"32610": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"32611": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "notification"
		},
		"32612": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"32613": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"32614": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"32615": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"32616": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"32617": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"32618": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"32619": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"32620": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"32621": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"32622": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"32623": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"32624": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"32625": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32626": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"32627": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"32628": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"32629": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32630": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"32631": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"32632": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32633": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"32634": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"32635": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"32636": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"32637": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32638": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"32639": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"32640": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"32641": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"32642": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32643": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"32644": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"32645": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"32646": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32647": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"32648": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"32649": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32650": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"32651": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"32652": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"32653": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"32654": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"32655": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"32656": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/index.ts",
			"qualifiedName": ""
		},
		"32657": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"32658": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"32659": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"32660": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"32661": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"32662": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"32663": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"32664": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"32665": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"32666": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"32667": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"32668": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32669": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"32670": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"32671": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"32672": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"32673": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"32674": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"32675": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"32676": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32677": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"32678": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"32679": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.fulfillment_sets"
		},
		"32680": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"32681": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"32682": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"32683": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"32684": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"32685": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"32686": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps"
		},
		"32687": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.q"
		},
		"32688": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.id"
		},
		"32689": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.name"
		},
		"32690": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"32691": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"32692": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressInput"
		},
		"32693": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"32694": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"32695": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"32696": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"32697": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"32698": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"32699": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"32700": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"32701": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32702": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "CreateStockLocationInput"
		},
		"32703": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"32704": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"32705": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"32706": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"32707": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32708": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpdateStockLocationInput"
		},
		"32709": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"32710": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"32711": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"32712": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"32713": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32714": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpsertStockLocationInput"
		},
		"32715": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "name"
		},
		"32716": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address_id"
		},
		"32717": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address"
		},
		"32718": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "metadata"
		},
		"32719": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"32720": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService"
		},
		"32721": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"32722": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"32723": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"32724": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"32725": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32726": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"32727": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"32728": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"32729": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"32730": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32731": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"32732": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"32733": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"32734": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"32735": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32736": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"32737": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"32738": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"32739": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32740": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"32741": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"32742": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32743": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"32744": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"32745": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"32746": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32747": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"32748": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"32749": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32750": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"32751": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"32752": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"32753": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"32754": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32755": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"32756": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"32757": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"32758": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32759": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"32760": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"32761": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"32762": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"32763": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"32764": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"32765": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32766": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"32767": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"32768": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32769": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"32770": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"32771": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32772": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"32773": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"32774": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32788": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"32789": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"32790": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"32791": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"32792": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"32793": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"32794": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"32795": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"32796": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"32797": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"32798": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"32799": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"32800": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"32801": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"32802": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"32803": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"32804": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"qualifiedName": ""
		},
		"32805": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO"
		},
		"32806": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.sku"
		},
		"32807": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.hs_code"
		},
		"32808": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.weight"
		},
		"32809": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.length"
		},
		"32810": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.height"
		},
		"32811": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.width"
		},
		"32812": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.origin_country"
		},
		"32813": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.mid_code"
		},
		"32814": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.material"
		},
		"32815": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.title"
		},
		"32816": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.description"
		},
		"32817": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.thumbnail"
		},
		"32818": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.metadata"
		},
		"32819": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO"
		},
		"32820": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO.inventoryItems"
		},
		"32821": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"32822": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"32823": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"32824": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"32825": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"32826": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"32827": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"32828": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_identity_id"
		},
		"32829": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"32830": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"32831": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"32832": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"32833": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"32834": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"32835": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"32836": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"32837": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"32838": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"32839": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"32840": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"32841": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"32842": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"32843": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"32844": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"32845": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"32846": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"32847": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"32848": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"32849": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"32850": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"32851": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"32852": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"32853": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"32854": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"32855": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.attribute"
		},
		"32856": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"32857": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"32858": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"32859": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"32860": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"32861": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"32862": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"32863": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"32864": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"32865": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"32866": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"32867": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"32868": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"32869": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"32870": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"32871": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"32872": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"32873": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"32874": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"32875": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"32876": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"32877": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"32878": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"32879": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"32880": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"32881": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"32882": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"32883": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"32884": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"32885": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"32886": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"32887": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"32888": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": ""
		},
		"32889": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput"
		},
		"32890": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput.product_categories"
		},
		"32891": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput"
		},
		"32892": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.selector"
		},
		"32893": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.update"
		},
		"32894": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
		},
		"32895": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"32896": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"32897": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"32898": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"qualifiedName": ""
		},
		"32899": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput"
		},
		"32900": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput.reservations"
		},
		"32901": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowOutput"
		},
		"32902": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput"
		},
		"32903": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput.updates"
		},
		"32904": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowOutput"
		},
		"32905": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"qualifiedName": ""
		},
		"32906": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO"
		},
		"32907": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.id"
		},
		"32908": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.workflow_id"
		},
		"32909": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.transaction_id"
		},
		"32910": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.execution"
		},
		"32911": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.context"
		},
		"32912": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.state"
		},
		"32913": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.created_at"
		},
		"32914": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.updated_at"
		},
		"32915": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.deleted_at"
		},
		"32916": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps"
		},
		"32917": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.id"
		},
		"32918": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.workflow_id"
		},
		"32919": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.transaction_id"
		},
		"32920": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.state"
		},
		"32921": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"32922": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"32923": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO"
		},
		"32924": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.workflow_id"
		},
		"32925": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.transaction_id"
		},
		"32926": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.execution"
		},
		"32927": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.context"
		},
		"32928": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.state"
		},
		"32929": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO"
		},
		"32930": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.transactionId"
		},
		"32931": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"32932": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"32933": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"32934": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"32935": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"32936": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.T"
		},
		"32937": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IdempotencyKeyParts"
		},
		"32938": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"32939": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"32940": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"32941": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepId"
		},
		"32942": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.action"
		},
		"32943": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService"
		},
		"32944": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"32945": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"32946": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "idOrObject"
		},
		"32947": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"32948": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflow_id"
		},
		"32949": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"32950": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"32951": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32952": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"32953": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"32954": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"32955": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"32956": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32957": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"32958": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"32959": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"32960": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"32961": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32962": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"32963": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"32964": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"32965": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"32966": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32967": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"32968": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.errors"
		},
		"32969": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction"
		},
		"32970": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.result"
		},
		"32971": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"32972": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"32973": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"32974": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"32975": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "transactionId"
		},
		"32976": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"32977": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32978": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"32979": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"32980": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"32981": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"32982": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"32983": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"32984": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"32985": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32986": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"32987": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"32988": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"32989": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"32990": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"32991": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"32992": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"32993": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"32994": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"32995": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"32996": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"32997": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"32998": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"32999": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"33000": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriber"
		},
		"33001": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"33002": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33003": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"33004": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"33005": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"33006": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"33007": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"33008": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"33009": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberOrId"
		},
		"33010": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33024": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": ""
		},
		"33025": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IsDmlEntity"
		},
		"33026": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "DMLSchema"
		},
		"33027": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntityConfig"
		},
		"33028": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33029": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"33030": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"33031": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferDmlEntityNameFromConfig"
		},
		"33032": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33033": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"33034": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33035": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"33036": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TConfig"
		},
		"33037": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity"
		},
		"33038": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.name"
		},
		"33039": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.schema"
		},
		"33040": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.[IsDmlEntity]"
		},
		"33041": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Schema"
		},
		"33042": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Config"
		},
		"33043": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "KnownDataTypes"
		},
		"33044": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipTypes"
		},
		"33045": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyMetadata"
		},
		"33046": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33047": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.fieldName"
		},
		"33048": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"33049": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"33050": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.dataType"
		},
		"33051": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33052": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"33053": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"33054": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.indexes"
		},
		"33055": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33056": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"33057": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33058": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"33059": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"33060": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyType"
		},
		"33061": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33062": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"33063": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"33064": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"33065": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "fieldName"
		},
		"33066": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33067": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipOptions"
		},
		"33068": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33069": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"33070": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipMetadata"
		},
		"33071": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33072": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"33073": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33074": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.entity"
		},
		"33075": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"33076": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"33077": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"33078": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipType"
		},
		"33079": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33080": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"33081": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33082": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"33083": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"33084": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "relationshipName"
		},
		"33085": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33086": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"33087": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor.Props"
		},
		"33088": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"33089": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"33090": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferForeignKeys"
		},
		"33091": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33092": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33093": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33094": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33095": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"33096": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferBelongsToFields"
		},
		"33097": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33098": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33099": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33100": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33101": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"33102": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasOneFields"
		},
		"33103": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"33104": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasManyFields"
		},
		"33105": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33106": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33107": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"33108": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferManyToManyFields"
		},
		"33109": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"33110": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferSchemaFields"
		},
		"33111": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"33112": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Infer"
		},
		"33113": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33114": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "ExtractEntityRelations"
		},
		"33115": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33116": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33117": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"33118": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "OfType"
		},
		"33119": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityCascades"
		},
		"33120": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33121": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.delete"
		},
		"33122": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relationships"
		},
		"33123": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferTypeOf"
		},
		"33124": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33125": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferEntityType"
		},
		"33126": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33127": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferIndexableProperties"
		},
		"33128": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33129": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"33130": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33131": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityIndex"
		},
		"33132": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33133": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"33134": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.unique"
		},
		"33135": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.on"
		},
		"33136": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.where"
		},
		"33137": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TSchema"
		},
		"33138": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TWhere"
		},
		"33139": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "SimpleQueryValue"
		},
		"33140": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "NeQueryValue"
		},
		"33141": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"33142": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$ne"
		},
		"33143": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryValue"
		},
		"33144": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryCondition"
		},
		"33145": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"33146": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"33147": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"33148": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"33149": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"33150": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"33151": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"33152": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"33153": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"33154": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"33155": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"33156": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"33157": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"33158": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"33159": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"33160": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"33161": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"33162": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"33163": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"33164": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33165": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"33166": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"33167": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"33168": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"33169": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"33170": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"33171": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"33172": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"33173": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"33174": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"33175": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"33176": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"33177": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"33178": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"33179": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33180": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"33181": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"33182": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"33183": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"33184": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"33185": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33186": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"33187": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"33188": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"33189": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"33190": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"33191": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"33192": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"33193": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"33194": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"33195": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"33196": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"33197": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"33198": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"33199": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33200": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"33201": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"33202": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"33203": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"33204": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33205": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"33207": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"33208": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"33209": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"33210": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33211": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"33213": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"33214": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"33215": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"33216": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"33217": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"33219": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33220": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"33221": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"33222": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"33223": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "InternalJoinerServiceConfig"
		},
		"33224": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"33225": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"33226": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"33227": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"33228": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"33229": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"33230": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"33231": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"33232": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"33233": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"33234": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule"
		},
		"33235": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"33236": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"33237": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"33238": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"33239": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33240": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"33241": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"33242": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"33243": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"33244": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33245": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"33246": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"33247": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"33248": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"33249": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33250": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"33251": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"33252": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"33253": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"33254": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33255": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"33256": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"33257": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"33258": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33259": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"33260": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"33261": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"33262": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"33263": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33264": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"33265": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"33266": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"33267": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"33268": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33282": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "PlannerActionLinkDescriptor"
		},
		"33283": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"33284": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModule"
		},
		"33285": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModule"
		},
		"33286": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModel"
		},
		"33287": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModel"
		},
		"33288": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "LinkMigrationsPlannerAction"
		},
		"33289": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"33290": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"33291": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"33292": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.sql"
		},
		"33293": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"33294": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"33295": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"33296": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"33297": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"33298": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"33299": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"33300": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"33301": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"33302": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner"
		},
		"33303": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"33304": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"33305": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"33306": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"33307": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "actions"
		},
		"33308": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"33309": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"33310": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeAncestorsTree"
		},
		"33311": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"33312": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"33313": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"33314": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"33315": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"33316": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"33317": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"33318": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"33320": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"33321": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"33322": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"33323": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"33324": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"33325": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"33326": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"33327": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"33328": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"33329": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"33330": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"33331": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"33332": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"33333": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"33334": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"33335": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"33336": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"33337": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"33338": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"33339": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"33340": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"33341": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"33342": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"33343": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"33344": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"33345": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"33346": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "CartLikeWithTotals"
		},
		"33347": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type"
		},
		"33348": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_subtotal"
		},
		"33349": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_tax_total"
		},
		"33350": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_total"
		},
		"33351": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_subtotal"
		},
		"33352": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"33353": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_total"
		},
		"33354": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_subtotal"
		},
		"33355": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_tax_total"
		},
		"33356": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.total"
		},
		"33357": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.subtotal"
		},
		"33358": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.tax_total"
		},
		"33359": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_total"
		},
		"33360": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_tax_total"
		},
		"33361": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"33362": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"33363": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"33364": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_subtotal"
		},
		"33365": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"33366": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_total"
		},
		"33367": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_subtotal"
		},
		"33368": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_tax_total"
		},
		"33369": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"33370": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"33371": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"33372": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"33373": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"33374": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"33375": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"33376": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"33377": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"33378": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"33379": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"33380": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"33382": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"33383": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"33384": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO"
		},
		"33385": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.location_id"
		},
		"33386": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.fulfillment_set_data"
		},
		"33387": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type"
		},
		"33388": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"33389": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.type"
		},
		"33390": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductVariantWorkflowInputDTO"
		},
		"33391": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"33392": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"33393": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
		},
		"33394": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"33395": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"33396": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductWorkflowInputDTO"
		},
		"33397": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"33398": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"33399": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"33400": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"33401": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.variants"
		},
		"33402": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductWorkflowInputDTO"
		},
		"33403": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"33404": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"33405": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"33406": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"33407": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"33408": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"33409": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"33410": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"33411": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"33412": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"33413": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"33414": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsStringLiteral"
		},
		"33415": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33416": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Join"
		},
		"33417": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33418": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "JoinedString"
		},
		"33419": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCapitalizer"
		},
		"33420": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33421": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SplitAnyCase"
		},
		"33422": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33423": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"33424": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"33425": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33426": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"33427": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33428": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"33429": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33430": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"33431": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"33432": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"33434": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33435": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityClassName"
		},
		"33436": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityValues"
		},
		"33437": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"33438": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.id"
		},
		"33439": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"33440": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"33441": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"33442": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"33443": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"33444": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"33445": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"33446": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"33447": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"33448": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"33449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"33450": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"33451": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"33452": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"33453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"33454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"33455": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"33456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"33457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"33458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"33459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"33460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"33461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"33462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"33463": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"33464": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim"
		},
		"33465": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"33466": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"33467": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"33468": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"33469": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"33470": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"33471": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"33472": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem"
		},
		"33473": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.id"
		},
		"33474": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.claim_id"
		},
		"33475": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.order_id"
		},
		"33476": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.item_id"
		},
		"33477": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.quantity"
		},
		"33478": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.reason"
		},
		"33479": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.raw_quantity"
		},
		"33480": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.metadata"
		},
		"33481": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.created_at"
		},
		"33482": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.updated_at"
		},
		"33483": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems"
		},
		"33484": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"33485": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33486": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"33487": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"33488": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"33489": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"33490": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"33491": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason"
		},
		"33492": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.MISSING_ITEM"
		},
		"33493": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.WRONG_ITEM"
		},
		"33494": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.PRODUCTION_FAILURE"
		},
		"33495": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.OTHER"
		},
		"33496": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem"
		},
		"33497": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"33498": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"33499": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"33500": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"33501": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod"
		},
		"33502": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"33503": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_price"
		},
		"33504": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"33505": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"33506": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"33507": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod"
		},
		"33508": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_price"
		},
		"33509": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"33510": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"33511": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams"
		},
		"33512": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"33513": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"33514": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"33515": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"33516": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"33517": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"33518": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.deleted_at"
		},
		"33519": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33520": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33521": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33522": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33523": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection"
		},
		"33524": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"33525": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"33526": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"33527": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"33528": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"33529": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"33530": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"33531": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"33532": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams"
		},
		"33533": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"33534": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"33535": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"33536": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"33537": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"33538": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"33539": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33540": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33541": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33542": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33543": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33544": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33545": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionParams"
		},
		"33546": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33547": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile"
		},
		"33548": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"33549": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"33550": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseUploadFile"
		},
		"33551": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"33552": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.files"
		},
		"33553": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"33554": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.name"
		},
		"33555": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.content"
		},
		"33556": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneGeoZone"
		},
		"33557": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneGeoZone"
		},
		"33558": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory"
		},
		"33559": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.id"
		},
		"33560": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.name"
		},
		"33561": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.description"
		},
		"33562": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.handle"
		},
		"33563": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_active"
		},
		"33564": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_internal"
		},
		"33565": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.rank"
		},
		"33566": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category_id"
		},
		"33567": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category"
		},
		"33568": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.category_children"
		},
		"33569": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.products"
		},
		"33570": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.created_at"
		},
		"33571": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.updated_at"
		},
		"33572": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.deleted_at"
		},
		"33573": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams"
		},
		"33574": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"33575": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"33576": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"33577": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"33578": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"33579": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"33580": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_active"
		},
		"33581": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_internal"
		},
		"33582": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"33583": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"33584": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"33585": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"33586": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"33587": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33588": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33589": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33590": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33591": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33592": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33593": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams"
		},
		"33594": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"33595": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"33596": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33597": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag"
		},
		"33598": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"33599": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"33600": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"33601": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"33602": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"33603": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"33604": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams"
		},
		"33605": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"33606": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"33607": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"33608": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"33609": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"33610": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33611": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33612": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33613": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33614": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType"
		},
		"33615": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"33616": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"33617": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"33618": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"33619": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"33620": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"33621": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason"
		},
		"33622": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"33623": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"33624": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"33625": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"33626": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"33627": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"33628": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"33629": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse"
		},
		"33630": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.id"
		},
		"33631": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.line_item_id"
		},
		"33632": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.location_id"
		},
		"33633": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.quantity"
		},
		"33634": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.external_id"
		},
		"33635": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.description"
		},
		"33636": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.inventory_item_id"
		},
		"33637": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.inventory_item"
		},
		"33638": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.metadata"
		},
		"33639": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.created_by"
		},
		"33640": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.deleted_at"
		},
		"33641": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.created_at"
		},
		"33642": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.updated_at"
		},
		"33643": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress"
		},
		"33644": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_1"
		},
		"33645": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_2"
		},
		"33646": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.company"
		},
		"33647": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.country_code"
		},
		"33648": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.city"
		},
		"33649": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.phone"
		},
		"33650": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.postal_code"
		},
		"33651": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.province"
		},
		"33652": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule"
		},
		"33653": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference"
		},
		"33654": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference_id"
		},
		"33655": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"33656": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"33657": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"33658": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"33659": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"33660": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"33661": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"33662": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"33663": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"33664": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"33665": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"33666": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"33667": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"33668": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"33669": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"33670": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "TData"
		},
		"33671": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCapitalizer"
		},
		"33672": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33673": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"33674": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IncludesSeparator"
		},
		"33675": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33676": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SeparatorCaseParser"
		},
		"33677": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33678": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"33679": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsOneWord"
		},
		"33680": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33681": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsCamelCase"
		},
		"33682": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33683": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCaseParser"
		},
		"33684": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33685": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"33686": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsPascalCase"
		},
		"33687": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33688": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCaseParser"
		},
		"33689": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33690": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"33691": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"33692": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"33693": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"33694": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"33695": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33696": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry"
		},
		"33697": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry.type"
		},
		"33698": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33699": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33700": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince"
		},
		"33701": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.type"
		},
		"33702": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.province_code"
		},
		"33703": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33704": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33705": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity"
		},
		"33706": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.type"
		},
		"33707": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.province_code"
		},
		"33708": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.city"
		},
		"33709": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33710": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33711": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip"
		},
		"33712": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.type"
		},
		"33713": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.province_code"
		},
		"33714": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.city"
		},
		"33715": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.postal_expression"
		},
		"33716": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33717": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33718": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry"
		},
		"33719": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry.type"
		},
		"33720": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"33721": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33722": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33723": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince"
		},
		"33724": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.type"
		},
		"33725": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.province_code"
		},
		"33726": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"33727": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33728": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33729": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity"
		},
		"33730": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.type"
		},
		"33731": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.province_code"
		},
		"33732": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.city"
		},
		"33733": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"33734": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33735": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33736": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip"
		},
		"33737": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.type"
		},
		"33738": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.province_code"
		},
		"33739": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.city"
		},
		"33740": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.postal_expression"
		},
		"33741": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"33742": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33743": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33744": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Separator"
		},
		"33745": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "WordInCamelCase"
		},
		"33746": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"33747": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Word"
		},
		"33748": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"33749": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33750": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone"
		},
		"33751": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"33752": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33753": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33754": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone"
		},
		"33755": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"33756": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"33757": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"33758": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"33759": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"33760": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"33761": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"33762": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"33763": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"33764": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"33765": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"33766": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"33767": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"33768": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"33769": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"33770": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/index.ts",
			"2": "../../../../packages/core/types/src/admin/index.ts",
			"3": "../../../../packages/core/types/src/cache/index.ts",
			"4": "../../../../packages/core/types/src/common/index.ts",
			"5": "../../../../packages/core/types/src/dal/index.ts",
			"6": "../../../../packages/core/types/src/event-bus/index.ts",
			"7": "../../../../packages/core/types/src/feature-flag/index.ts",
			"8": "../../../../packages/core/types/src/file/index.ts",
			"9": "../../../../packages/core/types/src/http/index.ts",
			"10": "../../../../packages/core/types/src/inventory/index.ts",
			"11": "../../../../packages/core/types/src/logger/index.ts",
			"12": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"13": "../../../../packages/core/types/src/notification/index.ts",
			"14": "../../../../packages/core/types/src/search/index.ts",
			"15": "../../../../packages/core/types/src/stock-location/index.ts",
			"16": "../../../../packages/core/types/src/transaction-base/index.ts",
			"17": "../../../../packages/core/types/src/workflow/index.ts",
			"18": "../../../../packages/core/types/src/workflow/common.ts",
			"19": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"20": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"21": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"22": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"23": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"24": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"25": "../../../../packages/core/types/src/dml/index.ts"
		},
		"reflections": {
			"1": 29951,
			"2": 29970,
			"3": 29971,
			"4": 29985,
			"5": 30224,
			"6": 30413,
			"7": 30489,
			"8": 30508,
			"9": 30599,
			"10": 31810,
			"11": 32161,
			"12": 32219,
			"13": 32517,
			"14": 32612,
			"15": 32656,
			"16": 32788,
			"17": 32793,
			"18": 32794,
			"19": 32804,
			"20": 32821,
			"21": 32838,
			"22": 32888,
			"23": 32898,
			"24": 32905,
			"25": 33024
		}
	}
}