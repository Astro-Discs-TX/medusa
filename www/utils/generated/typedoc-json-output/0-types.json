{
	"id": 37634,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 37635,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 37636,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 37637,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37638,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37639,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37640,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37641,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37642,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37643,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37644,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37645,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37646,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 37647,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 37648,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 37649,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37637,
								37638,
								37639,
								37640,
								37641,
								37642,
								37643,
								37644,
								37645,
								37646,
								37647,
								37648,
								37649
							]
						}
					]
				}
			}
		},
		{
			"id": 37650,
			"name": "DetailWidgetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for detail widgets. All widgets that are rendered in a detail view,\ne.g. the product detail view, should implement this interface.\n\nThe type of the data prop should be the same as the data that is passed to the widget.\nIf the widget is rendered in the product detail view, the data prop should be of\ntype AdminProduct."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```tsx\nimport type { DetailWidgetProps, AdminProduct } from \"@medusajs/types\"\nimport { defineWidgetConfig } from \"@medusajs/admin-sdk\"\n\nconst ProductWidget = ({ data }: DetailWidgetProps<AdminProduct>) => {\n return <div>{data.title}</div>\n}\n\nexport const config = defineWidgetConfig({\n zone: \"product.details.after\",\n})\n\nexport default ProductWidget\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 37651,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 37652,
						"name": "TData",
						"package": "@medusajs/types",
						"qualifiedName": "DetailWidgetProps.TData",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						37651
					]
				}
			],
			"typeParameters": [
				{
					"id": 37652,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 37653,
			"name": "AdminTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 37654,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37655,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37656,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37657,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 37658,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 37659,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 37658,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37660,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37661,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37662,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37663,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 37664,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37665,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37666,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37667,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								37656,
								37660,
								37665
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37655
					]
				}
			]
		},
		{
			"id": 41678,
			"name": "CreateCartCreateLineItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41679,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42195,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41680,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41681,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41682,
					"name": "subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41683,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41684,
					"name": "product_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41685,
					"name": "product_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41686,
					"name": "product_description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41687,
					"name": "product_subtitle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41688,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41689,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41690,
					"name": "product_handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41691,
					"name": "variant_sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41692,
					"name": "variant_barcode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41693,
					"name": "variant_title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41694,
					"name": "variant_option_values",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 41695,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41696,
					"name": "is_discountable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41697,
					"name": "is_tax_inclusive",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41698,
					"name": "is_giftcard",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41699,
					"name": "compare_at_unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 42195,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41700,
					"name": "unit_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 42195,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41701,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41679,
						41680,
						41681,
						41682,
						41683,
						41684,
						41685,
						41686,
						41687,
						41688,
						41689,
						41690,
						41691,
						41692,
						41693,
						41694,
						41695,
						41696,
						41697,
						41698,
						41699,
						41700,
						41701
					]
				}
			]
		},
		{
			"id": 41702,
			"name": "UpdateLineItemInCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41703,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
							"qualifiedName": "CartDTO"
						},
						"name": "CartDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41704,
					"name": "item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
							"qualifiedName": "CartLineItemDTO"
						},
						"name": "CartLineItemDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41705,
					"name": "update",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
									"qualifiedName": "UpdateLineItemDTO"
								},
								"name": "UpdateLineItemDTO",
								"package": "@medusajs/types"
							}
						],
						"name": "Partial",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41703,
						41704,
						41705
					]
				}
			]
		},
		{
			"id": 41706,
			"name": "CreateCartAddressDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41707,
					"name": "first_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41708,
					"name": "last_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41709,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41710,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41711,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41712,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41713,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41714,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41715,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41716,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41717,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41707,
						41708,
						41709,
						41710,
						41711,
						41712,
						41713,
						41714,
						41715,
						41716,
						41717
					]
				}
			]
		},
		{
			"id": 41718,
			"name": "CreateCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41719,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41720,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41721,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41722,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41723,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41724,
					"name": "shipping_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41725,
					"name": "billing_address_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41726,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 41706,
								"name": "CreateCartAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 41727,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 41706,
								"name": "CreateCartAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 41728,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 41729,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 41678,
							"name": "CreateCartCreateLineItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 41730,
					"name": "promo_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41719,
						41720,
						41721,
						41722,
						41723,
						41724,
						41725,
						41726,
						41727,
						41728,
						41729,
						41730
					]
				}
			]
		},
		{
			"id": 41731,
			"name": "AddToCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41732,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 41678,
							"name": "CreateCartCreateLineItemDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 41733,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 41748,
						"name": "CartWorkflowDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41732,
						41733
					]
				}
			]
		},
		{
			"id": 41734,
			"name": "UpdateCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41735,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41736,
					"name": "promo_codes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 41737,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41738,
					"name": "customer_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 41739,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 41740,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 41741,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41742,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 41743,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
									"qualifiedName": "UpdateAddressDTO"
								},
								"name": "UpdateAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
									"qualifiedName": "CreateAddressDTO"
								},
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 41744,
					"name": "billing_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
									"qualifiedName": "UpdateAddressDTO"
								},
								"name": "UpdateAddressDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/cart/mutations.ts",
									"qualifiedName": "CreateAddressDTO"
								},
								"name": "CreateAddressDTO",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41735,
						41736,
						41737,
						41738,
						41739,
						41740,
						41741,
						41742,
						41743,
						41744
					]
				}
			]
		},
		{
			"id": 41745,
			"name": "CreatePaymentCollectionForCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41746,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41747,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41746,
						41747
					]
				}
			]
		},
		{
			"id": 41748,
			"name": "CartWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41749,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
							"qualifiedName": "CustomerDTO"
						},
						"name": "CustomerDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41750,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "ProductDTO"
						},
						"name": "ProductDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41751,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/region/common.ts",
							"qualifiedName": "RegionDTO"
						},
						"name": "RegionDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41752,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "CartDTO.id"
					}
				},
				{
					"id": 41753,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/payment/common.ts",
							"qualifiedName": "PaymentCollectionDTO"
						},
						"name": "PaymentCollectionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41749,
						41750,
						41751,
						41752,
						41753
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/cart/common.ts",
						"qualifiedName": "CartDTO"
					},
					"name": "CartDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 41754,
			"name": "ListShippingOptionsForCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41755,
					"name": "cart_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41756,
					"name": "is_return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41757,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41758,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41759,
					"name": "shipping_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41760,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41761,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41762,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41763,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41761,
										41762,
										41763
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41755,
						41756,
						41757,
						41758,
						41759
					]
				}
			]
		},
		{
			"id": 41764,
			"name": "PricedShippingOptionDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41765,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42195,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41765
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
						"qualifiedName": "ShippingOptionDTO"
					},
					"name": "ShippingOptionDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 41766,
			"name": "CompleteCartWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41767,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41767
					]
				}
			]
		},
		{
			"id": 41768,
			"name": "ConfirmVariantInventoryWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41769,
					"name": "sales_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41770,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 41771,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 41772,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 41773,
										"name": "manage_inventory",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "boolean"
										}
									},
									{
										"id": 41774,
										"name": "inventory_items",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reflection",
												"declaration": {
													"id": 41775,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41776,
															"name": "inventory_item_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 41777,
															"name": "variant_id",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 41778,
															"name": "required_quantity",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 42195,
																"name": "BigNumberInput",
																"package": "@medusajs/types"
															}
														},
														{
															"id": 41779,
															"name": "inventory",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reflection",
																	"declaration": {
																		"id": 41780,
																		"name": "__type",
																		"variant": "declaration",
																		"kind": 65536,
																		"flags": {},
																		"children": [
																			{
																				"id": 41781,
																				"name": "location_levels",
																				"variant": "declaration",
																				"kind": 1024,
																				"flags": {},
																				"type": {
																					"type": "reflection",
																					"declaration": {
																						"id": 41782,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 41783,
																								"name": "stock_locations",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "reflection",
																										"declaration": {
																											"id": 41784,
																											"name": "__type",
																											"variant": "declaration",
																											"kind": 65536,
																											"flags": {},
																											"children": [
																												{
																													"id": 41785,
																													"name": "id",
																													"variant": "declaration",
																													"kind": 1024,
																													"flags": {},
																													"type": {
																														"type": "intrinsic",
																														"name": "string"
																													}
																												},
																												{
																													"id": 41786,
																													"name": "sales_channels",
																													"variant": "declaration",
																													"kind": 1024,
																													"flags": {},
																													"type": {
																														"type": "array",
																														"elementType": {
																															"type": "reflection",
																															"declaration": {
																																"id": 41787,
																																"name": "__type",
																																"variant": "declaration",
																																"kind": 65536,
																																"flags": {},
																																"children": [
																																	{
																																		"id": 41788,
																																		"name": "id",
																																		"variant": "declaration",
																																		"kind": 1024,
																																		"flags": {},
																																		"type": {
																																			"type": "unknown",
																																			"name": "..."
																																		}
																																	}
																																],
																																"groups": [
																																	{
																																		"title": "Properties",
																																		"children": [
																																			41788
																																		]
																																	}
																																]
																															}
																														}
																													}
																												}
																											],
																											"groups": [
																												{
																													"title": "Properties",
																													"children": [
																														41785,
																														41786
																													]
																												}
																											]
																										}
																									}
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									41783
																								]
																							}
																						]
																					}
																				}
																			}
																		],
																		"groups": [
																			{
																				"title": "Properties",
																				"children": [
																					41781
																				]
																			}
																		]
																	}
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41776,
																41777,
																41778,
																41779
															]
														}
													]
												}
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											41772,
											41773,
											41774
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 41789,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 41790,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 41791,
										"name": "variant_id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": null
												},
												{
													"type": "intrinsic",
													"name": "string"
												}
											]
										}
									},
									{
										"id": 41792,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 42195,
											"name": "BigNumberInput",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 41793,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											41791,
											41792,
											41793
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 41794,
					"name": "itemsToUpdate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 41795,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 41796,
										"name": "data",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 41797,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 41798,
														"name": "variant_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 41799,
														"name": "quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": 42195,
															"name": "BigNumberInput",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															41798,
															41799
														]
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											41796
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41769,
						41770,
						41789,
						41794
					]
				}
			]
		},
		{
			"id": 42220,
			"name": "IsStringLiteral",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42221,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 42221,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "intrinsic",
						"name": "string"
					},
					"extendsType": {
						"type": "reference",
						"target": 42221,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"trueType": {
						"type": "literal",
						"value": false
					},
					"falseType": {
						"type": "literal",
						"value": true
					}
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 43220,
			"name": "WordInCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43221,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 43222,
					"name": "Word",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43221,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "reference",
								"target": 43222,
								"name": "Word",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "NextCharacter"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "_"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "NextCharacter"
						},
						"name": "NextCharacter",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Capitalize"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "NextCharacter"
								},
								"name": "NextCharacter",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Capitalize",
						"package": "typescript"
					},
					"trueType": {
						"type": "reference",
						"target": 43222,
						"name": "Word",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"falseType": {
						"type": "reference",
						"target": 43220,
						"typeArguments": [
							{
								"type": "reference",
								"target": 43221,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 43222,
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "NextCharacter"
											},
											"name": "NextCharacter",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "WordInCamelCase",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 43222,
					"name": "Word",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 43219,
			"name": "Separator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "_"
					},
					{
						"type": "literal",
						"value": "-"
					}
				]
			}
		},
		{
			"id": 43071,
			"name": "IncludesSeparator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43072,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43072,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 43219,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 43076,
			"name": "IsOneWord",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43077,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43077,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Lowercase"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 43077,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Lowercase",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 43077,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Uppercase"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 43077,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Uppercase",
						"package": "typescript"
					},
					"trueType": {
						"type": "literal",
						"value": true
					},
					"falseType": {
						"type": "literal",
						"value": false
					}
				}
			}
		},
		{
			"id": 43078,
			"name": "IsCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43079,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43079,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Uncapitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 43079,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Uncapitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 43083,
			"name": "IsPascalCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43084,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43084,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Capitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 43084,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Capitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 43073,
			"name": "SeparatorCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "snake_case, CONSTANT_CASE, kebab-case or COBOL-CASE"
					}
				]
			},
			"typeParameters": [
				{
					"id": 43074,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 43075,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43074,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "inferred",
								"name": "Word"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 43219,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "Tail"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "reference",
					"target": 43073,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "rest",
									"elementType": {
										"type": "reference",
										"target": 43075,
										"name": "Tuple",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Lowercase"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Word"
											},
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Lowercase",
									"package": "typescript"
								}
							]
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 43074,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "inferred",
									"name": "Word"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "rest",
								"elementType": {
									"type": "reference",
									"target": 43075,
									"name": "Tuple",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Word"
										},
										"name": "Word",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "reference",
						"target": 43075,
						"name": "Tuple",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 43080,
			"name": "CamelCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43081,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 43082,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43081,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": ""
				},
				"trueType": {
					"type": "reference",
					"target": 43082,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 43081,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 43220,
									"typeArguments": [
										{
											"type": "reference",
											"target": 43081,
											"name": "Type",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "WordInCamelCase",
									"package": "@medusajs/types"
								},
								""
							],
							[
								{
									"type": "inferred",
									"name": "Tail"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 43081,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "Word"
									},
									""
								],
								[
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Tail"
										},
										"name": "Tail",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									""
								]
							]
						},
						"trueType": {
							"type": "reference",
							"target": 43080,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Uncapitalize"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Tail"
											},
											"name": "Tail",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Uncapitalize",
									"package": "typescript"
								},
								{
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 43082,
												"name": "Tuple",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
														"qualifiedName": "Word"
													},
													"name": "Word",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										}
									]
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 43085,
			"name": "PascalCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43086,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43086,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "reference",
					"target": 43080,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Uncapitalize"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 43086,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "Uncapitalize",
							"package": "typescript"
						}
					],
					"name": "CamelCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 42227,
			"name": "SplitAnyCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42228,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43071,
					"typeArguments": [
						{
							"type": "reference",
							"target": 42228,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "IncludesSeparator",
					"package": "@medusajs/types"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 43073,
					"typeArguments": [
						{
							"type": "reference",
							"target": 42228,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 43076,
						"typeArguments": [
							{
								"type": "reference",
								"target": 42228,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "IsOneWord",
						"package": "@medusajs/types"
					},
					"extendsType": {
						"type": "literal",
						"value": true
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 42228,
												"name": "Type",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 43078,
							"typeArguments": [
								{
									"type": "reference",
									"target": 42228,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsCamelCase",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 43080,
							"typeArguments": [
								{
									"type": "reference",
									"target": 42228,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 43083,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42228,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "IsPascalCase",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "literal",
								"value": true
							},
							"trueType": {
								"type": "reference",
								"target": 43085,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42228,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "PascalCaseParser",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "tuple"
							}
						}
					}
				}
			}
		},
		{
			"id": 43068,
			"name": "PascalCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43069,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 43070,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43069,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 43068,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "rest",
										"elementType": {
											"type": "reference",
											"target": 43070,
											"name": "Tuple",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Capitalize"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
													"qualifiedName": "Head"
												},
												"name": "Head",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Capitalize",
										"package": "typescript"
									}
								]
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 43068,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 43070,
								"name": "Tuple",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 43070,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 42225,
			"name": "CamelCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42226,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 42226,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "First"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "reference",
					"target": 43068,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
										"qualifiedName": "First"
									},
									"name": "First",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							]
						}
					],
					"name": "PascalCapitalizer",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "tuple"
				}
			}
		},
		{
			"id": 42222,
			"name": "Join",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42223,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 42224,
					"name": "JoinedString",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 42223,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 42222,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 42224,
											"name": "JoinedString",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Head"
											},
											"name": "Head",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 42222,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 42224,
					"name": "JoinedString",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 42229,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 42230,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42231,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42232,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42233,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42234,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`http.cookieSecret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42235,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42230,
						42231,
						42232,
						42233,
						42234,
						42235
					]
				}
			]
		},
		{
			"id": 37668,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 37669,
					"name": "LinkMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37670,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37671,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37672,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37671,
										37672
									]
								}
							]
						}
					}
				},
				{
					"id": 37673,
					"name": "LinkWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37674,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37675,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37676,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37677,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37675,
										37676,
										37677
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 41540,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput"
						}
					]
				},
				{
					"id": 37678,
					"name": "BatchMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37683,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 37684,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 37685,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37679,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37680,
									"name": "create",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37683,
											"name": "TCreate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 37681,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37684,
											"name": "TUpdate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 37682,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37685,
											"name": "TDelete",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37680,
										37681,
										37682
									]
								}
							]
						}
					}
				},
				{
					"id": 37686,
					"name": "BatchMethodResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37691,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37687,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37688,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37691,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 37689,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 37691,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 37690,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37688,
										37689,
										37690
									]
								}
							]
						}
					}
				},
				{
					"id": 37692,
					"name": "BatchWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37693,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 37694,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 37695,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 37678,
						"typeArguments": [
							{
								"type": "reference",
								"target": 37693,
								"name": "TCreate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 37694,
								"name": "TUpdate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 37695,
								"name": "TDelete",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodRequest",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 37696,
					"name": "BatchWorkflowOutput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37697,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 37686,
						"typeArguments": [
							{
								"type": "reference",
								"target": 37697,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 37698,
					"name": "CamelCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37699,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 42220,
							"typeArguments": [
								{
									"type": "reference",
									"target": 37699,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsStringLiteral",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 42222,
							"typeArguments": [
								{
									"type": "reference",
									"target": 42225,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42227,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37699,
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "SplitAnyCase",
											"package": "@medusajs/types"
										}
									],
									"name": "CamelCapitalizer",
									"package": "@medusajs/types"
								}
							],
							"name": "Join",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 37699,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 37700,
					"name": "Prettify",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prettify complex types to a flat object structure"
							}
						]
					},
					"typeParameters": [
						{
							"id": 37702,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 37702,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 37702,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37701,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 37703,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 37704,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 37705,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 37704,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 37704,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 37705,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 37704,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 37709,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 37710,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37711,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37712,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37710,
								37711,
								37712
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 37713,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 37713,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 37715,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37710,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 37716,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37711,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 37717,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37712,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 37714,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37715,
								37716,
								37717,
								37714
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37709,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 37718,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 37719,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 37728,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 37720,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 37721,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 37722,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 37723,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											},
											{
												"type": "intersection",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37724,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 37725,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 37726,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 37727,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37719,
								37720,
								37721,
								37722,
								37723,
								37725,
								37726,
								37727
							]
						}
					],
					"typeParameters": [
						{
							"id": 37728,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 37730,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 37731,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
									},
									{
										"kind": "code",
										"text": "`+`"
									},
									{
										"kind": "text",
										"text": " it will be added to the default fields, using "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37732,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37733,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37734,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37731,
								37732,
								37733,
								37734
							]
						}
					]
				},
				{
					"id": 37735,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 37736,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 42105,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 37737,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 37738,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37739,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37740,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 37741,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37738,
								37739,
								37740,
								37741
							]
						}
					]
				},
				{
					"id": 37742,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 37743,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37744,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37745,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37746,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37747,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37748,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37749,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37743,
								37744,
								37745,
								37746,
								37747,
								37748,
								37749
							]
						}
					]
				},
				{
					"id": 37750,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 37751,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37752,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37753,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37754,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37751,
								37752,
								37753,
								37754
							]
						}
					]
				},
				{
					"id": 37757,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37758,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 37758,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 37757,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 37757,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 37758,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 37759,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37760,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 37760,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 37759,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 37759,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 37760,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 37761,
					"name": "MetadataType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 37762,
					"name": "RawRounding",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37763,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37764,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37765,
									"name": "precision",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37764,
										37765
									]
								}
							]
						}
					}
				},
				{
					"id": 37773,
					"name": "TransformObjectMethodToAsync",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37780,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 37780,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 37780,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 37774,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37775,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37776,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "inferred",
														"name": "A"
													}
												}
											],
											"type": {
												"type": "inferred",
												"name": "R"
											}
										}
									]
								}
							},
							"trueType": {
								"type": "reflection",
								"declaration": {
									"id": 37777,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37778,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37779,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
															"qualifiedName": "A"
														},
														"name": "A",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Awaited"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "R"
																},
																"name": "R",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Awaited",
														"package": "typescript"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 37780,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 37773,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 37780,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "TransformObjectMethodToAsync",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 37780,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					}
				},
				{
					"id": 37781,
					"name": "AdminOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Admin dashboard configurations."
							}
						]
					},
					"children": [
						{
							"id": 37782,
							"name": "disable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to disable the admin dashboard. If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the admin dashboard is disabled,\nin both development and production environments. The default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    disable: process.env.ADMIN_DISABLED === \"true\" ||\n      false\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 37783,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the admin dashboard. The default value is "
									},
									{
										"kind": "code",
										"text": "`/app`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe value cannot be one of the reserved paths:\n- "
									},
									{
										"kind": "code",
										"text": "`/admin`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/store`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    path: process.env.ADMIN_PATH || `/app`,\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "templateLiteral",
								"head": "/",
								"tail": [
									[
										{
											"type": "intrinsic",
											"name": "string"
										},
										""
									]
								]
							}
						},
						{
							"id": 37784,
							"name": "backendUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa application. This is useful to set when you deploy the Medusa application."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37785,
							"name": "storefrontUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa storefront application. This will help generate links from the admin\nto provide to customers to complete any processes"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    storefrontUrl: process.env.MEDUSA_STOREFRONT_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37786,
							"name": "vite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the Vite configuration for the admin dashboard. This function receives the default Vite configuration\nand returns the modified configuration. The default value is "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37787,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 37788,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 37789,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "",
															"qualifiedName": "InlineConfig"
														},
														"name": "InlineConfig"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "",
													"qualifiedName": "InlineConfig"
												},
												"name": "InlineConfig"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37782,
								37783,
								37784,
								37785,
								37786
							]
						}
					]
				},
				{
					"id": 37790,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 37791,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 37792,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37793,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37794,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37791,
								37792,
								37793,
								37794
							]
						}
					]
				},
				{
					"id": 37795,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa application, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 37796,
							"name": "databaseName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If the name is specified in "
									},
									{
										"kind": "code",
										"text": "`databaseUrl`"
									},
									{
										"kind": "text",
										"text": ", then you don't have to use this configuration.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseName: process.env.DATABASE_NAME ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37797,
							"name": "databaseUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The PostgreSQL connection URL of the database, which is of the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseUrl: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37798,
							"name": "databaseSchema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseSchema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n})\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37799,
							"name": "databaseLogging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies whether database messages should be logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseLogging: false\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 37800,
							"name": "databaseDriverOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration is used to pass additional options to the database connection. You can pass any configuration. For example, pass the\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " property that enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option.\n\n:::note\n\nMake sure to add to the end of the database URL "
									},
									{
										"kind": "code",
										"text": "`?ssl_mode=disable`"
									},
									{
										"kind": "text",
										"text": " as well when disabling "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": ".\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseDriverOptions: process.env.NODE_ENV !== \"development\" ?\n      { ssl: { rejectUnauthorized: false } } : {}\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 37801,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 37802,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 37803,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 37804,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 37805,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 37806,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						37806
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		37804
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														37802
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 37807,
							"name": "redisUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies the connection URL to Redis to store the Medusa server's session.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisUrl: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37808,
							"name": "redisPrefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration defines a prefix on all keys stored in Redis for the Medusa server's session. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisPrefix: process.env.REDIS_URL || \"medusa:\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 37809,
							"name": "redisOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration defines options to pass ioredis for the Redis connection used to store the Medusa server's session. Refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisOptions: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 37810,
							"name": "sessionOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration defines additional options to pass to [express-session](https://www.npmjs.com/package/express-session), which is used to store the Medusa server's session."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    sessionOptions: {\n      name: process.env.SESSION_NAME || \"custom\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 42229,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37812,
							"name": "workerMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode.\n\nWorkers are processes running separately from the main application. They're useful for executing long-running or resource-heavy tasks in the background, such as importing products.\n\nWith a worker, these tasks are offloaded to a separate process. So, they won't affect the performance of the main application.\n\n![Diagram showcasing how the server and worker work together](https://res.cloudinary.com/dza7lstvk/image/upload/fl_lossy/f_auto/r_16/ar_16:9,c_pad/v1/Medusa%20Book/medusa-worker_klkbch.jpg?_a=BATFJtAA0)\n\nMedusa has three runtime modes:\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nIn production, it's recommended to deploy two instances:\n\n1. One having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": ".\n2. Another having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    workerMode: process.env.WORKER_MODE || \"shared\"\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						},
						{
							"id": 37813,
							"name": "http",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property configures the application's http-specific settings."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\",\n      compression: {\n        // ...\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37814,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37815,
											"name": "jwtSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create authentication tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": ". However, in production, if this configuration is not set, an\nerror is thrown and the application crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtSecret: \"supersecret\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37816,
											"name": "jwtExpiresIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The expiration time for the JWT token. Its format is based off the [ms package](https://github.com/vercel/ms).\n\nIf not provided, the default value is "
													},
													{
														"kind": "code",
														"text": "`24h`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtExpiresIn: \"2d\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37817,
											"name": "cookieSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create cookie tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": ". However, in production, if this configuration is not set, an error is thrown and\nthe application crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37818,
											"name": "authCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa application's API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
													},
													{
														"kind": "code",
														"text": "`/auth`"
													},
													{
														"kind": "text",
														"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that Medusa tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: process.env.AUTH_CORS\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37819,
											"name": "compression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
													},
													{
														"kind": "code",
														"text": "`\"x-no-compression\": true`"
													},
													{
														"kind": "text",
														"text": ".\nLearn more in the [API Reference](https://docs.medusajs.com/v2/api/store#http-compression)."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      compression: {\n        enabled: true,\n        level: 6,\n        memLevel: 8,\n        threshold: 1024\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37790,
												"name": "HttpCompressionOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37820,
											"name": "storeCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa application's API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`store_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:8000`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: process.env.STORE_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37821,
											"name": "adminCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa application's API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`admin_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: process.env.ADMIN_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 37822,
											"name": "authMethodsPerActor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This configuration specifies the supported authentication providers per actor type (such as "
													},
													{
														"kind": "code",
														"text": "`user`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`customer`"
													},
													{
														"kind": "text",
														"text": ", or any custom actors).\nFor example, you only want to allow SSO logins for "
													},
													{
														"kind": "code",
														"text": "`users`"
													},
													{
														"kind": "text",
														"text": ", while you want to allow email/password logins for "
													},
													{
														"kind": "code",
														"text": "`customers`"
													},
													{
														"kind": "text",
														"text": " to the storefront.\n\n"
													},
													{
														"kind": "code",
														"text": "`authMethodsPerActor`"
													},
													{
														"kind": "text",
														"text": " is a a map where the actor type (eg. 'user') is the key, and the value is an array of supported auth provider IDs."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authMethodsPerActor: {\n        user: [\"email\"],\n        customer: [\"emailpass\", \"google\"]\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 37823,
											"name": "restrictedFields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Specifies the fields that can't be selected in the response unless specified in the allowed query config.\nThis is useful to restrict sensitive fields from being exposed in the API."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      restrictedFields: {\n        store: [\"order\", \"orders\"],\n      }\n    }\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 37824,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37825,
															"name": "store",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37825
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37815,
												37816,
												37817,
												37818,
												37819,
												37820,
												37821,
												37822,
												37823
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37796,
								37797,
								37798,
								37799,
								37800,
								37807,
								37808,
								37809,
								37810,
								37812,
								37813
							]
						}
					]
				},
				{
					"id": 37826,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa application are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include configurations for database, modules, and more.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports the value returned by the "
							},
							{
								"kind": "code",
								"text": "`defineConfig`"
							},
							{
								"kind": "text",
								"text": " utility function imported from "
							},
							{
								"kind": "code",
								"text": "`@medusajs/utils`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "`defineConfig`"
							},
							{
								"kind": "text",
								"text": " accepts as a parameter an object with the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 37827,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": " (required): An object that holds general configurations related to the Medusa application, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "admin",
								"target": 37828,
								"tsLinkText": "admin"
							},
							{
								"kind": "text",
								"text": ": An object that holds admin-related configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 37833,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that configures the Medusa application's modules.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 37834,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    // ...\n  },\n  admin: {\n    // ...\n  },\n  modules: {\n    // ...\n  },\n  featureFlags: {\n    // ...\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa application project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 37827,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa application, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37795,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37828,
							"name": "admin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds configurations for the Medusa Admin dashboard."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37781,
								"name": "AdminOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 37833,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds all custom modules installed in your Medusa application.\n\n:::note\n\nMedusa's commerce modules are configured by default, so only\nadd them to this property if you're changing their configurations or adding providers to a module.\n\n:::\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the module's registration name. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled. This is only supported for Medusa's commerce and architectural modules;\n2. Or an object having the following properties:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the path to the module relative to "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": ", or the module's NPM package name. For example, "
									},
									{
										"kind": "code",
										"text": "`./modules/my-module`"
									},
									{
										"kind": "text",
										"text": ".\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object indicating the options to pass to the module."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  modules: {\n    helloModuleService: {\n      resolve: \"./modules/hello\"\n    }\n  }\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 40559,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 40569,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 37834,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa application are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can enable a feature in your application by enabling its feature flag. Feature flags are enabled through either environment\nvariables or through this configuration property exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": "'s value is an object. Its properties are the names of the feature flags, and their value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/develop/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  featureFlags: {\n    analytics: true,\n    // ...\n  }\n  // ...\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to run migrations as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37827,
								37828,
								37833,
								37834
							]
						}
					]
				},
				{
					"id": 37835,
					"name": "PluginDetails",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37836,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37837,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37838,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37839,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37840,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37841,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37837,
										37838,
										37839,
										37840,
										37841
									]
								}
							]
						}
					}
				},
				{
					"id": 37842,
					"name": "ExecArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37843,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37844,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37847,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37845,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37844,
										37845
									]
								}
							]
						}
					}
				},
				{
					"id": 37846,
					"name": "ModuleImplementations",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
							}
						]
					}
				},
				{
					"id": 37847,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
							}
						]
					},
					"typeParameters": [
						{
							"id": 37867,
							"name": "Cradle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "reference",
								"target": 37846,
								"name": "ModuleImplementations",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
											"qualifiedName": "AwilixContainer"
										},
										"name": "AwilixContainer",
										"package": "awilix"
									},
									{
										"type": "literal",
										"value": "resolve"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 37848,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37849,
											"name": "resolve",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 37850,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 37851,
															"name": "K",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															}
														}
													],
													"parameters": [
														{
															"id": 37852,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37851,
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 37853,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 37851,
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 37867,
															"name": "Cradle",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 37854,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 37855,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 37856,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 37857,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 37855,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												37849
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 37868,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37869,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37870,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 37871,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 37872,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 37873,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 37872,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										37870
									]
								}
							]
						}
					}
				},
				{
					"id": 37874,
					"name": "RuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accepted values for the shipping rule option's operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 37875,
					"name": "WithCalculatedPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 37876,
							"name": "calculated_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 37877,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 37878,
											"name": "calculated_amount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 37879,
											"name": "is_calculated_price_tax_inclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												37878,
												37879
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37876
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37709,
						37713,
						37718,
						37730,
						37735,
						37736,
						37737,
						37742,
						37750,
						37781,
						37790,
						37795,
						37826,
						37846,
						37875
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						37669,
						37673,
						37678,
						37686,
						37692,
						37696,
						37698,
						37700,
						37703,
						37757,
						37759,
						37761,
						37762,
						37773,
						37835,
						37842,
						37847,
						37868,
						37874
					]
				}
			]
		},
		{
			"id": 37880,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 38069,
					"name": "ModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 38070,
					"name": "SoftDeletableModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 38069,
								"name": "ModelDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 37909,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 37910,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37912,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37912,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 37911,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37912,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37912,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37910,
								37911
							]
						}
					],
					"typeParameters": [
						{
							"id": 37912,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 38415,
							"name": "AdminGetCampaignsParams"
						},
						{
							"type": "reference",
							"target": 38542,
							"name": "AdminClaimListParams"
						},
						{
							"type": "reference",
							"target": 38704,
							"name": "AdminGetCustomerGroupsParams"
						},
						{
							"type": "reference",
							"target": 38971,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 39047,
							"name": "AdminGetInvitesParams"
						},
						{
							"type": "reference",
							"target": 39085,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 39190,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 39313,
							"name": "AdminProductTagListParams"
						},
						{
							"type": "reference",
							"target": 39354,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 39556,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 39780,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 39843,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 39895,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 40146,
							"name": "FilterableInventoryLevelProps"
						},
						{
							"type": "reference",
							"target": 41179,
							"name": "FilterableNotificationProps"
						},
						{
							"type": "reference",
							"target": 41335,
							"name": "FilterableStockLocationProps"
						},
						{
							"type": "reference",
							"target": 41562,
							"name": "FilterableWorkflowExecutionProps"
						},
						{
							"type": "reference",
							"target": 42358,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 42468,
							"name": "BaseProductCategoryListParams"
						}
					]
				},
				{
					"id": 37913,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 37914,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 37915,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 42241,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37923,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42241,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37923,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 37916,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37917,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 37918,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 37919,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 37920,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 42243,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 42243,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37921,
							"name": "strategy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Load strategy (e.g for mikro orm it accept select-in or joined)"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 37922,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "literal",
										"value": "select-in"
									},
									{
										"type": "literal",
										"value": "joined"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37914,
								37915,
								37916,
								37917,
								37918,
								37919,
								37920,
								37921
							]
						}
					],
					"typeParameters": [
						{
							"id": 37923,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 37924,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 37925,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 37926,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 37934,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 37887,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 37934,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 37927,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignatures": [
																{
																	"id": 37928,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 37929,
																			"name": "x",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "inferred",
																		"name": "V"
																	}
																}
															]
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 37909,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 37934,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 37887,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 37934,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 37930,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignatures": [
																		{
																			"id": 37931,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 37932,
																					"name": "x",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "inferred",
																				"name": "V"
																			}
																		}
																	]
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 37933,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37913,
								"typeArguments": [
									{
										"type": "reference",
										"target": 37934,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37926,
								37933
							]
						}
					],
					"typeParameters": [
						{
							"id": 37934,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 37935,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 37936,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 37937,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								37936
							]
						}
					],
					"typeParameters": [
						{
							"id": 37937,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 37938,
					"name": "PerformedActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37939,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37940,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42248,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 42249,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37941,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42248,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 42249,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 37942,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42248,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 42249,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37940,
										37941,
										37942
									]
								}
							]
						}
					}
				},
				{
					"id": 37943,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 37996,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 37997,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 37998,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 37999,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38000,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 38001,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 38002,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 37998,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 38003,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38004,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 38005,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 38006,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 37998,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 38007,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																38005,
																38006,
																38007
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42254,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42253,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 38008,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38009,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38010,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 38010,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42266,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42265,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 38011,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38012,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38013,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 38013,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42269,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42268,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 38014,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38015,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38016,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 38017,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 38018,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38016,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42272,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42271,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 37944,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37945,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37946,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37925,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38019,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37947,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38019,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37948,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37949,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37950,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37925,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38019,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37951,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38019,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37952,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37953,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37954,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37955,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38019,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37956,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37957,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37958,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 37959,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 37960,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 37961,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	37960,
																	37961
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 37962,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38019,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37963,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37964,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37965,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 38019,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 37887,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 38019,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 37966,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignatures": [
																				{
																					"id": 37967,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"parameters": [
																						{
																							"id": 37968,
																							"name": "x",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "V"
																					}
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 37909,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 38019,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 37887,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 38019,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 37969,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignatures": [
																						{
																							"id": 37970,
																							"name": "__index",
																							"variant": "signature",
																							"kind": 8192,
																							"flags": {},
																							"parameters": [
																								{
																									"id": 37971,
																									"name": "x",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								}
																							],
																							"type": {
																								"type": "inferred",
																								"name": "V"
																							}
																						}
																					]
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 37972,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37973,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37974,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 37975,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37976,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 37977,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 37978,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38019,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37979,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37980,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37981,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 37982,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 37983,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38019,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37984,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37985,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37986,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37987,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38019,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 37988,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 37989,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 37990,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 37991,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37935,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38019,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 37992,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 37993,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 37994,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 38019,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															}
														},
														{
															"id": 37995,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37938,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																37994,
																37995
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								37996,
								38008,
								38011,
								38014,
								37944,
								37948,
								37952,
								37956,
								37963,
								37973,
								37979,
								37984,
								37988
							]
						}
					],
					"typeParameters": [
						{
							"id": 38019,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42252,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38019,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38020,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 38039,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38040,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38041,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 38042,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38043,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 38044,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 38045,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 37998,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 38046,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 38047,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 38048,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 38049,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 37998,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 38050,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																38048,
																38049,
																38050
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42254,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42253,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 38051,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38052,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38053,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 38010,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42266,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42265,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 38054,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38055,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38056,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 38013,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42269,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42268,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 38057,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 38058,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 38059,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 38060,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 38061,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38016,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 42272,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 42271,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 38021,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38022,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38023,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37925,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38062,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38024,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37736,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38025,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38062,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38026,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38027,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38028,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37925,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38062,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38029,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37736,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38030,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38062,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38031,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38032,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38033,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 38034,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38062,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38035,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38036,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38037,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 38038,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								38039,
								38051,
								38054,
								38057,
								38021,
								38026,
								38031,
								38035
							]
						}
					],
					"typeParameters": [
						{
							"id": 38062,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42252,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38062,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38063,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 38064,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38065,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38064
							]
						}
					],
					"typeParameters": [
						{
							"id": 38065,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 38066,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 38067,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38068,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38067
							]
						}
					],
					"typeParameters": [
						{
							"id": 38068,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 37887,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37908,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 37888,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 37889,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42237,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37908,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37890,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42237,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37908,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37891,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 42239,
												"typeArguments": [
													{
														"type": "reference",
														"target": 37908,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 42239,
													"typeArguments": [
														{
															"type": "reference",
															"target": 37908,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 37892,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37908,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37893,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42239,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37908,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37894,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42239,
											"typeArguments": [
												{
													"type": "reference",
													"target": 37908,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 37895,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42237,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37908,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37896,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37908,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37897,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37908,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37898,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37908,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37899,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42239,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37908,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 37900,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37901,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37902,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37903,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 37904,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37905,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37906,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 37907,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										37889,
										37890,
										37891,
										37892,
										37893,
										37894,
										37895,
										37896,
										37897,
										37898,
										37899,
										37900,
										37901,
										37902,
										37903,
										37904,
										37905,
										37906,
										37907
									]
								}
							]
						}
					}
				},
				{
					"id": 37881,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 37885,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 37886,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 37886,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 37885,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 37885,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 37885,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 37887,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 37885,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 37885,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 37882,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 37883,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 37884,
																"name": "x",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"type": {
															"type": "inferred",
															"name": "V"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 37881,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 37886,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 42236,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						37909,
						37913,
						37925,
						37935,
						37943,
						38020,
						38063,
						38066
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						38069,
						38070,
						37938,
						37887,
						37881
					]
				}
			]
		},
		{
			"id": 42248,
			"name": "EntityClassName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 42249,
			"name": "EntityValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 42250,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 42251,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									42251
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 42252,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 42253,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42254,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 42255,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 42256,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42257,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 42258,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 42259,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37998,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 42260,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42261,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42262,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 42263,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 37998,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 42264,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42262,
														42263,
														42264
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42265,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42266,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 42267,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 38010,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 42268,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42269,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 42270,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 38013,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 42271,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42272,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 42273,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 42274,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 42275,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 38016,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42253,
						42265,
						42268,
						42271
					]
				}
			],
			"typeParameters": [
				{
					"id": 42276,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 37943,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 38020,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 42243,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42247,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42244,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 42245,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 42246,
									"name": "k",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 42247,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 42237,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42238,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 42238,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 42238,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 43087,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 37881,
						"typeArguments": [
							{
								"type": "reference",
								"target": 42238,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 43091,
					"typeArguments": [
						{
							"type": "reference",
							"target": 42238,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 42239,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42240,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 42240,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 42240,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 42240,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 43087,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 43088,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 43089,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 43090,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										43089
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 43244,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43245,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43245,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 43245,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 43245,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 43234,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43243,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 43243,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 43235,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 43236,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									43236
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 43244,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 43243,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 43237,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 43238,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										43238
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 43244,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 43243,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 43239,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 43240,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											43240
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 43244,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 43243,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 43241,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43242,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43242
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 43244,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 43223,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43224,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 43224,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 42239,
						"typeArguments": [
							{
								"type": "reference",
								"target": 43224,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43234,
						"typeArguments": [
							{
								"type": "reference",
								"target": 43224,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 43091,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43092,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "reference",
								"target": 43223,
								"typeArguments": [
									{
										"type": "reference",
										"target": 43092,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43223,
						"typeArguments": [
							{
								"type": "reference",
								"target": 43092,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 43223,
							"typeArguments": [
								{
									"type": "reference",
									"target": 43092,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 42236,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 42241,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42242,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 42242,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 42241,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 42242,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 42242,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 42242,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 38071,
			"name": "DmlTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 38072,
					"name": "DMLSchema",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of DML schema. It must be a key-value pair\nwith string based keys and properties/relationships\nas the value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 38105,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PropertyType",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 38123,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 38073,
					"name": "IDmlEntityConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 38074,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38075,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38076,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38075,
												38076
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 38077,
					"name": "InferDmlEntityNameFromConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38082,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38073,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38082,
							"name": "TConfig",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "reference",
							"target": 37698,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38082,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCase",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38082,
								"name": "TConfig",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 38078,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38079,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38079
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 37698,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "name"
										},
										"objectType": {
											"type": "reference",
											"target": 38082,
											"name": "TConfig",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "CamelCase",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 38082,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 38080,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38081,
												"name": "tableName",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38081
												]
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"target": 37698,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "tableName"
											},
											"objectType": {
												"type": "reference",
												"target": 38082,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "CamelCase",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						}
					}
				},
				{
					"id": 38083,
					"name": "IDmlEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of a DML entity"
							}
						]
					},
					"children": [
						{
							"id": 38084,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38077,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38087,
										"name": "Config",
										"package": "@medusajs/types",
										"qualifiedName": "IDmlEntity.Config",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38085,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38086,
								"name": "Schema",
								"package": "@medusajs/types",
								"qualifiedName": "IDmlEntity.Schema",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38084,
								38085
							]
						}
					],
					"typeParameters": [
						{
							"id": 38086,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38087,
							"name": "Config",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38073,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 38088,
					"name": "KnownDataTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported data types"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "boolean"
							},
							{
								"type": "literal",
								"value": "enum"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "literal",
								"value": "bigNumber"
							},
							{
								"type": "literal",
								"value": "dateTime"
							},
							{
								"type": "literal",
								"value": "array"
							},
							{
								"type": "literal",
								"value": "json"
							},
							{
								"type": "literal",
								"value": "id"
							}
						]
					}
				},
				{
					"id": 38089,
					"name": "RelationshipTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of available relationships at DML level"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "hasOne"
							},
							{
								"type": "literal",
								"value": "hasMany"
							},
							{
								"type": "literal",
								"value": "belongsTo"
							},
							{
								"type": "literal",
								"value": "manyToMany"
							}
						]
					}
				},
				{
					"id": 38090,
					"name": "PropertyMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the property parse method"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38091,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38092,
									"name": "fieldName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38093,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 38094,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 38095,
									"name": "dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38096,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 38097,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 38088,
														"name": "KnownDataTypes",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 38098,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38097,
														38098
													]
												}
											]
										}
									}
								},
								{
									"id": 38099,
									"name": "indexes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 38100,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 38101,
														"name": "name",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 38102,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "index"
																},
																{
																	"type": "literal",
																	"value": "unique"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															38101,
															38102
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 38103,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38115,
											"name": "RelationshipMetadata",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 38104,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38092,
										38093,
										38094,
										38095,
										38099,
										38103,
										38104
									]
								}
							]
						}
					}
				},
				{
					"id": 38105,
					"name": "PropertyType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a property type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38111,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38106,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38107,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38111,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 38108,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 38109,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 38110,
													"name": "fieldName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 38090,
												"name": "PropertyMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38107
									]
								},
								{
									"title": "Methods",
									"children": [
										38108
									]
								}
							]
						}
					}
				},
				{
					"id": 38112,
					"name": "RelationshipOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options accepted by all the relationships"
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 38113,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38114,
											"name": "mappedBy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
													},
													{
														"kind": "code",
														"text": "`belongsTo`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`manyToMany`"
													},
													{
														"kind": "text",
														"text": "\nrelationship method."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38114
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 38115,
					"name": "RelationshipMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the relationship parse\nmethod"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38116,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38117,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38118,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38089,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38119,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 38120,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 38121,
									"name": "mappedBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38122,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38117,
										38118,
										38119,
										38120,
										38121,
										38122
									]
								}
							]
						}
					}
				},
				{
					"id": 38123,
					"name": "RelationshipType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a relationship type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38130,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38124,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38125,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38130,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 38126,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38089,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38127,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 38128,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 38129,
													"name": "relationshipName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 38115,
												"name": "RelationshipMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38125,
										38126
									]
								},
								{
									"title": "Methods",
									"children": [
										38127
									]
								}
							]
						}
					}
				},
				{
					"id": 38131,
					"name": "EntityConstructor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only representation of a MikroORM entity. Since we generate\nentities on the fly, we need a way to represent a type-safe\nconstructor and its instance properties."
							}
						]
					},
					"children": [
						{
							"id": 38133,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 38134,
									"name": "new EntityConstructor",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38132,
										"name": "Props",
										"package": "@medusajs/types",
										"qualifiedName": "EntityConstructor.Props",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								38133
							]
						}
					],
					"typeParameters": [
						{
							"id": 38132,
							"name": "Props",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Function"
							},
							"name": "Function",
							"package": "typescript"
						}
					]
				},
				{
					"id": 38135,
					"name": "InferForeignKeys",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "From a IDmlEntity, infer the foreign keys name and type for\n\"belongsTo\" relation meaning \"hasOne\" and \"ManyToOne\""
							}
						]
					},
					"typeParameters": [
						{
							"id": 38140,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 38140,
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 38140,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 38136,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38137,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38137
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 38089,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "string"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"nameType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 38140,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 38138,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38139,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38139
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 38089,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "templateLiteral",
									"head": "",
									"tail": [
										[
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"_id"
										]
									]
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 38141,
					"name": "InferBelongsToFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a belongsTo relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38146,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38146,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 38142,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 38143,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 38083,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 38155,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferSchemaFields",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38146,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 38144,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 38145,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 38083,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "R"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "IDmlEntity",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									]
								}
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 38155,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferSchemaFields",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 38147,
					"name": "InferHasOneFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a hasOne relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38148,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 38141,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38148,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferBelongsToFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38149,
					"name": "InferHasManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for hasMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38152,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38152,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 38150,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 38151,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 38083,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 38155,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "R"
										},
										"name": "R",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "InferSchemaFields",
								"package": "@medusajs/types"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 38153,
					"name": "InferManyToManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for manyToMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38154,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 38149,
						"typeArguments": [
							{
								"type": "reference",
								"target": 38154,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferHasManyFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38155,
					"name": "InferSchemaFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inferring the types of the schema fields from the DML\nentity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38156,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 37700,
						"typeArguments": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 38156,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 38156,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 38123,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "type"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 38156,
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										"extendsType": {
											"type": "literal",
											"value": "belongsTo"
										},
										"trueType": {
											"type": "reference",
											"target": 38141,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "$dataType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 38156,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "InferBelongsToFields",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "type"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 38156,
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											},
											"extendsType": {
												"type": "literal",
												"value": "hasOne"
											},
											"trueType": {
												"type": "reference",
												"target": 38147,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "$dataType"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 38156,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													}
												],
												"name": "InferHasOneFields",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "type"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 38156,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												"extendsType": {
													"type": "literal",
													"value": "hasMany"
												},
												"trueType": {
													"type": "reference",
													"target": 38149,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "$dataType"
															},
															"objectType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 38156,
																	"name": "Schema",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															}
														}
													],
													"name": "InferHasManyFields",
													"package": "@medusajs/types"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "type"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 38156,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													},
													"extendsType": {
														"type": "literal",
														"value": "manyToMany"
													},
													"trueType": {
														"type": "reference",
														"target": 38153,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "$dataType"
																},
																"objectType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 38156,
																		"name": "Schema",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															}
														],
														"name": "InferManyToManyFields",
														"package": "@medusajs/types"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "$dataType"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 38156,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									}
								}
							}
						],
						"name": "Prettify",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38157,
					"name": "Infer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the schema type of a DmlEntity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38158,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38158,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 38083,
							"typeArguments": [
								{
									"type": "inferred",
									"name": "Schema"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 38131,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38155,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "InferSchemaFields",
									"package": "@medusajs/types"
								}
							],
							"name": "EntityConstructor",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 38159,
					"name": "ExtractEntityRelations",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extracts names of relationships from a schema"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38162,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 38163,
							"name": "OfType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38089,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "intersection",
								"types": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 38162,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"objectType": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intersection",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 38162,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 38162,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 38123,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 38162,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 38160,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 38161,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 38163,
															"name": "OfType",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															38161
														]
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				},
				{
					"id": 38164,
					"name": "EntityCascades",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actions to cascade from a given entity to its\nrelationship."
							}
						]
					},
					"typeParameters": [
						{
							"id": 38167,
							"name": "Relationships",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38165,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38166,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The related models to delete when a record of this data model\nis deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 38167,
										"name": "Relationships",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38166
									]
								}
							]
						}
					}
				},
				{
					"id": 38168,
					"name": "InferTypeOf",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the instance type of a IDmlEntity once converted as an Entity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38169,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38083,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "InstanceType"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 38157,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38169,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Infer",
								"package": "@medusajs/types"
							}
						],
						"name": "InstanceType",
						"package": "typescript"
					}
				},
				{
					"id": 38170,
					"name": "InferEntityType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used in the module sdk internal service to infer propert entity typings from DML"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38171,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 38171,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 38083,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 38168,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38171,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferTypeOf",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 38171,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 38172,
					"name": "InferIndexableProperties",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer all indexable properties from a DML entity including inferred foreign keys and excluding relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 38175,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 38175,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": 38083,
								"typeArguments": [
									{
										"type": "inferred",
										"name": "Schema"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							},
							"trueType": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "intrinsic",
											"name": "string"
										},
										"nameType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Schema"
													},
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "reflection",
												"declaration": {
													"id": 38173,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 38174,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "inferred",
																"name": "Type"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																38174
															]
														}
													]
												}
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Type"
													},
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "reference",
													"target": 38089,
													"name": "RelationshipTypes",
													"package": "@medusajs/types"
												},
												"trueType": {
													"type": "intrinsic",
													"name": "never"
												},
												"falseType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"falseType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									{
										"type": "reference",
										"target": 38135,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferForeignKeys",
										"package": "@medusajs/types"
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 38176,
					"name": "EntityIndex",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38182,
							"name": "TSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38183,
							"name": "TWhere",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38177,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38178,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the index. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38179,
									"name": "unique",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When enabled, a unique index is created on the specified\nproperties."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 38180,
									"name": "on",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of properties to create the index on."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38172,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38083,
													"typeArguments": [
														{
															"type": "reference",
															"target": 38182,
															"name": "TSchema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "IDmlEntity",
													"package": "@medusajs/types"
												}
											],
											"name": "InferIndexableProperties",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 38181,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Conditions to restrict which records are indexed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 38183,
										"name": "TWhere",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38178,
										38179,
										38180,
										38181
									]
								}
							]
						}
					}
				},
				{
					"id": 38184,
					"name": "SimpleQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 38185,
					"name": "NeQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38186,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38187,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38184,
										"name": "SimpleQueryValue",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38187
									]
								}
							]
						}
					}
				},
				{
					"id": 38188,
					"name": "QueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 38184,
								"name": "SimpleQueryValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 38185,
								"name": "NeQueryValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 38189,
					"name": "QueryCondition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38190,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 38072,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "schema"
								},
								"objectType": {
									"type": "reference",
									"target": 38083,
									"typeArguments": [
										{
											"type": "reference",
											"target": 38190,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "IDmlEntity",
									"package": "@medusajs/types"
								}
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 38190,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "reference",
								"target": 38188,
								"name": "QueryValue",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "reference",
								"target": 38189,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38190,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryCondition",
								"package": "@medusajs/types"
							}
						},
						"optionalModifier": "+"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						38083,
						38131
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						38072,
						38073,
						38077,
						38088,
						38089,
						38090,
						38105,
						38112,
						38115,
						38123,
						38135,
						38141,
						38147,
						38149,
						38153,
						38155,
						38157,
						38159,
						38164,
						38168,
						38170,
						38172,
						38176,
						38184,
						38185,
						38188,
						38189
					]
				}
			]
		},
		{
			"id": 38191,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 38192,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38196,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38193,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 38194,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38195,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38207,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38196,
														"name": "TData",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Event",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 38197,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38198,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38199,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38199
									]
								}
							]
						}
					}
				},
				{
					"id": 38200,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38201,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38202,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38203,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38192,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38202,
										38203
									]
								}
							]
						}
					}
				},
				{
					"id": 38204,
					"name": "EventMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 38205,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38206,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38206
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 38207,
					"name": "Event",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38212,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38208,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38209,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38210,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38204,
										"name": "EventMetadata",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 38211,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38212,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38209,
										38210,
										38211
									]
								}
							]
						}
					}
				},
				{
					"id": 38213,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38216,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 38207,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38216,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 38214,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38215,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38215
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 38217,
					"name": "RawMessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38226,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38218,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38219,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38220,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 38226,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 38221,
									"name": "source",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38222,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38223,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38224,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "eventGroupId"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								},
								{
									"id": 38225,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38219,
										38220,
										38221,
										38222,
										38223,
										38224,
										38225
									]
								}
							]
						}
					}
				},
				{
					"id": 38242,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38243,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38244,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 38245,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 38246,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 38213,
														"typeArguments": [
															{
																"type": "reference",
																"target": 38245,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38213,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 38245,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 38247,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38248,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38249,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38250,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 38251,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38192,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38252,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38197,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 38253,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38254,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38255,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 38256,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38192,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38257,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38197,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 38258,
							"name": "releaseGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38259,
									"name": "releaseGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38260,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38261,
							"name": "clearGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38262,
									"name": "clearGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38263,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								38243,
								38248,
								38253,
								38258,
								38261
							]
						}
					]
				},
				{
					"id": 38227,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38228,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38229,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38230,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 38231,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38192,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38232,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38197,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 38233,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38234,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 38235,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 38236,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38192,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38237,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 38197,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 38238,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38239,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 38240,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 38241,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 38213,
														"typeArguments": [
															{
																"type": "reference",
																"target": 38240,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38213,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 38240,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								38228,
								38233,
								38238
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 41438,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						38242,
						38227
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						38192,
						38197,
						38200,
						38204,
						38207,
						38213,
						38217
					]
				}
			]
		},
		{
			"id": 38264,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 38265,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38266,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38267,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 38268,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 38269,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 38270,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38271,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 38272,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 38273,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38266,
								38270
							]
						}
					]
				},
				{
					"id": 38273,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 38274,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 38275,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 38276,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											38275,
											38276
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 38277,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38278,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38279,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38280,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38281,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38282,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38279,
										38280,
										38281,
										38282
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						38265
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						38273,
						38277
					]
				}
			]
		},
		{
			"id": 41800,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 41801,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41802,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41801,
						41802
					]
				}
			]
		},
		{
			"id": 41803,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 41804,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 41805,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 41806,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41807,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41804,
						41805,
						41806,
						41807
					]
				}
			]
		},
		{
			"id": 41808,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 41809,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41810,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41809,
						41810
					]
				}
			]
		},
		{
			"id": 41811,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 41812,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41812
					]
				}
			]
		},
		{
			"id": 41813,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 41814,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41815,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41816,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41814,
						41815,
						41816
					]
				}
			]
		},
		{
			"id": 38283,
			"name": "FileTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 38284,
					"name": "FileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File details."
							}
						]
					},
					"children": [
						{
							"id": 38285,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38286,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38285,
								38286
							]
						}
					]
				},
				{
					"id": 38287,
					"name": "FilterableFileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a currency."
							}
						]
					},
					"children": [
						{
							"id": 38288,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file ID to filter by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38288
							]
						}
					]
				},
				{
					"id": 38289,
					"name": "CreateFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File to be created."
							}
						]
					},
					"children": [
						{
							"id": 38290,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38291,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38292,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38293,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38290,
								38291,
								38292,
								38293
							]
						}
					]
				},
				{
					"id": 38337,
					"name": "ProviderFileResultDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of a file upload's result."
							}
						]
					},
					"children": [
						{
							"id": 38338,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38339,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38338,
								38339
							]
						}
					]
				},
				{
					"id": 38340,
					"name": "ProviderGetFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a file to retrieve."
							}
						]
					},
					"children": [
						{
							"id": 38341,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38341
							]
						}
					]
				},
				{
					"id": 38342,
					"name": "ProviderDeleteFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to remove."
							}
						]
					},
					"children": [
						{
							"id": 38343,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. When uploading a file, the\nreturned key is used here."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38343
							]
						}
					]
				},
				{
					"id": 38344,
					"name": "ProviderUploadFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to create."
							}
						]
					},
					"children": [
						{
							"id": 38345,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38346,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38347,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38348,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38345,
								38346,
								38347,
								38348
							]
						}
					]
				},
				{
					"id": 38349,
					"name": "IFileProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38350,
							"name": "upload",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38351,
									"name": "upload",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to upload a file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the upload's result."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38352,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contents and metadata of the file.\nAmong the file’s details, you can access the file’s path in the "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": " property of the file object."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38344,
												"name": "ProviderUploadFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38337,
												"name": "ProviderFileResultDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38353,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38354,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to delete a file from storage."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38355,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38342,
												"name": "ProviderDeleteFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38356,
							"name": "getPresignedDownloadUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38357,
									"name": "getPresignedDownloadUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a download URL of the file. For some file services, such as S3, a presigned URL indicates a temporary URL to get access to a file.\n\nIf your file service doesn’t perform or offer a similar functionality, you can just return the URL to download the file."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL to download the file"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38358,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38340,
												"name": "ProviderGetFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								38350,
								38353,
								38356
							]
						}
					]
				},
				{
					"id": 38370,
					"name": "LocalFileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38371,
							"name": "upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38372,
							"name": "private_upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38373,
							"name": "backend_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38371,
								38372,
								38373
							]
						}
					]
				},
				{
					"id": 38359,
					"name": "S3FileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38360,
							"name": "file_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38361,
							"name": "access_key_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38362,
							"name": "secret_access_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38363,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38364,
							"name": "bucket",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38365,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38366,
							"name": "endpoint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38367,
							"name": "cache_control",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38368,
							"name": "download_file_duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38369,
							"name": "additional_client_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38360,
								38361,
								38362,
								38363,
								38364,
								38365,
								38366,
								38367,
								38368,
								38369
							]
						}
					]
				},
				{
					"id": 38294,
					"name": "IFileModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the File Module."
							}
						]
					},
					"children": [
						{
							"id": 38295,
							"name": "createFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38296,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads files to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created files."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst [file] = await fileModuleService.createFiles([{\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n}])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38297,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The files to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38289,
													"name": "CreateFileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 38298,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38284,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 38299,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads a file to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.createFiles({\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38300,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38289,
												"name": "CreateFileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38301,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38284,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38302,
							"name": "deleteFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38303,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes files by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the files are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles([\"file_123\"])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38304,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the files."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 38305,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 38306,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38307,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38308,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38309,
							"name": "retrieveFile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38310,
									"name": "retrieveFile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file with a downloadable URL by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.retrieveFile(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38311,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38312,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the file is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38284,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38313,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38284,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38314,
							"name": "listFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38315,
									"name": "listFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the list method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38316,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38287,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38317,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38284,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38318,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38284,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 38319,
							"name": "listAndCountFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 38320,
									"name": "listAndCountFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the listAndCount method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files and their count. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 38321,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38287,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38322,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38284,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38323,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38284,
															"name": "FileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								38295,
								38302,
								38309,
								38314,
								38319
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 40714,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						38284,
						38287,
						38289,
						38337,
						38340,
						38342,
						38344,
						38349,
						38370,
						38359,
						38294
					]
				}
			]
		},
		{
			"id": 41817,
			"name": "AddFulfillmentShippingOptionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 41818,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41819,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option-rule.ts",
										"qualifiedName": "CreateShippingOptionRuleDTO"
									},
									"name": "CreateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41819
							]
						}
					]
				}
			}
		},
		{
			"id": 41820,
			"name": "RemoveFulfillmentShippingOptionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 41821,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41822,
							"name": "ids",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41822
							]
						}
					]
				}
			}
		},
		{
			"id": 41823,
			"name": "UpdateFulfillmentShippingOptionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 41824,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41825,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/fulfillment/mutations/shipping-option-rule.ts",
										"qualifiedName": "UpdateShippingOptionRuleDTO"
									},
									"name": "UpdateShippingOptionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41825
							]
						}
					]
				}
			}
		},
		{
			"id": 42317,
			"name": "ClaimReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 42318,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 42319,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 42320,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 42321,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						42318,
						42319,
						42320,
						42321
					]
				}
			]
		},
		{
			"id": 42309,
			"name": "AdminClaimAddItems",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42310,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to add to the claim."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 42311,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 42312,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The ID of the item in the order."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 42313,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The quantity to claim."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 42314,
										"name": "reason",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The reason for adding this item to the claim."
												}
											]
										},
										"type": {
											"type": "reference",
											"target": 42317,
											"name": "ClaimReason",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 42315,
										"name": "description",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The claim item's description."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 42316,
										"name": "internal_note",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "An internal note viewed by admin users only."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											42312,
											42313,
											42314,
											42315,
											42316
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42310
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38480,
					"name": "AdminAddClaimItems"
				},
				{
					"type": "reference",
					"target": 38493,
					"name": "AdminAddClaimInboundItems"
				},
				{
					"type": "reference",
					"target": 38506,
					"name": "AdminAddClaimOutboundItems"
				}
			]
		},
		{
			"id": 42322,
			"name": "AdminClaimUpdateItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42323,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item's claimed quantity."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42324,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated claim reason."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42325,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42326,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An internal note viewed by admin users only."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42323,
						42324,
						42325,
						42326
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38488,
					"name": "AdminUpdateClaimItem"
				},
				{
					"type": "reference",
					"target": 38501,
					"name": "AdminUpdateClaimInboundItem"
				},
				{
					"type": "reference",
					"target": 38514,
					"name": "AdminUpdateClaimOutboundItem"
				}
			]
		},
		{
			"id": 42327,
			"name": "AdminClaimAddShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42328,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option to create the method from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42329,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A custom amount to use instead of the shipping option's amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42330,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The method's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42331,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An internal note viewed by admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42332,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42328,
						42329,
						42330,
						42331,
						42332
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38519,
					"name": "AdminClaimAddInboundShipping"
				},
				{
					"type": "reference",
					"target": 38529,
					"name": "AdminClaimAddOutboundShipping"
				}
			]
		},
		{
			"id": 42333,
			"name": "AdminClaimUpdateShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42334,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A custom amount to use instead of the shipping option's amount."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42335,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An internal note viewed by admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42336,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42334,
						42335,
						42336
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38525,
					"name": "AdminClaimUpdateInboundShipping"
				},
				{
					"type": "reference",
					"target": 38535,
					"name": "AdminClaimUpdateOutboundShipping"
				}
			]
		},
		{
			"id": 42298,
			"name": "BaseClaimItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42299,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42300,
					"name": "claim_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42301,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42302,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42303,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42304,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42305,
					"name": "raw_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42190,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42306,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42307,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42308,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42299,
						42300,
						42301,
						42302,
						42303,
						42304,
						42305,
						42306,
						42307,
						42308
					]
				}
			]
		},
		{
			"id": 42277,
			"name": "BaseClaim",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42278,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42279,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's type."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
							"qualifiedName": "OrderClaimType"
						},
						"name": "OrderClaimType",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42280,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order this claim was created for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42281,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42282,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42283,
					"name": "order_version",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The version of the order when the claim is applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42284,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The amount to be refunded due to this claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42285,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the user that created this claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42286,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the claim was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42287,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the claim was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42288,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the claim was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42289,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the claim was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42290,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's additional items if its "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": " is "
							},
							{
								"kind": "code",
								"text": "`replace`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42298,
							"name": "BaseClaimItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42291,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42298,
							"name": "BaseClaimItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42292,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to notify the customer about changes in the claim."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42293,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The order this claim was created for."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
							"qualifiedName": "BaseOrder"
						},
						"name": "BaseOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42294,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 42526,
						"name": "BaseReturn",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42295,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping methods of the claim's additional items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrderShippingMethod"
							},
							"name": "BaseOrderShippingMethod",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42296,
					"name": "transactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The claim's transactions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrderTransaction"
							},
							"name": "BaseOrderTransaction",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42297,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42278,
						42279,
						42280,
						42281,
						42282,
						42283,
						42284,
						42285,
						42286,
						42287,
						42288,
						42289,
						42290,
						42291,
						42292,
						42293,
						42294,
						42295,
						42296,
						42297
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38453,
					"name": "AdminClaim"
				}
			]
		},
		{
			"id": 42337,
			"name": "BaseClaimListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42338,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Query or keywords to search the claim's searchable fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42339,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by ID(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42340,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve the claims of the specified order ID(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42341,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by status(es)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42342,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the claim's creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42343,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the claim's update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42344,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the claim's deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42348,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38644,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 42345,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items to retrieve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38641,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 42346,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip before retrieving the returned items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38642,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 42347,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort by and in which order."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n-created_at\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38643,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42338,
						42339,
						42340,
						42341,
						42342,
						42343,
						42344,
						42348,
						42345,
						42346,
						42347
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38640,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38542,
					"name": "AdminClaimListParams"
				}
			]
		},
		{
			"id": 42349,
			"name": "BaseCollection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42350,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42351,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection's title."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42352,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection's handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42353,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the collection was created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42354,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the collection was updated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42355,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the collection was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42356,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The collection's products."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
								"qualifiedName": "BaseProduct"
							},
							"name": "BaseProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42357,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42350,
						42351,
						42352,
						42353,
						42354,
						42355,
						42356,
						42357
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38589,
					"name": "AdminCollection"
				}
			]
		},
		{
			"id": 42371,
			"name": "BaseCollectionParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42372,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38639,
						"name": "SelectParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42372
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38638,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38623,
					"name": "AdminCollectionParams"
				}
			]
		},
		{
			"id": 42358,
			"name": "BaseCollectionListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 42369,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 42358,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 37909,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42358,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 37910,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 42370,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 42358,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 37909,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42358,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 37911,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 42359,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A query or keywords to search the collection's searchable fields by."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42360,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by collection ID(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42361,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by collection handle(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42362,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by collection title(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42363,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Apply filters on collection creation dates."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42364,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Apply filters on collection update dates."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42368,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38644,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 42365,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items to retrieve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38641,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 42366,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip before retrieving the returned items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38642,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 42367,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort by and in which order."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n-created_at\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38643,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42369,
						42370,
						42359,
						42360,
						42361,
						42362,
						42363,
						42364,
						42368,
						42365,
						42366,
						42367
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38640,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 37909,
					"typeArguments": [
						{
							"type": "reference",
							"target": 42358,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38609,
					"name": "AdminCollectionListParams"
				}
			]
		},
		{
			"id": 42373,
			"name": "BaseCustomerGroup",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42374,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer group's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42375,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customer group's name."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42376,
					"name": "customers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The customers in the group."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/customer/common.ts",
								"qualifiedName": "BaseCustomer"
							},
							"name": "BaseCustomer",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42377,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42378,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the customer group was created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42379,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the customer group was updated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42374,
						42375,
						42376,
						42377,
						42378,
						42379
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38679,
					"name": "AdminCustomerGroup"
				}
			]
		},
		{
			"id": 42418,
			"name": "ExchangeReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 42419,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 42420,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 42421,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 42422,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						42419,
						42420,
						42421,
						42422
					]
				}
			]
		},
		{
			"id": 42410,
			"name": "AdminExchangeAddItems",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42411,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The items to add to the exchange."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 42412,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 42413,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "If you're adding an inbound item, this is the ID of the order item returned.\nIf you're adding an outbound item, this is the ID of the variant to add."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 42414,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The item's quantity."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 42415,
										"name": "reason",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The reason the item is being returned / sent to the customer."
												}
											]
										},
										"type": {
											"type": "reference",
											"target": 42418,
											"name": "ExchangeReason",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 42416,
										"name": "description",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "The item's description."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 42417,
										"name": "internal_note",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"comment": {
											"summary": [
												{
													"kind": "text",
													"text": "An internal note viewed by admin users only."
												}
											]
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											42413,
											42414,
											42415,
											42416,
											42417
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42411
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38752,
					"name": "AdminAddExchangeInboundItems"
				},
				{
					"type": "reference",
					"target": 38765,
					"name": "AdminAddExchangeOutboundItems"
				}
			]
		},
		{
			"id": 42423,
			"name": "AdminExchangeUpdateItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42424,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item's quantity."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42425,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated return reason."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42426,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42427,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An internal note viewed by admin users only."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42424,
						42425,
						42426,
						42427
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38760,
					"name": "AdminUpdateExchangeInboundItem"
				},
				{
					"type": "reference",
					"target": 38773,
					"name": "AdminUpdateExchangeOutboundItem"
				}
			]
		},
		{
			"id": 42428,
			"name": "AdminExchangeAddShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42429,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the shipping option the method is created from."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42430,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A custom amount for the shipping method. If not specified,\nthe shipping option's amount is used."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42431,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping method's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42432,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An internal note viewed by admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42433,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42429,
						42430,
						42431,
						42432,
						42433
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38778,
					"name": "AdminExchangeAddInboundShipping"
				},
				{
					"type": "reference",
					"target": 38788,
					"name": "AdminExchangeAddOutboundShipping"
				}
			]
		},
		{
			"id": 42434,
			"name": "AdminExchangeUpdateShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42435,
					"name": "custom_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A custom amount for the shipping method."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42436,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An internal note viewed by admin users only."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42437,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42435,
						42436,
						42437
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38784,
					"name": "AdminExchangeUpdateInboundShipping"
				},
				{
					"type": "reference",
					"target": 38794,
					"name": "AdminExchangeUpdateOutboundShipping"
				}
			]
		},
		{
			"id": 42401,
			"name": "BaseExchangeItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42402,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42403,
					"name": "exchange_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the exchange this item belongs to."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42404,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated order."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42405,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order item, which is added\nto the order when the exchange is confirmed."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42406,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The item's quantity."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42407,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 42408,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the exchange item was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42409,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the exchange item was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42402,
						42403,
						42404,
						42405,
						42406,
						42407,
						42408,
						42409
					]
				}
			]
		},
		{
			"id": 42380,
			"name": "BaseExchange",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42381,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42382,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the order this exchange is created for."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42383,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated return."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42384,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange's display ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42385,
					"name": "order_version",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The version of the order when the exchange is applied."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42386,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the user that created the exchange."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42387,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the exchange was created."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42388,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the exchange was updated."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42389,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the exchange was canceled."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42390,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the exchange was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42391,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange's new (outbound) items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42401,
							"name": "BaseExchangeItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42392,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange's returned (inbound) items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 39427,
							"name": "AdminReturnItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42393,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to notify the customer about changes in the exchange."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42394,
					"name": "difference_due",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange's difference amount due, either to the customer or the merchant.\n\nIf the value is positive, the customer owes the merchant additional payment of this amount.\nIf negative, the merchant owes the customer a refund of this amount."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42395,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated return."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 39437,
						"name": "AdminReturn",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42396,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated order."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
							"qualifiedName": "BaseOrder"
						},
						"name": "BaseOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42397,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether out-of-stock variants can be added as new items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42398,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The shipping methods used to send the outbound items."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrderShippingMethod"
							},
							"name": "BaseOrderShippingMethod",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42399,
					"name": "transactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The exchange's transactions."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrderTransaction"
							},
							"name": "BaseOrderTransaction",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42400,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42381,
						42382,
						42383,
						42384,
						42385,
						42386,
						42387,
						42388,
						42389,
						42390,
						42391,
						42392,
						42393,
						42394,
						42395,
						42396,
						42397,
						42398,
						42399,
						42400
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38726,
					"name": "AdminExchange"
				}
			]
		},
		{
			"id": 42438,
			"name": "BaseFile",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42439,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42440,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42439,
						42440
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38832,
					"name": "AdminFile"
				},
				{
					"type": "reference",
					"target": 38841,
					"name": "StoreFile"
				}
			]
		},
		{
			"id": 42441,
			"name": "BaseUploadFile",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 42442,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 42443,
									"name": "files",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 42444,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 42445,
																"name": "name",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 42446,
																"name": "content",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	42445,
																	42446
																]
															}
														]
													}
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
														"qualifiedName": "File"
													},
													"name": "File",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										42443
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "FileList"
						},
						"name": "FileList",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 42447,
			"name": "BaseFulfillmentProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42448,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fulfillment provider's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42449,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the fulfillment provider is enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42448,
						42449
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 38844,
					"name": "AdminFulfillmentProvider"
				}
			]
		},
		{
			"id": 43225,
			"name": "AdminUpsertGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43226,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43227,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43228,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43226,
						43227,
						43228
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 43093,
					"name": "AdminUpsertFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 43097,
					"name": "AdminUpsertFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 43102,
					"name": "AdminUpsertFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 43108,
					"name": "AdminUpsertFulfillmentSetServiceZoneZip"
				},
				{
					"type": "reference",
					"target": 43229,
					"name": "AdminUpdateGeoZone"
				}
			]
		},
		{
			"id": 43093,
			"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43095,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43227,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 43096,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43228,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 43094,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 43226,
						"name": "AdminUpsertGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43095,
						43096,
						43094
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43225,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 43097,
			"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43100,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43227,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 43101,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43228,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 43098,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 43226,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 43099,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's province code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43100,
						43101,
						43098,
						43099
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43225,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 43102,
			"name": "AdminUpsertFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43106,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43227,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 43107,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43228,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 43103,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 43226,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 43104,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's province code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43105,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's city."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43106,
						43107,
						43103,
						43104,
						43105
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43225,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 43108,
			"name": "AdminUpsertFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43113,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43227,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 43114,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43228,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 43109,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 43226,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 43110,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's province code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43111,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's city."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43112,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's postal expression or ZIP code."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43113,
						43114,
						43109,
						43110,
						43111,
						43112
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43225,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 42450,
			"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 43093,
						"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43097,
						"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43102,
						"name": "AdminUpsertFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43108,
						"name": "AdminUpsertFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 43229,
			"name": "AdminUpdateGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43231,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43226,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 43232,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43227,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 43233,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43228,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 43230,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43231,
						43232,
						43233,
						43230
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43225,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 43115,
					"name": "AdminUpdateFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 43120,
					"name": "AdminUpdateFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 43126,
					"name": "AdminUpdateFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 43133,
					"name": "AdminUpdateFulfillmentSetServiceZoneZip"
				}
			]
		},
		{
			"id": 43115,
			"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43118,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43232,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 43119,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43233,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 43117,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43230,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 43116,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 43231,
						"name": "AdminUpdateGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43118,
						43119,
						43117,
						43116
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43229,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 43120,
			"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43124,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43232,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 43125,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43233,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 43123,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43230,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 43121,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 43231,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 43122,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's province code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43124,
						43125,
						43123,
						43121,
						43122
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43229,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 43126,
			"name": "AdminUpdateFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43131,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43232,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 43132,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43233,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 43130,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43230,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 43127,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 43231,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 43128,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's province code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43129,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's city."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43131,
						43132,
						43130,
						43127,
						43128,
						43129
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43229,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 43133,
			"name": "AdminUpdateFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43139,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's country code."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nus\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43232,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 43140,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43233,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 43138,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the geo zone to update."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 43230,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 43134,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's type."
							}
						]
					},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 43231,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 43135,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's province code."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43136,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's city."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43137,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The geo zone's postal expression or ZIP code."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43139,
						43140,
						43138,
						43134,
						43135,
						43136,
						43137
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 43229,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 42451,
			"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 43115,
						"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43120,
						"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43126,
						"name": "AdminUpdateFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 43133,
						"name": "AdminUpdateFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 38374,
			"name": "HttpTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 38375,
					"name": "BaseAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38376,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38377,
							"name": "customer_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38378,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38379,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38380,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38381,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38382,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38383,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38384,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38385,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38386,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38387,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38388,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38389,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38390,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38376,
								38377,
								38378,
								38379,
								38380,
								38381,
								38382,
								38383,
								38384,
								38385,
								38386,
								38387,
								38388,
								38389,
								38390
							]
						}
					]
				},
				{
					"id": 38391,
					"name": "AdminCreateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38392,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38393,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38394,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's currency code."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nusd\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38395,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38396,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the campaign and its promotions start at."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38397,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the campaign and its promotions end at."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38398,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's budget."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 38399,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 38400,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The budget's type. "
															},
															{
																"kind": "code",
																"text": "`spend`"
															},
															{
																"kind": "text",
																"text": " means the limit is set on the total amount discounted by the campaign's promotions; \n"
															},
															{
																"kind": "code",
																"text": "`usage`"
															},
															{
																"kind": "text",
																"text": " means the limit is set on the total number of times the campaign's promotions can be used."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 38401,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The budget's currency code."
															}
														],
														"blockTags": [
															{
																"tag": "@example",
																"content": [
																	{
																		"kind": "code",
																		"text": "```ts\nusd\n```"
																	}
																]
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 38402,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The budget's limit."
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38400,
														38401,
														38402
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38392,
								38393,
								38394,
								38395,
								38396,
								38397,
								38398
							]
						}
					]
				},
				{
					"id": 38403,
					"name": "AdminUpdateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38404,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38405,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38406,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's currency code."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nusd\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38407,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38408,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the campaign and its promotions start at."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38409,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the campaign and its promotions end at."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38410,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's budget."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 38411,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 38412,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The budget's type. "
															},
															{
																"kind": "code",
																"text": "`spend`"
															},
															{
																"kind": "text",
																"text": " means the limit is set on the total amount discounted by the campaign's promotions; \n"
															},
															{
																"kind": "code",
																"text": "`usage`"
															},
															{
																"kind": "text",
																"text": " means the limit is set on the total number of times the campaign's promotions can be used."
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 38413,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The budget's currency code."
															}
														],
														"blockTags": [
															{
																"tag": "@example",
																"content": [
																	{
																		"kind": "code",
																		"text": "```ts\nusd\n```"
																	}
																]
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 38414,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The budget's limit."
															}
														]
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38412,
														38413,
														38414
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38404,
								38405,
								38406,
								38407,
								38408,
								38409,
								38410
							]
						}
					]
				},
				{
					"id": 38415,
					"name": "AdminGetCampaignsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 38416,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38417,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38418,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38419,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38420,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38420
											]
										}
									]
								}
							}
						},
						{
							"id": 38421,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38415,
									"name": "AdminGetCampaignsParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 38422,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38415,
									"name": "AdminGetCampaignsParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 38426,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 38423,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 38424,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 38425,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38416,
								38417,
								38418,
								38421,
								38422,
								38426,
								38423,
								38424,
								38425
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38415,
									"name": "AdminGetCampaignsParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38427,
					"name": "AdminGetCampaignParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38428,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38428
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38429,
					"name": "AdminCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38430,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38431,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38432,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38433,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's currency code."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nusd\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38434,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's identifier."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38435,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the campaign and its promotions start at."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38436,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the campaign and its promotions end at."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38437,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's budget."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 38438,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38439,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The budget's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38440,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The budget's type. "
													},
													{
														"kind": "code",
														"text": "`spend`"
													},
													{
														"kind": "text",
														"text": " means the limit is set on the total amount discounted by the campaign's promotions; \n"
													},
													{
														"kind": "code",
														"text": "`usage`"
													},
													{
														"kind": "text",
														"text": " means the limit is set on the total number of times the campaign's promotions can be used."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
													"qualifiedName": "CampaignBudgetTypeValues"
												},
												"name": "CampaignBudgetTypeValues",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 38441,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The budget's currency code."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```ts\nusd\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 38442,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The budget's limit."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 38443,
											"name": "used",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "How much of the budget has been used. If the limit is "
													},
													{
														"kind": "code",
														"text": "`spend`"
													},
													{
														"kind": "text",
														"text": ", this property holds the total amount \ndiscounted so far. If the limit is "
													},
													{
														"kind": "code",
														"text": "`usage`"
													},
													{
														"kind": "text",
														"text": ", it holds the number of times the campaign's\npromotions have been used so far."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38439,
												38440,
												38441,
												38442,
												38443
											]
										}
									]
								}
							}
						},
						{
							"id": 38444,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38445,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38446,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38430,
								38431,
								38432,
								38433,
								38434,
								38435,
								38436,
								38437,
								38444,
								38445,
								38446
							]
						}
					]
				},
				{
					"id": 38447,
					"name": "AdminCampaignListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 38448,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38449,
											"name": "campaigns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38429,
													"name": "AdminCampaign",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38449
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38450,
					"name": "AdminCampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38451,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The campaign's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38429,
								"name": "AdminCampaign",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38451
							]
						}
					]
				},
				{
					"id": 38452,
					"name": "AdminCampaignDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "campaign"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38453,
					"name": "AdminClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38454,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order this claim is created for."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrder"
								},
								"name": "AdminOrder",
								"package": "@medusajs/types"
							},
							"overwrites": {
								"type": "reference",
								"target": 42293,
								"name": "BaseClaim.order"
							}
						},
						{
							"id": 38455,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							},
							"overwrites": {
								"type": "reference",
								"target": 42294,
								"name": "BaseClaim.return"
							}
						},
						{
							"id": 38456,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping methods of the claim's additional items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
										"qualifiedName": "AdminOrderShippingMethod"
									},
									"name": "AdminOrderShippingMethod",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 42295,
								"name": "BaseClaim.shipping_methods"
							}
						},
						{
							"id": 38457,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42278,
								"name": "BaseClaim.id"
							}
						},
						{
							"id": 38458,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's type."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
									"qualifiedName": "OrderClaimType"
								},
								"name": "OrderClaimType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42279,
								"name": "BaseClaim.type"
							}
						},
						{
							"id": 38459,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order this claim was created for."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42280,
								"name": "BaseClaim.order_id"
							}
						},
						{
							"id": 38460,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated return."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42281,
								"name": "BaseClaim.return_id"
							}
						},
						{
							"id": 38461,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's display ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42282,
								"name": "BaseClaim.display_id"
							}
						},
						{
							"id": 38462,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The version of the order when the claim is applied."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42283,
								"name": "BaseClaim.order_version"
							}
						},
						{
							"id": 38463,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The amount to be refunded due to this claim."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42284,
								"name": "BaseClaim.refund_amount"
							}
						},
						{
							"id": 38464,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the user that created this claim."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42285,
								"name": "BaseClaim.created_by"
							}
						},
						{
							"id": 38465,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the claim was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42286,
								"name": "BaseClaim.created_at"
							}
						},
						{
							"id": 38466,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the claim was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42287,
								"name": "BaseClaim.updated_at"
							}
						},
						{
							"id": 38467,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the claim was canceled."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42288,
								"name": "BaseClaim.canceled_at"
							}
						},
						{
							"id": 38468,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the claim was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42289,
								"name": "BaseClaim.deleted_at"
							}
						},
						{
							"id": 38469,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's additional items if its "
									},
									{
										"kind": "code",
										"text": "`type`"
									},
									{
										"kind": "text",
										"text": " is "
									},
									{
										"kind": "code",
										"text": "`replace`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42298,
									"name": "BaseClaimItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42290,
								"name": "BaseClaim.additional_items"
							}
						},
						{
							"id": 38470,
							"name": "claim_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42298,
									"name": "BaseClaimItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42291,
								"name": "BaseClaim.claim_items"
							}
						},
						{
							"id": 38471,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to notify the customer about changes in the claim."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42292,
								"name": "BaseClaim.no_notification"
							}
						},
						{
							"id": 38472,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's transactions."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
										"qualifiedName": "BaseOrderTransaction"
									},
									"name": "BaseOrderTransaction",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42296,
								"name": "BaseClaim.transactions"
							}
						},
						{
							"id": 38473,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42297,
								"name": "BaseClaim.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38454,
								38455,
								38456,
								38457,
								38458,
								38459,
								38460,
								38461,
								38462,
								38463,
								38464,
								38465,
								38466,
								38467,
								38468,
								38469,
								38470,
								38471,
								38472,
								38473
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42277,
							"name": "BaseClaim",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38474,
					"name": "AdminCreateClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38475,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's type. If "
									},
									{
										"kind": "code",
										"text": "`refund`"
									},
									{
										"kind": "text",
										"text": ", it means the claim's items\nare returned and the customer is refunded. If "
									},
									{
										"kind": "code",
										"text": "`replace`"
									},
									{
										"kind": "text",
										"text": ", it\nmeans the merchant will send new items in place of the returned items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "replace"
									},
									{
										"type": "literal",
										"value": "refund"
									}
								]
							}
						},
						{
							"id": 38476,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order this claim is created for."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38477,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38478,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38479,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38475,
								38476,
								38477,
								38478,
								38479
							]
						}
					]
				},
				{
					"id": 38480,
					"name": "AdminAddClaimItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38481,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to add to the claim."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 38482,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38483,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the item in the order."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38484,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The quantity to claim."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 38485,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The reason for adding this item to the claim."
														}
													]
												},
												"type": {
													"type": "reference",
													"target": 42317,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 38486,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The claim item's description."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38487,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "An internal note viewed by admin users only."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38483,
													38484,
													38485,
													38486,
													38487
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42310,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38481
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42309,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38488,
					"name": "AdminUpdateClaimItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38489,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's claimed quantity."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42323,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 38490,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated claim reason."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42324,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 38491,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42325,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 38492,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42326,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38489,
								38490,
								38491,
								38492
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42322,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38493,
					"name": "AdminAddClaimInboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38494,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to add to the claim."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 38495,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38496,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the item in the order."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38497,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The quantity to claim."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 38498,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The reason for adding this item to the claim."
														}
													]
												},
												"type": {
													"type": "reference",
													"target": 42317,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 38499,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The claim item's description."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38500,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "An internal note viewed by admin users only."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38496,
													38497,
													38498,
													38499,
													38500
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42310,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38494
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42309,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38501,
					"name": "AdminUpdateClaimInboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38502,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's claimed quantity."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42323,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 38503,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated claim reason."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42324,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 38504,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42325,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 38505,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42326,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38502,
								38503,
								38504,
								38505
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42322,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38506,
					"name": "AdminAddClaimOutboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38507,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to add to the claim."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 38508,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38509,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The ID of the item in the order."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38510,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The quantity to claim."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 38511,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The reason for adding this item to the claim."
														}
													]
												},
												"type": {
													"type": "reference",
													"target": 42317,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 38512,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The claim item's description."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38513,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "An internal note viewed by admin users only."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38509,
													38510,
													38511,
													38512,
													38513
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42310,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38507
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42309,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38514,
					"name": "AdminUpdateClaimOutboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38515,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's claimed quantity."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42323,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 38516,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated claim reason."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42324,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 38517,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42325,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 38518,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42326,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38515,
								38516,
								38517,
								38518
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42322,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38519,
					"name": "AdminClaimAddInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38520,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option to create the method from."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42328,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 38521,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount to use instead of the shipping option's amount."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42329,
								"name": "AdminClaimAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 38522,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The method's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42330,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 38523,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42331,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 38524,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42332,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38520,
								38521,
								38522,
								38523,
								38524
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42327,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38525,
					"name": "AdminClaimUpdateInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38526,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount to use instead of the shipping option's amount."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42334,
								"name": "AdminClaimUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 38527,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42335,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 38528,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42336,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38526,
								38527,
								38528
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42333,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38529,
					"name": "AdminClaimAddOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38530,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option to create the method from."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42328,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 38531,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount to use instead of the shipping option's amount."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42329,
								"name": "AdminClaimAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 38532,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The method's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42330,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 38533,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42331,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 38534,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42332,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38530,
								38531,
								38532,
								38533,
								38534
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42327,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38535,
					"name": "AdminClaimUpdateOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38536,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount to use instead of the shipping option's amount."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42334,
								"name": "AdminClaimUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 38537,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42335,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 38538,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42336,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38536,
								38537,
								38538
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42333,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38539,
					"name": "AdminRequestClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 38540,
					"name": "AdminCancelClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38541,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38541
							]
						}
					]
				},
				{
					"id": 38542,
					"name": "AdminClaimListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 38554,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38542,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38542,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 38555,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38542,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38542,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 38543,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Query or keywords to search the claim's searchable fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42338,
								"name": "BaseClaimListParams.q"
							}
						},
						{
							"id": 38544,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42339,
								"name": "BaseClaimListParams.id"
							}
						},
						{
							"id": 38545,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve the claims of the specified order ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42340,
								"name": "BaseClaimListParams.order_id"
							}
						},
						{
							"id": 38546,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by status(es)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42341,
								"name": "BaseClaimListParams.status"
							}
						},
						{
							"id": 38547,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the claim's creation date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42342,
								"name": "BaseClaimListParams.created_at"
							}
						},
						{
							"id": 38548,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the claim's update date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42343,
								"name": "BaseClaimListParams.updated_at"
							}
						},
						{
							"id": 38549,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the claim's deletion date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42344,
								"name": "BaseClaimListParams.deleted_at"
							}
						},
						{
							"id": 38553,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42348,
								"name": "BaseClaimListParams.fields"
							}
						},
						{
							"id": 38550,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42345,
								"name": "BaseClaimListParams.limit"
							}
						},
						{
							"id": 38551,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42346,
								"name": "BaseClaimListParams.offset"
							}
						},
						{
							"id": 38552,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42347,
								"name": "BaseClaimListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38554,
								38555,
								38543,
								38544,
								38545,
								38546,
								38547,
								38548,
								38549,
								38553,
								38550,
								38551,
								38552
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42337,
							"name": "BaseClaimListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38542,
									"name": "AdminClaimListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38556,
					"name": "AdminClaimParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38557,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38558,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38559,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38560,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38561,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38562,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38557,
								38558,
								38559,
								38560,
								38561,
								38562
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38563,
					"name": "AdminClaimResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38564,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38453,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38564
							]
						}
					]
				},
				{
					"id": 38565,
					"name": "AdminClaimListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38571,
							"name": "claims",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of claims."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38453,
									"name": "AdminClaim",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.claims"
							}
						},
						{
							"id": 38568,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 38569,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 38570,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38571,
								38568,
								38569,
								38570
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 38566,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38567,
												"name": "claims",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The list of claims."
														}
													]
												},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 38453,
														"name": "AdminClaim",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38567
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38572,
					"name": "AdminClaimOrderResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38573,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The order's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38574,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38453,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38573,
								38574
							]
						}
					]
				},
				{
					"id": 38575,
					"name": "AdminClaimPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38576,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Preview of the order when the claim is applied."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38577,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38453,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38576,
								38577
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 38581,
							"name": "AdminClaimRequestResponse"
						}
					]
				},
				{
					"id": 38578,
					"name": "AdminClaimReturnPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38579,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Preview of the order when the claim is applied."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38580,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38579,
								38580
							]
						}
					]
				},
				{
					"id": 38581,
					"name": "AdminClaimRequestResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38583,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Preview of the order when the claim is applied."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38576,
								"name": "AdminClaimPreviewResponse.order_preview"
							}
						},
						{
							"id": 38584,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The claim's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38453,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38577,
								"name": "AdminClaimPreviewResponse.claim"
							}
						},
						{
							"id": 38582,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38583,
								38584,
								38582
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38575,
							"name": "AdminClaimPreviewResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38585,
					"name": "AdminClaimDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38586,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 38587,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "claim"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 38588,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38586,
								38587,
								38588
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "claim"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38589,
					"name": "AdminCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38590,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42350,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 38591,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection's title."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42351,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 38592,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection's handle."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42352,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 38593,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the collection was created."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42353,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 38594,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the collection was updated."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42354,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 38595,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the collection was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42355,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 38596,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The collection's products."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
										"qualifiedName": "BaseProduct"
									},
									"name": "BaseProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42356,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 38597,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42357,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38590,
								38591,
								38592,
								38593,
								38594,
								38595,
								38596,
								38597
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42349,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38598,
					"name": "AdminCreateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38599,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38600,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38601,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38599,
								38600,
								38601
							]
						}
					]
				},
				{
					"id": 38602,
					"name": "AdminUpdateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38603,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38604,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38605,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38603,
								38604,
								38605
							]
						}
					]
				},
				{
					"id": 38606,
					"name": "AdminUpdateCollectionProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38607,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 38608,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38607,
								38608
							]
						}
					]
				},
				{
					"id": 38609,
					"name": "AdminCollectionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 38621,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 42358,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42358,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42369,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 38622,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 42358,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42358,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42370,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 38610,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38611,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A query or keywords to search the collection's searchable fields by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42359,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 38612,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by collection ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42360,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 38613,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by collection handle(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42361,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 38614,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by collection title(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42362,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 38615,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on collection creation dates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42363,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 38616,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on collection update dates."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42364,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 38620,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42368,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 38617,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42365,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 38618,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42366,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 38619,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42367,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38621,
								38622,
								38610,
								38611,
								38612,
								38613,
								38614,
								38615,
								38616,
								38620,
								38617,
								38618,
								38619
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42358,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38623,
					"name": "AdminCollectionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38624,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42372,
								"name": "BaseCollectionParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38624
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42371,
							"name": "BaseCollectionParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38625,
					"name": "AdminCollectionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38626,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38589,
								"name": "AdminCollection",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38626
							]
						}
					]
				},
				{
					"id": 38627,
					"name": "AdminCollectionListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38633,
							"name": "collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38589,
									"name": "AdminCollection",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.collections"
							}
						},
						{
							"id": 38630,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 38631,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 38632,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38633,
								38630,
								38631,
								38632
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 38628,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38629,
												"name": "collections",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 38589,
														"name": "AdminCollection",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38629
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38634,
					"name": "AdminCollectionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38635,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 38636,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 38637,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38635,
								38636,
								38637
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "collection"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38676,
					"name": "AdditionalData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the additional_data property accepted in HTTP\nrequests to allow arbitrary values"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38677,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38678,
									"name": "additional_data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38678
									]
								}
							]
						}
					}
				},
				{
					"id": 38638,
					"name": "SelectParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38639,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38639
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 38427,
							"name": "AdminGetCampaignParams"
						},
						{
							"type": "reference",
							"target": 38556,
							"name": "AdminClaimParams"
						},
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams"
						},
						{
							"type": "reference",
							"target": 38719,
							"name": "AdminGetCustomerGroupParams"
						},
						{
							"type": "reference",
							"target": 38802,
							"name": "AdminExchangeListParams"
						},
						{
							"type": "reference",
							"target": 39095,
							"name": "AdminNotificationParams"
						},
						{
							"type": "reference",
							"target": 39203,
							"name": "AdminPriceListParams"
						},
						{
							"type": "reference",
							"target": 39326,
							"name": "AdminProductTagParams"
						},
						{
							"type": "reference",
							"target": 39367,
							"name": "AdminProductTypeParams"
						},
						{
							"type": "reference",
							"target": 39419,
							"name": "AdminReservationParams"
						},
						{
							"type": "reference",
							"target": 39572,
							"name": "AdminReturnReasonParams"
						},
						{
							"type": "reference",
							"target": 39911,
							"name": "AdminTaxRegionParams"
						},
						{
							"type": "reference",
							"target": 42371,
							"name": "BaseCollectionParams"
						},
						{
							"type": "reference",
							"target": 42488,
							"name": "BaseProductCategoryParams"
						}
					]
				},
				{
					"id": 38640,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38644,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 38641,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38642,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38643,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38644,
								38641,
								38642,
								38643
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 38415,
							"name": "AdminGetCampaignsParams"
						},
						{
							"type": "reference",
							"target": 38704,
							"name": "AdminGetCustomerGroupsParams"
						},
						{
							"type": "reference",
							"target": 38847,
							"name": "AdminFulfillmentProviderListParams"
						},
						{
							"type": "reference",
							"target": 38971,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 39018,
							"name": "AdminInventoryLevelFilters"
						},
						{
							"type": "reference",
							"target": 39047,
							"name": "AdminGetInvitesParams"
						},
						{
							"type": "reference",
							"target": 39085,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 39190,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 39354,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 39515,
							"name": "AdminReturnFilters"
						},
						{
							"type": "reference",
							"target": 39680,
							"name": "AdminShippingOptionListParams"
						},
						{
							"type": "reference",
							"target": 39723,
							"name": "AdminShippingProfileListParams"
						},
						{
							"type": "reference",
							"target": 39780,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 39843,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 39895,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 39974,
							"name": "AdminGetWorkflowExecutionsParams"
						},
						{
							"type": "reference",
							"target": 42337,
							"name": "BaseClaimListParams"
						},
						{
							"type": "reference",
							"target": 42358,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 42468,
							"name": "BaseProductCategoryListParams"
						},
						{
							"type": "reference",
							"target": 42499,
							"name": "BaseProductTagListParams"
						},
						{
							"type": "reference",
							"target": 42555,
							"name": "BaseReturnReasonListParams"
						}
					]
				},
				{
					"id": 38645,
					"name": "AdminBatchLink",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38646,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to create an association to."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 38647,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to remove association from."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38646,
								38647
							]
						}
					]
				},
				{
					"id": 38648,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38653,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38649,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38650,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 38651,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 38653,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 38652,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38650,
										38651,
										38652
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 38585,
							"name": "AdminClaimDeleteResponse"
						},
						{
							"type": "reference",
							"target": 38634,
							"name": "AdminCollectionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 38828,
							"name": "AdminExchangeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 38907,
							"name": "AdminFulfillmentSetDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39214,
							"name": "AdminPriceListDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39296,
							"name": "AdminProductCategoryDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39337,
							"name": "AdminProductTagDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39378,
							"name": "AdminProductTypeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39583,
							"name": "AdminReturnReasonDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39702,
							"name": "AdminShippingOptionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39742,
							"name": "AdminShippingProfileDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39804,
							"name": "AdminStockLocationDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39865,
							"name": "AdminTaxRateDeleteResponse"
						},
						{
							"type": "reference",
							"target": 39918,
							"name": "AdminTaxRegionDeleteResponse"
						}
					]
				},
				{
					"id": 38654,
					"name": "DeleteResponseWithParent",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38657,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38658,
							"name": "TParent",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 38659,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 38648,
								"typeArguments": [
									{
										"type": "reference",
										"target": 38657,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "DeleteResponse",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 38655,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38656,
											"name": "parent",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The parent resource of the item that was deleted, if applicable."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38658,
												"name": "TParent",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38656
											]
										}
									]
								}
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 38900,
							"name": "AdminServiceZoneDeleteResponse"
						}
					]
				},
				{
					"id": 38660,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38665,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 38661,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38662,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maximum number of items retrieved."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 38663,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of items to skip before retrieving the returned items."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 38664,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The total number of items."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38662,
												38663,
												38664
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 38665,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 38565,
							"name": "AdminClaimListResponse"
						},
						{
							"type": "reference",
							"target": 38627,
							"name": "AdminCollectionListResponse"
						},
						{
							"type": "reference",
							"target": 38856,
							"name": "AdminFulfillmentProviderListResponse"
						},
						{
							"type": "reference",
							"target": 39099,
							"name": "AdminNotificationListResponse"
						},
						{
							"type": "reference",
							"target": 39207,
							"name": "AdminPriceListListResponse"
						},
						{
							"type": "reference",
							"target": 39289,
							"name": "AdminProductCategoryListResponse"
						},
						{
							"type": "reference",
							"target": 39330,
							"name": "AdminProductTagListResponse"
						},
						{
							"type": "reference",
							"target": 39371,
							"name": "AdminProductTypeListResponse"
						},
						{
							"type": "reference",
							"target": 39576,
							"name": "AdminReturnReasonListResponse"
						},
						{
							"type": "reference",
							"target": 39797,
							"name": "AdminStockLocationListResponse"
						}
					]
				},
				{
					"id": 38666,
					"name": "BatchResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 38675,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38667,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 38668,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38675,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 38669,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38675,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 38670,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 38671,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 38672,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 38673,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 38674,
													"name": "deleted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														38672,
														38673,
														38674
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										38668,
										38669,
										38670
									]
								}
							]
						}
					}
				},
				{
					"id": 38679,
					"name": "AdminCustomerGroup",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38680,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customers in the group."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/customer/admin/entities.ts",
										"qualifiedName": "AdminCustomer"
									},
									"name": "AdminCustomer",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 42376,
								"name": "BaseCustomerGroup.customers"
							}
						},
						{
							"id": 38681,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42374,
								"name": "BaseCustomerGroup.id"
							}
						},
						{
							"id": 38682,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42375,
								"name": "BaseCustomerGroup.name"
							}
						},
						{
							"id": 38683,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42377,
								"name": "BaseCustomerGroup.metadata"
							}
						},
						{
							"id": 38684,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the customer group was created."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42378,
								"name": "BaseCustomerGroup.created_at"
							}
						},
						{
							"id": 38685,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the customer group was updated."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42379,
								"name": "BaseCustomerGroup.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38680,
								38681,
								38682,
								38683,
								38684,
								38685
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42373,
							"name": "BaseCustomerGroup",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38686,
					"name": "AdminCreateCustomerGroup",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38687,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38688,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38687,
								38688
							]
						}
					]
				},
				{
					"id": 38689,
					"name": "AdminUpdateCustomerGroup",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38690,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38691,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38690,
								38691
							]
						}
					]
				},
				{
					"id": 38692,
					"name": "AdminCustomerInGroupFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38693,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customer ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38694,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by email(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 38695,
							"name": "default_billing_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by IDs of default billing addresses to retrieve \ntheir associated customers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38696,
							"name": "default_shipping_address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by IDs of default shipping addresses to retrieve \ntheir associated customers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38697,
							"name": "company_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by company name(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38698,
							"name": "first_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by first name(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38699,
							"name": "last_name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by last name(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38700,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by user IDs to retrieve the customers they created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38701,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the customer's creation date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38702,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the customer's update date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38703,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the customer's deletion date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38693,
								38694,
								38695,
								38696,
								38697,
								38698,
								38699,
								38700,
								38701,
								38702,
								38703
							]
						}
					]
				},
				{
					"id": 38704,
					"name": "AdminGetCustomerGroupsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 38717,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38704,
											"name": "AdminGetCustomerGroupsParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38704,
													"name": "AdminGetCustomerGroupsParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 38718,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38704,
											"name": "AdminGetCustomerGroupsParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38704,
													"name": "AdminGetCustomerGroupsParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 38716,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 38713,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 38714,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 38715,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 38705,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Query or keywords to search the customer group's searchable fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38706,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customer group ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38707,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by name(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38708,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by customers to retrieve their associated groups."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 38692,
										"name": "AdminCustomerInGroupFilters",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 38709,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by IDs of users to retrieve the groups they created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38710,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the group's creation date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38711,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the group's update date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38712,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the group's deletion date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38717,
								38718,
								38716,
								38713,
								38714,
								38715,
								38705,
								38706,
								38707,
								38708,
								38709,
								38710,
								38711,
								38712
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38704,
									"name": "AdminGetCustomerGroupsParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38719,
					"name": "AdminGetCustomerGroupParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38720,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38720
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38721,
					"name": "AdminCustomerGroupResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38722,
							"name": "customer_group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The customer group's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38679,
								"name": "AdminCustomerGroup",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38722
							]
						}
					]
				},
				{
					"id": 38723,
					"name": "AdminCustomerGroupListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 38724,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38725,
											"name": "customer_groups",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of customer groups."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38679,
													"name": "AdminCustomerGroup",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38725
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38726,
					"name": "AdminExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38727,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42381,
								"name": "BaseExchange.id"
							}
						},
						{
							"id": 38728,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order this exchange is created for."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42382,
								"name": "BaseExchange.order_id"
							}
						},
						{
							"id": 38729,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated return."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42383,
								"name": "BaseExchange.return_id"
							}
						},
						{
							"id": 38730,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's display ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42384,
								"name": "BaseExchange.display_id"
							}
						},
						{
							"id": 38731,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The version of the order when the exchange is applied."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42385,
								"name": "BaseExchange.order_version"
							}
						},
						{
							"id": 38732,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the user that created the exchange."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42386,
								"name": "BaseExchange.created_by"
							}
						},
						{
							"id": 38733,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the exchange was created."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42387,
								"name": "BaseExchange.created_at"
							}
						},
						{
							"id": 38734,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the exchange was updated."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42388,
								"name": "BaseExchange.updated_at"
							}
						},
						{
							"id": 38735,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the exchange was canceled."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42389,
								"name": "BaseExchange.canceled_at"
							}
						},
						{
							"id": 38736,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the exchange was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42390,
								"name": "BaseExchange.deleted_at"
							}
						},
						{
							"id": 38737,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's new (outbound) items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42401,
									"name": "BaseExchangeItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42391,
								"name": "BaseExchange.additional_items"
							}
						},
						{
							"id": 38738,
							"name": "return_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's returned (inbound) items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39427,
									"name": "AdminReturnItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42392,
								"name": "BaseExchange.return_items"
							}
						},
						{
							"id": 38739,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to notify the customer about changes in the exchange."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42393,
								"name": "BaseExchange.no_notification"
							}
						},
						{
							"id": 38740,
							"name": "difference_due",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's difference amount due, either to the customer or the merchant.\n\nIf the value is positive, the customer owes the merchant additional payment of this amount.\nIf negative, the merchant owes the customer a refund of this amount."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42394,
								"name": "BaseExchange.difference_due"
							}
						},
						{
							"id": 38741,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated return."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42395,
								"name": "BaseExchange.return"
							}
						},
						{
							"id": 38742,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated order."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
									"qualifiedName": "BaseOrder"
								},
								"name": "BaseOrder",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42396,
								"name": "BaseExchange.order"
							}
						},
						{
							"id": 38743,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether out-of-stock variants can be added as new items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42397,
								"name": "BaseExchange.allow_backorder"
							}
						},
						{
							"id": 38744,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping methods used to send the outbound items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
										"qualifiedName": "BaseOrderShippingMethod"
									},
									"name": "BaseOrderShippingMethod",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42398,
								"name": "BaseExchange.shipping_methods"
							}
						},
						{
							"id": 38745,
							"name": "transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's transactions."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
										"qualifiedName": "BaseOrderTransaction"
									},
									"name": "BaseOrderTransaction",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42399,
								"name": "BaseExchange.transactions"
							}
						},
						{
							"id": 38746,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42400,
								"name": "BaseExchange.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38727,
								38728,
								38729,
								38730,
								38731,
								38732,
								38733,
								38734,
								38735,
								38736,
								38737,
								38738,
								38739,
								38740,
								38741,
								38742,
								38743,
								38744,
								38745,
								38746
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42380,
							"name": "BaseExchange",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38747,
					"name": "AdminCreateExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38748,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the order the exchange is created for."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38749,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38750,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38751,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38748,
								38749,
								38750,
								38751
							]
						}
					]
				},
				{
					"id": 38752,
					"name": "AdminAddExchangeInboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38753,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to add to the exchange."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 38754,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38755,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "If you're adding an inbound item, this is the ID of the order item returned.\nIf you're adding an outbound item, this is the ID of the variant to add."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38756,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The item's quantity."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 38757,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The reason the item is being returned / sent to the customer."
														}
													]
												},
												"type": {
													"type": "reference",
													"target": 42418,
													"name": "ExchangeReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 38758,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The item's description."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38759,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "An internal note viewed by admin users only."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38755,
													38756,
													38757,
													38758,
													38759
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42411,
								"name": "AdminExchangeAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38753
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42410,
							"name": "AdminExchangeAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38760,
					"name": "AdminUpdateExchangeInboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38761,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's quantity."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42424,
								"name": "AdminExchangeUpdateItem.quantity"
							}
						},
						{
							"id": 38762,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated return reason."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42425,
								"name": "AdminExchangeUpdateItem.reason_id"
							}
						},
						{
							"id": 38763,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42426,
								"name": "AdminExchangeUpdateItem.description"
							}
						},
						{
							"id": 38764,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42427,
								"name": "AdminExchangeUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38761,
								38762,
								38763,
								38764
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42423,
							"name": "AdminExchangeUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38765,
					"name": "AdminAddExchangeOutboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38766,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The items to add to the exchange."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 38767,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38768,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "If you're adding an inbound item, this is the ID of the order item returned.\nIf you're adding an outbound item, this is the ID of the variant to add."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38769,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The item's quantity."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 38770,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The reason the item is being returned / sent to the customer."
														}
													]
												},
												"type": {
													"type": "reference",
													"target": 42418,
													"name": "ExchangeReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 38771,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The item's description."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 38772,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "An internal note viewed by admin users only."
														}
													]
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38768,
													38769,
													38770,
													38771,
													38772
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42411,
								"name": "AdminExchangeAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38766
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42410,
							"name": "AdminExchangeAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38773,
					"name": "AdminUpdateExchangeOutboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38774,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's quantity."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42424,
								"name": "AdminExchangeUpdateItem.quantity"
							}
						},
						{
							"id": 38775,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated return reason."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42425,
								"name": "AdminExchangeUpdateItem.reason_id"
							}
						},
						{
							"id": 38776,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42426,
								"name": "AdminExchangeUpdateItem.description"
							}
						},
						{
							"id": 38777,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42427,
								"name": "AdminExchangeUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38774,
								38775,
								38776,
								38777
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42423,
							"name": "AdminExchangeUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38778,
					"name": "AdminExchangeAddInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38779,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option the method is created from."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42429,
								"name": "AdminExchangeAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 38780,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount for the shipping method. If not specified,\nthe shipping option's amount is used."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42430,
								"name": "AdminExchangeAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 38781,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42431,
								"name": "AdminExchangeAddShippingMethod.description"
							}
						},
						{
							"id": 38782,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42432,
								"name": "AdminExchangeAddShippingMethod.internal_note"
							}
						},
						{
							"id": 38783,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42433,
								"name": "AdminExchangeAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38779,
								38780,
								38781,
								38782,
								38783
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42428,
							"name": "AdminExchangeAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38784,
					"name": "AdminExchangeUpdateInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38785,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount for the shipping method."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42435,
								"name": "AdminExchangeUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 38786,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42436,
								"name": "AdminExchangeUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 38787,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42437,
								"name": "AdminExchangeUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38785,
								38786,
								38787
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42434,
							"name": "AdminExchangeUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38788,
					"name": "AdminExchangeAddOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38789,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the shipping option the method is created from."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42429,
								"name": "AdminExchangeAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 38790,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount for the shipping method. If not specified,\nthe shipping option's amount is used."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42430,
								"name": "AdminExchangeAddShippingMethod.custom_amount"
							}
						},
						{
							"id": 38791,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping method's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42431,
								"name": "AdminExchangeAddShippingMethod.description"
							}
						},
						{
							"id": 38792,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42432,
								"name": "AdminExchangeAddShippingMethod.internal_note"
							}
						},
						{
							"id": 38793,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42433,
								"name": "AdminExchangeAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38789,
								38790,
								38791,
								38792,
								38793
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42428,
							"name": "AdminExchangeAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38794,
					"name": "AdminExchangeUpdateOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38795,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A custom amount for the shipping method."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42435,
								"name": "AdminExchangeUpdateShippingMethod.custom_amount"
							}
						},
						{
							"id": 38796,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An internal note viewed by admin users only."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42436,
								"name": "AdminExchangeUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 38797,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42437,
								"name": "AdminExchangeUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38795,
								38796,
								38797
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42434,
							"name": "AdminExchangeUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38798,
					"name": "AdminRequestExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38799,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to send the customer a notification."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38799
							]
						}
					]
				},
				{
					"id": 38800,
					"name": "AdminCancelExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38801,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38801
							]
						}
					]
				},
				{
					"id": 38802,
					"name": "AdminExchangeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38809,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 38803,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38804,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38805,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38806,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38807,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38808,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38809,
								38803,
								38804,
								38805,
								38806,
								38807,
								38808
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38810,
					"name": "AdminExchangeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38811,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38726,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38811
							]
						}
					]
				},
				{
					"id": 38812,
					"name": "AdminExchangeListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 38813,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38814,
											"name": "exchanges",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "This list of exchanges."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38726,
													"name": "AdminExchange",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38814
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38815,
					"name": "AdminExchangeOrderResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38816,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38817,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38726,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38816,
								38817
							]
						}
					]
				},
				{
					"id": 38818,
					"name": "AdminExchangePreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38819,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The preview of the order when the exchange is applied."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38820,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38726,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38819,
								38820
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 38821,
							"name": "AdminExchangeRequestResponse"
						}
					]
				},
				{
					"id": 38821,
					"name": "AdminExchangeRequestResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38823,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The preview of the order when the exchange is applied."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38819,
								"name": "AdminExchangePreviewResponse.order_preview"
							}
						},
						{
							"id": 38824,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The exchange's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38726,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38820,
								"name": "AdminExchangePreviewResponse.exchange"
							}
						},
						{
							"id": 38822,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return associated with the exchange."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38823,
								38824,
								38822
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38818,
							"name": "AdminExchangePreviewResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38825,
					"name": "AdminExchangeReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38826,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A preview of the order when the exchange is confirmed."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38827,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The return associated with the exchange."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38826,
								38827
							]
						}
					]
				},
				{
					"id": 38828,
					"name": "AdminExchangeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38829,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 38830,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "exchange"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 38831,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38829,
								38830,
								38831
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "exchange"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38832,
					"name": "AdminFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38833,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42439,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 38834,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42440,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38833,
								38834
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42438,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38835,
					"name": "AdminUploadFile",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42441,
						"name": "BaseUploadFile",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38836,
					"name": "AdminFileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38837,
							"name": "file",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38832,
								"name": "AdminFile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38837
							]
						}
					]
				},
				{
					"id": 38838,
					"name": "AdminFileListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38839,
							"name": "files",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38832,
									"name": "AdminFile",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38839
							]
						}
					]
				},
				{
					"id": 38840,
					"name": "AdminFileDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "file"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38841,
					"name": "StoreFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38842,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42439,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 38843,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42440,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38842,
								38843
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42438,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38844,
					"name": "AdminFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38845,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment provider's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42448,
								"name": "BaseFulfillmentProvider.id"
							}
						},
						{
							"id": 38846,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the fulfillment provider is enabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42449,
								"name": "BaseFulfillmentProvider.is_enabled"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38845,
								38846
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42447,
							"name": "BaseFulfillmentProvider",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38847,
					"name": "AdminFulfillmentProviderListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38855,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 38852,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 38853,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 38854,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 38848,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by provider ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38849,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Query or keywords to filter the provider's searchable fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38850,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by whether the provider is enabled."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38851,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by stock location ID(s) to retrieve their associated\nfulfillment providers."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38855,
								38852,
								38853,
								38854,
								38848,
								38849,
								38850,
								38851
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38856,
					"name": "AdminFulfillmentProviderListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38859,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 38860,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 38861,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 38862,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of fulfillment providers."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38844,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.fulfillment_providers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38859,
								38860,
								38861,
								38862
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 38857,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 38858,
												"name": "fulfillment_providers",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"comment": {
													"summary": [
														{
															"kind": "text",
															"text": "The list of fulfillment providers."
														}
													]
												},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 38844,
														"name": "AdminFulfillmentProvider",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													38858
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38863,
					"name": "AdminGeoZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38864,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The geo zone's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38865,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The geo zone's type."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/geo-zone.ts",
									"qualifiedName": "GeoZoneType"
								},
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38866,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The geo zone's country code."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nus\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38867,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The geo zone's province code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38868,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The geo zone's city."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38869,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The geo zone's postal expression."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38870,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the geo zone was created."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38871,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the geo zone was updated."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38872,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the geo zone was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38864,
								38865,
								38866,
								38867,
								38868,
								38869,
								38870,
								38871,
								38872
							]
						}
					]
				},
				{
					"id": 38873,
					"name": "AdminServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38874,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38875,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38876,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the fulfillment set this service zone belongs to."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38877,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment set this service zone belongs to."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38883,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38878,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's geo zones."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38863,
									"name": "AdminGeoZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 38879,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The shipping options that can be used in this service zone."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39611,
									"name": "AdminShippingOption",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 38880,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the service zone is created."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38881,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the service zone is updated."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38882,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the service zone is deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38874,
								38875,
								38876,
								38877,
								38878,
								38879,
								38880,
								38881,
								38882
							]
						}
					]
				},
				{
					"id": 38883,
					"name": "AdminFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38884,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment set's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38885,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment set's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38886,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment set's type."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\ndelivery\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38887,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stock location associated with this fulfillment set."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39756,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38888,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment set's service zones."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38873,
									"name": "AdminServiceZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 38889,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the fulfillment set is created."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38890,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the fulfillment set is updated."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38891,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the fulfillment set is deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38884,
								38885,
								38886,
								38887,
								38888,
								38889,
								38890,
								38891
							]
						}
					]
				},
				{
					"id": 38892,
					"name": "AdminCreateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38893,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38894,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's geo zones to restrict it to\nspecific geographical locations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42450,
									"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38893,
								38894
							]
						}
					]
				},
				{
					"id": 38895,
					"name": "AdminUpdateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38896,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38897,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's geo zones to restrict it to\nspecific geographical locations. You can update\nexisting ones by their IDs or add new ones."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42451,
									"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38896,
								38897
							]
						}
					]
				},
				{
					"id": 38898,
					"name": "AdminServiceZoneResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38899,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The service zone's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38873,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38899
							]
						}
					]
				},
				{
					"id": 38900,
					"name": "AdminServiceZoneDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38901,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.id"
							}
						},
						{
							"id": 38902,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "service_zone"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.object"
							}
						},
						{
							"id": 38903,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.deleted"
							}
						},
						{
							"id": 38904,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38883,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponseWithParent.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38901,
								38902,
								38903,
								38904
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38654,
							"typeArguments": [
								{
									"type": "literal",
									"value": "service_zone"
								},
								{
									"type": "reference",
									"target": 38883,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							],
							"name": "DeleteResponseWithParent",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38905,
					"name": "AdminFulfillmentSetResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38906,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fulfillment set's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38883,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38906
							]
						}
					]
				},
				{
					"id": 38907,
					"name": "AdminFulfillmentSetDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38908,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 38909,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "fulfillment_set"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 38910,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38908,
								38909,
								38910
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "fulfillment_set"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38998,
					"name": "InventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38999,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory level's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39000,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39001,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated stock location"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39002,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's stocked quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39003,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's reserved quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39004,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's available quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39005,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's incoming quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39006,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38999,
								39000,
								39001,
								39002,
								39003,
								39004,
								39005,
								39006
							]
						}
					]
				},
				{
					"id": 39007,
					"name": "AdminUpdateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39008,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's stocked quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39009,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's incoming quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39008,
								39009
							]
						}
					]
				},
				{
					"id": 39010,
					"name": "AdminCreateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39011,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39012,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's stocked quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39013,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's incoming quantity in the\nassociated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39011,
								39012,
								39013
							]
						}
					]
				},
				{
					"id": 39014,
					"name": "AdminBatchUpdateInventoryLevelLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39015,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of location IDs to\ndelete their associated inventory \nlevels of the inventory item."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 39017,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A list of inventory levels to create."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39010,
									"name": "AdminCreateInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39015,
								39017
							]
						}
					]
				},
				{
					"id": 39018,
					"name": "AdminInventoryLevelFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39023,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39020,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39021,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39022,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39019,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by stock location IDs to retrieve their\nassociated inventory levels."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39023,
								39020,
								39021,
								39022,
								39019
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39024,
					"name": "AdminInventoryLevelResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39025,
							"name": "inventory_level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory level's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38998,
								"name": "InventoryLevel",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39025
							]
						}
					]
				},
				{
					"id": 39026,
					"name": "AdminInventoryLevelListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39027,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39028,
											"name": "inventory_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of inventory levels."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38998,
													"name": "InventoryLevel",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39028
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38911,
					"name": "AdminInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38912,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38913,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's SKU."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38914,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's origin country."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38915,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's HS code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38916,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38917,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's MID code."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38918,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's material."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38919,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's weight."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 38920,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's length."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 38921,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's height."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 38922,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's width."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 38923,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's title."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38924,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's description."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38925,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's thumbnail URL."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 38926,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38927,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The item's associated inventory levels."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38928,
									"name": "AdminInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38912,
								38913,
								38914,
								38915,
								38916,
								38917,
								38918,
								38919,
								38920,
								38921,
								38922,
								38923,
								38924,
								38925,
								38926,
								38927
							]
						}
					]
				},
				{
					"id": 38928,
					"name": "AdminInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38929,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory level's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38930,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the inventory level was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 38931,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the inventory level was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 38932,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the inventory level was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38933,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38934,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38935,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's stocked quantity in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38936,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's reserved quantity in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38937,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's incoming quantity in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38938,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 38939,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38911,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 38940,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's available quantity in the associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38929,
								38930,
								38931,
								38932,
								38933,
								38934,
								38935,
								38936,
								38937,
								38938,
								38939,
								38940
							]
						}
					]
				},
				{
					"id": 38941,
					"name": "AdminCreateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38942,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's SKU."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38943,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's HS code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38944,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's weight."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38945,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's length."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38946,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's height."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38947,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's width."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 38948,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's origin country."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38949,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's MID code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38950,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's material."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38951,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's title."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38952,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38953,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38954,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's thumbnail URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38955,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38942,
								38943,
								38944,
								38945,
								38946,
								38947,
								38948,
								38949,
								38950,
								38951,
								38952,
								38953,
								38954,
								38955
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 38956,
							"name": "AdminUpdateInventoryItem"
						}
					]
				},
				{
					"id": 38956,
					"name": "AdminUpdateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38957,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's SKU."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38942,
								"name": "AdminCreateInventoryItem.sku"
							}
						},
						{
							"id": 38958,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's HS code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38943,
								"name": "AdminCreateInventoryItem.hs_code"
							}
						},
						{
							"id": 38959,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's weight."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38944,
								"name": "AdminCreateInventoryItem.weight"
							}
						},
						{
							"id": 38960,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's length."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38945,
								"name": "AdminCreateInventoryItem.length"
							}
						},
						{
							"id": 38961,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's height."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38946,
								"name": "AdminCreateInventoryItem.height"
							}
						},
						{
							"id": 38962,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's width."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38947,
								"name": "AdminCreateInventoryItem.width"
							}
						},
						{
							"id": 38963,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's origin country."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38948,
								"name": "AdminCreateInventoryItem.origin_country"
							}
						},
						{
							"id": 38964,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's MID code."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38949,
								"name": "AdminCreateInventoryItem.mid_code"
							}
						},
						{
							"id": 38965,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's material."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38950,
								"name": "AdminCreateInventoryItem.material"
							}
						},
						{
							"id": 38966,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's title."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38951,
								"name": "AdminCreateInventoryItem.title"
							}
						},
						{
							"id": 38967,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38952,
								"name": "AdminCreateInventoryItem.description"
							}
						},
						{
							"id": 38968,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38953,
								"name": "AdminCreateInventoryItem.requires_shipping"
							}
						},
						{
							"id": 38969,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's thumbnail URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38954,
								"name": "AdminCreateInventoryItem.thumbnail"
							}
						},
						{
							"id": 38970,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38955,
								"name": "AdminCreateInventoryItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38957,
								38958,
								38959,
								38960,
								38961,
								38962,
								38963,
								38964,
								38965,
								38966,
								38967,
								38968,
								38969,
								38970
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38941,
							"name": "AdminCreateInventoryItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38971,
					"name": "AdminInventoryItemParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 38989,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38971,
											"name": "AdminInventoryItemParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38971,
													"name": "AdminInventoryItemParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 38990,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 38971,
											"name": "AdminInventoryItemParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 38971,
													"name": "AdminInventoryItemParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 38988,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 38985,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 38986,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 38987,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 38972,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by inventory item ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38973,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Query or keywords to search the inventory item's searchable fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38974,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by SKU(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38975,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by origin countries."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38976,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by MID code(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38977,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by HS code(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38978,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by material(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 38979,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by whether the item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 38980,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by weight(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 38981,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by length(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 38982,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by height(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 38983,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by width(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 38984,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by stock location IDs to retrieve inventory items\nthat have inventory levels associated with the locations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "location_id"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38989,
								38990,
								38988,
								38985,
								38986,
								38987,
								38972,
								38973,
								38974,
								38975,
								38976,
								38977,
								38978,
								38979,
								38980,
								38981,
								38982,
								38983,
								38984
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 38971,
									"name": "AdminInventoryItemParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 38991,
					"name": "AdminInventoryItemResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 38992,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The inventory item's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 38911,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								38992
							]
						}
					]
				},
				{
					"id": 38993,
					"name": "AdminInventoryItemListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 38994,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 38995,
											"name": "inventory_items",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of inventory items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38911,
													"name": "AdminInventoryItem",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												38995
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38996,
					"name": "AdminInventoryItemDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory_item"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 38997,
					"name": "AdminInventoryLevelDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38654,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory-level"
							},
							{
								"type": "reference",
								"target": 38911,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						],
						"name": "DeleteResponseWithParent",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39029,
					"name": "AdminInvite",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39030,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The invite's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39031,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The email of the invited user."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39032,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the invite was accepted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39033,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The invite token."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39034,
							"name": "expires_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the invite expires."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 39035,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39036,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date that the invite was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 39037,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date that the invite was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39030,
								39031,
								39032,
								39033,
								39034,
								39035,
								39036,
								39037
							]
						}
					]
				},
				{
					"id": 39038,
					"name": "AdminAcceptInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 39039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39040,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user's email."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 39041,
									"name": "first_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user's first name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 39042,
									"name": "last_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user's last name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										39040,
										39041,
										39042
									]
								}
							]
						}
					}
				},
				{
					"id": 39043,
					"name": "AdminCreateInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 39044,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39045,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The email of the user to invite."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 39046,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Key-value pairs of custom data."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										39045,
										39046
									]
								}
							]
						}
					}
				},
				{
					"id": 39047,
					"name": "AdminGetInvitesParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39058,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39047,
											"name": "AdminGetInvitesParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39047,
													"name": "AdminGetInvitesParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39059,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39047,
											"name": "AdminGetInvitesParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39047,
													"name": "AdminGetInvitesParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39057,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39054,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39055,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39056,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39048,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39049,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39050,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39051,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39052,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39053,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39058,
								39059,
								39057,
								39054,
								39055,
								39056,
								39048,
								39049,
								39050,
								39051,
								39052,
								39053
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39047,
									"name": "AdminGetInvitesParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39060,
					"name": "AdminInviteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39061,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The invite's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 39029,
								"name": "AdminInvite",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39061
							]
						}
					]
				},
				{
					"id": 39062,
					"name": "AdminInviteListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39063,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39064,
											"name": "invites",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of invites."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39029,
													"name": "AdminInvite",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39064
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39065,
					"name": "AdminAcceptInviteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39066,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39067,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The user's details."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/entities.ts",
													"qualifiedName": "AdminUser"
												},
												"name": "AdminUser",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39067
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 39068,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39069,
											"name": "message",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A message if an error occurs."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39069
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 39070,
					"name": "AdminInviteDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "invite"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39071,
					"name": "AdminNotification",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39072,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39073,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39074,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39075,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39076,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39077,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39078,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39079,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39080,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39081,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39082,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39083,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39084,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39072,
								39073,
								39074,
								39075,
								39076,
								39077,
								39078,
								39079,
								39080,
								39081,
								39082,
								39083,
								39084
							]
						}
					]
				},
				{
					"id": 39085,
					"name": "AdminNotificationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39089,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39085,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39085,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39090,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39085,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39085,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39094,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39091,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39092,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39093,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39086,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39087,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39088,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39089,
								39090,
								39094,
								39091,
								39092,
								39093,
								39086,
								39087,
								39088
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39085,
									"name": "AdminNotificationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39095,
					"name": "AdminNotificationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39096,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39096
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39097,
					"name": "AdminNotificationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39098,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39071,
								"name": "AdminNotification",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39098
							]
						}
					]
				},
				{
					"id": 39099,
					"name": "AdminNotificationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39102,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39103,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39104,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39105,
							"name": "notifications",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39071,
									"name": "AdminNotification",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.notifications"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39102,
								39103,
								39104,
								39105
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39100,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39101,
												"name": "notifications",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39071,
														"name": "AdminNotification",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39101
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39111,
					"name": "AdminInitiateOrderEditRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39112,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39113,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39114,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39115,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39112,
								39113,
								39114,
								39115
							]
						}
					]
				},
				{
					"id": 39116,
					"name": "AdminAddOrderEditItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39117,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 39118,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39119,
												"name": "variant_id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 39120,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 39121,
												"name": "unit_price",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 39122,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 39123,
												"name": "allow_backorder",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "boolean"
												}
											},
											{
												"id": 39124,
												"name": "metadata",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "unknown"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39119,
													39120,
													39121,
													39122,
													39123,
													39124
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39117
							]
						}
					]
				},
				{
					"id": 39125,
					"name": "AdminUpdateOrderEditItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39126,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39127,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39126,
								39127
							]
						}
					]
				},
				{
					"id": 39106,
					"name": "AdminOrderEditPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39107,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39107
							]
						}
					]
				},
				{
					"id": 39108,
					"name": "AdminOrderEditResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39109,
							"name": "order_change",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderChange"
								},
								"name": "AdminOrderChange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39109
							]
						}
					]
				},
				{
					"id": 39110,
					"name": "AdminOrderEditDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "order-edit"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39128,
					"name": "BaseOrderEditItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39129,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39130,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39131,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39132,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39133,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39134,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39135,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39129,
								39130,
								39131,
								39132,
								39133,
								39134,
								39135
							]
						}
					]
				},
				{
					"id": 39136,
					"name": "AdminPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39137,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39138,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39137,
								39138
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39139,
					"name": "AdminPriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39140,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39141,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39142,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39143,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39144,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39145,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39146,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39147,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39148,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39136,
									"name": "AdminPriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39149,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39150,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39151,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39140,
								39141,
								39142,
								39143,
								39144,
								39145,
								39146,
								39147,
								39148,
								39149,
								39150,
								39151
							]
						}
					]
				},
				{
					"id": 39152,
					"name": "AdminCreatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39153,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39154,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39155,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39156,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 39157,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 39158,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39153,
								39154,
								39155,
								39156,
								39157,
								39158
							]
						}
					]
				},
				{
					"id": 39159,
					"name": "AdminCreatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39160,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39161,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39162,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39163,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39164,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39165,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39166,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39167,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39152,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39160,
								39161,
								39162,
								39163,
								39164,
								39165,
								39166,
								39167
							]
						}
					]
				},
				{
					"id": 39168,
					"name": "AdminUpdatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39169,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39170,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39171,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39172,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39173,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 39174,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 39175,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39169,
								39170,
								39171,
								39172,
								39173,
								39174,
								39175
							]
						}
					]
				},
				{
					"id": 39176,
					"name": "AdminUpdatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39177,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39178,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39179,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39180,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39181,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39182,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39183,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39177,
								39178,
								39179,
								39180,
								39181,
								39182,
								39183
							]
						}
					]
				},
				{
					"id": 39184,
					"name": "AdminBatchPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39185,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39152,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39186,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39168,
									"name": "AdminUpdatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39187,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39185,
								39186,
								39187
							]
						}
					]
				},
				{
					"id": 39188,
					"name": "AdminLinkPriceListProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39189,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39189
							]
						}
					]
				},
				{
					"id": 39190,
					"name": "AdminPriceListListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39201,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39190,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39190,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39202,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39190,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39190,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39200,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39197,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39198,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39199,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39191,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39192,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39193,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39194,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39195,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
										"qualifiedName": "PriceListStatus"
									},
									"name": "PriceListStatus",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39196,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39201,
								39202,
								39200,
								39197,
								39198,
								39199,
								39191,
								39192,
								39193,
								39194,
								39195,
								39196
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39190,
									"name": "AdminPriceListListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39203,
					"name": "AdminPriceListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39204,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39204
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39205,
					"name": "AdminPriceListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39206,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39139,
								"name": "AdminPriceList",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39206
							]
						}
					]
				},
				{
					"id": 39207,
					"name": "AdminPriceListListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39210,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39211,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39212,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39213,
							"name": "price_lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39139,
									"name": "AdminPriceList",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.price_lists"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39210,
								39211,
								39212,
								39213
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39208,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39209,
												"name": "price_lists",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39139,
														"name": "AdminPriceList",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39209
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39214,
					"name": "AdminPriceListDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39215,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39216,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "price_list"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39217,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39215,
								39216,
								39217
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "price_list"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39218,
					"name": "AdminPriceListBatchResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39219,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
										"qualifiedName": "AdminPrice"
									},
									"name": "AdminPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39220,
							"name": "updated",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
										"qualifiedName": "AdminPrice"
									},
									"name": "AdminPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39221,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39222,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39223,
											"name": "ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 39224,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "price"
											}
										},
										{
											"id": 39225,
											"name": "deleted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39223,
												39224,
												39225
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39219,
								39220,
								39221
							]
						}
					]
				},
				{
					"id": 39226,
					"name": "AdminProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39227,
							"name": "category_children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39226,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39228,
							"name": "parent_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 39226,
										"name": "AdminProductCategory",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39229,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39232,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 39231,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category's name."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.name"
							}
						},
						{
							"id": 39230,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category's description."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.description"
							}
						},
						{
							"id": 39237,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category's handle."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.handle"
							}
						},
						{
							"id": 39239,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the category is active."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_active"
							}
						},
						{
							"id": 39240,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the category is internal."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_internal"
							}
						},
						{
							"id": 39241,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category's ranking among sibling categories."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rank"
							}
						},
						{
							"id": 39238,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the category's parent."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.parent_category_id"
							}
						},
						{
							"id": 39236,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Key-value pairs of custom data."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.metadata"
							}
						},
						{
							"id": 39233,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the category was created."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.created_at"
							}
						},
						{
							"id": 39234,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the category was updated."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.updated_at"
							}
						},
						{
							"id": 39235,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date the category was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39227,
								39228,
								39229,
								39232,
								39231,
								39230,
								39237,
								39239,
								39240,
								39241,
								39238,
								39236,
								39233,
								39234,
								39235
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 42452,
									"name": "BaseProductCategory",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "products"
										},
										{
											"type": "literal",
											"value": "category_children"
										},
										{
											"type": "literal",
											"value": "parent_category"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 39242,
					"name": "AdminCreateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39243,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39244,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39245,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39246,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39247,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39248,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39249,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39250,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39243,
								39244,
								39245,
								39246,
								39247,
								39248,
								39249,
								39250
							]
						}
					]
				},
				{
					"id": 39251,
					"name": "AdminUpdateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39252,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39253,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39254,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39255,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39256,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39257,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39258,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39259,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39252,
								39253,
								39254,
								39255,
								39256,
								39257,
								39258,
								39259
							]
						}
					]
				},
				{
					"id": 39260,
					"name": "AdminUpdateProductCategoryProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39261,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 39262,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39261,
								39262
							]
						}
					]
				},
				{
					"id": 39263,
					"name": "AdminProductCategoryListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39281,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 42468,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42468,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42486,
								"name": "BaseProductCategoryListParams.$and"
							}
						},
						{
							"id": 39282,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 42468,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42468,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42487,
								"name": "BaseProductCategoryListParams.$or"
							}
						},
						{
							"id": 39280,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42485,
								"name": "BaseProductCategoryListParams.fields"
							}
						},
						{
							"id": 39277,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42482,
								"name": "BaseProductCategoryListParams.limit"
							}
						},
						{
							"id": 39278,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42483,
								"name": "BaseProductCategoryListParams.offset"
							}
						},
						{
							"id": 39279,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42484,
								"name": "BaseProductCategoryListParams.order"
							}
						},
						{
							"id": 39264,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by whether the category is internal."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 42476,
								"name": "BaseProductCategoryListParams.is_internal"
							}
						},
						{
							"id": 39265,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by whether the category is active."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 42475,
								"name": "BaseProductCategoryListParams.is_active"
							}
						},
						{
							"id": 39266,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A query or keywords to search the category's searchable fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42469,
								"name": "BaseProductCategoryListParams.q"
							}
						},
						{
							"id": 39267,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the category's ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42470,
								"name": "BaseProductCategoryListParams.id"
							}
						},
						{
							"id": 39268,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the category's name(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42471,
								"name": "BaseProductCategoryListParams.name"
							}
						},
						{
							"id": 39269,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the category's description(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42472,
								"name": "BaseProductCategoryListParams.description"
							}
						},
						{
							"id": 39270,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieve the child categories of the specified parent ID(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42473,
								"name": "BaseProductCategoryListParams.parent_category_id"
							}
						},
						{
							"id": 39271,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter by the category's handle(s)."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42474,
								"name": "BaseProductCategoryListParams.handle"
							}
						},
						{
							"id": 39272,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to retrieve the child categories. If enabled, the child categories are\nretrieved in the "
									},
									{
										"kind": "code",
										"text": "`category_children`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42477,
								"name": "BaseProductCategoryListParams.include_descendants_tree"
							}
						},
						{
							"id": 39273,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to retrieve the parent category. If enabled, the parent category is\nretrieved in the "
									},
									{
										"kind": "code",
										"text": "`parent_category`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42478,
								"name": "BaseProductCategoryListParams.include_ancestors_tree"
							}
						},
						{
							"id": 39274,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the category's creation date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42479,
								"name": "BaseProductCategoryListParams.created_at"
							}
						},
						{
							"id": 39275,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the category's update date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42480,
								"name": "BaseProductCategoryListParams.updated_at"
							}
						},
						{
							"id": 39276,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Apply filters on the category's deletion date."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42481,
								"name": "BaseProductCategoryListParams.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39281,
								39282,
								39280,
								39277,
								39278,
								39279,
								39264,
								39265,
								39266,
								39267,
								39268,
								39269,
								39270,
								39271,
								39272,
								39273,
								39274,
								39275,
								39276
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42468,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39283,
					"name": "AdminProductCategoryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39286,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42491,
								"name": "BaseProductCategoryParams.fields"
							}
						},
						{
							"id": 39284,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to retrieve the parent category. If enabled, the parent category is\nretrieved in the "
									},
									{
										"kind": "code",
										"text": "`parent_category`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42489,
								"name": "BaseProductCategoryParams.include_ancestors_tree"
							}
						},
						{
							"id": 39285,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to retrieve the child categories. If enabled, the child categories are\nretrieved in the "
									},
									{
										"kind": "code",
										"text": "`category_children`"
									},
									{
										"kind": "text",
										"text": " field."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42490,
								"name": "BaseProductCategoryParams.include_descendants_tree"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39286,
								39284,
								39285
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42488,
							"name": "BaseProductCategoryParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39287,
					"name": "AdminProductCategoryResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39288,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39226,
								"name": "AdminProductCategory",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39288
							]
						}
					]
				},
				{
					"id": 39289,
					"name": "AdminProductCategoryListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39292,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39293,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39294,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39295,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39226,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_categories"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39292,
								39293,
								39294,
								39295
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39290,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39291,
												"name": "product_categories",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39226,
														"name": "AdminProductCategory",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39291
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39296,
					"name": "AdminProductCategoryDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39297,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39298,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_category"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39299,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39297,
								39298,
								39299
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_category"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39300,
					"name": "AdminProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39301,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42493,
								"name": "BaseProductTag.id"
							}
						},
						{
							"id": 39302,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42494,
								"name": "BaseProductTag.value"
							}
						},
						{
							"id": 39303,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42495,
								"name": "BaseProductTag.created_at"
							}
						},
						{
							"id": 39304,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42496,
								"name": "BaseProductTag.updated_at"
							}
						},
						{
							"id": 39305,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42497,
								"name": "BaseProductTag.deleted_at"
							}
						},
						{
							"id": 39306,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42498,
								"name": "BaseProductTag.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39301,
								39302,
								39303,
								39304,
								39305,
								39306
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42492,
							"name": "BaseProductTag",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39307,
					"name": "AdminCreateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39308,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39309,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39308,
								39309
							]
						}
					]
				},
				{
					"id": 39310,
					"name": "AdminUpdateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39311,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39312,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39311,
								39312
							]
						}
					]
				},
				{
					"id": 39313,
					"name": "AdminProductTagListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39324,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39313,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39313,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39325,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39313,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39313,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39323,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42508,
								"name": "BaseProductTagListParams.fields"
							}
						},
						{
							"id": 39320,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42505,
								"name": "BaseProductTagListParams.limit"
							}
						},
						{
							"id": 39321,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42506,
								"name": "BaseProductTagListParams.offset"
							}
						},
						{
							"id": 39322,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42507,
								"name": "BaseProductTagListParams.order"
							}
						},
						{
							"id": 39314,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39315,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42500,
								"name": "BaseProductTagListParams.q"
							}
						},
						{
							"id": 39316,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42501,
								"name": "BaseProductTagListParams.id"
							}
						},
						{
							"id": 39317,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42502,
								"name": "BaseProductTagListParams.value"
							}
						},
						{
							"id": 39318,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42503,
								"name": "BaseProductTagListParams.created_at"
							}
						},
						{
							"id": 39319,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42504,
								"name": "BaseProductTagListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39324,
								39325,
								39323,
								39320,
								39321,
								39322,
								39314,
								39315,
								39316,
								39317,
								39318,
								39319
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42499,
							"name": "BaseProductTagListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39313,
									"name": "AdminProductTagListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39326,
					"name": "AdminProductTagParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39327,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39327
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39328,
					"name": "AdminProductTagResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39329,
							"name": "product_tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39300,
								"name": "AdminProductTag",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39329
							]
						}
					]
				},
				{
					"id": 39330,
					"name": "AdminProductTagListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39333,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39334,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39335,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39336,
							"name": "product_tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39300,
									"name": "AdminProductTag",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_tags"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39333,
								39334,
								39335,
								39336
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39331,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39332,
												"name": "product_tags",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39300,
														"name": "AdminProductTag",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39332
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39337,
					"name": "AdminProductTagDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39338,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39339,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_tag"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39340,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39338,
								39339,
								39340
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_tag"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39341,
					"name": "AdminProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39342,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42510,
								"name": "BaseProductType.id"
							}
						},
						{
							"id": 39343,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42511,
								"name": "BaseProductType.value"
							}
						},
						{
							"id": 39344,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42512,
								"name": "BaseProductType.created_at"
							}
						},
						{
							"id": 39345,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42513,
								"name": "BaseProductType.updated_at"
							}
						},
						{
							"id": 39346,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42514,
								"name": "BaseProductType.deleted_at"
							}
						},
						{
							"id": 39347,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42515,
								"name": "BaseProductType.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39342,
								39343,
								39344,
								39345,
								39346,
								39347
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42509,
							"name": "BaseProductType",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39348,
					"name": "AdminCreateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39349,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39350,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39349,
								39350
							]
						}
					]
				},
				{
					"id": 39351,
					"name": "AdminUpdateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39352,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39353,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39352,
								39353
							]
						}
					]
				},
				{
					"id": 39354,
					"name": "AdminProductTypeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39365,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39354,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39354,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39366,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39354,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39354,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39364,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39361,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39362,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39363,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39355,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39356,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39357,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39358,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39359,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39360,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39365,
								39366,
								39364,
								39361,
								39362,
								39363,
								39355,
								39356,
								39357,
								39358,
								39359,
								39360
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39354,
									"name": "AdminProductTypeListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39367,
					"name": "AdminProductTypeParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39368,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39368
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39369,
					"name": "AdminProductTypeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39370,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39341,
								"name": "AdminProductType",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39370
							]
						}
					]
				},
				{
					"id": 39371,
					"name": "AdminProductTypeListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39374,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39375,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39376,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39377,
							"name": "product_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39341,
									"name": "AdminProductType",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39374,
								39375,
								39376,
								39377
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39372,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39373,
												"name": "product_types",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39341,
														"name": "AdminProductType",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39373
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39378,
					"name": "AdminProductTypeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39379,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39380,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_type"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39381,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39379,
								39380,
								39381
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_type"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39382,
					"name": "AdminReservation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39383,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39384,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39385,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39386,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39387,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39388,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39389,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39390,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 38911,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39391,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39392,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39393,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39394,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39395,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39383,
								39384,
								39385,
								39386,
								39387,
								39388,
								39389,
								39390,
								39391,
								39392,
								39393,
								39394,
								39395
							]
						}
					]
				},
				{
					"id": 39396,
					"name": "AdminCreateReservation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39397,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39398,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39399,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39400,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39401,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39402,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39397,
								39398,
								39399,
								39400,
								39401,
								39402
							]
						}
					]
				},
				{
					"id": 39403,
					"name": "AdminUpdateReservation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39404,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39405,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39406,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39407,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39404,
								39405,
								39406,
								39407
							]
						}
					]
				},
				{
					"id": 39408,
					"name": "AdminGetReservationsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39409,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39410,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39411,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39412,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39413,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39414,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39415,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39416,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39417,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39418,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39409,
								39410,
								39411,
								39412,
								39413,
								39414,
								39415,
								39416,
								39417,
								39418
							]
						}
					]
				},
				{
					"id": 39419,
					"name": "AdminReservationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39420,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39420
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39421,
					"name": "AdminReservationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39422,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39382,
								"name": "AdminReservation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39422
							]
						}
					]
				},
				{
					"id": 39423,
					"name": "AdminReservationListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39424,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39425,
											"name": "reservations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39382,
													"name": "AdminReservation",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39425
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39426,
					"name": "AdminReservationDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "reservation"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39537,
					"name": "AdminReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39538,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42542,
								"name": "BaseReturnReason.id"
							}
						},
						{
							"id": 39539,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42543,
								"name": "BaseReturnReason.value"
							}
						},
						{
							"id": 39540,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42544,
								"name": "BaseReturnReason.label"
							}
						},
						{
							"id": 39541,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42545,
								"name": "BaseReturnReason.description"
							}
						},
						{
							"id": 39542,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42546,
								"name": "BaseReturnReason.metadata"
							}
						},
						{
							"id": 39543,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42547,
								"name": "BaseReturnReason.created_at"
							}
						},
						{
							"id": 39544,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42548,
								"name": "BaseReturnReason.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39538,
								39539,
								39540,
								39541,
								39542,
								39543,
								39544
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42541,
							"name": "BaseReturnReason",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39545,
					"name": "AdminCreateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39547,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.value"
							}
						},
						{
							"id": 39548,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.label"
							}
						},
						{
							"id": 39549,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.description"
							}
						},
						{
							"id": 39550,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.metadata"
							}
						},
						{
							"id": 39546,
							"name": "parent_return_reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39547,
								39548,
								39549,
								39550,
								39546
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42549,
							"name": "AdminBaseReturnReasonPayload",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39551,
					"name": "AdminUpdateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39552,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.value"
							}
						},
						{
							"id": 39553,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.label"
							}
						},
						{
							"id": 39554,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.description"
							}
						},
						{
							"id": 39555,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39552,
								39553,
								39554,
								39555
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42549,
							"name": "AdminBaseReturnReasonPayload",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39556,
					"name": "AdminReturnReasonListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39570,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39556,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39556,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39571,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39556,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39556,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39569,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42567,
								"name": "BaseReturnReasonListParams.fields"
							}
						},
						{
							"id": 39566,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42564,
								"name": "BaseReturnReasonListParams.limit"
							}
						},
						{
							"id": 39567,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42565,
								"name": "BaseReturnReasonListParams.offset"
							}
						},
						{
							"id": 39568,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42566,
								"name": "BaseReturnReasonListParams.order"
							}
						},
						{
							"id": 39557,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39558,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42556,
								"name": "BaseReturnReasonListParams.q"
							}
						},
						{
							"id": 39559,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42557,
								"name": "BaseReturnReasonListParams.id"
							}
						},
						{
							"id": 39560,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42558,
								"name": "BaseReturnReasonListParams.value"
							}
						},
						{
							"id": 39561,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42559,
								"name": "BaseReturnReasonListParams.label"
							}
						},
						{
							"id": 39562,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42560,
								"name": "BaseReturnReasonListParams.description"
							}
						},
						{
							"id": 39563,
							"name": "parent_return_reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42561,
								"name": "BaseReturnReasonListParams.parent_return_reason_id"
							}
						},
						{
							"id": 39564,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42562,
								"name": "BaseReturnReasonListParams.created_at"
							}
						},
						{
							"id": 39565,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42563,
								"name": "BaseReturnReasonListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39570,
								39571,
								39569,
								39566,
								39567,
								39568,
								39557,
								39558,
								39559,
								39560,
								39561,
								39562,
								39563,
								39564,
								39565
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42555,
							"name": "BaseReturnReasonListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39556,
									"name": "AdminReturnReasonListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39572,
					"name": "AdminReturnReasonParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39573,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39573
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39574,
					"name": "AdminReturnReasonResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39575,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39537,
								"name": "AdminReturnReason",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39575
							]
						}
					]
				},
				{
					"id": 39576,
					"name": "AdminReturnReasonListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39579,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39580,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39581,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39582,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39537,
									"name": "AdminReturnReason",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.return_reasons"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39579,
								39580,
								39581,
								39582
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39577,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39578,
												"name": "return_reasons",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39537,
														"name": "AdminReturnReason",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39578
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39583,
					"name": "AdminReturnReasonDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39584,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39585,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "return_reason"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39586,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39584,
								39585,
								39586
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "return_reason"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39427,
					"name": "AdminReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39428,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42517,
								"name": "BaseReturnItem.id"
							}
						},
						{
							"id": 39429,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42518,
								"name": "BaseReturnItem.quantity"
							}
						},
						{
							"id": 39430,
							"name": "received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42519,
								"name": "BaseReturnItem.received_quantity"
							}
						},
						{
							"id": 39431,
							"name": "damaged_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42520,
								"name": "BaseReturnItem.damaged_quantity"
							}
						},
						{
							"id": 39432,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42521,
								"name": "BaseReturnItem.reason_id"
							}
						},
						{
							"id": 39433,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42522,
								"name": "BaseReturnItem.note"
							}
						},
						{
							"id": 39434,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42523,
								"name": "BaseReturnItem.item_id"
							}
						},
						{
							"id": 39435,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42524,
								"name": "BaseReturnItem.return_id"
							}
						},
						{
							"id": 39436,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42525,
								"name": "BaseReturnItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39428,
								39429,
								39430,
								39431,
								39432,
								39433,
								39434,
								39435,
								39436
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42516,
							"name": "BaseReturnItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39437,
					"name": "AdminReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39438,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39427,
									"name": "AdminReturnItem",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 42537,
								"name": "BaseReturn.items"
							}
						},
						{
							"id": 39439,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42527,
								"name": "BaseReturn.id"
							}
						},
						{
							"id": 39440,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42528,
								"name": "BaseReturn.order_id"
							}
						},
						{
							"id": 39441,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
									"qualifiedName": "ReturnStatus"
								},
								"name": "ReturnStatus",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42529,
								"name": "BaseReturn.status"
							}
						},
						{
							"id": 39442,
							"name": "exchange_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42530,
								"name": "BaseReturn.exchange_id"
							}
						},
						{
							"id": 39443,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42531,
								"name": "BaseReturn.location_id"
							}
						},
						{
							"id": 39444,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42532,
								"name": "BaseReturn.claim_id"
							}
						},
						{
							"id": 39445,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42533,
								"name": "BaseReturn.order_version"
							}
						},
						{
							"id": 39446,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42534,
								"name": "BaseReturn.display_id"
							}
						},
						{
							"id": 39447,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42535,
								"name": "BaseReturn.no_notification"
							}
						},
						{
							"id": 39448,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42536,
								"name": "BaseReturn.refund_amount"
							}
						},
						{
							"id": 39449,
							"name": "received_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42538,
								"name": "BaseReturn.received_at"
							}
						},
						{
							"id": 39450,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42539,
								"name": "BaseReturn.created_at"
							}
						},
						{
							"id": 39451,
							"name": "canceled_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42540,
								"name": "BaseReturn.canceled_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39438,
								39439,
								39440,
								39441,
								39442,
								39443,
								39444,
								39445,
								39446,
								39447,
								39448,
								39449,
								39450,
								39451
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42526,
							"name": "BaseReturn",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39452,
					"name": "AdminInitiateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39453,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39454,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39455,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39456,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39457,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39458,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39453,
								39454,
								39455,
								39456,
								39457,
								39458
							]
						}
					]
				},
				{
					"id": 39459,
					"name": "AdminAddReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39460,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39461,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39462,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39463,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39464,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39460,
								39461,
								39462,
								39463,
								39464
							]
						}
					]
				},
				{
					"id": 39465,
					"name": "AdminAddReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39466,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39459,
									"name": "AdminAddReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39466
							]
						}
					]
				},
				{
					"id": 39467,
					"name": "AdminUpdateReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39468,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39469,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39470,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39468,
								39469,
								39470
							]
						}
					]
				},
				{
					"id": 39471,
					"name": "AdminAddReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39472,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39473,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39474,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39475,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39476,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39472,
								39473,
								39474,
								39475,
								39476
							]
						}
					]
				},
				{
					"id": 39477,
					"name": "AdminUpdateReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39478,
							"name": "custom_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39479,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39480,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39478,
								39479,
								39480
							]
						}
					]
				},
				{
					"id": 39481,
					"name": "AdminConfirmReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39482,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39482
							]
						}
					]
				},
				{
					"id": 39483,
					"name": "AdminUpdateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39484,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39485,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39486,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39484,
								39485,
								39486
							]
						}
					]
				},
				{
					"id": 39487,
					"name": "AdminConfirmReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39488,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39488
							]
						}
					]
				},
				{
					"id": 39489,
					"name": "AdminInitiateReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39490,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39491,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39492,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39490,
								39491,
								39492
							]
						}
					]
				},
				{
					"id": 39493,
					"name": "AdminReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39494,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 39495,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39496,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 39497,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 39498,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39496,
													39497,
													39498
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39494
							]
						}
					]
				},
				{
					"id": 39499,
					"name": "AdminDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39500,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 39501,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39502,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 39503,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 39504,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39502,
													39503,
													39504
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39500
							]
						}
					]
				},
				{
					"id": 39505,
					"name": "AdminUpdateReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39506,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39507,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39508,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39509,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39506,
								39507,
								39508,
								39509
							]
						}
					]
				},
				{
					"id": 39510,
					"name": "AdminUpdateDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39511,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39512,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39513,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39514,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39511,
								39512,
								39513,
								39514
							]
						}
					]
				},
				{
					"id": 39515,
					"name": "AdminReturnFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39524,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39521,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39522,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39523,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39516,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39517,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39518,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39519,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39520,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39524,
								39521,
								39522,
								39523,
								39516,
								39517,
								39518,
								39519,
								39520
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39525,
					"name": "AdminReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39526,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39526
							]
						}
					]
				},
				{
					"id": 39527,
					"name": "AdminReturnsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39528,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39529,
											"name": "returns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39437,
													"name": "AdminReturn",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39529
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39530,
					"name": "AdminOrderReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39531,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39532,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39531,
								39532
							]
						}
					]
				},
				{
					"id": 39533,
					"name": "AdminReturnPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39534,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/http/order/admin/entities.ts",
									"qualifiedName": "AdminOrderPreview"
								},
								"name": "AdminOrderPreview",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39535,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39437,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39534,
								39535
							]
						}
					]
				},
				{
					"id": 39536,
					"name": "AdminReturnDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38648,
						"typeArguments": [
							{
								"type": "literal",
								"value": "return"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39587,
					"name": "AdminShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39588,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39589,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39590,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39591,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39592,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39593,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39594,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39595,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39588,
								39589,
								39590,
								39591,
								39592,
								39593,
								39594,
								39595
							]
						}
					]
				},
				{
					"id": 39596,
					"name": "AdminShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39597,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39598,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39599,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37874,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39600,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39601,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39602,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39603,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39604,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39597,
								39598,
								39599,
								39600,
								39601,
								39602,
								39603,
								39604
							]
						}
					]
				},
				{
					"id": 39605,
					"name": "AdminShippingOptionPriceRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39606,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39607,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39606,
								39607
							]
						}
					]
				},
				{
					"id": 39608,
					"name": "AdminShippingOptionPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39609,
							"name": "price_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39605,
									"name": "AdminShippingOptionPriceRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39610,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39609,
								39610
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39611,
					"name": "AdminShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39612,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39613,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39614,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39615,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39616,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38873,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39617,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39618,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 38844,
								"name": "AdminFulfillmentProvider",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39619,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39620,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39587,
								"name": "AdminShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39621,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39622,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39707,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39623,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39596,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39624,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39608,
									"name": "AdminShippingOptionPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39625,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39626,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39627,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 39628,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 39629,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39612,
								39613,
								39614,
								39615,
								39616,
								39617,
								39618,
								39619,
								39620,
								39621,
								39622,
								39623,
								39624,
								39625,
								39626,
								39627,
								39628,
								39629
							]
						}
					]
				},
				{
					"id": 39630,
					"name": "AdminCreateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39631,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 37874,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39632,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39633,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39631,
								39632,
								39633
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 39654,
							"name": "AdminUpdateShippingOptionRule"
						}
					]
				},
				{
					"id": 39634,
					"name": "AdminCreateShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39635,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39636,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39637,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39635,
								39636,
								39637
							]
						}
					]
				},
				{
					"id": 39638,
					"name": "AdminCreateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39639,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39640,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39639,
								39640
							]
						}
					]
				},
				{
					"id": 39641,
					"name": "AdminCreateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39642,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39643,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39642,
								39643
							]
						}
					]
				},
				{
					"id": 39644,
					"name": "AdminCreateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39645,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39646,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39647,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39648,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39649,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39650,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39651,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39634,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39652,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39638,
											"name": "AdminCreateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 39641,
											"name": "AdminCreateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 39653,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39630,
									"name": "AdminCreateShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39645,
								39646,
								39647,
								39648,
								39649,
								39650,
								39651,
								39652,
								39653
							]
						}
					]
				},
				{
					"id": 39654,
					"name": "AdminUpdateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39656,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 37874,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 39631,
								"name": "AdminCreateShippingOptionRule.operator"
							}
						},
						{
							"id": 39657,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 39632,
								"name": "AdminCreateShippingOptionRule.attribute"
							}
						},
						{
							"id": 39658,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 39633,
								"name": "AdminCreateShippingOptionRule.value"
							}
						},
						{
							"id": 39655,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39656,
								39657,
								39658,
								39655
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 39630,
							"name": "AdminCreateShippingOptionRule",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39659,
					"name": "AdminUpdateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39660,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39661,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39662,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39660,
								39661,
								39662
							]
						}
					]
				},
				{
					"id": 39663,
					"name": "AdminUpdateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39664,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39665,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39666,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39664,
								39665,
								39666
							]
						}
					]
				},
				{
					"id": 39667,
					"name": "AdminUpdateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39668,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39669,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39670,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39671,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39672,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39673,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 39634,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39674,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39659,
											"name": "AdminUpdateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 39663,
											"name": "AdminUpdateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 39675,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39630,
											"name": "AdminCreateShippingOptionRule",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 39654,
											"name": "AdminUpdateShippingOptionRule",
											"package": "@medusajs/types"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39668,
								39669,
								39670,
								39671,
								39672,
								39673,
								39674,
								39675
							]
						}
					]
				},
				{
					"id": 39676,
					"name": "AdminUpdateShippingOptionRules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39677,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 39678,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 39679,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39677,
								39678,
								39679
							]
						}
					]
				},
				{
					"id": 39680,
					"name": "AdminShippingOptionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39696,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39693,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39694,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39695,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39681,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39682,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39683,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39684,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39685,
							"name": "is_return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39686,
							"name": "admin_only",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39687,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39688,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39689,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39690,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39691,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39692,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39696,
								39693,
								39694,
								39695,
								39681,
								39682,
								39683,
								39684,
								39685,
								39686,
								39687,
								39688,
								39689,
								39690,
								39691,
								39692
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39697,
					"name": "AdminShippingOptionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39698,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39611,
								"name": "AdminShippingOption",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39698
							]
						}
					]
				},
				{
					"id": 39699,
					"name": "AdminShippingOptionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39700,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39701,
											"name": "shipping_options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39611,
													"name": "AdminShippingOption",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39701
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39702,
					"name": "AdminShippingOptionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39703,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39704,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_option"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39705,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39703,
								39704,
								39705
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_option"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39706,
					"name": "AdminUpdateShippingOptionRulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38666,
						"typeArguments": [
							{
								"type": "reference",
								"target": 39596,
								"name": "AdminShippingOptionRule",
								"package": "@medusajs/types"
							}
						],
						"name": "BatchResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39707,
					"name": "AdminShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39708,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39709,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39710,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39711,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39712,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39713,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39714,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39708,
								39709,
								39710,
								39711,
								39712,
								39713,
								39714
							]
						}
					]
				},
				{
					"id": 39715,
					"name": "AdminCreateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39716,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39717,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39718,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39716,
								39717,
								39718
							]
						}
					]
				},
				{
					"id": 39719,
					"name": "AdminUpdateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39720,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39721,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39722,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39720,
								39721,
								39722
							]
						}
					]
				},
				{
					"id": 39723,
					"name": "AdminShippingProfileListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39736,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39733,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39734,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39735,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39724,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39725,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39726,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39727,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39728,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39729,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39730,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39731,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39723,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39732,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39723,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39736,
								39733,
								39734,
								39735,
								39724,
								39725,
								39726,
								39727,
								39728,
								39729,
								39730,
								39731,
								39732
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39737,
					"name": "AdminShippingProfileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39738,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39707,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39738
							]
						}
					]
				},
				{
					"id": 39739,
					"name": "AdminShippingProfileListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39740,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39741,
											"name": "shipping_profiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39707,
													"name": "AdminShippingProfile",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39741
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39742,
					"name": "AdminShippingProfileDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39743,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39744,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_profile"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39745,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39743,
								39744,
								39745
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_profile"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39746,
					"name": "AdminStockLocationAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39747,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39748,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39749,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39750,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39751,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39752,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39753,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39754,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39755,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39747,
								39748,
								39749,
								39750,
								39751,
								39752,
								39753,
								39754,
								39755
							]
						}
					]
				},
				{
					"id": 39756,
					"name": "AdminStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39757,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39758,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39759,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39760,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 39746,
								"name": "AdminStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39761,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/entities.ts",
										"qualifiedName": "AdminSalesChannel"
									},
									"name": "AdminSalesChannel",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39762,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38844,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39763,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 38883,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39757,
								39758,
								39759,
								39760,
								39761,
								39762,
								39763
							]
						}
					]
				},
				{
					"id": 39764,
					"name": "AdminCreateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39765,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39766,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39767,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 42568,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39768,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39765,
								39766,
								39767,
								39768
							]
						}
					]
				},
				{
					"id": 39769,
					"name": "AdminUpdateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39770,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39771,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39772,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 42568,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39773,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39770,
								39771,
								39772,
								39773
							]
						}
					]
				},
				{
					"id": 39774,
					"name": "AdminUpdateStockLocationSalesChannels",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39775,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 39776,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39775,
								39776
							]
						}
					]
				},
				{
					"id": 39777,
					"name": "AdminCreateStockLocationFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39778,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39779,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39778,
								39779
							]
						}
					]
				},
				{
					"id": 39780,
					"name": "AdminStockLocationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39794,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39791,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39792,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39793,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39781,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39782,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39783,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39784,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39785,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39786,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39780,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39787,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39780,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							},
							"overwrites": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39788,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39789,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39790,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39794,
								39791,
								39792,
								39793,
								39781,
								39782,
								39783,
								39784,
								39785,
								39786,
								39787,
								39788,
								39789,
								39790
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39780,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39795,
					"name": "AdminStockLocationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39796,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39756,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39796
							]
						}
					]
				},
				{
					"id": 39797,
					"name": "AdminStockLocationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39800,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items retrieved."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 39801,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 39802,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The total number of items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 39803,
							"name": "stock_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39756,
									"name": "AdminStockLocation",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.stock_locations"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39800,
								39801,
								39802,
								39803
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38660,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 39798,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 39799,
												"name": "stock_locations",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 39756,
														"name": "AdminStockLocation",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													39799
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39804,
					"name": "AdminStockLocationDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39805,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39806,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "stock_location"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39807,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39805,
								39806,
								39807
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "stock_location"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39808,
					"name": "AdminTaxRateRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39809,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39810,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39809,
								39810
							]
						}
					]
				},
				{
					"id": 39811,
					"name": "AdminTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39812,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39813,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 39814,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39815,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39816,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39817,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39818,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39819,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39820,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39821,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39822,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 39823,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39824,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39870,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39825,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39808,
									"name": "AdminTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39812,
								39813,
								39814,
								39815,
								39816,
								39817,
								39818,
								39819,
								39820,
								39821,
								39822,
								39823,
								39824,
								39825
							]
						}
					]
				},
				{
					"id": 39826,
					"name": "AdminCreateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39827,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39828,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39829,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39830,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39831,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42577,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39832,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39833,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39834,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39827,
								39828,
								39829,
								39830,
								39831,
								39832,
								39833,
								39834
							]
						}
					]
				},
				{
					"id": 39835,
					"name": "AdminUpdateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39836,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39837,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39838,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39839,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42577,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39840,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39841,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39842,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39836,
								39837,
								39838,
								39839,
								39840,
								39841,
								39842
							]
						}
					]
				},
				{
					"id": 39843,
					"name": "AdminTaxRateListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39858,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39843,
											"name": "AdminTaxRateListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39843,
													"name": "AdminTaxRateListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39859,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39843,
											"name": "AdminTaxRateListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39843,
													"name": "AdminTaxRateListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39857,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39854,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39855,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39856,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39844,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39845,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39846,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "true"
									},
									{
										"type": "literal",
										"value": "false"
									}
								]
							}
						},
						{
							"id": 39847,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39848,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39849,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39850,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39851,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39852,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39853,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39858,
								39859,
								39857,
								39854,
								39855,
								39856,
								39844,
								39845,
								39846,
								39847,
								39848,
								39849,
								39850,
								39851,
								39852,
								39853
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39843,
									"name": "AdminTaxRateListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39860,
					"name": "AdminTaxRateResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39861,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39811,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39861
							]
						}
					]
				},
				{
					"id": 39862,
					"name": "AdminTaxRateListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39863,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39864,
											"name": "tax_rates",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39811,
													"name": "AdminTaxRate",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39864
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39865,
					"name": "AdminTaxRateDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39866,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39867,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_rate"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39868,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39866,
								39867,
								39868
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_rate"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39869,
					"name": "AdminTaxRateRuleDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38654,
						"typeArguments": [
							{
								"type": "literal",
								"value": "tax_rate_rule"
							},
							{
								"type": "reference",
								"target": 39811,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						],
						"name": "DeleteResponseWithParent",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39870,
					"name": "AdminTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39871,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39872,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39873,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39874,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 39875,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39876,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39877,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39878,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39879,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 39880,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39811,
									"name": "AdminTaxRate",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 39881,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 39870,
										"name": "AdminTaxRegion",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39882,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39870,
									"name": "AdminTaxRegion",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39871,
								39872,
								39873,
								39874,
								39875,
								39876,
								39877,
								39878,
								39879,
								39880,
								39881,
								39882
							]
						}
					]
				},
				{
					"id": 39883,
					"name": "AdminCreateTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39884,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39885,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39886,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39887,
							"name": "default_tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39888,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39889,
											"name": "rate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 39890,
											"name": "code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39891,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 39892,
											"name": "is_combinable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 39893,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39889,
												39890,
												39891,
												39892,
												39893
											]
										}
									]
								}
							}
						},
						{
							"id": 39894,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39884,
								39885,
								39886,
								39887,
								39894
							]
						}
					]
				},
				{
					"id": 39895,
					"name": "AdminTaxRegionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 39909,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39895,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39895,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 39910,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 39895,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 39895,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 39908,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39905,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39906,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39907,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39896,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39897,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39898,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39899,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39900,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39901,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39902,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39903,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 39904,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39909,
								39910,
								39908,
								39905,
								39906,
								39907,
								39896,
								39897,
								39898,
								39899,
								39900,
								39901,
								39902,
								39903,
								39904
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 39895,
									"name": "AdminTaxRegionListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39911,
					"name": "AdminTaxRegionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39912,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38639,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39912
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38638,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39913,
					"name": "AdminTaxRegionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39914,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39870,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39914
							]
						}
					]
				},
				{
					"id": 39915,
					"name": "AdminTaxRegionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39916,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39917,
											"name": "tax_regions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39870,
													"name": "AdminTaxRegion",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39917
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39918,
					"name": "AdminTaxRegionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39919,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 39920,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_region"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 39921,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39919,
								39920,
								39921
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38648,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_region"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39922,
					"name": "TransactionStepStatus",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "idle"
							},
							{
								"type": "literal",
								"value": "ok"
							},
							{
								"type": "literal",
								"value": "waiting_response"
							},
							{
								"type": "literal",
								"value": "temp_failure"
							},
							{
								"type": "literal",
								"value": "permanent_failure"
							}
						]
					}
				},
				{
					"id": 39923,
					"name": "TransactionState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "not_started"
							},
							{
								"type": "literal",
								"value": "invoking"
							},
							{
								"type": "literal",
								"value": "waiting_to_compensate"
							},
							{
								"type": "literal",
								"value": "compensating"
							},
							{
								"type": "literal",
								"value": "done"
							},
							{
								"type": "literal",
								"value": "reverted"
							},
							{
								"type": "literal",
								"value": "failed"
							}
						]
					}
				},
				{
					"id": 39924,
					"name": "TransactionStepState",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "not_started"
							},
							{
								"type": "literal",
								"value": "invoking"
							},
							{
								"type": "literal",
								"value": "compensating"
							},
							{
								"type": "literal",
								"value": "done"
							},
							{
								"type": "literal",
								"value": "reverted"
							},
							{
								"type": "literal",
								"value": "failed"
							},
							{
								"type": "literal",
								"value": "dormant"
							},
							{
								"type": "literal",
								"value": "skipped"
							},
							{
								"type": "literal",
								"value": "skipped_failure"
							},
							{
								"type": "literal",
								"value": "timeout"
							}
						]
					}
				},
				{
					"id": 39925,
					"name": "StepInvokeResult",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 39926,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39927,
									"name": "output",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 39928,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 39929,
													"name": "output",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												},
												{
													"id": 39930,
													"name": "compensateInput",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														39929,
														39930
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										39927
									]
								}
							]
						}
					}
				},
				{
					"id": 39931,
					"name": "StepError",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 39932,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39933,
									"name": "error",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 39934,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 39935,
									"name": "handlerType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										39933,
										39934,
										39935
									]
								}
							]
						}
					}
				},
				{
					"id": 39936,
					"name": "WorkflowExecutionContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39937,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 39938,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39939,
											"name": "invoke",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 39925,
														"name": "StepInvokeResult",
														"package": "@medusajs/types"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 39940,
											"name": "payload",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39939,
												39940
											]
										}
									]
								}
							}
						},
						{
							"id": 39941,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 39942,
							"name": "errors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 39931,
									"name": "StepError",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39937,
								39941,
								39942
							]
						}
					]
				},
				{
					"id": 39943,
					"name": "WorkflowExecutionDefinition",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39944,
							"name": "async",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39945,
							"name": "compensateAsync",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39946,
							"name": "noCompensation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39947,
							"name": "continueOnPermanentFailure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39948,
							"name": "maxRetries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39949,
							"name": "noWait",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39950,
							"name": "retryInterval",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39951,
							"name": "retryIntervalAwaiting",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39952,
							"name": "saveResponse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 39953,
							"name": "timeout",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39944,
								39945,
								39946,
								39947,
								39948,
								39949,
								39950,
								39951,
								39952,
								39953
							]
						}
					]
				},
				{
					"id": 39954,
					"name": "WorkflowExecutionFn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39955,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39924,
								"name": "TransactionStepState",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39956,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39922,
								"name": "TransactionStepStatus",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39955,
								39956
							]
						}
					]
				},
				{
					"id": 39957,
					"name": "AdminWorkflowExecutionStep",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39958,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39959,
							"name": "invoke",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39954,
								"name": "WorkflowExecutionFn",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39960,
							"name": "definition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39943,
								"name": "WorkflowExecutionDefinition",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39961,
							"name": "compensate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39954,
								"name": "WorkflowExecutionFn",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39962,
							"name": "depth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 39963,
							"name": "startedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39958,
								39959,
								39960,
								39961,
								39962,
								39963
							]
						}
					]
				},
				{
					"id": 39964,
					"name": "AdminWorkflowExecution",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39965,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39966,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39967,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 39968,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42580,
								"name": "AdminWorkflowExecutionExecution",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39969,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39936,
								"name": "WorkflowExecutionContext",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39970,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39923,
								"name": "TransactionState",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 39971,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 39972,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 39973,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39965,
								39966,
								39967,
								39968,
								39969,
								39970,
								39971,
								39972,
								39973
							]
						}
					]
				},
				{
					"id": 39974,
					"name": "AdminGetWorkflowExecutionsParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39980,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38644,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 39977,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The maximum number of items to retrieve."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38641,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 39978,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before retrieving the returned items."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38642,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 39979,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort by and in which order."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n-created_at\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 38643,
								"name": "FindParams.order"
							}
						},
						{
							"id": 39975,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 39976,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39980,
								39977,
								39978,
								39979,
								39975,
								39976
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 38640,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 39981,
					"name": "AdminWorkflowExecutionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 39982,
							"name": "workflow_execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 39964,
								"name": "AdminWorkflowExecution",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								39982
							]
						}
					]
				},
				{
					"id": 39983,
					"name": "AdminWorkflowExecutionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 38660,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 39984,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 39985,
											"name": "workflow_executions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 39964,
													"name": "AdminWorkflowExecution",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												39985
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 39986,
					"name": "AdminWorkflowRunResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 39987,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39988,
									"name": "acknowledgement",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41575,
										"name": "Acknowledgement",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										39988
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						38375,
						38391,
						38403,
						38415,
						38427,
						38429,
						38450,
						38453,
						38474,
						38480,
						38488,
						38493,
						38501,
						38506,
						38514,
						38519,
						38525,
						38529,
						38535,
						38539,
						38540,
						38542,
						38556,
						38563,
						38565,
						38572,
						38575,
						38578,
						38581,
						38585,
						38589,
						38598,
						38602,
						38606,
						38609,
						38623,
						38625,
						38627,
						38634,
						38638,
						38640,
						38645,
						38679,
						38686,
						38689,
						38692,
						38704,
						38719,
						38721,
						38726,
						38747,
						38752,
						38760,
						38765,
						38773,
						38778,
						38784,
						38788,
						38794,
						38798,
						38800,
						38802,
						38810,
						38815,
						38818,
						38821,
						38825,
						38828,
						38832,
						38836,
						38838,
						38841,
						38844,
						38847,
						38856,
						38863,
						38873,
						38883,
						38892,
						38895,
						38898,
						38900,
						38905,
						38907,
						38998,
						39007,
						39010,
						39014,
						39018,
						39024,
						38911,
						38928,
						38941,
						38956,
						38971,
						38991,
						39029,
						39047,
						39060,
						39071,
						39085,
						39095,
						39097,
						39099,
						39111,
						39116,
						39125,
						39106,
						39108,
						39128,
						39136,
						39139,
						39152,
						39159,
						39168,
						39176,
						39184,
						39188,
						39190,
						39203,
						39205,
						39207,
						39214,
						39218,
						39226,
						39242,
						39251,
						39260,
						39263,
						39283,
						39287,
						39289,
						39296,
						39300,
						39307,
						39310,
						39313,
						39326,
						39328,
						39330,
						39337,
						39341,
						39348,
						39351,
						39354,
						39367,
						39369,
						39371,
						39378,
						39382,
						39396,
						39403,
						39408,
						39419,
						39421,
						39537,
						39545,
						39551,
						39556,
						39572,
						39574,
						39576,
						39583,
						39427,
						39437,
						39452,
						39459,
						39465,
						39467,
						39471,
						39477,
						39481,
						39483,
						39487,
						39489,
						39493,
						39499,
						39505,
						39510,
						39515,
						39525,
						39530,
						39533,
						39587,
						39596,
						39605,
						39608,
						39611,
						39630,
						39634,
						39638,
						39641,
						39644,
						39654,
						39659,
						39663,
						39667,
						39676,
						39680,
						39697,
						39702,
						39707,
						39715,
						39719,
						39723,
						39737,
						39742,
						39746,
						39756,
						39764,
						39769,
						39774,
						39777,
						39780,
						39795,
						39797,
						39804,
						39808,
						39811,
						39826,
						39835,
						39843,
						39860,
						39865,
						39870,
						39883,
						39895,
						39911,
						39913,
						39918,
						39936,
						39943,
						39954,
						39957,
						39964,
						39974,
						39981
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						38447,
						38452,
						38676,
						38648,
						38654,
						38660,
						38666,
						38723,
						38812,
						38835,
						38840,
						39026,
						38993,
						38996,
						38997,
						39038,
						39043,
						39062,
						39065,
						39070,
						39110,
						39423,
						39426,
						39527,
						39536,
						39699,
						39706,
						39739,
						39862,
						39869,
						39915,
						39922,
						39923,
						39924,
						39925,
						39931,
						39983,
						39986
					]
				}
			]
		},
		{
			"id": 42452,
			"name": "BaseProductCategory",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42453,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42454,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42455,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's description."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42456,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's handle."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42457,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42458,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the category is internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42459,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's ranking among sibling categories."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42460,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the category's parent."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42461,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's parent."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 42452,
								"name": "BaseProductCategory",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 42462,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's children."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42452,
							"name": "BaseProductCategory",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42463,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The category's products."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
								"qualifiedName": "BaseProduct"
							},
							"name": "BaseProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42464,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Key-value pairs of custom data."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42465,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the category was created."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42466,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the category was updated."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42467,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date the category was deleted."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42453,
						42454,
						42455,
						42456,
						42457,
						42458,
						42459,
						42460,
						42461,
						42462,
						42463,
						42464,
						42465,
						42466,
						42467
					]
				}
			]
		},
		{
			"id": 42468,
			"name": "BaseProductCategoryListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 42486,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 42468,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 37909,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42468,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 37910,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 42487,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 42468,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 37909,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42468,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 37911,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 42485,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38644,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 42482,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items to retrieve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38641,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 42483,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip before retrieving the returned items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38642,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 42484,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort by and in which order."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n-created_at\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38643,
						"name": "FindParams.order"
					}
				},
				{
					"id": 42469,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A query or keywords to search the category's searchable fields."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42470,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the category's ID(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42471,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the category's name(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42472,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the category's description(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42473,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Retrieve the child categories of the specified parent ID(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42474,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by the category's handle(s)."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42475,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the category is active."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42476,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter by whether the category is internal."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42477,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the child categories. If enabled, the child categories are\nretrieved in the "
							},
							{
								"kind": "code",
								"text": "`category_children`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42478,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the parent category. If enabled, the parent category is\nretrieved in the "
							},
							{
								"kind": "code",
								"text": "`parent_category`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42479,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Apply filters on the category's creation date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42480,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Apply filters on the category's update date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42481,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Apply filters on the category's deletion date."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42486,
						42487,
						42485,
						42482,
						42483,
						42484,
						42469,
						42470,
						42471,
						42472,
						42473,
						42474,
						42475,
						42476,
						42477,
						42478,
						42479,
						42480,
						42481
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38640,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 37909,
					"typeArguments": [
						{
							"type": "reference",
							"target": 42468,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39263,
					"name": "AdminProductCategoryListParams"
				}
			]
		},
		{
			"id": 42488,
			"name": "BaseProductCategoryParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42491,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38639,
						"name": "SelectParams.fields"
					}
				},
				{
					"id": 42489,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the parent category. If enabled, the parent category is\nretrieved in the "
							},
							{
								"kind": "code",
								"text": "`parent_category`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42490,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the child categories. If enabled, the child categories are\nretrieved in the "
							},
							{
								"kind": "code",
								"text": "`category_children`"
							},
							{
								"kind": "text",
								"text": " field."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42491,
						42489,
						42490
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38638,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39283,
					"name": "AdminProductCategoryParams"
				}
			]
		},
		{
			"id": 42492,
			"name": "BaseProductTag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42493,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42494,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42495,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42496,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42497,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42498,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42493,
						42494,
						42495,
						42496,
						42497,
						42498
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39300,
					"name": "AdminProductTag"
				}
			]
		},
		{
			"id": 42499,
			"name": "BaseProductTagListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42508,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38644,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 42505,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items to retrieve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38641,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 42506,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip before retrieving the returned items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38642,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 42507,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort by and in which order."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n-created_at\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38643,
						"name": "FindParams.order"
					}
				},
				{
					"id": 42500,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42501,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42502,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42503,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42504,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42508,
						42505,
						42506,
						42507,
						42500,
						42501,
						42502,
						42503,
						42504
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38640,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39313,
					"name": "AdminProductTagListParams"
				}
			]
		},
		{
			"id": 42509,
			"name": "BaseProductType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42510,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42511,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42512,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42513,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42514,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42515,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42510,
						42511,
						42512,
						42513,
						42514,
						42515
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39341,
					"name": "AdminProductType"
				}
			]
		},
		{
			"id": 42549,
			"name": "AdminBaseReturnReasonPayload",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42550,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42551,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42552,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42553,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42554,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42551,
								42552,
								42553,
								42554
							]
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 39545,
					"name": "AdminCreateReturnReason"
				},
				{
					"type": "reference",
					"target": 39551,
					"name": "AdminUpdateReturnReason"
				}
			]
		},
		{
			"id": 42541,
			"name": "BaseReturnReason",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42542,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42543,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42544,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42545,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42546,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 42547,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42548,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42542,
						42543,
						42544,
						42545,
						42546,
						42547,
						42548
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39537,
					"name": "AdminReturnReason"
				}
			]
		},
		{
			"id": 42555,
			"name": "BaseReturnReasonListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42567,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields and relations to retrieve.\n\nLearn more in the [API reference](https://docs.medusajs.com/v2/api/store#select-fields-and-relations)."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38644,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 42564,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of items to retrieve."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38641,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 42565,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of items to skip before retrieving the returned items."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38642,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 42566,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The field to sort by and in which order."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n-created_at\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 38643,
						"name": "FindParams.order"
					}
				},
				{
					"id": 42556,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42557,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 42558,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 42559,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 42560,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 42561,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 42562,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42563,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 37887,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42567,
						42564,
						42565,
						42566,
						42556,
						42557,
						42558,
						42559,
						42560,
						42561,
						42562,
						42563
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 38640,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39556,
					"name": "AdminReturnReasonListParams"
				}
			]
		},
		{
			"id": 42516,
			"name": "BaseReturnItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42517,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42518,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42519,
					"name": "received_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42520,
					"name": "damaged_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42521,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42522,
					"name": "note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42523,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42524,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42525,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42517,
						42518,
						42519,
						42520,
						42521,
						42522,
						42523,
						42524,
						42525
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39427,
					"name": "AdminReturnItem"
				}
			]
		},
		{
			"id": 42526,
			"name": "BaseReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42527,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42528,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42529,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
							"qualifiedName": "ReturnStatus"
						},
						"name": "ReturnStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42530,
					"name": "exchange_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42531,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42532,
					"name": "claim_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42533,
					"name": "order_version",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42534,
					"name": "display_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42535,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42536,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42537,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42516,
							"name": "BaseReturnItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42538,
					"name": "received_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42539,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42540,
					"name": "canceled_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42527,
						42528,
						42529,
						42530,
						42531,
						42532,
						42533,
						42534,
						42535,
						42536,
						42537,
						42538,
						42539,
						42540
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 39437,
					"name": "AdminReturn"
				}
			]
		},
		{
			"id": 42568,
			"name": "AdminUpsertStockLocationAddress",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42569,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42570,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42571,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42572,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42573,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42574,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42575,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42576,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42569,
						42570,
						42571,
						42572,
						42573,
						42574,
						42575,
						42576
					]
				}
			]
		},
		{
			"id": 42577,
			"name": "AdminCreateTaxRateRule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42578,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42579,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42578,
						42579
					]
				}
			]
		},
		{
			"id": 42580,
			"name": "AdminWorkflowExecutionExecution",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42581,
					"name": "steps",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 39957,
								"name": "AdminWorkflowExecutionStep",
								"package": "@medusajs/types"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42581
					]
				}
			]
		},
		{
			"id": 43141,
			"name": "Maybe",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43142,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 43142,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 43143,
			"name": "Scalars",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "All built-in and custom scalars, mapped to their actual values"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43144,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43145,
							"name": "ID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43146,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43147,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43148,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43147,
												43148
											]
										}
									]
								}
							}
						},
						{
							"id": 43149,
							"name": "String",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43150,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43151,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43152,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43151,
												43152
											]
										}
									]
								}
							}
						},
						{
							"id": 43153,
							"name": "Boolean",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43154,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43155,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 43156,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43155,
												43156
											]
										}
									]
								}
							}
						},
						{
							"id": 43157,
							"name": "Int",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43158,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43159,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 43160,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43159,
												43160
											]
										}
									]
								}
							}
						},
						{
							"id": 43161,
							"name": "Float",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43162,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43163,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 43164,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43163,
												43164
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43145,
								43149,
								43153,
								43157,
								43161
							]
						}
					]
				}
			}
		},
		{
			"id": 42598,
			"name": "Product",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42599,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42600,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "Product"
							}
						},
						{
							"id": 42601,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43143,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42602,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43143,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42603,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43141,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42591,
													"name": "ProductVariant",
													"package": "@medusajs/types"
												}
											],
											"name": "Maybe",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42600,
								42601,
								42602,
								42603
							]
						}
					]
				}
			}
		},
		{
			"id": 42591,
			"name": "ProductVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42592,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42593,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "ProductVariant"
							}
						},
						{
							"id": 42594,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43143,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42595,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43143,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42596,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43143,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42597,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43141,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42604,
													"name": "Price",
													"package": "@medusajs/types"
												}
											],
											"name": "Maybe",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42593,
								42594,
								42595,
								42596,
								42597
							]
						}
					]
				}
			}
		},
		{
			"id": 42604,
			"name": "Price",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42605,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42606,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "Price"
							}
						},
						{
							"id": 42607,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43141,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "Int"
											},
											"objectType": {
												"type": "reference",
												"target": 43143,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42606,
								42607
							]
						}
					]
				}
			}
		},
		{
			"id": 42582,
			"name": "FixtureEntryPoints",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42583,
					"name": "product_variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42591,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42584,
					"name": "product_variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42591,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42585,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42591,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42586,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42591,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42587,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42598,
						"name": "Product",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42588,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42598,
						"name": "Product",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42589,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42604,
						"name": "Price",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42590,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42604,
						"name": "Price",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42583,
						42584,
						42585,
						42586,
						42587,
						42588,
						42589,
						42590
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 40021,
					"name": "IndexServiceEntryPoints"
				}
			]
		},
		{
			"id": 43165,
			"name": "IndexOperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43177,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43166,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43167,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43168,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43169,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43170,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43171,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43172,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43173,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43174,
							"name": "$is",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43175,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43176,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43177,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43167,
								43168,
								43169,
								43170,
								43171,
								43172,
								43173,
								43174,
								43175,
								43176
							]
						}
					]
				}
			}
		},
		{
			"id": 39989,
			"name": "IndexTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 39990,
					"name": "SchemaObjectEntityRepresentation",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 39991,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 39992,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the type/entity in the schema"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 39993,
									"name": "parents",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "All parents a type/entity refers to in the schema\nor through links"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 39994,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 39995,
														"name": "ref",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The reference to the schema object representation\nof the parent"
																}
															]
														},
														"type": {
															"type": "reference",
															"target": 39990,
															"name": "SchemaObjectEntityRepresentation",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 39996,
														"name": "inSchemaRef",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "When a link is inferred between two types/entities\nwe are configuring the link tree, and therefore we are\nstoring the reference to the parent type/entity within the\nschema which defer from the true parent from a pure entity\npoint of view"
																}
															]
														},
														"type": {
															"type": "reference",
															"target": 39990,
															"name": "SchemaObjectEntityRepresentation",
															"package": "@medusajs/types"
														}
													},
													{
														"id": 39997,
														"name": "targetProp",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The property the data should be assigned to in the parent"
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 39998,
														"name": "isList",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "Are the data expected to be a list or not"
																}
															]
														},
														"type": {
															"type": "intrinsic",
															"name": "boolean"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															39995,
															39996,
															39997,
															39998
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 39999,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The default fields to query for the type/entity"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 40000,
									"name": "listeners",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "code",
												"text": "`@Listerners`"
											},
											{
												"kind": "text",
												"text": " directive is required and all listeners found\nfor the type will be stored here"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 40001,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The alias for the type/entity retrieved in the corresponding\nmodule"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40002,
									"name": "moduleConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The module joiner config corresponding to the module the type/entity\nrefers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 40645,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										39992,
										39993,
										39999,
										40000,
										40001,
										40002
									]
								}
							]
						}
					}
				},
				{
					"id": 40003,
					"name": "EntityNameModuleConfigMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40004,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 40005,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 40006,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 40645,
										"name": "ModuleJoinerConfig",
										"package": "@medusajs/types"
									}
								}
							]
						}
					}
				},
				{
					"id": 40007,
					"name": "SchemaPropertiesMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40008,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 40009,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 40010,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 40011,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 40012,
													"name": "shortCutOf",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40013,
													"name": "ref",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 39990,
														"name": "SchemaObjectEntityRepresentation",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														40012,
														40013
													]
												}
											]
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 40014,
					"name": "SchemaObjectRepresentation",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the schema objects representation once the schema has been processed"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 40015,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 40016,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 40017,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 39990,
												"name": "SchemaObjectEntityRepresentation",
												"package": "@medusajs/types"
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40018,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40019,
											"name": "_schemaPropertiesMap",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40007,
												"name": "SchemaPropertiesMap",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40020,
											"name": "_serviceNameModuleConfigMap",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40003,
												"name": "EntityNameModuleConfigMap",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40019,
												40020
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 40021,
					"name": "IndexServiceEntryPoints",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Bucket filled with map of entry point -> types that are autogenerated by the codegen from the config schema"
							}
						]
					},
					"children": [
						{
							"id": 40022,
							"name": "product_variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42591,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42583,
								"name": "FixtureEntryPoints.product_variant"
							}
						},
						{
							"id": 40023,
							"name": "product_variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42591,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42584,
								"name": "FixtureEntryPoints.product_variants"
							}
						},
						{
							"id": 40024,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42591,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42585,
								"name": "FixtureEntryPoints.variant"
							}
						},
						{
							"id": 40025,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42591,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42586,
								"name": "FixtureEntryPoints.variants"
							}
						},
						{
							"id": 40026,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42598,
								"name": "Product",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42587,
								"name": "FixtureEntryPoints.product"
							}
						},
						{
							"id": 40027,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42598,
								"name": "Product",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42588,
								"name": "FixtureEntryPoints.products"
							}
						},
						{
							"id": 40028,
							"name": "price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42604,
								"name": "Price",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42589,
								"name": "FixtureEntryPoints.price"
							}
						},
						{
							"id": 40029,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42604,
								"name": "Price",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42590,
								"name": "FixtureEntryPoints.prices"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40022,
								40023,
								40024,
								40025,
								40026,
								40027,
								40028,
								40029
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42582,
							"name": "FixtureEntryPoints",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 40048,
					"name": "ObjectToIndexFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Output an array of strings representing the path to each leaf node in an object"
							}
						]
					},
					"typeParameters": [
						{
							"id": 40053,
							"name": "MaybeT",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 40054,
							"name": "Depth",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 2
							}
						},
						{
							"id": 40055,
							"name": "Exclusion",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"default": {
								"type": "tuple"
							}
						},
						{
							"id": 40056,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 42610,
								"typeArguments": [
									{
										"type": "reference",
										"target": 40053,
										"name": "MaybeT",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "TypeOnly",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 40054,
							"name": "Depth",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 40056,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 40056,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"objectType": {
									"type": "mapped",
									"parameter": "K",
									"parameterType": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 40056,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"templateType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "templateLiteral",
											"head": "",
											"tail": [
												[
													{
														"type": "reference",
														"target": 42608,
														"name": "RawBigNumberPrefix",
														"package": "@medusajs/types"
													},
													""
												],
												[
													{
														"type": "intrinsic",
														"name": "string"
													},
													""
												]
											]
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Exclude"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											],
											"name": "Exclude",
											"package": "typescript"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "reference",
												"target": 42609,
												"name": "ExcludedProps",
												"package": "@medusajs/types"
											},
											"trueType": {
												"type": "intrinsic",
												"name": "never"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "intrinsic",
														"name": "number"
													},
													"objectType": {
														"type": "reference",
														"target": 40055,
														"name": "Exclusion",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"trueType": {
													"type": "intrinsic",
													"name": "never"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 42610,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 40056,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															}
														],
														"name": "TypeOnly",
														"package": "@medusajs/types"
													},
													"extendsType": {
														"type": "array",
														"elementType": {
															"type": "inferred",
															"name": "R"
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 42610,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
																		"qualifiedName": "R"
																	},
																	"name": "R",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "TypeOnly",
															"package": "@medusajs/types"
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Date"
															},
															"name": "Date",
															"package": "typescript"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Exclude"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															],
															"name": "Exclude",
															"package": "typescript"
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 42610,
																"typeArguments": [
																	{
																		"type": "unknown",
																		"name": "..."
																	}
																],
																"name": "TypeOnly",
																"package": "@medusajs/types"
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 40049,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 40050,
																			"name": "__typename",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "unknown",
																				"name": "..."
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				40050
																			]
																		}
																	]
																}
															},
															"trueType": {
																"type": "templateLiteral",
																"head": "",
																"tail": [
																	[
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		"."
																	],
																	[
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		""
																	]
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "unknown",
																	"name": "..."
																},
																"extendsType": {
																	"type": "unknown",
																	"name": "..."
																},
																"trueType": {
																	"type": "unknown",
																	"name": "..."
																},
																"falseType": {
																	"type": "unknown",
																	"name": "..."
																}
															}
														}
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 42610,
															"typeArguments": [
																{
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															],
															"name": "TypeOnly",
															"package": "@medusajs/types"
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Date"
															},
															"name": "Date",
															"package": "typescript"
														},
														"trueType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Exclude"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															],
															"name": "Exclude",
															"package": "typescript"
														},
														"falseType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": 42610,
																"typeArguments": [
																	{
																		"type": "unknown",
																		"name": "..."
																	}
																],
																"name": "TypeOnly",
																"package": "@medusajs/types"
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 40051,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 40052,
																			"name": "__typename",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"type": {
																				"type": "unknown",
																				"name": "..."
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				40052
																			]
																		}
																	]
																}
															},
															"trueType": {
																"type": "templateLiteral",
																"head": "",
																"tail": [
																	[
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		"."
																	],
																	[
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		""
																	]
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "unknown",
																	"name": "..."
																},
																"extendsType": {
																	"type": "unknown",
																	"name": "..."
																},
																"trueType": {
																	"type": "unknown",
																	"name": "..."
																},
																"falseType": {
																	"type": "unknown",
																	"name": "..."
																}
															}
														}
													}
												}
											}
										}
									}
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 40057,
					"name": "IndexFilters",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extract all available filters from an index entry point deeply"
							}
						]
					},
					"typeParameters": [
						{
							"id": 40058,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40059,
							"name": "IndexEntryPointsLevel",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 40021,
								"name": "IndexServiceEntryPoints",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40060,
							"name": "Exclusion",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"default": {
								"type": "tuple"
							}
						},
						{
							"id": 40061,
							"name": "Lim",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 3
								},
								"objectType": {
									"type": "reference",
									"target": 42623,
									"name": "Depth",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 40061,
							"name": "Lim",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "number"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 40058,
								"name": "TEntry",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 40059,
									"name": "IndexEntryPointsLevel",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 42610,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 40058,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 40059,
												"name": "IndexEntryPointsLevel",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "TypeOnly",
									"package": "@medusajs/types"
								},
								"extendsType": {
									"type": "array",
									"elementType": {
										"type": "inferred",
										"name": "V"
									}
								},
								"trueType": {
									"type": "reference",
									"target": 37700,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42612,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42614,
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 40061,
															"name": "Lim",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"target": 40058,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "rest",
																	"elementType": {
																		"type": "reference",
																		"target": 40060,
																		"name": "Exclusion",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													],
													"name": "ExtractFiltersOperators",
													"package": "@medusajs/types"
												}
											],
											"name": "OmitNever",
											"package": "@medusajs/types"
										}
									],
									"name": "Prettify",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "reference",
									"target": 37700,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42612,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42614,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": 40058,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 40059,
																"name": "IndexEntryPointsLevel",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 40061,
															"name": "Lim",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"target": 40058,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "rest",
																	"elementType": {
																		"type": "reference",
																		"target": 40060,
																		"name": "Exclusion",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													],
													"name": "ExtractFiltersOperators",
													"package": "@medusajs/types"
												}
											],
											"name": "OmitNever",
											"package": "@medusajs/types"
										}
									],
									"name": "Prettify",
									"package": "@medusajs/types"
								}
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 40062,
					"name": "OrderBy",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "ASC"
							},
							{
								"type": "literal",
								"value": "DESC"
							},
							{
								"type": "literal",
								"value": 1
							},
							{
								"type": "literal",
								"value": -1
							},
							{
								"type": "literal",
								"value": true
							},
							{
								"type": "literal",
								"value": false
							}
						]
					}
				},
				{
					"id": 40063,
					"name": "IndexOrderBy",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extract all available orderBy from a remote entry point deeply"
							}
						]
					},
					"typeParameters": [
						{
							"id": 40064,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40065,
							"name": "IndexEntryPointsLevel",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 40021,
								"name": "IndexServiceEntryPoints",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40066,
							"name": "Exclusion",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"default": {
								"type": "tuple"
							}
						},
						{
							"id": 40067,
							"name": "Lim",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 3
								},
								"objectType": {
									"type": "reference",
									"target": 42623,
									"name": "Depth",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 40067,
							"name": "Lim",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "number"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 40064,
								"name": "TEntry",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 40065,
									"name": "IndexEntryPointsLevel",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 42610,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 40064,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 40065,
												"name": "IndexEntryPointsLevel",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "TypeOnly",
									"package": "@medusajs/types"
								},
								"extendsType": {
									"type": "array",
									"elementType": {
										"type": "inferred",
										"name": "V"
									}
								},
								"trueType": {
									"type": "reference",
									"target": 37700,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42612,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42624,
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 40067,
															"name": "Lim",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"target": 40064,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "rest",
																	"elementType": {
																		"type": "reference",
																		"target": 40066,
																		"name": "Exclusion",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													],
													"name": "ExtractOrderByOperators",
													"package": "@medusajs/types"
												}
											],
											"name": "OmitNever",
											"package": "@medusajs/types"
										}
									],
									"name": "Prettify",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "reference",
									"target": 37700,
									"typeArguments": [
										{
											"type": "reference",
											"target": 42612,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42624,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": 40064,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 40065,
																"name": "IndexEntryPointsLevel",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 40067,
															"name": "Lim",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"target": 40064,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "rest",
																	"elementType": {
																		"type": "reference",
																		"target": 40066,
																		"name": "Exclusion",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													],
													"name": "ExtractOrderByOperators",
													"package": "@medusajs/types"
												}
											],
											"name": "OmitNever",
											"package": "@medusajs/types"
										}
									],
									"name": "Prettify",
									"package": "@medusajs/types"
								}
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 40030,
					"name": "IndexQueryConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40037,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40031,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40032,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 40048,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": 40037,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 40021,
																	"name": "IndexServiceEntryPoints",
																	"package": "@medusajs/types"
																}
															}
														]
													},
													"objectType": {
														"type": "reference",
														"target": 40021,
														"name": "IndexServiceEntryPoints",
														"package": "@medusajs/types"
													}
												}
											],
											"name": "ObjectToIndexFields",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "never"
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 40048,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 40037,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"target": 40021,
																		"name": "IndexServiceEntryPoints",
																		"package": "@medusajs/types"
																	}
																}
															]
														},
														"objectType": {
															"type": "reference",
															"target": 40021,
															"name": "IndexServiceEntryPoints",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "ObjectToIndexFields",
												"package": "@medusajs/types"
											}
										}
									}
								},
								{
									"id": 40033,
									"name": "filters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40057,
										"typeArguments": [
											{
												"type": "reference",
												"target": 40037,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "IndexFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40034,
									"name": "joinFilters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40057,
										"typeArguments": [
											{
												"type": "reference",
												"target": 40037,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "IndexFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40035,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Partial"
										},
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "pagination"
												},
												"objectType": {
													"type": "reference",
													"target": 40521,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40037,
															"name": "TEntry",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RemoteQueryInput",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Partial",
										"package": "typescript"
									}
								},
								{
									"id": 40036,
									"name": "keepFilteredEntities",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40032,
										40033,
										40034,
										40035,
										40036
									]
								}
							]
						}
					}
				},
				{
					"id": 40038,
					"name": "QueryFunctionReturnPagination",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40039,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40040,
									"name": "skip",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 40041,
									"name": "take",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 40042,
									"name": "count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40040,
										40041,
										40042
									]
								}
							]
						}
					}
				},
				{
					"id": 40043,
					"name": "QueryResultSet",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The QueryResultSet presents a typed output for the\nresult returned by the index search engine, it doesnt narrow down the type\nbased on the intput fields."
							}
						]
					},
					"typeParameters": [
						{
							"id": 40047,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40044,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40045,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 40047,
											"name": "TEntry",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 40021,
												"name": "IndexServiceEntryPoints",
												"package": "@medusajs/types"
											}
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 40047,
													"name": "TEntry",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 40021,
													"name": "IndexServiceEntryPoints",
													"package": "@medusajs/types"
												}
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									}
								},
								{
									"id": 40046,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40038,
										"name": "QueryFunctionReturnPagination",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40045,
										40046
									]
								}
							]
						}
					}
				},
				{
					"id": 40068,
					"name": "IndexModuleOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the module options that can be provided"
							}
						]
					},
					"children": [
						{
							"id": 40069,
							"name": "customAdapter",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40070,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40071,
											"name": "constructor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 40072,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 40073,
															"name": "new constructor",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"parameters": [
																{
																	"id": 40074,
																	"name": "args",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										},
										{
											"id": 40075,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40071,
												40075
											]
										}
									]
								}
							}
						},
						{
							"id": 40076,
							"name": "defaultAdapterOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 40690,
								"name": "ModuleServiceInitializeOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40077,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40069,
								40076,
								40077
							]
						}
					]
				},
				{
					"id": 40078,
					"name": "IIndexService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40079,
							"name": "query",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40080,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 40081,
											"name": "TEntry",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40082,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40081,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "IndexQueryConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40043,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40081,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "QueryResultSet",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								40079
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 40714,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 40096,
					"name": "StorageProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the storage provider interface,"
							}
						]
					},
					"children": [
						{
							"id": 40097,
							"name": "onApplicationStart",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isOptional": true
							},
							"signatures": [
								{
									"id": 40098,
									"name": "onApplicationStart",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40099,
							"name": "query",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40100,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 40101,
											"name": "TEntry",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40102,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40030,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40101,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "IndexQueryConfig",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40043,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40101,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "QueryResultSet",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40103,
							"name": "consumeEvent",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40104,
									"name": "consumeEvent",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40105,
											"name": "schemaEntityObjectRepresentation",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 39990,
												"name": "SchemaObjectEntityRepresentation",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 38192,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								40097,
								40099,
								40103
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						40021,
						40068,
						40078,
						40096
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						39990,
						40003,
						40007,
						40014,
						40048,
						40057,
						40062,
						40063,
						40030,
						40038,
						40043
					]
				}
			]
		},
		{
			"id": 42609,
			"name": "ExcludedProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "__typename"
			}
		},
		{
			"id": 42623,
			"name": "Depth",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					},
					{
						"type": "literal",
						"value": 6
					},
					{
						"type": "literal",
						"value": 7
					},
					{
						"type": "literal",
						"value": 8
					},
					{
						"type": "literal",
						"value": 9
					},
					{
						"type": "literal",
						"value": 10
					}
				]
			}
		},
		{
			"id": 43178,
			"name": "CleanupObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43179,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": 37700,
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 43179,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								],
								"name": "Exclude",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 42609,
								"name": "ExcludedProps",
								"package": "@medusajs/types"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				],
				"name": "Prettify",
				"package": "@medusajs/types"
			}
		},
		{
			"id": 42612,
			"name": "OmitNever",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42613,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 42613,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
							"qualifiedName": "K"
						},
						"name": "K",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 42613,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"nameType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 42610,
						"typeArguments": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 42613,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						],
						"name": "TypeOnly",
						"package": "@medusajs/types"
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "never"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
							"qualifiedName": "K"
						},
						"name": "K",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 42610,
			"name": "TypeOnly",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42611,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Required"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 42611,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				],
				"name": "Required",
				"package": "typescript"
			}
		},
		{
			"id": 42608,
			"name": "RawBigNumberPrefix",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "raw_"
			}
		},
		{
			"id": 42614,
			"name": "ExtractFiltersOperators",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42619,
					"name": "MaybeT",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 42620,
					"name": "Lim",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": 2
						},
						"objectType": {
							"type": "reference",
							"target": 42623,
							"name": "Depth",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42621,
					"name": "Exclusion",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"default": {
						"type": "tuple"
					}
				},
				{
					"id": 42622,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 42610,
						"typeArguments": [
							{
								"type": "reference",
								"target": 42619,
								"name": "MaybeT",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeOnly",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 42622,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
							"qualifiedName": "Key"
						},
						"name": "Key",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "reference",
							"target": 42621,
							"name": "Exclusion",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 42609,
							"name": "ExcludedProps",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 42610,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 42622,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "TypeOnly",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 42610,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42622,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "TypeOnly",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42610,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 42622,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "TypeOnly",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": 43165,
										"typeArguments": [
											{
												"type": "reference",
												"target": 42610,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 42622,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "TypeOnly",
												"package": "@medusajs/types"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types",
										"qualifiedName": "IndexOperatorMap"
									}
								]
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 42610,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 42622,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "TypeOnly",
									"package": "@medusajs/types"
								},
								"extendsType": {
									"type": "array",
									"elementType": {
										"type": "inferred",
										"name": "R"
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": 42610,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "TypeOnly",
										"package": "@medusajs/types"
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 42615,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42616,
													"name": "__typename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42616
													]
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": 40057,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "reference",
												"target": 42622,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													},
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": 42621,
															"name": "Exclusion",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 42620,
													"name": "Lim",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42623,
													"name": "Depth",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "IndexFilters",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 42610,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
														"qualifiedName": "R"
													},
													"name": "R",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "TypeOnly",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "object"
										},
										"trueType": {
											"type": "reference",
											"target": 43178,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42610,
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
																"qualifiedName": "R"
															},
															"name": "R",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOnly",
													"package": "@medusajs/types"
												}
											],
											"name": "CleanupObject",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": 42610,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42622,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "TypeOnly",
										"package": "@medusajs/types"
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 42617,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42618,
													"name": "__typename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42618
													]
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": 40057,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42622,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													},
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": 42621,
															"name": "Exclusion",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 42620,
													"name": "Lim",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42623,
													"name": "Depth",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "IndexFilters",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 42610,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 42622,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "TypeOnly",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "object"
										},
										"trueType": {
											"type": "reference",
											"target": 43178,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42610,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 42622,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"name": "TypeOnly",
													"package": "@medusajs/types"
												}
											],
											"name": "CleanupObject",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 42624,
			"name": "ExtractOrderByOperators",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 42629,
					"name": "MaybeT",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 42630,
					"name": "Lim",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": 2
						},
						"objectType": {
							"type": "reference",
							"target": 42623,
							"name": "Depth",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42631,
					"name": "Exclusion",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"default": {
						"type": "tuple"
					}
				},
				{
					"id": 42632,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 42610,
						"typeArguments": [
							{
								"type": "reference",
								"target": 42629,
								"name": "MaybeT",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeOnly",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 42632,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
							"qualifiedName": "Key"
						},
						"name": "Key",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "reference",
							"target": 42631,
							"name": "Exclusion",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 42609,
							"name": "ExcludedProps",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 42610,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 42632,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "TypeOnly",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"trueType": {
								"type": "reference",
								"target": 40062,
								"name": "OrderBy",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 42610,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 42632,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "TypeOnly",
									"package": "@medusajs/types"
								},
								"extendsType": {
									"type": "array",
									"elementType": {
										"type": "inferred",
										"name": "R"
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": 42610,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "TypeOnly",
										"package": "@medusajs/types"
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 42625,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42626,
													"name": "__typename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42626
													]
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": 40063,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "reference",
												"target": 42632,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													},
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": 42631,
															"name": "Exclusion",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 42630,
													"name": "Lim",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42623,
													"name": "Depth",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "IndexOrderBy",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 42610,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
														"qualifiedName": "R"
													},
													"name": "R",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "TypeOnly",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "object"
										},
										"trueType": {
											"type": "reference",
											"target": 43178,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42610,
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
																"qualifiedName": "R"
															},
															"name": "R",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOnly",
													"package": "@medusajs/types"
												}
											],
											"name": "CleanupObject",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": 42610,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42632,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "TypeOnly",
										"package": "@medusajs/types"
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 42627,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42628,
													"name": "__typename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42628
													]
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": 40063,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42632,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													},
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": 42631,
															"name": "Exclusion",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 42630,
													"name": "Lim",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 42623,
													"name": "Depth",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "IndexOrderBy",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 42610,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 42632,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "TypeOnly",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "object"
										},
										"trueType": {
											"type": "reference",
											"target": 43178,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42610,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 42632,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"name": "TypeOnly",
													"package": "@medusajs/types"
												}
											],
											"name": "CleanupObject",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 40106,
			"name": "InventoryTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 40107,
					"name": "InventoryItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item details."
							}
						]
					},
					"children": [
						{
							"id": 40108,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40109,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40110,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40111,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40112,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 40113,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mid code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40114,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40115,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40116,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40117,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40118,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40119,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40120,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40121,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40122,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40123,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40124,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40125,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40108,
								40109,
								40110,
								40111,
								40112,
								40113,
								40114,
								40115,
								40116,
								40117,
								40118,
								40119,
								40120,
								40121,
								40122,
								40123,
								40124,
								40125
							]
						}
					]
				},
				{
					"id": 40126,
					"name": "FilterableInventoryItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved inventory items."
							}
						]
					},
					"children": [
						{
							"id": 40127,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search term to search inventory items' attributes."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40128,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40129,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40130,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKUs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37742,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 40131,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40132,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS Codes to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37742,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 40133,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by whether they require shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40127,
								40128,
								40129,
								40130,
								40131,
								40132,
								40133
							]
						}
					]
				},
				{
					"id": 40134,
					"name": "InventoryLevelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory level details."
							}
						]
					},
					"children": [
						{
							"id": 40135,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40136,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40137,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40138,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40139,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40140,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40141,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The available quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40142,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40143,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40144,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40145,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40135,
								40136,
								40137,
								40138,
								40139,
								40140,
								40141,
								40142,
								40143,
								40144,
								40145
							]
						}
					]
				},
				{
					"id": 40146,
					"name": "FilterableInventoryLevelProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved inventory levels."
							}
						]
					},
					"children": [
						{
							"id": 40153,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 40146,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 40146,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 40154,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 40146,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 40146,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 40147,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40148,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40149,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40150,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`stocked_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 40151,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`reserved_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 40152,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`incoming_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40153,
								40154,
								40147,
								40148,
								40149,
								40150,
								40151,
								40152
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 40146,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 40155,
					"name": "ReservationItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation item details."
							}
						]
					},
					"children": [
						{
							"id": 40156,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reservation item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40157,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40158,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40159,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the reservation item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 42195,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40160,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40161,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40162,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 40163,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The created by of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40164,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40165,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40166,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40167,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40156,
								40157,
								40158,
								40159,
								40160,
								40161,
								40162,
								40163,
								40164,
								40165,
								40166,
								40167
							]
						}
					]
				},
				{
					"id": 40168,
					"name": "FilterableReservationItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved reservation items."
							}
						]
					},
					"children": [
						{
							"id": 40169,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40171,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40172,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40173,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40174,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`description`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 37742,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 40175,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The \"created by\" values to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 40176,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 37750,
										"name": "NumericalComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40169,
								40171,
								40172,
								40173,
								40174,
								40175,
								40176
							]
						}
					]
				},
				{
					"id": 40177,
					"name": "UpdateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40178,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40179,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.sku"
							}
						},
						{
							"id": 40180,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.origin_country"
							}
						},
						{
							"id": 40181,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.mid_code"
							}
						},
						{
							"id": 40182,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.material"
							}
						},
						{
							"id": 40183,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.weight"
							}
						},
						{
							"id": 40184,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.length"
							}
						},
						{
							"id": 40185,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.height"
							}
						},
						{
							"id": 40186,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.width"
							}
						},
						{
							"id": 40187,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.title"
							}
						},
						{
							"id": 40188,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 40189,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.thumbnail"
							}
						},
						{
							"id": 40190,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 40191,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.hs_code"
							}
						},
						{
							"id": 40192,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.requires_shipping"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40178,
								40179,
								40180,
								40181,
								40182,
								40183,
								40184,
								40185,
								40186,
								40187,
								40188,
								40189,
								40190,
								40191,
								40192
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 40193,
									"name": "CreateInventoryItemInput",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 40193,
					"name": "CreateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the inventory item to be created."
							}
						]
					},
					"children": [
						{
							"id": 40194,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40195,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40196,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40197,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40198,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40199,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40200,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40201,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 40202,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40203,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40204,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40205,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 40206,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40207,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40194,
								40195,
								40196,
								40197,
								40198,
								40199,
								40200,
								40201,
								40202,
								40203,
								40204,
								40205,
								40206,
								40207
							]
						}
					]
				},
				{
					"id": 40208,
					"name": "CreateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40209,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40210,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40211,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40212,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40209,
								40210,
								40211,
								40212
							]
						}
					]
				},
				{
					"id": 40213,
					"name": "UpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level."
							}
						]
					},
					"children": [
						{
							"id": 40214,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40215,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40216,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40214,
								40215,
								40216
							]
						}
					]
				},
				{
					"id": 40217,
					"name": "BulkUpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
							}
						]
					},
					"children": [
						{
							"id": 40220,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40221,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40222,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 40218,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40219,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40220,
								40221,
								40222,
								40218,
								40219
							]
						}
					]
				},
				{
					"id": 40223,
					"name": "BulkAdjustInventoryLevelInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 40224,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40225,
											"name": "inventory_item_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated inventory level."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40226,
											"name": "location_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40227,
											"name": "adjustment",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to adjust the inventory level by."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42195,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40225,
												40226,
												40227
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 40213,
								"name": "UpdateInventoryLevelInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 40228,
					"name": "UpdateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in a reservation item."
							}
						]
					},
					"children": [
						{
							"id": 40229,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40230,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 42195,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40231,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40232,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40233,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 40234,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40229,
								40230,
								40231,
								40232,
								40233,
								40234
							]
						}
					]
				},
				{
					"id": 40235,
					"name": "CreateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the reservation item to be created."
							}
						]
					},
					"children": [
						{
							"id": 40236,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40237,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40238,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 40239,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 42195,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40240,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 40241,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40242,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user or system that created the reservation. Can be any form of identification string."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40243,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An ID associated with an external third-party system that the reservation item is connected to."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40244,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40236,
								40237,
								40238,
								40239,
								40240,
								40241,
								40242,
								40243,
								40244
							]
						}
					]
				},
				{
					"id": 40245,
					"name": "ReserveQuantityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40246,
							"name": "locationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40247,
							"name": "lineItemId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 40248,
							"name": "salesChannelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40246,
								40247,
								40248
							]
						}
					]
				},
				{
					"id": 40249,
					"name": "IInventoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Inventory Module."
							}
						]
					},
					"children": [
						{
							"id": 40250,
							"name": "listInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40251,
									"name": "listInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40252,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40126,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40253,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40107,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40254,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40107,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40255,
							"name": "listAndCountInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40256,
									"name": "listAndCountInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40257,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40126,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40258,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40107,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40259,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 40107,
															"name": "InventoryItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40260,
							"name": "listReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40261,
									"name": "listReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40262,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40168,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40263,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40155,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40264,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40155,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40265,
							"name": "listAndCountReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40266,
									"name": "listAndCountReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40267,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40168,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40268,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40155,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40269,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 40155,
															"name": "ReservationItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40270,
							"name": "listInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40271,
									"name": "listInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40272,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40146,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40273,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40134,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40274,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40134,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40275,
							"name": "listAndCountInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40276,
									"name": "listAndCountInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40277,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40146,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40278,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40134,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40279,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 40134,
															"name": "InventoryLevelDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40280,
							"name": "retrieveInventoryItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40281,
									"name": "retrieveInventoryItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40282,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40283,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40107,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40284,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40107,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40285,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40286,
									"name": "retrieveInventoryLevelByItemAndLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level based on its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40287,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40288,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40289,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40134,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40290,
							"name": "retrieveInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40291,
									"name": "retrieveInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory level by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40292,
											"name": "inventoryLevelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory level's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40293,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40134,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40294,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40134,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40295,
							"name": "retrieveReservationItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40296,
									"name": "retrieveReservationItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a reservation item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40297,
											"name": "reservationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40298,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40155,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40299,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40155,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40300,
							"name": "createReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40301,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40302,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40235,
													"name": "CreateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40303,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40155,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40304,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40305,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40235,
												"name": "CreateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40306,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40155,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40307,
							"name": "createInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40308,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40309,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40193,
													"name": "CreateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40310,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40107,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40311,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40312,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40193,
												"name": "CreateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40313,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40107,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40314,
							"name": "createInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40315,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40316,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory levels to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40208,
													"name": "CreateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40317,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40134,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40318,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40319,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory level to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40208,
												"name": "CreateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40320,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40134,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40321,
							"name": "updateInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40322,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40323,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40217,
													"name": "BulkUpdateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40324,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40134,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40325,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40326,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40217,
												"name": "BulkUpdateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40327,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40134,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40328,
							"name": "updateInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40329,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40330,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40177,
												"name": "UpdateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40331,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40107,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40332,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40333,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40177,
													"name": "UpdateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40334,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40107,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40335,
							"name": "updateReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40336,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40337,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 40228,
												"name": "UpdateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40338,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40155,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40339,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40340,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the reservation items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40228,
													"name": "UpdateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40341,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40155,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40342,
							"name": "deleteReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40343,
									"name": "deleteReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation item by its associated line item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40344,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The line item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40345,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40346,
							"name": "restoreReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40347,
									"name": "restoreReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation items are successfully deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40348,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID(s) of the line item(s)."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40349,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40350,
							"name": "deleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40351,
									"name": "deleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40352,
											"name": "reservationItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation items' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40353,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40354,
							"name": "softDeleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40355,
									"name": "softDeleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 40356,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40357,
											"name": "reservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40358,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38063,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40356,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40359,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40360,
							"name": "restoreReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40361,
									"name": "restoreReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 40362,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40363,
											"name": "reservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40364,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the reservation's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38066,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40362,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40365,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40366,
							"name": "deleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40367,
									"name": "deleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory items are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40368,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40369,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40370,
							"name": "softDeleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40371,
									"name": "softDeleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 40372,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40373,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40374,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38063,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40372,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40375,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40376,
							"name": "restoreInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40377,
									"name": "restoreInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 40378,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40379,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40380,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory item's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`location_levels`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38066,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40378,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40381,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40382,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40383,
									"name": "deleteInventoryItemLevelByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory item's level by the associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40384,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40385,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40386,
							"name": "deleteReservationItemByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40387,
									"name": "deleteReservationItemByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when then reservation items are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40388,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40389,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40390,
							"name": "deleteInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40391,
									"name": "deleteInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level by its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory level is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40392,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40393,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40394,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40395,
							"name": "deleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40396,
									"name": "deleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory levels are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40397,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 40398,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40399,
							"name": "softDeleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40400,
									"name": "softDeleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 40401,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40402,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40403,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38063,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40401,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40404,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40405,
							"name": "restoreInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40406,
									"name": "restoreInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 40407,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40408,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40409,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory level's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38066,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40407,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40410,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40411,
							"name": "adjustInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40412,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adjusts the inventory quantity of an item in a location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory([\n    // add to the inventory quantity\n    {\n      inventoryItemId: \"iitem_123\",\n      locationId: \"loc_123\",\n      adjustment: 5\n    },\n    // subtract from the inventory quantity\n    {\n      inventoryItemId: \"iitem_321\",\n      locationId: \"loc_321\",\n      adjustment: -5\n    }\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40413,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The adjustments to make."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 40414,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 40415,
																"name": "inventoryItemId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The inventory item's ID."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 40416,
																"name": "locationId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The location's ID."
																		}
																	]
																},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 40417,
																"name": "adjustment",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"comment": {
																	"summary": [
																		{
																			"kind": "text",
																			"text": "The adjustment to make to the quantity."
																		}
																	]
																},
																"type": {
																	"type": "reference",
																	"target": 42195,
																	"name": "BigNumberInput",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	40415,
																	40416,
																	40417
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 40418,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40134,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40419,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40420,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40421,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40422,
											"name": "adjustment",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the adjustment to make to the quantity."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42195,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40423,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40134,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40424,
							"name": "confirmInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40425,
									"name": "confirmInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the quantity is available."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40426,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40427,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40428,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to confirm its availability."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42195,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40429,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40430,
							"name": "retrieveAvailableQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40431,
									"name": "retrieveAvailableQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the available quantity of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The available quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40432,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40433,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40434,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42182,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40435,
							"name": "retrieveStockedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40436,
									"name": "retrieveStockedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stocked quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40437,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40438,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40439,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42182,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40440,
							"name": "retrieveReservedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40441,
									"name": "retrieveReservedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reserved quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 40442,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40443,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40444,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 42182,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								40250,
								40255,
								40260,
								40265,
								40270,
								40275,
								40280,
								40285,
								40290,
								40295,
								40300,
								40307,
								40314,
								40321,
								40328,
								40335,
								40342,
								40346,
								40350,
								40354,
								40360,
								40366,
								40370,
								40376,
								40382,
								40386,
								40390,
								40395,
								40399,
								40405,
								40411,
								40424,
								40430,
								40435,
								40440
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 40714,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						40107,
						40126,
						40134,
						40146,
						40155,
						40168,
						40177,
						40193,
						40208,
						40213,
						40217,
						40228,
						40235,
						40245,
						40249
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						40223
					]
				}
			]
		},
		{
			"id": 41826,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 41827,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41828,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41829,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41830,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41831,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41832,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41833,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 41834,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 41835,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41828,
								41829,
								41830,
								41831,
								41832,
								41833,
								41834,
								41835
							]
						}
					]
				}
			}
		},
		{
			"id": 41836,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41837,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 41838,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41839,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41837,
						41838,
						41839
					]
				}
			]
		},
		{
			"id": 41840,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41841,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41842,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 41836,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 41836,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 41843,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 41844,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41845,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 41846,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41845,
														41846
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 41847,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 41848,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 41826,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 41849,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 41850,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 41851,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 41852,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 41826,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											41851,
											41852
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 41853,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41841,
						41842,
						41843,
						41847,
						41848,
						41849,
						41853
					]
				}
			]
		},
		{
			"id": 41854,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41855,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41856,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41855,
						41856
					]
				}
			]
		},
		{
			"id": 41857,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41858,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41859,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41858,
						41859
					]
				}
			]
		},
		{
			"id": 41860,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41861,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41862,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41863,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 41864,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 41865,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 41866,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 41867,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 41854,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 41868,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 41869,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 41870,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 41871,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": 41857,
																"name": "JoinerDirective",
																"package": "@medusajs/types"
															}
														}
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											41865,
											41866,
											41867,
											41868
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 41872,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 41873,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 41854,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 41874,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41875,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 41876,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 41877,
											"name": "field",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41857,
											"name": "JoinerDirective",
											"package": "@medusajs/types"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41861,
						41862,
						41863,
						41872,
						41873,
						41874
					]
				}
			]
		},
		{
			"id": 41878,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41879,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 41880,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41879,
						41880
					]
				}
			]
		},
		{
			"id": 41881,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignatures": [
				{
					"id": 41882,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 41883,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41884,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41885,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 41886,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41854,
											"name": "JoinerArgument",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 41887,
									"name": "expands",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 41881,
										"name": "RemoteNestedExpands",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41885,
										41886,
										41887
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 41888,
			"name": "InternalJoinerServiceConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 41840,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "relationships"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 41889,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41890,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 41826,
														"name": "JoinerRelationship",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 41826,
															"name": "JoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												]
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								},
								{
									"id": 41891,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41890,
										41891
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 41892,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41893,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41894,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41895,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 41888,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41896,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 41888,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 41897,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 41898,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 41899,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 41854,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 41900,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 41881,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						41893,
						41894,
						41895,
						41896,
						41897,
						41898,
						41899,
						41900
					]
				}
			]
		},
		{
			"id": 41949,
			"name": "PlannerActionLinkDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Link descriptor containing metadata about the link's\nmodules and models."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 41950,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 41951,
							"name": "fromModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41952,
							"name": "toModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41953,
							"name": "fromModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41954,
							"name": "toModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41951,
								41952,
								41953,
								41954
							]
						}
					]
				}
			}
		},
		{
			"id": 41955,
			"name": "LinkMigrationsPlannerAction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of actions prepared and executed by\nthe \"ILinkMigrationsPlanner\"."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 41956,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41957,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "create"
											},
											{
												"type": "literal",
												"value": "update"
											},
											{
												"type": "literal",
												"value": "notify"
											}
										]
									}
								},
								{
									"id": 41958,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41949,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41959,
									"name": "sql",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41960,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41957,
										41958,
										41959,
										41960
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 41961,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41962,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "noop"
									}
								},
								{
									"id": 41963,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41964,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41949,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41962,
										41963,
										41964
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 41965,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41966,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "delete"
									}
								},
								{
									"id": 41967,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 41949,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41968,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41966,
										41967,
										41968
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 41969,
			"name": "ILinkMigrationsPlanner",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41970,
					"name": "createPlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41971,
							"name": "createPlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41955,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41972,
					"name": "executePlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41973,
							"name": "executePlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41974,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41955,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41970,
						41972
					]
				}
			]
		},
		{
			"id": 41901,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41902,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41903,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41904,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 41905,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37718,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41906,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41907,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41908,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41909,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 41910,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 37718,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41911,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41912,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41913,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41914,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 41915,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41916,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41917,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41918,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41919,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 41920,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41921,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41922,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41923,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41924,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 41925,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41926,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41927,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41928,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 41929,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38063,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41930,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41931,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41932,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41933,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 41934,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 38066,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41935,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41902,
						41907,
						41912,
						41917,
						41922,
						41926,
						41931
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 40714,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 41975,
			"name": "ILockingProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 41976,
					"name": "execute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41977,
							"name": "execute",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 41978,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 41979,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 41980,
									"name": "job",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41981,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 41982,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 41978,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 41983,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41984,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41985,
													"name": "timeout",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41985
													]
												}
											]
										}
									}
								},
								{
									"id": 41986,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41978,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41987,
					"name": "acquire",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41988,
							"name": "acquire",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41989,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 41990,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41991,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41992,
													"name": "ownerId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 41993,
													"name": "expire",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41992,
														41993
													]
												}
											]
										}
									}
								},
								{
									"id": 41994,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 41995,
					"name": "release",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 41996,
							"name": "release",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 41997,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 41998,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41999,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42000,
													"name": "ownerId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42000
													]
												}
											]
										}
									}
								},
								{
									"id": 42001,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42002,
					"name": "releaseAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42003,
							"name": "releaseAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42004,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42005,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42006,
													"name": "ownerId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42006
													]
												}
											]
										}
									}
								},
								{
									"id": 42007,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						41976,
						41987,
						41995,
						42002
					]
				}
			]
		},
		{
			"id": 42008,
			"name": "ILockingModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42009,
					"name": "execute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42010,
							"name": "execute",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 42011,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 42012,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 42013,
									"name": "job",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42014,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 42015,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": 42011,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 42016,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42017,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42018,
													"name": "timeout",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 42019,
													"name": "provider",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42018,
														42019
													]
												}
											]
										}
									}
								},
								{
									"id": 42020,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 42011,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42021,
					"name": "acquire",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42022,
							"name": "acquire",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42023,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 42024,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42025,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42026,
													"name": "ownerId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 42027,
													"name": "expire",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 42028,
													"name": "provider",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42026,
														42027,
														42028
													]
												}
											]
										}
									}
								},
								{
									"id": 42029,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42030,
					"name": "release",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42031,
							"name": "release",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42032,
									"name": "keys",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 42033,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42034,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42035,
													"name": "ownerId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 42036,
													"name": "provider",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42035,
														42036
													]
												}
											]
										}
									}
								},
								{
									"id": 42037,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42038,
					"name": "releaseAll",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42039,
							"name": "releaseAll",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42040,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42041,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 42042,
													"name": "ownerId",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 42043,
													"name": "provider",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														42042,
														42043
													]
												}
											]
										}
									}
								},
								{
									"id": 42044,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42146,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42009,
						42021,
						42030,
						42038
					]
				}
			]
		},
		{
			"id": 40458,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 40459,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40460,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40461,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40462,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40463,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40464,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40465,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40466,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40467,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 40468,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40469,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40470,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40471,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40472,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40473,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40474,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40475,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40476,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40477,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40478,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40479,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							}
						},
						{
							"id": 40480,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40481,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40482,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40483,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40484,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40485,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40486,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40487,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40488,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Error"
																},
																"name": "Error",
																"package": "typescript"
															}
														]
													}
												},
												{
													"id": 40489,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Error"
														},
														"name": "Error",
														"package": "typescript"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40490,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40491,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40492,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40493,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40494,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 40495,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40496,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40497,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40498,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40499,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 40500,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40501,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40502,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40503,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40504,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40505,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40506,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40507,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40508,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40509,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40510,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40511,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 40512,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40513,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40514,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40515,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40460,
								40464,
								40468,
								40472,
								40475,
								40480,
								40485,
								40490,
								40495,
								40500,
								40504,
								40508,
								40512
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						40459
					]
				}
			]
		},
		{
			"id": 43214,
			"name": "Maybe",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43215,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 43215,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 43184,
			"name": "Scalars",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "All built-in and custom scalars, mapped to their actual values"
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43185,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43186,
							"name": "ID",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43187,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43188,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43189,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43188,
												43189
											]
										}
									]
								}
							}
						},
						{
							"id": 43190,
							"name": "String",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43191,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43192,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 43193,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43192,
												43193
											]
										}
									]
								}
							}
						},
						{
							"id": 43194,
							"name": "Boolean",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43195,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43196,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 43197,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43196,
												43197
											]
										}
									]
								}
							}
						},
						{
							"id": 43198,
							"name": "Int",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43199,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43200,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 43201,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43200,
												43201
											]
										}
									]
								}
							}
						},
						{
							"id": 43202,
							"name": "Float",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43203,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43204,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 43205,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43204,
												43205
											]
										}
									]
								}
							}
						},
						{
							"id": 43206,
							"name": "DateTime",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43207,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43208,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 43209,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43208,
												43209
											]
										}
									]
								}
							}
						},
						{
							"id": 43210,
							"name": "JSON",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 43211,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 43212,
											"name": "input",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 43213,
											"name": "output",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												43212,
												43213
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43186,
								43190,
								43194,
								43198,
								43202,
								43206,
								43210
							]
						}
					]
				}
			}
		},
		{
			"id": 42877,
			"name": "SimpleProduct",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42878,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42879,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "SimpleProduct"
							}
						},
						{
							"id": 42880,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "ID"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42881,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 42882,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42883,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43214,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Pick"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": 42860,
															"name": "ProductVariant",
															"package": "@medusajs/types"
														},
														{
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "id"
																},
																{
																	"type": "literal",
																	"value": "__typename"
																}
															]
														}
													],
													"name": "Pick",
													"package": "typescript"
												}
											],
											"name": "Maybe",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42884,
							"name": "sales_channels_link",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Pick"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 42975,
											"name": "LinkProductSalesChannel",
											"package": "@medusajs/types"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "product_id"
												},
												{
													"type": "literal",
													"value": "sales_channel_id"
												},
												{
													"type": "literal",
													"value": "__typename"
												}
											]
										}
									],
									"name": "Pick",
									"package": "typescript"
								}
							}
						},
						{
							"id": 42885,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Pick"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 42892,
											"name": "SalesChannel",
											"package": "@medusajs/types"
										},
										{
											"type": "union",
											"types": [
												{
													"type": "literal",
													"value": "id"
												},
												{
													"type": "literal",
													"value": "name"
												},
												{
													"type": "literal",
													"value": "__typename"
												}
											]
										}
									],
									"name": "Pick",
									"package": "typescript"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42879,
								42880,
								42881,
								42882,
								42883,
								42884,
								42885
							]
						}
					]
				}
			}
		},
		{
			"id": 42867,
			"name": "Product",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42868,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42869,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "Product"
							}
						},
						{
							"id": 42870,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "ID"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42871,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42872,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42873,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42874,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42860,
									"name": "ProductVariant",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 42875,
							"name": "sales_channels_link",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42975,
									"name": "LinkProductSalesChannel",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 42876,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 42892,
									"name": "SalesChannel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42869,
								42870,
								42871,
								42872,
								42873,
								42874,
								42875,
								42876
							]
						}
					]
				}
			}
		},
		{
			"id": 42860,
			"name": "ProductVariant",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42861,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42862,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "ProductVariant"
							}
						},
						{
							"id": 42863,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "ID"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42864,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42865,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42866,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42867,
										"name": "Product",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42862,
								42863,
								42864,
								42865,
								42866
							]
						}
					]
				}
			}
		},
		{
			"id": 42886,
			"name": "ProductCategory",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42887,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42888,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "ProductCategory"
							}
						},
						{
							"id": 42889,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "ID"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42890,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42891,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42888,
								42889,
								42890,
								42891
							]
						}
					]
				}
			}
		},
		{
			"id": 42892,
			"name": "SalesChannel",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42893,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42894,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "SalesChannel"
							}
						},
						{
							"id": 42895,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "ID"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42896,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42897,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42898,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "DateTime"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42899,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "DateTime"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42900,
							"name": "products_link",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43214,
											"typeArguments": [
												{
													"type": "reference",
													"target": 42975,
													"name": "LinkProductSalesChannel",
													"package": "@medusajs/types"
												}
											],
											"name": "Maybe",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42901,
							"name": "api_keys_link",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43214,
											"typeArguments": [
												{
													"type": "reference",
													"target": 43004,
													"name": "LinkPublishableApiKeySalesChannel",
													"package": "@medusajs/types"
												}
											],
											"name": "Maybe",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42902,
							"name": "locations_link",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43214,
											"typeArguments": [
												{
													"type": "reference",
													"target": 43021,
													"name": "LinkSalesChannelStockLocation",
													"package": "@medusajs/types"
												}
											],
											"name": "Maybe",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42894,
								42895,
								42896,
								42897,
								42898,
								42899,
								42900,
								42901,
								42902
							]
						}
					]
				}
			}
		},
		{
			"id": 42903,
			"name": "LinkCartPaymentCollection",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42904,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42905,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkCartPaymentCollection"
							}
						},
						{
							"id": 42906,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42907,
							"name": "payment_collection_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42908,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42909,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42910,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42905,
								42906,
								42907,
								42908,
								42909,
								42910
							]
						}
					]
				}
			}
		},
		{
			"id": 42911,
			"name": "LinkCartPromotion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42912,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42913,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkCartPromotion"
							}
						},
						{
							"id": 42914,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42915,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42916,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42917,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42918,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42913,
								42914,
								42915,
								42916,
								42917,
								42918
							]
						}
					]
				}
			}
		},
		{
			"id": 42919,
			"name": "LinkLocationFulfillmentProvider",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42920,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42921,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkLocationFulfillmentProvider"
							}
						},
						{
							"id": 42922,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42923,
							"name": "fulfillment_provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42924,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42925,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42926,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42921,
								42922,
								42923,
								42924,
								42925,
								42926
							]
						}
					]
				}
			}
		},
		{
			"id": 42927,
			"name": "LinkLocationFulfillmentSet",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42928,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42929,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkLocationFulfillmentSet"
							}
						},
						{
							"id": 42930,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42931,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42932,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42933,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42934,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42929,
								42930,
								42931,
								42932,
								42933,
								42934
							]
						}
					]
				}
			}
		},
		{
			"id": 42935,
			"name": "LinkOrderCart",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42936,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42937,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkOrderCart"
							}
						},
						{
							"id": 42938,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42939,
							"name": "cart_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42940,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42941,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42942,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42937,
								42938,
								42939,
								42940,
								42941,
								42942
							]
						}
					]
				}
			}
		},
		{
			"id": 42943,
			"name": "LinkOrderFulfillment",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42944,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42945,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkOrderFulfillment"
							}
						},
						{
							"id": 42946,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42947,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42948,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42949,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42950,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42945,
								42946,
								42947,
								42948,
								42949,
								42950
							]
						}
					]
				}
			}
		},
		{
			"id": 42951,
			"name": "LinkOrderPaymentCollection",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42952,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42953,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkOrderPaymentCollection"
							}
						},
						{
							"id": 42954,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42955,
							"name": "payment_collection_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42956,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42957,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42958,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42953,
								42954,
								42955,
								42956,
								42957,
								42958
							]
						}
					]
				}
			}
		},
		{
			"id": 42959,
			"name": "LinkOrderPromotion",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42960,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42961,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkOrderPromotion"
							}
						},
						{
							"id": 42962,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42963,
							"name": "promotion_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42964,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42965,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42966,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42961,
								42962,
								42963,
								42964,
								42965,
								42966
							]
						}
					]
				}
			}
		},
		{
			"id": 42967,
			"name": "LinkReturnFulfillment",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42968,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42969,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkReturnFulfillment"
							}
						},
						{
							"id": 42970,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42971,
							"name": "fulfillment_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42972,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42973,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42974,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42969,
								42970,
								42971,
								42972,
								42973,
								42974
							]
						}
					]
				}
			}
		},
		{
			"id": 42975,
			"name": "LinkProductSalesChannel",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42976,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42977,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkProductSalesChannel"
							}
						},
						{
							"id": 42978,
							"name": "product_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42979,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42980,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42867,
										"name": "Product",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42981,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42892,
										"name": "SalesChannel",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42982,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42983,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42984,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42977,
								42978,
								42979,
								42980,
								42981,
								42982,
								42983,
								42984
							]
						}
					]
				}
			}
		},
		{
			"id": 42985,
			"name": "LinkProductVariantInventoryItem",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42986,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42987,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkProductVariantInventoryItem"
							}
						},
						{
							"id": 42988,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42989,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42990,
							"name": "required_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "Int"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42991,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42867,
										"name": "Product",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42992,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42993,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42994,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42987,
								42988,
								42989,
								42990,
								42991,
								42992,
								42993,
								42994
							]
						}
					]
				}
			}
		},
		{
			"id": 42995,
			"name": "LinkProductVariantPriceSet",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42996,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42997,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkProductVariantPriceSet"
							}
						},
						{
							"id": 42998,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 42999,
							"name": "price_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43000,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42867,
										"name": "Product",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 43001,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43002,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43003,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42997,
								42998,
								42999,
								43000,
								43001,
								43002,
								43003
							]
						}
					]
				}
			}
		},
		{
			"id": 43004,
			"name": "LinkPublishableApiKeySalesChannel",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43005,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43006,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkPublishableApiKeySalesChannel"
							}
						},
						{
							"id": 43007,
							"name": "publishable_key_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43008,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43009,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42892,
										"name": "SalesChannel",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 43010,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43011,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43012,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43006,
								43007,
								43008,
								43009,
								43010,
								43011,
								43012
							]
						}
					]
				}
			}
		},
		{
			"id": 43013,
			"name": "LinkRegionPaymentProvider",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43014,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43015,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkRegionPaymentProvider"
							}
						},
						{
							"id": 43016,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43017,
							"name": "payment_provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43018,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43019,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43020,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43015,
								43016,
								43017,
								43018,
								43019,
								43020
							]
						}
					]
				}
			}
		},
		{
			"id": 43021,
			"name": "LinkSalesChannelStockLocation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43022,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43023,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkSalesChannelStockLocation"
							}
						},
						{
							"id": 43024,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43025,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43026,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42892,
										"name": "SalesChannel",
										"package": "@medusajs/types"
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 43027,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43028,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43029,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43023,
								43024,
								43025,
								43026,
								43027,
								43028,
								43029
							]
						}
					]
				}
			}
		},
		{
			"id": 43030,
			"name": "LinkShippingOptionPriceSet",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43031,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43032,
							"name": "__typename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "literal",
								"value": "LinkShippingOptionPriceSet"
							}
						},
						{
							"id": 43033,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43034,
							"name": "price_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43035,
							"name": "createdAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43036,
							"name": "updatedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "output"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "String"
									},
									"objectType": {
										"type": "reference",
										"target": 43184,
										"name": "Scalars",
										"package": "@medusajs/types"
									}
								}
							}
						},
						{
							"id": 43037,
							"name": "deletedAt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43214,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "output"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "String"
											},
											"objectType": {
												"type": "reference",
												"target": 43184,
												"name": "Scalars",
												"package": "@medusajs/types"
											}
										}
									}
								],
								"name": "Maybe",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43032,
								43033,
								43034,
								43035,
								43036,
								43037
							]
						}
					]
				}
			}
		},
		{
			"id": 42645,
			"name": "FixtureEntryPoints",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42646,
					"name": "file",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42647,
					"name": "files",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42648,
					"name": "workflow_execution",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42649,
					"name": "workflow_executions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42650,
					"name": "inventory_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42651,
					"name": "inventory_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42652,
					"name": "inventory",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42653,
					"name": "reservation",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42654,
					"name": "reservations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42655,
					"name": "reservation_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42656,
					"name": "reservation_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42657,
					"name": "inventory_level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42658,
					"name": "inventory_levels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42659,
					"name": "stock_location_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42660,
					"name": "stock_location_addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42661,
					"name": "stock_location",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42662,
					"name": "stock_locations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42663,
					"name": "price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42664,
					"name": "price_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42665,
					"name": "price_list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42666,
					"name": "price_lists",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42667,
					"name": "price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42668,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42669,
					"name": "price_preference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42670,
					"name": "price_preferences",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42671,
					"name": "product_variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42860,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42672,
					"name": "product_variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42860,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42673,
					"name": "variant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42860,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42674,
					"name": "variants",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42860,
						"name": "ProductVariant",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42675,
					"name": "product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42867,
						"name": "Product",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42676,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42867,
						"name": "Product",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42677,
					"name": "simple_product",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42877,
						"name": "SimpleProduct",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42678,
					"name": "product_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42679,
					"name": "product_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42680,
					"name": "product_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42681,
					"name": "product_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42682,
					"name": "product_image",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42683,
					"name": "product_images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42684,
					"name": "product_tag",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42685,
					"name": "product_tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42686,
					"name": "product_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42687,
					"name": "product_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42688,
					"name": "product_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42886,
						"name": "ProductCategory",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42689,
					"name": "product_categories",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42886,
						"name": "ProductCategory",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42690,
					"name": "sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42892,
						"name": "SalesChannel",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42691,
					"name": "sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42892,
						"name": "SalesChannel",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42692,
					"name": "customer_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42693,
					"name": "customer_addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42694,
					"name": "customer_group_customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42695,
					"name": "customer_group_customers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42696,
					"name": "customer_group",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42697,
					"name": "customer_groups",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42698,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42699,
					"name": "customers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42700,
					"name": "cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42701,
					"name": "carts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42702,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42703,
					"name": "addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42704,
					"name": "line_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42705,
					"name": "line_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42706,
					"name": "line_item_adjustment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42707,
					"name": "line_item_adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42708,
					"name": "line_item_tax_line",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42709,
					"name": "line_item_tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42710,
					"name": "shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42711,
					"name": "shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42712,
					"name": "shipping_method_adjustment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42713,
					"name": "shipping_method_adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42714,
					"name": "shipping_method_tax_line",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42715,
					"name": "shipping_method_tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42716,
					"name": "promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42717,
					"name": "promotions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42718,
					"name": "campaign",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42719,
					"name": "campaigns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42720,
					"name": "promotion_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42721,
					"name": "promotion_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42722,
					"name": "api_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42723,
					"name": "api_keys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42724,
					"name": "tax_rate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42725,
					"name": "tax_rates",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42726,
					"name": "tax_region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42727,
					"name": "tax_regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42728,
					"name": "tax_rate_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42729,
					"name": "tax_rate_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42730,
					"name": "tax_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42731,
					"name": "tax_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42732,
					"name": "store",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42733,
					"name": "stores",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42734,
					"name": "store_currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42735,
					"name": "store_currencies",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42736,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42737,
					"name": "users",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42738,
					"name": "invite",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42739,
					"name": "invites",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42740,
					"name": "auth_identity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42741,
					"name": "auth_identities",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42742,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42743,
					"name": "orders",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42744,
					"name": "order_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42745,
					"name": "order_addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42746,
					"name": "order_line_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42747,
					"name": "order_line_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42748,
					"name": "order_line_item_adjustment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42749,
					"name": "order_line_item_adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42750,
					"name": "order_line_item_tax_line",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42751,
					"name": "order_line_item_tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42752,
					"name": "order_shipping_method",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42753,
					"name": "order_shipping_methods",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42754,
					"name": "order_shipping_method_adjustment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42755,
					"name": "order_shipping_method_adjustments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42756,
					"name": "order_shipping_method_tax_line",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42757,
					"name": "order_shipping_method_tax_lines",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42758,
					"name": "order_transaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42759,
					"name": "order_transactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42760,
					"name": "order_change",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42761,
					"name": "order_changes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42762,
					"name": "order_change_action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42763,
					"name": "order_change_actions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42764,
					"name": "order_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42765,
					"name": "order_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42766,
					"name": "order_summary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42767,
					"name": "order_summaries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42768,
					"name": "order_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42769,
					"name": "order_shippings",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42770,
					"name": "return_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42771,
					"name": "return_reasons",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42772,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42773,
					"name": "returns",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42774,
					"name": "return_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42775,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42776,
					"name": "order_claim",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42777,
					"name": "order_claims",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42778,
					"name": "order_claim_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42779,
					"name": "order_claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42780,
					"name": "order_claim_item_image",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42781,
					"name": "order_claim_item_images",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42782,
					"name": "order_exchange",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42783,
					"name": "order_exchanges",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42784,
					"name": "order_exchange_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42785,
					"name": "order_exchange_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42786,
					"name": "payment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42787,
					"name": "payments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42788,
					"name": "payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42789,
					"name": "payment_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42790,
					"name": "payment_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42791,
					"name": "payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42792,
					"name": "payment_session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42793,
					"name": "payment_sessions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42794,
					"name": "refund_reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42795,
					"name": "refund_reasons",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42796,
					"name": "fulfillment_address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42797,
					"name": "fulfillment_addresses",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42798,
					"name": "fulfillment_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42799,
					"name": "fulfillment_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42800,
					"name": "fulfillment_label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42801,
					"name": "fulfillment_labels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42802,
					"name": "fulfillment_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42803,
					"name": "fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42804,
					"name": "fulfillment_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42805,
					"name": "fulfillment_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42806,
					"name": "fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42807,
					"name": "fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42808,
					"name": "geo_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42809,
					"name": "geo_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42810,
					"name": "service_zone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42811,
					"name": "service_zones",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42812,
					"name": "shipping_option_rule",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42813,
					"name": "shipping_option_rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42814,
					"name": "shipping_option_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42815,
					"name": "shipping_option_types",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42816,
					"name": "shipping_option",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42817,
					"name": "shipping_options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42818,
					"name": "shipping_profile",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42819,
					"name": "shipping_profiles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42820,
					"name": "notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42821,
					"name": "notifications",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42822,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42823,
					"name": "regions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42824,
					"name": "country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42825,
					"name": "countries",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42826,
					"name": "currency",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42827,
					"name": "currencies",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 42828,
					"name": "cart_payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42903,
						"name": "LinkCartPaymentCollection",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42829,
					"name": "cart_payment_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42903,
						"name": "LinkCartPaymentCollection",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42830,
					"name": "cart_promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42911,
						"name": "LinkCartPromotion",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42831,
					"name": "cart_promotions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42911,
						"name": "LinkCartPromotion",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42832,
					"name": "location_fulfillment_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42919,
						"name": "LinkLocationFulfillmentProvider",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42833,
					"name": "location_fulfillment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42919,
						"name": "LinkLocationFulfillmentProvider",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42834,
					"name": "location_fulfillment_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42927,
						"name": "LinkLocationFulfillmentSet",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42835,
					"name": "location_fulfillment_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42927,
						"name": "LinkLocationFulfillmentSet",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42836,
					"name": "order_cart",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42935,
						"name": "LinkOrderCart",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42837,
					"name": "order_carts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42935,
						"name": "LinkOrderCart",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42838,
					"name": "order_fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42943,
						"name": "LinkOrderFulfillment",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42839,
					"name": "order_fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42943,
						"name": "LinkOrderFulfillment",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42840,
					"name": "order_payment_collection",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42951,
						"name": "LinkOrderPaymentCollection",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42841,
					"name": "order_payment_collections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42951,
						"name": "LinkOrderPaymentCollection",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42842,
					"name": "order_promotion",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42959,
						"name": "LinkOrderPromotion",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42843,
					"name": "order_promotions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42959,
						"name": "LinkOrderPromotion",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42844,
					"name": "return_fulfillment",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42967,
						"name": "LinkReturnFulfillment",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42845,
					"name": "return_fulfillments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42967,
						"name": "LinkReturnFulfillment",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42846,
					"name": "product_sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42975,
						"name": "LinkProductSalesChannel",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42847,
					"name": "product_sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42975,
						"name": "LinkProductSalesChannel",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42848,
					"name": "product_variant_inventory_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42985,
						"name": "LinkProductVariantInventoryItem",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42849,
					"name": "product_variant_inventory_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42985,
						"name": "LinkProductVariantInventoryItem",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42850,
					"name": "product_variant_price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42995,
						"name": "LinkProductVariantPriceSet",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42851,
					"name": "product_variant_price_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 42995,
						"name": "LinkProductVariantPriceSet",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42852,
					"name": "publishable_api_key_sales_channel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43004,
						"name": "LinkPublishableApiKeySalesChannel",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42853,
					"name": "publishable_api_key_sales_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43004,
						"name": "LinkPublishableApiKeySalesChannel",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42854,
					"name": "region_payment_provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43013,
						"name": "LinkRegionPaymentProvider",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42855,
					"name": "region_payment_providers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43013,
						"name": "LinkRegionPaymentProvider",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42856,
					"name": "sales_channel_location",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43021,
						"name": "LinkSalesChannelStockLocation",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42857,
					"name": "sales_channel_locations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43021,
						"name": "LinkSalesChannelStockLocation",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42858,
					"name": "shipping_option_price_set",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43030,
						"name": "LinkShippingOptionPriceSet",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42859,
					"name": "shipping_option_price_sets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 43030,
						"name": "LinkShippingOptionPriceSet",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42646,
						42647,
						42648,
						42649,
						42650,
						42651,
						42652,
						42653,
						42654,
						42655,
						42656,
						42657,
						42658,
						42659,
						42660,
						42661,
						42662,
						42663,
						42664,
						42665,
						42666,
						42667,
						42668,
						42669,
						42670,
						42671,
						42672,
						42673,
						42674,
						42675,
						42676,
						42677,
						42678,
						42679,
						42680,
						42681,
						42682,
						42683,
						42684,
						42685,
						42686,
						42687,
						42688,
						42689,
						42690,
						42691,
						42692,
						42693,
						42694,
						42695,
						42696,
						42697,
						42698,
						42699,
						42700,
						42701,
						42702,
						42703,
						42704,
						42705,
						42706,
						42707,
						42708,
						42709,
						42710,
						42711,
						42712,
						42713,
						42714,
						42715,
						42716,
						42717,
						42718,
						42719,
						42720,
						42721,
						42722,
						42723,
						42724,
						42725,
						42726,
						42727,
						42728,
						42729,
						42730,
						42731,
						42732,
						42733,
						42734,
						42735,
						42736,
						42737,
						42738,
						42739,
						42740,
						42741,
						42742,
						42743,
						42744,
						42745,
						42746,
						42747,
						42748,
						42749,
						42750,
						42751,
						42752,
						42753,
						42754,
						42755,
						42756,
						42757,
						42758,
						42759,
						42760,
						42761,
						42762,
						42763,
						42764,
						42765,
						42766,
						42767,
						42768,
						42769,
						42770,
						42771,
						42772,
						42773,
						42774,
						42775,
						42776,
						42777,
						42778,
						42779,
						42780,
						42781,
						42782,
						42783,
						42784,
						42785,
						42786,
						42787,
						42788,
						42789,
						42790,
						42791,
						42792,
						42793,
						42794,
						42795,
						42796,
						42797,
						42798,
						42799,
						42800,
						42801,
						42802,
						42803,
						42804,
						42805,
						42806,
						42807,
						42808,
						42809,
						42810,
						42811,
						42812,
						42813,
						42814,
						42815,
						42816,
						42817,
						42818,
						42819,
						42820,
						42821,
						42822,
						42823,
						42824,
						42825,
						42826,
						42827,
						42828,
						42829,
						42830,
						42831,
						42832,
						42833,
						42834,
						42835,
						42836,
						42837,
						42838,
						42839,
						42840,
						42841,
						42842,
						42843,
						42844,
						42845,
						42846,
						42847,
						42848,
						42849,
						42850,
						42851,
						42852,
						42853,
						42854,
						42855,
						42856,
						42857,
						42858,
						42859
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 40929,
					"name": "RemoteQueryEntryPoints"
				}
			]
		},
		{
			"id": 40516,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 40544,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40550,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40545,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 40546,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 40549,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 40550,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 40547,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 40548,
															"name": "__type",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 40550,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 40551,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 40552,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 40551,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 40553,
					"name": "CustomModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40554,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40555,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40556,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40557,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 40558,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40555,
										40556,
										40557,
										40558
									]
								}
							]
						}
					}
				},
				{
					"id": 40559,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40560,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40561,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "internal"
									}
								},
								{
									"id": 40562,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 40563,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40553,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40564,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 40672,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 40565,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 40566,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40567,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 40568,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40561,
										40562,
										40563,
										40564,
										40565,
										40566,
										40567,
										40568
									]
								}
							]
						}
					}
				},
				{
					"id": 40569,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40570,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40571,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "external"
									}
								},
								{
									"id": 40572,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40553,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40573,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 40574,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 40575,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 40576,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40577,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														40575,
														40576,
														40577
													]
												}
											]
										}
									}
								},
								{
									"id": 40578,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 40579,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40580,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40571,
										40572,
										40573,
										40578,
										40579,
										40580
									]
								}
							]
						}
					}
				},
				{
					"id": 40581,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40582,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40583,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 40584,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 40589,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40585,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 40586,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 40587,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 40559,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 40569,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 40588,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 40672,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 40840,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40583,
										40584,
										40585,
										40586,
										40587,
										40588
									]
								}
							]
						}
					}
				},
				{
					"id": 40589,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40590,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40591,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40592,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 40593,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40594,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 40595,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 40596,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 40598,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 40559,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 40569,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40591,
										40592,
										40593,
										40594,
										40595,
										40596,
										40598
									]
								}
							]
						}
					}
				},
				{
					"id": 40599,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40600,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40601,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40602,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40603,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 40604,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 40559,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40601,
										40602,
										40603,
										40604
									]
								}
							]
						}
					}
				},
				{
					"id": 40605,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 42644,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40606,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40607,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40608,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40609,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40589,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40607,
												40608,
												40609
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 40610,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40611,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40612,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40645,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40613,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40589,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40612,
												40613
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 40614,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40620,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40615,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40616,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37847,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40617,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40620,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 40618,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40459,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40619,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40616,
										40617,
										40618,
										40619
									]
								}
							]
						}
					}
				},
				{
					"id": 40621,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40622,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 40623,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40624,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40614,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40625,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 40559,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 40626,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 40627,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 40628,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 40629,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											40628,
											40629
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 40630,
					"name": "LinkModulesExtraFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40631,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40632,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "date"
													},
													{
														"type": "literal",
														"value": "time"
													},
													{
														"type": "literal",
														"value": "datetime"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "blob"
													},
													{
														"type": "literal",
														"value": "uint8array"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "enumArray"
													},
													{
														"type": "literal",
														"value": "enum"
													},
													{
														"type": "literal",
														"value": "json"
													},
													{
														"type": "literal",
														"value": "integer"
													},
													{
														"type": "literal",
														"value": "smallint"
													},
													{
														"type": "literal",
														"value": "tinyint"
													},
													{
														"type": "literal",
														"value": "mediumint"
													},
													{
														"type": "literal",
														"value": "float"
													},
													{
														"type": "literal",
														"value": "double"
													},
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "decimal"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "uuid"
													},
													{
														"type": "literal",
														"value": "text"
													}
												]
											}
										},
										{
											"id": 40633,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40634,
											"name": "nullable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 40635,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Mikro-orm options for the column"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40632,
												40633,
												40634,
												40635
											]
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 40636,
					"name": "LinkDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A link for two records of linked data models.\n\nThe keys are the names of each module, and their value is an object that holds the ID of the linked data model's record."
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 40637,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 40638,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 40639,
													"name": "moduleName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 40640,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"indexSignatures": [
														{
															"id": 40641,
															"name": "__index",
															"variant": "signature",
															"kind": 8192,
															"flags": {},
															"parameters": [
																{
																	"id": 40642,
																	"name": "fieldName",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													]
												}
											}
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40643,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40644,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40644
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 40645,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 41840,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40646,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40647,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40648,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 40669,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 40649,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 40650,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 40651,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 40652,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 40653,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 40654,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 40655,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 40656,
																								"name": "isList",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									40654,
																									40655,
																									40656
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 40657,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 40669,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	40651,
																	40652,
																	40657
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 40658,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40659,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40660,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 40661,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 40662,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 40663,
											"name": "extraDataFields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40664,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 40665,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 40666,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 40667,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 40668,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 40630,
																"name": "LinkModulesExtraFields",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																40666,
																40667,
																40668
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40647,
												40648,
												40649,
												40658,
												40659,
												40660,
												40661,
												40662,
												40663,
												40664
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 40669,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 41826,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40670,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40671,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40671
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 40672,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40689,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 40544,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40673,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40674,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 40689,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 40675,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 40621,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 40676,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 40677,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40678,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40614,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 40679,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 40559,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 40680,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 40681,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40682,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40614,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 40683,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 40559,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 40684,
									"name": "generateMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 40685,
											"name": "generateMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40686,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40614,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 40687,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 40559,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 40688,
									"name": "discoveryPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40674,
										40675,
										40688
									]
								},
								{
									"title": "Methods",
									"children": [
										40676,
										40680,
										40684
									]
								}
							]
						}
					}
				},
				{
					"id": 40690,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40691,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40692,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40693,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 40694,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40695,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40696,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40697,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 40698,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40699,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40700,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40701,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 40702,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 40703,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		40703
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 40704,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 40705,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40693,
												40694,
												40695,
												40696,
												40697,
												40698,
												40699,
												40700,
												40701,
												40704,
												40705
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40691
							]
						}
					]
				},
				{
					"id": 40706,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40707,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40708,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 40709,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 40710,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignatures": [
												{
													"id": 40711,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 40712,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 40544,
														"typeArguments": [
															{
																"type": "reference",
																"target": 37943,
																"name": "RepositoryService",
																"package": "@medusajs/types"
															}
														],
														"name": "Constructor",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40708,
										40709
									]
								}
							]
						}
					}
				},
				{
					"id": 40713,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 40559,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 40569,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 40714,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 38294,
							"name": "IFileModuleService"
						},
						{
							"type": "reference",
							"target": 40078,
							"name": "IIndexService"
						},
						{
							"type": "reference",
							"target": 40249,
							"name": "IInventoryService"
						},
						{
							"type": "reference",
							"target": 41211,
							"name": "INotificationModuleService"
						},
						{
							"type": "reference",
							"target": 41369,
							"name": "IStockLocationService"
						},
						{
							"type": "reference",
							"target": 41597,
							"name": "IWorkflowEngineService"
						},
						{
							"type": "reference",
							"target": 41901,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 40728,
					"name": "IMedusaInternalService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40729,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 40730,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 40832,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "IMedusaInternalService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 40731,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40732,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40733,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40734,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40735,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38170,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40830,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40736,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40737,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 40738,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40739,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38170,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40830,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40740,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40741,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40742,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 40743,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 37909,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 40744,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 40745,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40746,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38170,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40830,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40747,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40748,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40749,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 40750,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 37909,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 40751,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 40752,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40753,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38170,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 40830,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40754,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40755,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40756,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 40757,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38170,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40830,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40758,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40759,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 40760,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38170,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40830,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40761,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40762,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40763,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 40764,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38170,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40830,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40765,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40766,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 40767,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38170,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40830,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40768,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40769,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 40770,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 40771,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40772,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 37909,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 40773,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 40774,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																40771,
																40774
															]
														}
													]
												}
											}
										},
										{
											"id": 40775,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38170,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40830,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40776,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40777,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 40778,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 40779,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 40780,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 37909,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 40781,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 40782,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	40779,
																	40782
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 40783,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38170,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40830,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40784,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40785,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40786,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 40787,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40788,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40789,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 40790,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40791,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40792,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 40793,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40794,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40795,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 40796,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40797,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40798,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 40799,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 40800,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40801,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 37909,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 40802,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																40800
															]
														}
													]
												}
											}
										},
										{
											"id": 40803,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40804,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40805,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40806,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 40807,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 40808,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 40809,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38170,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 40830,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40810,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40811,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40812,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 40813,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 40814,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 38170,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 40830,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40815,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40816,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40817,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 40818,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38170,
													"typeArguments": [
														{
															"type": "reference",
															"target": 40830,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40819,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40820,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 40821,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 38170,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40830,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40822,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40823,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40824,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 40825,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37935,
												"typeArguments": [
													{
														"type": "reference",
														"target": 38170,
														"typeArguments": [
															{
																"type": "reference",
																"target": 40830,
																"name": "TEntity",
																"package": "@medusajs/types",
																"qualifiedName": "IMedusaInternalService.TEntity",
																"refersToTypeParameter": true
															}
														],
														"name": "InferEntityType",
														"package": "@medusajs/types"
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40826,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 40827,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 40828,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 38170,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 40830,
																			"name": "TEntity",
																			"package": "@medusajs/types",
																			"qualifiedName": "IMedusaInternalService.TEntity",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferEntityType",
																	"package": "@medusajs/types"
																}
															}
														},
														{
															"id": 40829,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 37938,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																40828,
																40829
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								40729
							]
						},
						{
							"title": "Methods",
							"children": [
								40731,
								40740,
								40747,
								40754,
								40761,
								40784,
								40804,
								40810,
								40815,
								40822
							]
						}
					],
					"typeParameters": [
						{
							"id": 40830,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40831,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 40832,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 40833,
					"name": "ProviderLoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40839,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40834,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40835,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 37847,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40836,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40839,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 40837,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40459,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40838,
									"name": "moduleOptions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40835,
										40836,
										40837,
										40838
									]
								}
							]
						}
					}
				},
				{
					"id": 40840,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40858,
							"name": "Service",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40841,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40842,
									"name": "module",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40843,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 40544,
											"typeArguments": [
												{
													"type": "reference",
													"target": 40858,
													"name": "Service",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 40844,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 40859,
											"name": "ModuleProviderLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 40845,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 40846,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40847,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40833,
														"typeArguments": [
															{
																"type": "reference",
																"target": 40858,
																"name": "Service",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "ProviderLoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 40848,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 40849,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 40850,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40851,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40833,
														"typeArguments": [
															{
																"type": "reference",
																"target": 40858,
																"name": "Service",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "ProviderLoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 40852,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 40853,
									"name": "generateMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 40854,
											"name": "generateMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40855,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 40833,
														"typeArguments": [
															{
																"type": "reference",
																"target": 40858,
																"name": "Service",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "ProviderLoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 40856,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 40857,
									"name": "discoveryPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Explicitly set the the true location of the module resources.\nCan be used to re-export the module from a different location and specify its original location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40842,
										40843,
										40844,
										40857
									]
								},
								{
									"title": "Methods",
									"children": [
										40845,
										40849,
										40853
									]
								}
							]
						}
					}
				},
				{
					"id": 40859,
					"name": "ModuleProviderLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40860,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 40861,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 40862,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40833,
												"name": "ProviderLoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40863,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 40559,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 40864,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40865,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40866,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 40840,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 40867,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40868,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 40869,
									"name": "is_default",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40866,
										40867,
										40868,
										40869
									]
								}
							]
						}
					}
				},
				{
					"id": 40929,
					"name": "RemoteQueryEntryPoints",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Bucket filled with map of entry point -> types that are autogenerated by the CLI"
							}
						]
					},
					"children": [
						{
							"id": 40930,
							"name": "file",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42646,
								"name": "FixtureEntryPoints.file"
							}
						},
						{
							"id": 40931,
							"name": "files",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42647,
								"name": "FixtureEntryPoints.files"
							}
						},
						{
							"id": 40932,
							"name": "workflow_execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42648,
								"name": "FixtureEntryPoints.workflow_execution"
							}
						},
						{
							"id": 40933,
							"name": "workflow_executions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42649,
								"name": "FixtureEntryPoints.workflow_executions"
							}
						},
						{
							"id": 40934,
							"name": "inventory_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42650,
								"name": "FixtureEntryPoints.inventory_items"
							}
						},
						{
							"id": 40935,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42651,
								"name": "FixtureEntryPoints.inventory_item"
							}
						},
						{
							"id": 40936,
							"name": "inventory",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42652,
								"name": "FixtureEntryPoints.inventory"
							}
						},
						{
							"id": 40937,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42653,
								"name": "FixtureEntryPoints.reservation"
							}
						},
						{
							"id": 40938,
							"name": "reservations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42654,
								"name": "FixtureEntryPoints.reservations"
							}
						},
						{
							"id": 40939,
							"name": "reservation_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42655,
								"name": "FixtureEntryPoints.reservation_item"
							}
						},
						{
							"id": 40940,
							"name": "reservation_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42656,
								"name": "FixtureEntryPoints.reservation_items"
							}
						},
						{
							"id": 40941,
							"name": "inventory_level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42657,
								"name": "FixtureEntryPoints.inventory_level"
							}
						},
						{
							"id": 40942,
							"name": "inventory_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42658,
								"name": "FixtureEntryPoints.inventory_levels"
							}
						},
						{
							"id": 40943,
							"name": "stock_location_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42659,
								"name": "FixtureEntryPoints.stock_location_address"
							}
						},
						{
							"id": 40944,
							"name": "stock_location_addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42660,
								"name": "FixtureEntryPoints.stock_location_addresses"
							}
						},
						{
							"id": 40945,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42661,
								"name": "FixtureEntryPoints.stock_location"
							}
						},
						{
							"id": 40946,
							"name": "stock_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42662,
								"name": "FixtureEntryPoints.stock_locations"
							}
						},
						{
							"id": 40947,
							"name": "price_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42663,
								"name": "FixtureEntryPoints.price_set"
							}
						},
						{
							"id": 40948,
							"name": "price_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42664,
								"name": "FixtureEntryPoints.price_sets"
							}
						},
						{
							"id": 40949,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42665,
								"name": "FixtureEntryPoints.price_list"
							}
						},
						{
							"id": 40950,
							"name": "price_lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42666,
								"name": "FixtureEntryPoints.price_lists"
							}
						},
						{
							"id": 40951,
							"name": "price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42667,
								"name": "FixtureEntryPoints.price"
							}
						},
						{
							"id": 40952,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42668,
								"name": "FixtureEntryPoints.prices"
							}
						},
						{
							"id": 40953,
							"name": "price_preference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42669,
								"name": "FixtureEntryPoints.price_preference"
							}
						},
						{
							"id": 40954,
							"name": "price_preferences",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42670,
								"name": "FixtureEntryPoints.price_preferences"
							}
						},
						{
							"id": 40955,
							"name": "product_variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42860,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42671,
								"name": "FixtureEntryPoints.product_variant"
							}
						},
						{
							"id": 40956,
							"name": "product_variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42860,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42672,
								"name": "FixtureEntryPoints.product_variants"
							}
						},
						{
							"id": 40957,
							"name": "variant",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42860,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42673,
								"name": "FixtureEntryPoints.variant"
							}
						},
						{
							"id": 40958,
							"name": "variants",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42860,
								"name": "ProductVariant",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42674,
								"name": "FixtureEntryPoints.variants"
							}
						},
						{
							"id": 40959,
							"name": "product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42867,
								"name": "Product",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42675,
								"name": "FixtureEntryPoints.product"
							}
						},
						{
							"id": 40960,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42867,
								"name": "Product",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42676,
								"name": "FixtureEntryPoints.products"
							}
						},
						{
							"id": 40961,
							"name": "simple_product",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42877,
								"name": "SimpleProduct",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42677,
								"name": "FixtureEntryPoints.simple_product"
							}
						},
						{
							"id": 40962,
							"name": "product_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42678,
								"name": "FixtureEntryPoints.product_option"
							}
						},
						{
							"id": 40963,
							"name": "product_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42679,
								"name": "FixtureEntryPoints.product_options"
							}
						},
						{
							"id": 40964,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42680,
								"name": "FixtureEntryPoints.product_type"
							}
						},
						{
							"id": 40965,
							"name": "product_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42681,
								"name": "FixtureEntryPoints.product_types"
							}
						},
						{
							"id": 40966,
							"name": "product_image",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42682,
								"name": "FixtureEntryPoints.product_image"
							}
						},
						{
							"id": 40967,
							"name": "product_images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42683,
								"name": "FixtureEntryPoints.product_images"
							}
						},
						{
							"id": 40968,
							"name": "product_tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42684,
								"name": "FixtureEntryPoints.product_tag"
							}
						},
						{
							"id": 40969,
							"name": "product_tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42685,
								"name": "FixtureEntryPoints.product_tags"
							}
						},
						{
							"id": 40970,
							"name": "product_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42686,
								"name": "FixtureEntryPoints.product_collection"
							}
						},
						{
							"id": 40971,
							"name": "product_collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42687,
								"name": "FixtureEntryPoints.product_collections"
							}
						},
						{
							"id": 40972,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42886,
								"name": "ProductCategory",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42688,
								"name": "FixtureEntryPoints.product_category"
							}
						},
						{
							"id": 40973,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42886,
								"name": "ProductCategory",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42689,
								"name": "FixtureEntryPoints.product_categories"
							}
						},
						{
							"id": 40974,
							"name": "sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42892,
								"name": "SalesChannel",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42690,
								"name": "FixtureEntryPoints.sales_channel"
							}
						},
						{
							"id": 40975,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42892,
								"name": "SalesChannel",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42691,
								"name": "FixtureEntryPoints.sales_channels"
							}
						},
						{
							"id": 40976,
							"name": "customer_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42692,
								"name": "FixtureEntryPoints.customer_address"
							}
						},
						{
							"id": 40977,
							"name": "customer_addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42693,
								"name": "FixtureEntryPoints.customer_addresses"
							}
						},
						{
							"id": 40978,
							"name": "customer_group_customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42694,
								"name": "FixtureEntryPoints.customer_group_customer"
							}
						},
						{
							"id": 40979,
							"name": "customer_group_customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42695,
								"name": "FixtureEntryPoints.customer_group_customers"
							}
						},
						{
							"id": 40980,
							"name": "customer_group",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42696,
								"name": "FixtureEntryPoints.customer_group"
							}
						},
						{
							"id": 40981,
							"name": "customer_groups",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42697,
								"name": "FixtureEntryPoints.customer_groups"
							}
						},
						{
							"id": 40982,
							"name": "customer",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42698,
								"name": "FixtureEntryPoints.customer"
							}
						},
						{
							"id": 40983,
							"name": "customers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42699,
								"name": "FixtureEntryPoints.customers"
							}
						},
						{
							"id": 40984,
							"name": "cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42700,
								"name": "FixtureEntryPoints.cart"
							}
						},
						{
							"id": 40985,
							"name": "carts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42701,
								"name": "FixtureEntryPoints.carts"
							}
						},
						{
							"id": 40986,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42702,
								"name": "FixtureEntryPoints.address"
							}
						},
						{
							"id": 40987,
							"name": "addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42703,
								"name": "FixtureEntryPoints.addresses"
							}
						},
						{
							"id": 40988,
							"name": "line_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42704,
								"name": "FixtureEntryPoints.line_item"
							}
						},
						{
							"id": 40989,
							"name": "line_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42705,
								"name": "FixtureEntryPoints.line_items"
							}
						},
						{
							"id": 40990,
							"name": "line_item_adjustment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42706,
								"name": "FixtureEntryPoints.line_item_adjustment"
							}
						},
						{
							"id": 40991,
							"name": "line_item_adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42707,
								"name": "FixtureEntryPoints.line_item_adjustments"
							}
						},
						{
							"id": 40992,
							"name": "line_item_tax_line",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42708,
								"name": "FixtureEntryPoints.line_item_tax_line"
							}
						},
						{
							"id": 40993,
							"name": "line_item_tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42709,
								"name": "FixtureEntryPoints.line_item_tax_lines"
							}
						},
						{
							"id": 40994,
							"name": "shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42710,
								"name": "FixtureEntryPoints.shipping_method"
							}
						},
						{
							"id": 40995,
							"name": "shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42711,
								"name": "FixtureEntryPoints.shipping_methods"
							}
						},
						{
							"id": 40996,
							"name": "shipping_method_adjustment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42712,
								"name": "FixtureEntryPoints.shipping_method_adjustment"
							}
						},
						{
							"id": 40997,
							"name": "shipping_method_adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42713,
								"name": "FixtureEntryPoints.shipping_method_adjustments"
							}
						},
						{
							"id": 40998,
							"name": "shipping_method_tax_line",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42714,
								"name": "FixtureEntryPoints.shipping_method_tax_line"
							}
						},
						{
							"id": 40999,
							"name": "shipping_method_tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42715,
								"name": "FixtureEntryPoints.shipping_method_tax_lines"
							}
						},
						{
							"id": 41000,
							"name": "promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42716,
								"name": "FixtureEntryPoints.promotion"
							}
						},
						{
							"id": 41001,
							"name": "promotions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42717,
								"name": "FixtureEntryPoints.promotions"
							}
						},
						{
							"id": 41002,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42718,
								"name": "FixtureEntryPoints.campaign"
							}
						},
						{
							"id": 41003,
							"name": "campaigns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42719,
								"name": "FixtureEntryPoints.campaigns"
							}
						},
						{
							"id": 41004,
							"name": "promotion_rule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42720,
								"name": "FixtureEntryPoints.promotion_rule"
							}
						},
						{
							"id": 41005,
							"name": "promotion_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42721,
								"name": "FixtureEntryPoints.promotion_rules"
							}
						},
						{
							"id": 41006,
							"name": "api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42722,
								"name": "FixtureEntryPoints.api_key"
							}
						},
						{
							"id": 41007,
							"name": "api_keys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42723,
								"name": "FixtureEntryPoints.api_keys"
							}
						},
						{
							"id": 41008,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42724,
								"name": "FixtureEntryPoints.tax_rate"
							}
						},
						{
							"id": 41009,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42725,
								"name": "FixtureEntryPoints.tax_rates"
							}
						},
						{
							"id": 41010,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42726,
								"name": "FixtureEntryPoints.tax_region"
							}
						},
						{
							"id": 41011,
							"name": "tax_regions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42727,
								"name": "FixtureEntryPoints.tax_regions"
							}
						},
						{
							"id": 41012,
							"name": "tax_rate_rule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42728,
								"name": "FixtureEntryPoints.tax_rate_rule"
							}
						},
						{
							"id": 41013,
							"name": "tax_rate_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42729,
								"name": "FixtureEntryPoints.tax_rate_rules"
							}
						},
						{
							"id": 41014,
							"name": "tax_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42730,
								"name": "FixtureEntryPoints.tax_provider"
							}
						},
						{
							"id": 41015,
							"name": "tax_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42731,
								"name": "FixtureEntryPoints.tax_providers"
							}
						},
						{
							"id": 41016,
							"name": "store",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42732,
								"name": "FixtureEntryPoints.store"
							}
						},
						{
							"id": 41017,
							"name": "stores",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42733,
								"name": "FixtureEntryPoints.stores"
							}
						},
						{
							"id": 41018,
							"name": "store_currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42734,
								"name": "FixtureEntryPoints.store_currency"
							}
						},
						{
							"id": 41019,
							"name": "store_currencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42735,
								"name": "FixtureEntryPoints.store_currencies"
							}
						},
						{
							"id": 41020,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42736,
								"name": "FixtureEntryPoints.user"
							}
						},
						{
							"id": 41021,
							"name": "users",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42737,
								"name": "FixtureEntryPoints.users"
							}
						},
						{
							"id": 41022,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42738,
								"name": "FixtureEntryPoints.invite"
							}
						},
						{
							"id": 41023,
							"name": "invites",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42739,
								"name": "FixtureEntryPoints.invites"
							}
						},
						{
							"id": 41024,
							"name": "auth_identity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42740,
								"name": "FixtureEntryPoints.auth_identity"
							}
						},
						{
							"id": 41025,
							"name": "auth_identities",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42741,
								"name": "FixtureEntryPoints.auth_identities"
							}
						},
						{
							"id": 41026,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42742,
								"name": "FixtureEntryPoints.order"
							}
						},
						{
							"id": 41027,
							"name": "orders",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42743,
								"name": "FixtureEntryPoints.orders"
							}
						},
						{
							"id": 41028,
							"name": "order_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42744,
								"name": "FixtureEntryPoints.order_address"
							}
						},
						{
							"id": 41029,
							"name": "order_addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42745,
								"name": "FixtureEntryPoints.order_addresses"
							}
						},
						{
							"id": 41030,
							"name": "order_line_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42746,
								"name": "FixtureEntryPoints.order_line_item"
							}
						},
						{
							"id": 41031,
							"name": "order_line_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42747,
								"name": "FixtureEntryPoints.order_line_items"
							}
						},
						{
							"id": 41032,
							"name": "order_line_item_adjustment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42748,
								"name": "FixtureEntryPoints.order_line_item_adjustment"
							}
						},
						{
							"id": 41033,
							"name": "order_line_item_adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42749,
								"name": "FixtureEntryPoints.order_line_item_adjustments"
							}
						},
						{
							"id": 41034,
							"name": "order_line_item_tax_line",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42750,
								"name": "FixtureEntryPoints.order_line_item_tax_line"
							}
						},
						{
							"id": 41035,
							"name": "order_line_item_tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42751,
								"name": "FixtureEntryPoints.order_line_item_tax_lines"
							}
						},
						{
							"id": 41036,
							"name": "order_shipping_method",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42752,
								"name": "FixtureEntryPoints.order_shipping_method"
							}
						},
						{
							"id": 41037,
							"name": "order_shipping_methods",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42753,
								"name": "FixtureEntryPoints.order_shipping_methods"
							}
						},
						{
							"id": 41038,
							"name": "order_shipping_method_adjustment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42754,
								"name": "FixtureEntryPoints.order_shipping_method_adjustment"
							}
						},
						{
							"id": 41039,
							"name": "order_shipping_method_adjustments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42755,
								"name": "FixtureEntryPoints.order_shipping_method_adjustments"
							}
						},
						{
							"id": 41040,
							"name": "order_shipping_method_tax_line",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42756,
								"name": "FixtureEntryPoints.order_shipping_method_tax_line"
							}
						},
						{
							"id": 41041,
							"name": "order_shipping_method_tax_lines",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42757,
								"name": "FixtureEntryPoints.order_shipping_method_tax_lines"
							}
						},
						{
							"id": 41042,
							"name": "order_transaction",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42758,
								"name": "FixtureEntryPoints.order_transaction"
							}
						},
						{
							"id": 41043,
							"name": "order_transactions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42759,
								"name": "FixtureEntryPoints.order_transactions"
							}
						},
						{
							"id": 41044,
							"name": "order_change",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42760,
								"name": "FixtureEntryPoints.order_change"
							}
						},
						{
							"id": 41045,
							"name": "order_changes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42761,
								"name": "FixtureEntryPoints.order_changes"
							}
						},
						{
							"id": 41046,
							"name": "order_change_action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42762,
								"name": "FixtureEntryPoints.order_change_action"
							}
						},
						{
							"id": 41047,
							"name": "order_change_actions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42763,
								"name": "FixtureEntryPoints.order_change_actions"
							}
						},
						{
							"id": 41048,
							"name": "order_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42764,
								"name": "FixtureEntryPoints.order_item"
							}
						},
						{
							"id": 41049,
							"name": "order_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42765,
								"name": "FixtureEntryPoints.order_items"
							}
						},
						{
							"id": 41050,
							"name": "order_summary",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42766,
								"name": "FixtureEntryPoints.order_summary"
							}
						},
						{
							"id": 41051,
							"name": "order_summaries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42767,
								"name": "FixtureEntryPoints.order_summaries"
							}
						},
						{
							"id": 41052,
							"name": "order_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42768,
								"name": "FixtureEntryPoints.order_shipping"
							}
						},
						{
							"id": 41053,
							"name": "order_shippings",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42769,
								"name": "FixtureEntryPoints.order_shippings"
							}
						},
						{
							"id": 41054,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42770,
								"name": "FixtureEntryPoints.return_reason"
							}
						},
						{
							"id": 41055,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42771,
								"name": "FixtureEntryPoints.return_reasons"
							}
						},
						{
							"id": 41056,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42772,
								"name": "FixtureEntryPoints.return"
							}
						},
						{
							"id": 41057,
							"name": "returns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42773,
								"name": "FixtureEntryPoints.returns"
							}
						},
						{
							"id": 41058,
							"name": "return_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42774,
								"name": "FixtureEntryPoints.return_item"
							}
						},
						{
							"id": 41059,
							"name": "return_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42775,
								"name": "FixtureEntryPoints.return_items"
							}
						},
						{
							"id": 41060,
							"name": "order_claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42776,
								"name": "FixtureEntryPoints.order_claim"
							}
						},
						{
							"id": 41061,
							"name": "order_claims",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42777,
								"name": "FixtureEntryPoints.order_claims"
							}
						},
						{
							"id": 41062,
							"name": "order_claim_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42778,
								"name": "FixtureEntryPoints.order_claim_item"
							}
						},
						{
							"id": 41063,
							"name": "order_claim_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42779,
								"name": "FixtureEntryPoints.order_claim_items"
							}
						},
						{
							"id": 41064,
							"name": "order_claim_item_image",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42780,
								"name": "FixtureEntryPoints.order_claim_item_image"
							}
						},
						{
							"id": 41065,
							"name": "order_claim_item_images",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42781,
								"name": "FixtureEntryPoints.order_claim_item_images"
							}
						},
						{
							"id": 41066,
							"name": "order_exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42782,
								"name": "FixtureEntryPoints.order_exchange"
							}
						},
						{
							"id": 41067,
							"name": "order_exchanges",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42783,
								"name": "FixtureEntryPoints.order_exchanges"
							}
						},
						{
							"id": 41068,
							"name": "order_exchange_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42784,
								"name": "FixtureEntryPoints.order_exchange_item"
							}
						},
						{
							"id": 41069,
							"name": "order_exchange_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42785,
								"name": "FixtureEntryPoints.order_exchange_items"
							}
						},
						{
							"id": 41070,
							"name": "payment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42786,
								"name": "FixtureEntryPoints.payment"
							}
						},
						{
							"id": 41071,
							"name": "payments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42787,
								"name": "FixtureEntryPoints.payments"
							}
						},
						{
							"id": 41072,
							"name": "payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42788,
								"name": "FixtureEntryPoints.payment_collection"
							}
						},
						{
							"id": 41073,
							"name": "payment_collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42789,
								"name": "FixtureEntryPoints.payment_collections"
							}
						},
						{
							"id": 41074,
							"name": "payment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42790,
								"name": "FixtureEntryPoints.payment_provider"
							}
						},
						{
							"id": 41075,
							"name": "payment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42791,
								"name": "FixtureEntryPoints.payment_providers"
							}
						},
						{
							"id": 41076,
							"name": "payment_session",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42792,
								"name": "FixtureEntryPoints.payment_session"
							}
						},
						{
							"id": 41077,
							"name": "payment_sessions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42793,
								"name": "FixtureEntryPoints.payment_sessions"
							}
						},
						{
							"id": 41078,
							"name": "refund_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42794,
								"name": "FixtureEntryPoints.refund_reason"
							}
						},
						{
							"id": 41079,
							"name": "refund_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42795,
								"name": "FixtureEntryPoints.refund_reasons"
							}
						},
						{
							"id": 41080,
							"name": "fulfillment_address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42796,
								"name": "FixtureEntryPoints.fulfillment_address"
							}
						},
						{
							"id": 41081,
							"name": "fulfillment_addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42797,
								"name": "FixtureEntryPoints.fulfillment_addresses"
							}
						},
						{
							"id": 41082,
							"name": "fulfillment_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42798,
								"name": "FixtureEntryPoints.fulfillment_item"
							}
						},
						{
							"id": 41083,
							"name": "fulfillment_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42799,
								"name": "FixtureEntryPoints.fulfillment_items"
							}
						},
						{
							"id": 41084,
							"name": "fulfillment_label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42800,
								"name": "FixtureEntryPoints.fulfillment_label"
							}
						},
						{
							"id": 41085,
							"name": "fulfillment_labels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42801,
								"name": "FixtureEntryPoints.fulfillment_labels"
							}
						},
						{
							"id": 41086,
							"name": "fulfillment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42802,
								"name": "FixtureEntryPoints.fulfillment_provider"
							}
						},
						{
							"id": 41087,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42803,
								"name": "FixtureEntryPoints.fulfillment_providers"
							}
						},
						{
							"id": 41088,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42804,
								"name": "FixtureEntryPoints.fulfillment_set"
							}
						},
						{
							"id": 41089,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42805,
								"name": "FixtureEntryPoints.fulfillment_sets"
							}
						},
						{
							"id": 41090,
							"name": "fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42806,
								"name": "FixtureEntryPoints.fulfillment"
							}
						},
						{
							"id": 41091,
							"name": "fulfillments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42807,
								"name": "FixtureEntryPoints.fulfillments"
							}
						},
						{
							"id": 41092,
							"name": "geo_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42808,
								"name": "FixtureEntryPoints.geo_zone"
							}
						},
						{
							"id": 41093,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42809,
								"name": "FixtureEntryPoints.geo_zones"
							}
						},
						{
							"id": 41094,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42810,
								"name": "FixtureEntryPoints.service_zone"
							}
						},
						{
							"id": 41095,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42811,
								"name": "FixtureEntryPoints.service_zones"
							}
						},
						{
							"id": 41096,
							"name": "shipping_option_rule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42812,
								"name": "FixtureEntryPoints.shipping_option_rule"
							}
						},
						{
							"id": 41097,
							"name": "shipping_option_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42813,
								"name": "FixtureEntryPoints.shipping_option_rules"
							}
						},
						{
							"id": 41098,
							"name": "shipping_option_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42814,
								"name": "FixtureEntryPoints.shipping_option_type"
							}
						},
						{
							"id": 41099,
							"name": "shipping_option_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42815,
								"name": "FixtureEntryPoints.shipping_option_types"
							}
						},
						{
							"id": 41100,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42816,
								"name": "FixtureEntryPoints.shipping_option"
							}
						},
						{
							"id": 41101,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42817,
								"name": "FixtureEntryPoints.shipping_options"
							}
						},
						{
							"id": 41102,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42818,
								"name": "FixtureEntryPoints.shipping_profile"
							}
						},
						{
							"id": 41103,
							"name": "shipping_profiles",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42819,
								"name": "FixtureEntryPoints.shipping_profiles"
							}
						},
						{
							"id": 41104,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42820,
								"name": "FixtureEntryPoints.notification"
							}
						},
						{
							"id": 41105,
							"name": "notifications",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42821,
								"name": "FixtureEntryPoints.notifications"
							}
						},
						{
							"id": 41106,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42822,
								"name": "FixtureEntryPoints.region"
							}
						},
						{
							"id": 41107,
							"name": "regions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42823,
								"name": "FixtureEntryPoints.regions"
							}
						},
						{
							"id": 41108,
							"name": "country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42824,
								"name": "FixtureEntryPoints.country"
							}
						},
						{
							"id": 41109,
							"name": "countries",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42825,
								"name": "FixtureEntryPoints.countries"
							}
						},
						{
							"id": 41110,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42826,
								"name": "FixtureEntryPoints.currency"
							}
						},
						{
							"id": 41111,
							"name": "currencies",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42827,
								"name": "FixtureEntryPoints.currencies"
							}
						},
						{
							"id": 41112,
							"name": "cart_payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42903,
								"name": "LinkCartPaymentCollection",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42828,
								"name": "FixtureEntryPoints.cart_payment_collection"
							}
						},
						{
							"id": 41113,
							"name": "cart_payment_collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42903,
								"name": "LinkCartPaymentCollection",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42829,
								"name": "FixtureEntryPoints.cart_payment_collections"
							}
						},
						{
							"id": 41114,
							"name": "cart_promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42911,
								"name": "LinkCartPromotion",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42830,
								"name": "FixtureEntryPoints.cart_promotion"
							}
						},
						{
							"id": 41115,
							"name": "cart_promotions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42911,
								"name": "LinkCartPromotion",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42831,
								"name": "FixtureEntryPoints.cart_promotions"
							}
						},
						{
							"id": 41116,
							"name": "location_fulfillment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42919,
								"name": "LinkLocationFulfillmentProvider",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42832,
								"name": "FixtureEntryPoints.location_fulfillment_provider"
							}
						},
						{
							"id": 41117,
							"name": "location_fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42919,
								"name": "LinkLocationFulfillmentProvider",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42833,
								"name": "FixtureEntryPoints.location_fulfillment_providers"
							}
						},
						{
							"id": 41118,
							"name": "location_fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42927,
								"name": "LinkLocationFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42834,
								"name": "FixtureEntryPoints.location_fulfillment_set"
							}
						},
						{
							"id": 41119,
							"name": "location_fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42927,
								"name": "LinkLocationFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42835,
								"name": "FixtureEntryPoints.location_fulfillment_sets"
							}
						},
						{
							"id": 41120,
							"name": "order_cart",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42935,
								"name": "LinkOrderCart",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42836,
								"name": "FixtureEntryPoints.order_cart"
							}
						},
						{
							"id": 41121,
							"name": "order_carts",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42935,
								"name": "LinkOrderCart",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42837,
								"name": "FixtureEntryPoints.order_carts"
							}
						},
						{
							"id": 41122,
							"name": "order_fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42943,
								"name": "LinkOrderFulfillment",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42838,
								"name": "FixtureEntryPoints.order_fulfillment"
							}
						},
						{
							"id": 41123,
							"name": "order_fulfillments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42943,
								"name": "LinkOrderFulfillment",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42839,
								"name": "FixtureEntryPoints.order_fulfillments"
							}
						},
						{
							"id": 41124,
							"name": "order_payment_collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42951,
								"name": "LinkOrderPaymentCollection",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42840,
								"name": "FixtureEntryPoints.order_payment_collection"
							}
						},
						{
							"id": 41125,
							"name": "order_payment_collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42951,
								"name": "LinkOrderPaymentCollection",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42841,
								"name": "FixtureEntryPoints.order_payment_collections"
							}
						},
						{
							"id": 41126,
							"name": "order_promotion",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42959,
								"name": "LinkOrderPromotion",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42842,
								"name": "FixtureEntryPoints.order_promotion"
							}
						},
						{
							"id": 41127,
							"name": "order_promotions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42959,
								"name": "LinkOrderPromotion",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42843,
								"name": "FixtureEntryPoints.order_promotions"
							}
						},
						{
							"id": 41128,
							"name": "return_fulfillment",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42967,
								"name": "LinkReturnFulfillment",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42844,
								"name": "FixtureEntryPoints.return_fulfillment"
							}
						},
						{
							"id": 41129,
							"name": "return_fulfillments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42967,
								"name": "LinkReturnFulfillment",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42845,
								"name": "FixtureEntryPoints.return_fulfillments"
							}
						},
						{
							"id": 41130,
							"name": "product_sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42975,
								"name": "LinkProductSalesChannel",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42846,
								"name": "FixtureEntryPoints.product_sales_channel"
							}
						},
						{
							"id": 41131,
							"name": "product_sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42975,
								"name": "LinkProductSalesChannel",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42847,
								"name": "FixtureEntryPoints.product_sales_channels"
							}
						},
						{
							"id": 41132,
							"name": "product_variant_inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42985,
								"name": "LinkProductVariantInventoryItem",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42848,
								"name": "FixtureEntryPoints.product_variant_inventory_item"
							}
						},
						{
							"id": 41133,
							"name": "product_variant_inventory_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42985,
								"name": "LinkProductVariantInventoryItem",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42849,
								"name": "FixtureEntryPoints.product_variant_inventory_items"
							}
						},
						{
							"id": 41134,
							"name": "product_variant_price_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42995,
								"name": "LinkProductVariantPriceSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42850,
								"name": "FixtureEntryPoints.product_variant_price_set"
							}
						},
						{
							"id": 41135,
							"name": "product_variant_price_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42995,
								"name": "LinkProductVariantPriceSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42851,
								"name": "FixtureEntryPoints.product_variant_price_sets"
							}
						},
						{
							"id": 41136,
							"name": "publishable_api_key_sales_channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43004,
								"name": "LinkPublishableApiKeySalesChannel",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42852,
								"name": "FixtureEntryPoints.publishable_api_key_sales_channel"
							}
						},
						{
							"id": 41137,
							"name": "publishable_api_key_sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43004,
								"name": "LinkPublishableApiKeySalesChannel",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42853,
								"name": "FixtureEntryPoints.publishable_api_key_sales_channels"
							}
						},
						{
							"id": 41138,
							"name": "region_payment_provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43013,
								"name": "LinkRegionPaymentProvider",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42854,
								"name": "FixtureEntryPoints.region_payment_provider"
							}
						},
						{
							"id": 41139,
							"name": "region_payment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43013,
								"name": "LinkRegionPaymentProvider",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42855,
								"name": "FixtureEntryPoints.region_payment_providers"
							}
						},
						{
							"id": 41140,
							"name": "sales_channel_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43021,
								"name": "LinkSalesChannelStockLocation",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42856,
								"name": "FixtureEntryPoints.sales_channel_location"
							}
						},
						{
							"id": 41141,
							"name": "sales_channel_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43021,
								"name": "LinkSalesChannelStockLocation",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42857,
								"name": "FixtureEntryPoints.sales_channel_locations"
							}
						},
						{
							"id": 41142,
							"name": "shipping_option_price_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43030,
								"name": "LinkShippingOptionPriceSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42858,
								"name": "FixtureEntryPoints.shipping_option_price_set"
							}
						},
						{
							"id": 41143,
							"name": "shipping_option_price_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 43030,
								"name": "LinkShippingOptionPriceSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 42859,
								"name": "FixtureEntryPoints.shipping_option_price_sets"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40930,
								40931,
								40932,
								40933,
								40934,
								40935,
								40936,
								40937,
								40938,
								40939,
								40940,
								40941,
								40942,
								40943,
								40944,
								40945,
								40946,
								40947,
								40948,
								40949,
								40950,
								40951,
								40952,
								40953,
								40954,
								40955,
								40956,
								40957,
								40958,
								40959,
								40960,
								40961,
								40962,
								40963,
								40964,
								40965,
								40966,
								40967,
								40968,
								40969,
								40970,
								40971,
								40972,
								40973,
								40974,
								40975,
								40976,
								40977,
								40978,
								40979,
								40980,
								40981,
								40982,
								40983,
								40984,
								40985,
								40986,
								40987,
								40988,
								40989,
								40990,
								40991,
								40992,
								40993,
								40994,
								40995,
								40996,
								40997,
								40998,
								40999,
								41000,
								41001,
								41002,
								41003,
								41004,
								41005,
								41006,
								41007,
								41008,
								41009,
								41010,
								41011,
								41012,
								41013,
								41014,
								41015,
								41016,
								41017,
								41018,
								41019,
								41020,
								41021,
								41022,
								41023,
								41024,
								41025,
								41026,
								41027,
								41028,
								41029,
								41030,
								41031,
								41032,
								41033,
								41034,
								41035,
								41036,
								41037,
								41038,
								41039,
								41040,
								41041,
								41042,
								41043,
								41044,
								41045,
								41046,
								41047,
								41048,
								41049,
								41050,
								41051,
								41052,
								41053,
								41054,
								41055,
								41056,
								41057,
								41058,
								41059,
								41060,
								41061,
								41062,
								41063,
								41064,
								41065,
								41066,
								41067,
								41068,
								41069,
								41070,
								41071,
								41072,
								41073,
								41074,
								41075,
								41076,
								41077,
								41078,
								41079,
								41080,
								41081,
								41082,
								41083,
								41084,
								41085,
								41086,
								41087,
								41088,
								41089,
								41090,
								41091,
								41092,
								41093,
								41094,
								41095,
								41096,
								41097,
								41098,
								41099,
								41100,
								41101,
								41102,
								41103,
								41104,
								41105,
								41106,
								41107,
								41108,
								41109,
								41110,
								41111,
								41112,
								41113,
								41114,
								41115,
								41116,
								41117,
								41118,
								41119,
								41120,
								41121,
								41122,
								41123,
								41124,
								41125,
								41126,
								41127,
								41128,
								41129,
								41130,
								41131,
								41132,
								41133,
								41134,
								41135,
								41136,
								41137,
								41138,
								41139,
								41140,
								41141,
								41142,
								41143
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 42645,
							"name": "FixtureEntryPoints",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 40533,
					"name": "RemoteQueryObjectConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40538,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40534,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40535,
									"name": "entryPoint",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 40538,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": 40929,
													"name": "RemoteQueryEntryPoints",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 40536,
									"name": "variables",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 40537,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 42633,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": 40538,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 40929,
																	"name": "RemoteQueryEntryPoints",
																	"package": "@medusajs/types"
																}
															}
														]
													},
													"objectType": {
														"type": "reference",
														"target": 40929,
														"name": "RemoteQueryEntryPoints",
														"package": "@medusajs/types"
													}
												}
											],
											"name": "ObjectToRemoteQueryFields",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "never"
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 42633,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 40538,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"target": 40929,
																		"name": "RemoteQueryEntryPoints",
																		"package": "@medusajs/types"
																	}
																}
															]
														},
														"objectType": {
															"type": "reference",
															"target": 40929,
															"name": "RemoteQueryEntryPoints",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "ObjectToRemoteQueryFields",
												"package": "@medusajs/types"
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40535,
										40536,
										40537
									]
								}
							]
						}
					}
				},
				{
					"id": 40539,
					"name": "RemoteQueryObjectFromStringResult",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40543,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 40533,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "RemoteQueryObjectConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40540,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40541,
									"name": "__TConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 40543,
										"name": "TConfig",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 40542,
									"name": "__value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40541,
										40542
									]
								}
							]
						}
					}
				},
				{
					"id": 40521,
					"name": "RemoteQueryInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40532,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40522,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40523,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 40532,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "typeOperator",
												"operator": "keyof",
												"target": {
													"type": "reference",
													"target": 40929,
													"name": "RemoteQueryEntryPoints",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 40524,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 42633,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": 40532,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "reference",
																	"target": 40929,
																	"name": "RemoteQueryEntryPoints",
																	"package": "@medusajs/types"
																}
															}
														]
													},
													"objectType": {
														"type": "reference",
														"target": 40929,
														"name": "RemoteQueryEntryPoints",
														"package": "@medusajs/types"
													}
												}
											],
											"name": "ObjectToRemoteQueryFields",
											"package": "@medusajs/types"
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "never"
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 42633,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intersection",
															"types": [
																{
																	"type": "reference",
																	"target": 40532,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"target": 40929,
																		"name": "RemoteQueryEntryPoints",
																		"package": "@medusajs/types"
																	}
																}
															]
														},
														"objectType": {
															"type": "reference",
															"target": 40929,
															"name": "RemoteQueryEntryPoints",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "ObjectToRemoteQueryFields",
												"package": "@medusajs/types"
											}
										}
									}
								},
								{
									"id": 40525,
									"name": "pagination",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 40526,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 40527,
													"name": "skip",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 40528,
													"name": "take",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 40529,
													"name": "order",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 40063,
														"typeArguments": [
															{
																"type": "reference",
																"target": 40532,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "IndexOrderBy",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														40527,
														40528,
														40529
													]
												}
											]
										}
									}
								},
								{
									"id": 40530,
									"name": "filters",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 41144,
										"typeArguments": [
											{
												"type": "reference",
												"target": 40532,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RemoteQueryFilters",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40531,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40523,
										40524,
										40525,
										40530,
										40531
									]
								}
							]
						}
					}
				},
				{
					"id": 40517,
					"name": "RemoteQueryGraph",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 40520,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40518,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40519,
									"name": "__TConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 40533,
										"typeArguments": [
											{
												"type": "reference",
												"target": 40520,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RemoteQueryObjectConfig",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40519
									]
								}
							]
						}
					}
				},
				{
					"id": 40870,
					"name": "RemoteQueryFunctionReturnPagination",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40871,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40872,
									"name": "skip",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 40873,
									"name": "take",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 40874,
									"name": "count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40872,
										40873,
										40874
									]
								}
							]
						}
					}
				},
				{
					"id": 40875,
					"name": "GraphResultSet",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The GraphResultSet presents a typed output for the\nresult returned by the underlying remote query"
							}
						]
					},
					"typeParameters": [
						{
							"id": 40879,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40876,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40877,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": 40879,
											"name": "TEntry",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 40929,
												"name": "RemoteQueryEntryPoints",
												"package": "@medusajs/types"
											}
										},
										"trueType": {
											"type": "array",
											"elementType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 40879,
													"name": "TEntry",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 40929,
													"name": "RemoteQueryEntryPoints",
													"package": "@medusajs/types"
												}
											}
										},
										"falseType": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									}
								},
								{
									"id": 40878,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 40870,
										"name": "RemoteQueryFunctionReturnPagination",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40877,
										40878
									]
								}
							]
						}
					}
				},
				{
					"id": 40880,
					"name": "QueryGraphFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "QueryGraphFunction is a wrapper on top of remoteQuery\nthat simplifies the input it accepts and returns\na normalized/consistent output."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40881,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 40882,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 40883,
											"name": "TEntry",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40884,
											"name": "queryConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40521,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40883,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RemoteQueryInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40885,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 40886,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 40887,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 40879,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "reference",
																		"target": 40929,
																		"name": "RemoteQueryEntryPoints",
																		"package": "@medusajs/types"
																	}
																},
																"trueType": {
																	"type": "array",
																	"elementType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": 40879,
																			"name": "TEntry",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 40929,
																			"name": "RemoteQueryEntryPoints",
																			"package": "@medusajs/types"
																		}
																	}
																},
																"falseType": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															}
														},
														{
															"id": 40888,
															"name": "metadata",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 40870,
																"name": "RemoteQueryFunctionReturnPagination",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																40887,
																40888
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 40889,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 40890,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40891,
									"name": "graph",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Graph function uses the remoteQuery under the hood and\nreturns a result set"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 40880,
										"name": "QueryGraphFunction",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 40892,
									"name": "gql",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific GraphQL like API around remoteQuery.query"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 40893,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 40894,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40895,
															"name": "query",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 40896,
															"name": "variables",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														},
														{
															"id": 40897,
															"name": "options",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 41878,
																"name": "RemoteJoinerOptions",
																"package": "@medusajs/types"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40891,
										40892
									]
								}
							],
							"signatures": [
								{
									"id": 40898,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific API's and pre processing around remoteQuery.query"
											}
										]
									},
									"typeParameters": [
										{
											"id": 40899,
											"name": "TEntry",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40900,
											"name": "queryConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40533,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40899,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RemoteQueryObjectConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40901,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40902,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific API's and pre processing around remoteQuery.query"
											}
										]
									},
									"typeParameters": [
										{
											"id": 40903,
											"name": "TConfig",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": 40539,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "RemoteQueryObjectFromStringResult",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 40904,
											"name": "queryConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40903,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 40905,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40906,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific API's and pre processing around remoteQuery.query"
											}
										]
									},
									"parameters": [
										{
											"id": 40907,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41860,
												"name": "RemoteJoinerQuery",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40908,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 40909,
					"name": "Query",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 40910,
							"name": "query",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 40911,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific API's and pre processing around remoteQuery.query"
											}
										]
									},
									"typeParameters": [
										{
											"id": 40912,
											"name": "TEntry",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 40913,
											"name": "queryConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40533,
												"typeArguments": [
													{
														"type": "reference",
														"target": 40912,
														"name": "TEntry",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RemoteQueryObjectConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40914,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40915,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific API's and pre processing around remoteQuery.query"
											}
										]
									},
									"typeParameters": [
										{
											"id": 40916,
											"name": "TConfig",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {
												"isConst": true
											},
											"type": {
												"type": "reference",
												"target": 40539,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "RemoteQueryObjectFromStringResult",
												"package": "@medusajs/types"
											}
										}
									],
									"parameters": [
										{
											"id": 40917,
											"name": "queryConfig",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 40916,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 40918,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 40919,
									"name": "query",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Query wrapper to provide specific API's and pre processing around remoteQuery.query"
											}
										]
									},
									"parameters": [
										{
											"id": 40920,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 41860,
												"name": "RemoteJoinerQuery",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 40921,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41878,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 40922,
							"name": "graph",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Graph function uses the remoteQuery under the hood and\nreturns a result set"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 40880,
								"name": "QueryGraphFunction",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 40923,
							"name": "gql",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Query wrapper to provide specific GraphQL like API around remoteQuery.query"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 40924,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 40925,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 40926,
													"name": "query",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 40927,
													"name": "variables",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 40928,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 41878,
														"name": "RemoteJoinerOptions",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								40922,
								40923
							]
						},
						{
							"title": "Methods",
							"children": [
								40910
							]
						}
					]
				},
				{
					"id": 41144,
					"name": "RemoteQueryFilters",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extract all available filters from a remote entry point deeply"
							}
						]
					},
					"typeParameters": [
						{
							"id": 41145,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41146,
							"name": "RemoteQueryEntryPointsLevel",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 40929,
								"name": "RemoteQueryEntryPoints",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 41147,
							"name": "Exclusion",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							"default": {
								"type": "tuple"
							}
						},
						{
							"id": 41148,
							"name": "Lim",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": 3
								},
								"objectType": {
									"type": "reference",
									"target": 43051,
									"name": "Depth",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 41148,
							"name": "Lim",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "number"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 41145,
								"name": "TEntry",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 41146,
									"name": "RemoteQueryEntryPointsLevel",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 43038,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 41145,
												"name": "TEntry",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 41146,
												"name": "RemoteQueryEntryPointsLevel",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "TypeOnly",
									"package": "@medusajs/types"
								},
								"extendsType": {
									"type": "array",
									"elementType": {
										"type": "inferred",
										"name": "V"
									}
								},
								"trueType": {
									"type": "reference",
									"target": 37700,
									"typeArguments": [
										{
											"type": "reference",
											"target": 43040,
											"typeArguments": [
												{
													"type": "reference",
													"target": 43042,
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 41148,
															"name": "Lim",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"target": 41145,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "rest",
																	"elementType": {
																		"type": "reference",
																		"target": 41147,
																		"name": "Exclusion",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													],
													"name": "ExtractFiltersOperators",
													"package": "@medusajs/types"
												}
											],
											"name": "OmitNever",
											"package": "@medusajs/types"
										}
									],
									"name": "Prettify",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "reference",
									"target": 37700,
									"typeArguments": [
										{
											"type": "reference",
											"target": 43040,
											"typeArguments": [
												{
													"type": "reference",
													"target": 43042,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": 41145,
																"name": "TEntry",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 41146,
																"name": "RemoteQueryEntryPointsLevel",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"type": "reference",
															"target": 41148,
															"name": "Lim",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "tuple",
															"elements": [
																{
																	"type": "reference",
																	"target": 41145,
																	"name": "TEntry",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																{
																	"type": "rest",
																	"elementType": {
																		"type": "reference",
																		"target": 41147,
																		"name": "Exclusion",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															]
														}
													],
													"name": "ExtractFiltersOperators",
													"package": "@medusajs/types"
												}
											],
											"name": "OmitNever",
											"package": "@medusajs/types"
										}
									],
									"name": "Prettify",
									"package": "@medusajs/types"
								}
							},
							"falseType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						40690,
						40714,
						40728,
						40929,
						40909
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						40544,
						40551,
						40552,
						40553,
						40559,
						40569,
						40581,
						40589,
						40599,
						40605,
						40610,
						40614,
						40621,
						40626,
						40630,
						40636,
						40645,
						40669,
						40672,
						40706,
						40713,
						40833,
						40840,
						40859,
						40864,
						40533,
						40539,
						40521,
						40517,
						40870,
						40875,
						40880,
						40889,
						41144
					]
				}
			]
		},
		{
			"id": 42644,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 40569,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 40559,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 43181,
			"name": "ExcludedProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "__typename"
			}
		},
		{
			"id": 43180,
			"name": "RawBigNumberPrefix",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "raw_"
			}
		},
		{
			"id": 43182,
			"name": "TypeOnly",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43183,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Required"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 43183,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				],
				"name": "Required",
				"package": "typescript"
			}
		},
		{
			"id": 42633,
			"name": "ObjectToRemoteQueryFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Output an array of strings representing the path to each leaf node in an object"
					}
				]
			},
			"typeParameters": [
				{
					"id": 42638,
					"name": "MaybeT",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 42639,
					"name": "Depth",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 2
					}
				},
				{
					"id": 42640,
					"name": "Exclusion",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"default": {
						"type": "tuple"
					}
				},
				{
					"id": 42641,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 43182,
								"typeArguments": [
									{
										"type": "reference",
										"target": 42638,
										"name": "MaybeT",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "TypeOnly",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 42642,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 42643,
											"name": "*",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "*"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												42643
											]
										}
									]
								}
							}
						]
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 42639,
					"name": "Depth",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 42641,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "object"
					},
					"trueType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 42641,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"objectType": {
							"type": "mapped",
							"parameter": "K",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 42641,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "templateLiteral",
									"head": "",
									"tail": [
										[
											{
												"type": "reference",
												"target": 43180,
												"name": "RawBigNumberPrefix",
												"package": "@medusajs/types"
											},
											""
										],
										[
											{
												"type": "intrinsic",
												"name": "string"
											},
											""
										]
									]
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Exclude"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									],
									"name": "Exclude",
									"package": "typescript"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "reference",
										"target": 43181,
										"name": "ExcludedProps",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "intrinsic",
										"name": "never"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "intrinsic",
												"name": "number"
											},
											"objectType": {
												"type": "reference",
												"target": 42640,
												"name": "Exclusion",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"trueType": {
											"type": "intrinsic",
											"name": "never"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": 43182,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 42641,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"name": "TypeOnly",
												"package": "@medusajs/types"
											},
											"extendsType": {
												"type": "array",
												"elementType": {
													"type": "inferred",
													"name": "R"
												}
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 43182,
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
																"qualifiedName": "R"
															},
															"name": "R",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "TypeOnly",
													"package": "@medusajs/types"
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Date"
													},
													"name": "Date",
													"package": "typescript"
												},
												"trueType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Exclude"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													],
													"name": "Exclude",
													"package": "typescript"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 43182,
														"typeArguments": [
															{
																"type": "unknown",
																"name": "..."
															}
														],
														"name": "TypeOnly",
														"package": "@medusajs/types"
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 42634,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 42635,
																	"name": "__typename",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		42635
																	]
																}
															]
														}
													},
													"trueType": {
														"type": "templateLiteral",
														"head": "",
														"tail": [
															[
																{
																	"type": "unknown",
																	"name": "..."
																},
																"."
															],
															[
																{
																	"type": "unknown",
																	"name": "..."
																},
																""
															]
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "unknown",
															"name": "..."
														},
														"extendsType": {
															"type": "unknown",
															"name": "..."
														},
														"trueType": {
															"type": "unknown",
															"name": "..."
														},
														"falseType": {
															"type": "unknown",
															"name": "..."
														}
													}
												}
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": 43182,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "unknown",
																"name": "..."
															},
															"objectType": {
																"type": "unknown",
																"name": "..."
															}
														}
													],
													"name": "TypeOnly",
													"package": "@medusajs/types"
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Date"
													},
													"name": "Date",
													"package": "typescript"
												},
												"trueType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Exclude"
													},
													"typeArguments": [
														{
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													],
													"name": "Exclude",
													"package": "typescript"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": 43182,
														"typeArguments": [
															{
																"type": "unknown",
																"name": "..."
															}
														],
														"name": "TypeOnly",
														"package": "@medusajs/types"
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 42636,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 42637,
																	"name": "__typename",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		42637
																	]
																}
															]
														}
													},
													"trueType": {
														"type": "templateLiteral",
														"head": "",
														"tail": [
															[
																{
																	"type": "unknown",
																	"name": "..."
																},
																"."
															],
															[
																{
																	"type": "unknown",
																	"name": "..."
																},
																""
															]
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "unknown",
															"name": "..."
														},
														"extendsType": {
															"type": "unknown",
															"name": "..."
														},
														"trueType": {
															"type": "unknown",
															"name": "..."
														},
														"falseType": {
															"type": "unknown",
															"name": "..."
														}
													}
												}
											}
										}
									}
								}
							}
						}
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 43216,
			"name": "ExcludedProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "literal",
				"value": "__typename"
			}
		},
		{
			"id": 43051,
			"name": "Depth",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					},
					{
						"type": "literal",
						"value": 6
					},
					{
						"type": "literal",
						"value": 7
					},
					{
						"type": "literal",
						"value": 8
					},
					{
						"type": "literal",
						"value": 9
					},
					{
						"type": "literal",
						"value": 10
					}
				]
			}
		},
		{
			"id": 43217,
			"name": "CleanupObject",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43218,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": 37700,
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Exclude"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 43218,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "symbol"
									}
								],
								"name": "Exclude",
								"package": "typescript"
							},
							{
								"type": "reference",
								"target": 43216,
								"name": "ExcludedProps",
								"package": "@medusajs/types"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				],
				"name": "Prettify",
				"package": "@medusajs/types"
			}
		},
		{
			"id": 43040,
			"name": "OmitNever",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43041,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 43041,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
							"qualifiedName": "K"
						},
						"name": "K",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 43041,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"nameType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
								"qualifiedName": "K"
							},
							"name": "K",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 43041,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "never"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
							"qualifiedName": "K"
						},
						"name": "K",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 43038,
			"name": "TypeOnly",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43039,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Required"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 43039,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				],
				"name": "Required",
				"package": "typescript"
			}
		},
		{
			"id": 43042,
			"name": "ExtractFiltersOperators",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43047,
					"name": "MaybeT",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 43048,
					"name": "Lim",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "indexedAccess",
						"indexType": {
							"type": "literal",
							"value": 2
						},
						"objectType": {
							"type": "reference",
							"target": 43051,
							"name": "Depth",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 43049,
					"name": "Exclusion",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"default": {
						"type": "tuple"
					}
				},
				{
					"id": 43050,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": 43038,
						"typeArguments": [
							{
								"type": "reference",
								"target": 43047,
								"name": "MaybeT",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeOnly",
						"package": "@medusajs/types"
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 43050,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
							"qualifiedName": "Key"
						},
						"name": "Key",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "intrinsic",
							"name": "number"
						},
						"objectType": {
							"type": "reference",
							"target": 43049,
							"name": "Exclusion",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 43216,
							"name": "ExcludedProps",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 43050,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 43050,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 43050,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 43050,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 43050,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "array",
									"elementType": {
										"type": "inferred",
										"name": "R"
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": 43038,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "TypeOnly",
										"package": "@medusajs/types"
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 43043,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 43044,
													"name": "__typename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														43044
													]
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": 41144,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "reference",
												"target": 43050,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													},
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": 43049,
															"name": "Exclusion",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 43048,
													"name": "Lim",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 43051,
													"name": "Depth",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "RemoteQueryFilters",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
												"qualifiedName": "R"
											},
											"name": "R",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "object"
										},
										"trueType": {
											"type": "reference",
											"target": 43217,
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
														"qualifiedName": "R"
													},
													"name": "R",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "CleanupObject",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 43050,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reflection",
										"declaration": {
											"id": 43045,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 43046,
													"name": "__typename",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														43046
													]
												}
											]
										}
									},
									"trueType": {
										"type": "reference",
										"target": 41144,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 43050,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											{
												"type": "tuple",
												"elements": [
													{
														"type": "intersection",
														"types": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													},
													{
														"type": "rest",
														"elementType": {
															"type": "reference",
															"target": 43049,
															"name": "Exclusion",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												]
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 43048,
													"name": "Lim",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 43051,
													"name": "Depth",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "RemoteQueryFilters",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 43050,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "intrinsic",
											"name": "object"
										},
										"trueType": {
											"type": "reference",
											"target": 43217,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 43050,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "CleanupObject",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									}
								}
							}
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 41149,
			"name": "NotificationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41150,
					"name": "Attachment",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The structure for attachments in a notification."
							}
						]
					},
					"children": [
						{
							"id": 41151,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The content of the attachment, encoded as a base64 string."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41152,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the attachment."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41153,
							"name": "content_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MIME type of the attachment."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41154,
							"name": "disposition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The disposition of the attachment, e.g., \"inline\" or \"attachment\"."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41155,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID, if the attachment is meant to be referenced within the body of the message."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41151,
								41152,
								41153,
								41154,
								41155
							]
						}
					]
				},
				{
					"id": 41156,
					"name": "NotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification's data."
							}
						]
					},
					"children": [
						{
							"id": 41157,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41158,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41159,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sender of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41160,
							"name": "attachments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional attachments for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41150,
											"name": "Attachment",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 41161,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41162,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41163,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 41164,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41165,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41166,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41167,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41168,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41169,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the notification in the external system, if applicable"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41170,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41171,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the notification provider"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 41174,
								"name": "NotificationProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 41172,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date and time the notification was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 41173,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The status of the notification"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "pending"
									},
									{
										"type": "literal",
										"value": "success"
									},
									{
										"type": "literal",
										"value": "failure"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41157,
								41158,
								41159,
								41160,
								41161,
								41162,
								41163,
								41164,
								41165,
								41166,
								41167,
								41168,
								41169,
								41170,
								41171,
								41172,
								41173
							]
						}
					]
				},
				{
					"id": 41174,
					"name": "NotificationProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the notification provider"
							}
						]
					},
					"children": [
						{
							"id": 41175,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41176,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41177,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A user-friendly name of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41178,
							"name": "channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The supported channels by the notification provider."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41175,
								41176,
								41177,
								41178
							]
						}
					]
				},
				{
					"id": 41179,
					"name": "FilterableNotificationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved notifications."
							}
						]
					},
					"children": [
						{
							"id": 41189,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 41179,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 41179,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 41190,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 41179,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 41179,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 41180,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search through the notifications' attributes, such as trigger types and recipients, using this search term."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41181,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the recipient of the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41182,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41183,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the template name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41184,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the trigger type."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41185,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the resource that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41186,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "T* Filter based on the resource type that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41187,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the customer ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41188,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters a notification based on when it was sent and created in the database"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37887,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41189,
								41190,
								41180,
								41181,
								41182,
								41183,
								41184,
								41185,
								41186,
								41187,
								41188
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 41179,
									"name": "FilterableNotificationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 41191,
					"name": "NotificationContent",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The structure for content passed to the notification provider."
							}
						]
					},
					"children": [
						{
							"id": 41192,
							"name": "subject",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the subject of the notification"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41193,
							"name": "text",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the text content of the notification"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41194,
							"name": "html",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the html content of the notification"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41192,
								41193,
								41194
							]
						}
					]
				},
				{
					"id": 41199,
					"name": "CreateNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification to send and have created in the DB"
							}
						]
					},
					"children": [
						{
							"id": 41200,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41201,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41202,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41203,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 41204,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The content that gets passed over to the provider."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 41191,
										"name": "NotificationContent",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41205,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41206,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41207,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41208,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41209,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41210,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An idempotency key that ensures the same notification is not sent multiple times."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41200,
								41201,
								41202,
								41203,
								41204,
								41205,
								41206,
								41207,
								41208,
								41209,
								41210
							]
						}
					]
				},
				{
					"id": 41247,
					"name": "ProviderSendNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the notification to send."
							}
						]
					},
					"children": [
						{
							"id": 41248,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41249,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The sender of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41250,
							"name": "attachments",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Optional attachments for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41150,
											"name": "Attachment",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 41251,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41252,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41253,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 41254,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The content that gets passed to the provider."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 41191,
										"name": "NotificationContent",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41248,
								41249,
								41250,
								41251,
								41252,
								41253,
								41254
							]
						}
					]
				},
				{
					"id": 41255,
					"name": "ProviderSendNotificationResultsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of sending the notification"
							}
						]
					},
					"children": [
						{
							"id": 41256,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification in the external system, if provided in the response"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41256
							]
						}
					]
				},
				{
					"id": 41257,
					"name": "INotificationProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41258,
							"name": "send",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41259,
									"name": "send",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The result of sending the notification."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41260,
											"name": "notification",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "All information needed to send a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41247,
												"name": "ProviderSendNotificationDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41255,
												"name": "ProviderSendNotificationResultsDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								41258
							]
						}
					]
				},
				{
					"id": 41195,
					"name": "LocalNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 41196,
					"name": "SendgridNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41197,
							"name": "api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41198,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41197,
								41198
							]
						}
					]
				},
				{
					"id": 41211,
					"name": "INotificationModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Notification Module."
							}
						]
					},
					"children": [
						{
							"id": 41212,
							"name": "createNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41213,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send multiple notifications, and store the requests in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sent notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.createNotifications([\n  {\n    to: \"john@doe.me\",\n    template: \"order-confirmation\",\n    channel: \"email\",\n  },\n  {\n    to: \"+38975123456\",\n    template: \"order-confirmation\",\n    channel: \"sms\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41214,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notifications to be sent."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41199,
													"name": "CreateNotificationDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 41215,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41156,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 41216,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification, and store the request in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sent notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.createNotifications({\n  to: \"john@doe.me\",\n  template: \"order-confirmation\",\n  channel: \"email\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41217,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification to be sent."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41199,
												"name": "CreateNotificationDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41218,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41156,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41219,
							"name": "retrieveNotification",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41220,
									"name": "retrieveNotification",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a notification by its ID"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification =\n  await notificationModuleService.retrieveNotification(\"noti_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.retrieveNotification(\n  \"noti_123\",\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41221,
											"name": "notificationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the notification to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41222,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notification is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41156,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41223,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41156,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41224,
							"name": "listNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41225,
									"name": "listNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications({\n  id: [\"noti_123\", \"noti_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41226,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41179,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41227,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41156,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41228,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41156,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41229,
							"name": "listAndCountNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41230,
									"name": "listAndCountNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications along with the total count of available notifications satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications along with the total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications({\n    id: [\"noti_123\", \"noti_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41231,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41179,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41232,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41156,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41233,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 41156,
															"name": "NotificationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								41212,
								41219,
								41224,
								41229
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 40714,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						41150,
						41156,
						41174,
						41179,
						41191,
						41199,
						41247,
						41255,
						41257,
						41195,
						41196,
						41211
					]
				}
			]
		},
		{
			"id": 42045,
			"name": "OrderWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42046,
					"name": "customer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/customer/common.ts",
							"qualifiedName": "CustomerDTO"
						},
						"name": "CustomerDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42047,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/region/common.ts",
							"qualifiedName": "RegionDTO"
						},
						"name": "RegionDTO",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42046,
						42047
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
						"qualifiedName": "OrderDTO"
					},
					"name": "OrderDTO",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 42048,
			"name": "CreatePriceListPriceWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42049,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42050,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42051,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42052,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42053,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42054,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42049,
						42050,
						42051,
						42052,
						42053,
						42054
					]
				}
			]
		},
		{
			"id": 42055,
			"name": "UpdatePriceListPriceWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42056,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42057,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42058,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42059,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42060,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42061,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 42062,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42056,
						42057,
						42058,
						42059,
						42060,
						42061,
						42062
					]
				}
			]
		},
		{
			"id": 42063,
			"name": "CreatePriceListWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42064,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42065,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42066,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42067,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42068,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
							"qualifiedName": "PriceListStatus"
						},
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42069,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 42070,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42048,
							"name": "CreatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42064,
						42065,
						42066,
						42067,
						42068,
						42069,
						42070
					]
				}
			]
		},
		{
			"id": 42071,
			"name": "UpdatePriceListWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42072,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42073,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42074,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42075,
					"name": "starts_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42076,
					"name": "ends_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 42077,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
							"qualifiedName": "PriceListStatus"
						},
						"name": "PriceListStatus",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42078,
					"name": "rules",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42072,
						42073,
						42074,
						42075,
						42076,
						42077,
						42078
					]
				}
			]
		},
		{
			"id": 42079,
			"name": "UpdatePriceListPricesWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42080,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42081,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42055,
							"name": "UpdatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42080,
						42081
					]
				}
			]
		},
		{
			"id": 42082,
			"name": "BatchPriceListPricesWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42083,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42084,
					"name": "create",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42048,
							"name": "CreatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42085,
					"name": "update",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42055,
							"name": "UpdatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42086,
					"name": "delete",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42083,
						42084,
						42085,
						42086
					]
				}
			]
		},
		{
			"id": 42087,
			"name": "BatchPriceListPricesWorkflowResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42088,
					"name": "created",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
								"qualifiedName": "PriceDTO"
							},
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42089,
					"name": "updated",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/pricing/common/price.ts",
								"qualifiedName": "PriceDTO"
							},
							"name": "PriceDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42090,
					"name": "deleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42088,
						42089,
						42090
					]
				}
			]
		},
		{
			"id": 42091,
			"name": "CreatePriceListPricesWorkflowDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42092,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42093,
					"name": "prices",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42048,
							"name": "CreatePriceListPriceWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42092,
						42093
					]
				}
			]
		},
		{
			"id": 42094,
			"name": "UpdatePriceListPriceWorkflowStepDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42095,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42079,
							"name": "UpdatePriceListPricesWorkflowDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42096,
					"name": "variant_price_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42095,
						42096
					]
				}
			]
		},
		{
			"id": 42097,
			"name": "CreatePriceListsWorkflowStepDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42098,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 42063,
							"name": "CreatePriceListWorkflowInputDTO",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 42099,
					"name": "variant_price_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42098,
						42099
					]
				}
			]
		},
		{
			"id": 42100,
			"name": "CreatePriceListPricesWorkflowStepDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42101,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Pick"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": 42063,
											"name": "CreatePriceListWorkflowInputDTO",
											"package": "@medusajs/types"
										},
										{
											"type": "literal",
											"value": "prices"
										}
									],
									"name": "Pick",
									"package": "typescript"
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 42102,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 42103,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													42103
												]
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 42104,
					"name": "variant_price_map",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42101,
						42104
					]
				}
			]
		},
		{
			"id": 42105,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42106,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42107,
					"name": "includeAncestorsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42106,
						42107
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 37736,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 42108,
			"name": "AddPromotionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42109,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42110,
							"name": "rule_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
									"qualifiedName": "PromotionRuleTypes"
								},
								"name": "PromotionRuleTypes",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42111,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 42112,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 42113,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 42114,
											"name": "rules",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
														"qualifiedName": "CreatePromotionRuleDTO"
													},
													"name": "CreatePromotionRuleDTO",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												42113,
												42114
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42110,
								42111
							]
						}
					]
				}
			}
		},
		{
			"id": 42115,
			"name": "RemovePromotionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42116,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42117,
							"name": "rule_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
									"qualifiedName": "PromotionRuleTypes"
								},
								"name": "PromotionRuleTypes",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42118,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 42119,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 42120,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 42121,
											"name": "rule_ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												42120,
												42121
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42117,
								42118
							]
						}
					]
				}
			}
		},
		{
			"id": 42122,
			"name": "UpdatePromotionRulesWorkflowDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42123,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42124,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/promotion/common/promotion-rule.ts",
										"qualifiedName": "UpdatePromotionRuleDTO"
									},
									"name": "UpdatePromotionRuleDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42124
							]
						}
					]
				}
			}
		},
		{
			"id": 41261,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41262,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41263,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41264,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 41265,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41266,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41267,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 41268,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 41269,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41264,
										41265,
										41266
									]
								}
							]
						}
					}
				},
				{
					"id": 41270,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41271,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 41272,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41273,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41274,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41275,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41276,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41277,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41278,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41279,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41280,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41281,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41282,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 41283,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41284,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41285,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41286,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41287,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 41288,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41289,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41290,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41291,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41292,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41293,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41294,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41295,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41296,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41297,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41298,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41299,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 41300,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 41301,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41302,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41303,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41304,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41271
							]
						},
						{
							"title": "Methods",
							"children": [
								41272,
								41276,
								41279,
								41284,
								41289,
								41293,
								41296,
								41301
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						41270
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						41262
					]
				}
			]
		},
		{
			"id": 42125,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42126,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 42127,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 42128,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 42129,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 42130,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42126,
						42127
					]
				}
			]
		},
		{
			"id": 42132,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42133,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42134,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42135,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 38213,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38213,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 42136,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42137,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 42138,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 42125,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 38213,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 42139,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42140,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 42141,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42142,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 42143,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 42144,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 38217,
												"typeArguments": [
													{
														"type": "reference",
														"target": 42143,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 38217,
													"typeArguments": [
														{
															"type": "reference",
															"target": 42143,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 42145,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						42133,
						42136,
						42139,
						42141
					]
				}
			]
		},
		{
			"id": 42146,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 42147,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 42148,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 42158,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 42149,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 42158,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 42150,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42151,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 42152,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42153,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42154,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 42132,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42155,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42156,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42157,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42147,
						42148,
						42149,
						42150,
						42151,
						42152,
						42153,
						42154,
						42155,
						42156,
						42157
					]
				}
			],
			"typeParameters": [
				{
					"id": 42158,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 41305,
			"name": "StockLocationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41306,
					"name": "StockLocationAddressDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41307,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41308,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41309,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 1 of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41310,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 2 of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41311,
									"name": "company",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The company of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41312,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41313,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41314,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41315,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41316,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41317,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37761,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41318,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 41319,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 41320,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41308,
										41309,
										41310,
										41311,
										41312,
										41313,
										41314,
										41315,
										41316,
										41317,
										41318,
										41319,
										41320
									]
								}
							]
						}
					}
				},
				{
					"id": 41321,
					"name": "StockLocationDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41322,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41323,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41324,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41325,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41326,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41327,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the stock location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41306,
										"name": "StockLocationAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41328,
									"name": "fulfillment_sets",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fulfillment sets for the location"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment-set.ts",
												"qualifiedName": "FulfillmentSetDTO"
											},
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 41329,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 41330,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 41331,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41323,
										41324,
										41325,
										41326,
										41327,
										41328,
										41329,
										41330,
										41331
									]
								}
							]
						}
					}
				},
				{
					"id": 41332,
					"name": "StockLocationExpandedDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 41321,
								"name": "StockLocationDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 41333,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 41334,
											"name": "sales_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												41334
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 41335,
					"name": "FilterableStockLocationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved stock locations."
							}
						]
					},
					"children": [
						{
							"id": 41339,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 41335,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 41335,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 41340,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 41335,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 41335,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 41336,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search parameter for stock location names"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41337,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 41338,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41339,
								41340,
								41336,
								41337,
								41338
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 41335,
									"name": "FilterableStockLocationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 41341,
					"name": "StockLocationAddressInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address Input"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41342,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41343,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41344,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41345,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41346,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41347,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41348,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41349,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41350,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37761,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41343,
										41344,
										41345,
										41346,
										41347,
										41348,
										41349,
										41350
									]
								}
							]
						}
					}
				},
				{
					"id": 41351,
					"name": "CreateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to create a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41352,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41353,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41354,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41355,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 41341,
												"name": "StockLocationAddressInput",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 41356,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37761,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41353,
										41354,
										41355,
										41356
									]
								}
							]
						}
					}
				},
				{
					"id": 41357,
					"name": "UpdateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to update a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41358,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41359,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41360,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 41361,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 41341,
										"name": "StockLocationAddressInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41362,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 37761,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41359,
										41360,
										41361,
										41362
									]
								}
							]
						}
					}
				},
				{
					"id": 41363,
					"name": "UpsertStockLocationInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stock location to create or update. If the "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " property isn't provided,\nthe stock location is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"children": [
						{
							"id": 41364,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41365,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 41366,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 41341,
								"name": "StockLocationAddressInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 41367,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 37761,
								"name": "MetadataType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 41368,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location, if updating."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41364,
								41365,
								41366,
								41367,
								41368
							]
						}
					]
				},
				{
					"id": 41369,
					"name": "IStockLocationService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Stock Location Module."
							}
						]
					},
					"children": [
						{
							"id": 41370,
							"name": "listStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41371,
									"name": "listStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations({\n  id: [\"sloc_123\", \"sloc_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41372,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41335,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41373,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41321,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41374,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41321,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41375,
							"name": "listAndCountStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41376,
									"name": "listAndCountStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations along with the total count of available stock locations satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations({\n    id: [\"sloc_123\", \"sloc_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41377,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41335,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41378,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41321,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41379,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 41321,
															"name": "StockLocationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41380,
							"name": "retrieveStockLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41381,
									"name": "retrieveStockLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation =\n  await stockLocationModuleService.retrieveStockLocation(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41382,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41383,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41321,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41384,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41321,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41385,
							"name": "createStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41386,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a stock location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation = await stockLocationModuleService.createStockLocations(\n  {\n    name: \"Warehouse\",\n    address: {\n      address_1: \"1855 Powder Mill Rd\",\n      country_code: \"us\",\n    },\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41387,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41351,
												"name": "CreateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41388,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41321,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 41389,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.createStockLocations([\n    {\n      name: \"Warehouse\",\n      address: {\n        address_1: \"1855 Powder Mill Rd\",\n        country_code: \"us\",\n      },\n    },\n    {\n      name: \"Warehouse 2\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41390,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock locations to create."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41351,
													"name": "CreateStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 41391,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41321,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41392,
							"name": "upsertStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41393,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates stock location service nexts if they don't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service nexts."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41394,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of Make all properties in t optional"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41363,
													"name": "UpsertStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 41395,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41321,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 41396,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates a stock location service next if it doesn't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service next."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41397,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41363,
												"name": "UpsertStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41398,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41321,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41399,
							"name": "updateStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41400,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations([\n    {\n      id: \"sloc_123\",\n      name: \"Warehouse\",\n    },\n    {\n      id: \"sloc_321\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41401,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41402,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41357,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41403,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41321,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 41404,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations matching the specified filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations(\n    {\n      name: \"Warehouse\",\n    },\n    {\n      address_id: \"laddr_123\",\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41405,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters specifying which stock locations to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41335,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41406,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 41357,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41407,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41321,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41408,
							"name": "deleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41409,
									"name": "deleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the stock location is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.deleteStockLocations(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 41410,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 41411,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41412,
							"name": "softDeleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41413,
									"name": "softDeleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the stock location through this relation, such as the IDs of associated address.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.softDeleteStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 41414,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 41415,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 41416,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38063,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41414,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41417,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41418,
							"name": "restoreStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41419,
									"name": "restoreStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the stock location through this relation,\nsuch as the ID of associated address.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.restoreStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 41420,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 41421,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 41422,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the stock location. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the stock location's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`address`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 38066,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41420,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41423,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								41370,
								41375,
								41380,
								41385,
								41392,
								41399,
								41408,
								41412,
								41418
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 40714,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						41335,
						41363,
						41369
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						41306,
						41321,
						41332,
						41341,
						41351,
						41357
					]
				}
			]
		},
		{
			"id": 42182,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42183,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 42184,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 42190,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 42185,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 42186,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42187,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 42188,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 42189,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42183,
						42184,
						42185
					]
				},
				{
					"title": "Methods",
					"children": [
						42186,
						42188
					]
				}
			]
		},
		{
			"id": 42190,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42191,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42192,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42192
							]
						}
					],
					"indexSignatures": [
						{
							"id": 42193,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 42194,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 42195,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 42190,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 42182,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 42196,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 42182,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 42159,
			"name": "CartLikeWithTotals",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 42160,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 42161,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42162,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42163,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42164,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42165,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42166,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42167,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42168,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42169,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42170,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42171,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42172,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42173,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42174,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42175,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42176,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42177,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42178,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42179,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42180,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 42181,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 42196,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								42161,
								42162,
								42163,
								42164,
								42165,
								42166,
								42167,
								42168,
								42169,
								42170,
								42171,
								42172,
								42173,
								42174,
								42175,
								42176,
								42177,
								42178,
								42179,
								42180,
								42181
							]
						}
					]
				}
			}
		},
		{
			"id": 41437,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41438,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 38227,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						41438
					]
				}
			]
		},
		{
			"id": 41439,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41440,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 41441,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41442,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41443,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41444,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 41445,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41444,
														41445
													]
												}
											]
										}
									}
								},
								{
									"id": 41446,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41447,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41448,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 41449,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41448,
														41449
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41442,
										41446
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								41441
							]
						}
					]
				},
				{
					"id": 41450,
					"name": "InventoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 41451,
							"name": "CreateInventoryItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41452,
									"name": "sku",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41453,
									"name": "hs_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41454,
									"name": "weight",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41455,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41456,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41457,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41458,
									"name": "origin_country",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41459,
									"name": "mid_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41460,
									"name": "material",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41461,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41462,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41463,
									"name": "thumbnail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41464,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41452,
										41453,
										41454,
										41455,
										41456,
										41457,
										41458,
										41459,
										41460,
										41461,
										41462,
										41463,
										41464
									]
								}
							]
						},
						{
							"id": 41465,
							"name": "CreateInventoryItemsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41466,
									"name": "inventoryItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41451,
											"name": "CreateInventoryItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41466
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								41451,
								41465
							]
						}
					]
				},
				{
					"id": 41467,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 41472,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41473,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41474,
									"name": "auth_identity_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41475,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 41476,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 41477,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 41478,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 41479,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 41480,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 41481,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														41477,
														41478,
														41479,
														41480,
														41481
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41473,
										41474,
										41475
									]
								}
							]
						},
						{
							"id": 41468,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41469,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41469
									]
								}
							]
						},
						{
							"id": 41470,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41471,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41471
									]
								}
							]
						},
						{
							"id": 41482,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41483,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41483
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								41472,
								41468,
								41470,
								41482
							]
						}
					]
				},
				{
					"id": 41484,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 41485,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41486,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41487,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41488,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41489,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 41490,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 41491,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 41492,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 41493,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 41494,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 41495,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 41496,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															41492,
															41493,
															41494,
															41495,
															41496
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 41497,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 41498,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 41499,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															41499
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41486,
										41487,
										41488,
										41489,
										41490,
										41497
									]
								}
							]
						},
						{
							"id": 41500,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41501,
									"name": "attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41502,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41501,
										41502
									]
								}
							]
						},
						{
							"id": 41503,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41504,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41505,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41506,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 41507,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41508,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41509,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41504,
										41505,
										41506,
										41507,
										41508,
										41509
									]
								}
							]
						},
						{
							"id": 41510,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41511,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 41521,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41511
									]
								}
							]
						},
						{
							"id": 41512,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41513,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 41514,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41513,
										41514
									]
								}
							]
						},
						{
							"id": 41515,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41516,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 41517,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41516,
										41517
									]
								}
							]
						},
						{
							"id": 41518,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41519,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 41520,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41519,
										41520
									]
								}
							]
						},
						{
							"id": 41521,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41522,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41523,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41524,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41525,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41526,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 41527,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 41528,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41529,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 41530,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 43052,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 41531,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41522,
										41523,
										41524,
										41525,
										41526,
										41527,
										41528,
										41529,
										41530,
										41531
									]
								}
							]
						},
						{
							"id": 41532,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41533,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41533
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								41485,
								41500,
								41503,
								41510,
								41512,
								41515,
								41518,
								41521,
								41532
							]
						}
					]
				},
				{
					"id": 41534,
					"name": "ProductCategoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 41535,
							"name": "CreateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41536,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductCategoryDTO"
											},
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41536
									]
								}
							]
						},
						{
							"id": 41537,
							"name": "UpdateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41538,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "FilterableProductCategoryProps"
										},
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 41539,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "UpdateProductCategoryDTO"
										},
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41538,
										41539
									]
								}
							]
						},
						{
							"id": 41540,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41541,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.id"
									}
								},
								{
									"id": 41542,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.add"
									}
								},
								{
									"id": 41543,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.remove"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41541,
										41542,
										41543
									]
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 37673,
									"name": "LinkWorkflowInput",
									"package": "@medusajs/types"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								41535,
								41537,
								41540
							]
						}
					]
				},
				{
					"id": 41544,
					"name": "ReservationWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 41545,
							"name": "CreateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41546,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 40235,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41546
									]
								}
							]
						},
						{
							"id": 41547,
							"name": "CreateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 40155,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 41548,
							"name": "UpdateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 41549,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 40228,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41549
									]
								}
							]
						},
						{
							"id": 41550,
							"name": "UpdateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 40155,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								41545,
								41548
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								41547,
								41550
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						41440,
						41450,
						41467,
						41484,
						41534,
						41544
					]
				}
			]
		},
		{
			"id": 43052,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 43053,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43054,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43055,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 43056,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 43057,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 43058,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						43053,
						43054,
						43055,
						43056,
						43057,
						43058
					]
				}
			]
		},
		{
			"id": 41551,
			"name": "WorkflowsSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 41552,
					"name": "WorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41553,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41554,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41555,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41556,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41557,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41558,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 41559,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 41560,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 41561,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41553,
								41554,
								41555,
								41556,
								41557,
								41558,
								41559,
								41560,
								41561
							]
						}
					]
				},
				{
					"id": 41562,
					"name": "FilterableWorkflowExecutionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 41567,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 41562,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 41562,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37910,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 41568,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 41562,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 37909,
											"typeArguments": [
												{
													"type": "reference",
													"target": 41562,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 37911,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 41563,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41564,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41565,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 41566,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 37887,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41567,
								41568,
								41563,
								41564,
								41565,
								41566
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 37909,
							"typeArguments": [
								{
									"type": "reference",
									"target": 41562,
									"name": "FilterableWorkflowExecutionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 41569,
					"name": "UpsertWorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41570,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41571,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 41572,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 41573,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 41574,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41570,
								41571,
								41572,
								41573,
								41574
							]
						}
					]
				},
				{
					"id": 41575,
					"name": "Acknowledgement",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41576,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41577,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41578,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41579,
									"name": "parentStepIdempotencyKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41580,
									"name": "hasFinished",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 41581,
									"name": "hasFailed",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41577,
										41578,
										41579,
										41580,
										41581
									]
								}
							]
						}
					}
				},
				{
					"id": 41582,
					"name": "WorkflowOrchestratorRunDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41584,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 41590,
								"name": "T",
								"package": "@medusajs/types",
								"qualifiedName": "WorkflowOrchestratorRunDTO.T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.input"
							}
						},
						{
							"id": 41585,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 42146,
								"name": "Context",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.context"
							}
						},
						{
							"id": 41586,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.resultFrom"
							}
						},
						{
							"id": 41587,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.throwOnError"
							}
						},
						{
							"id": 41588,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.logOnError"
							}
						},
						{
							"id": 41589,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.events"
							}
						},
						{
							"id": 41583,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								41584,
								41585,
								41586,
								41587,
								41588,
								41589,
								41583
							]
						}
					],
					"typeParameters": [
						{
							"id": 41590,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 43059,
							"typeArguments": [
								{
									"type": "reference",
									"target": 41590,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "WorkflowOrchestratorRunDTO.T",
									"refersToTypeParameter": true
								}
							],
							"name": "FlowRunOptions",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 41591,
					"name": "IdempotencyKeyParts",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 41592,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 41593,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41594,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41595,
									"name": "stepId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 41596,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										41593,
										41594,
										41595,
										41596
									]
								}
							]
						}
					}
				},
				{
					"id": 41597,
					"name": "IWorkflowEngineService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 41598,
							"name": "retrieveWorkflowExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41599,
									"name": "retrieveWorkflowExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41600,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 41601,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 41602,
																	"name": "workflow_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 41603,
																	"name": "transaction_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		41602,
																		41603
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 41604,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41552,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41605,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 41552,
												"name": "WorkflowExecutionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41606,
							"name": "listWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41607,
									"name": "listWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41608,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41562,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41609,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41552,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41610,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 41552,
													"name": "WorkflowExecutionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41611,
							"name": "listAndCountWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41612,
									"name": "listAndCountWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41613,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41562,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41614,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 37718,
												"typeArguments": [
													{
														"type": "reference",
														"target": 41552,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41615,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 41552,
															"name": "WorkflowExecutionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41616,
							"name": "run",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41617,
									"name": "run",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41618,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41619,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 41582,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowOrchestratorRunDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 41620,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 41621,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41622,
															"name": "errors",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Error"
																	},
																	"name": "Error",
																	"package": "typescript"
																}
															}
														},
														{
															"id": 41623,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 41624,
															"name": "result",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 41625,
															"name": "acknowledgement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 41575,
																"name": "Acknowledgement",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41622,
																41623,
																41624,
																41625
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41626,
							"name": "getRunningTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41627,
									"name": "getRunningTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41628,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41629,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 41630,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 41631,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41632,
							"name": "setStepSuccess",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41633,
									"name": "setStepSuccess",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41634,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 41635,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41636,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 41591,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 41637,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 41638,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41636,
																41637,
																41638
															]
														}
													]
												}
											}
										},
										{
											"id": 41639,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 41640,
							"name": "setStepFailure",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41641,
									"name": "setStepFailure",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41642,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 41643,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41644,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 41591,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 41645,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 41646,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41644,
																41645,
																41646
															]
														}
													]
												}
											}
										},
										{
											"id": 41647,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 41648,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41649,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41650,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 41651,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41652,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 41653,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 41654,
															"name": "subscriber",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Function"
																},
																"name": "Function",
																"package": "typescript"
															}
														},
														{
															"id": 41655,
															"name": "subscriberId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41652,
																41653,
																41654,
																41655
															]
														}
													]
												}
											}
										},
										{
											"id": 41656,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 41657,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 41658,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 41659,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 41660,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 41661,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 41662,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 41663,
															"name": "subscriberOrId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Function"
																		},
																		"name": "Function",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																41661,
																41662,
																41663
															]
														}
													]
												}
											}
										},
										{
											"id": 41664,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 42146,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								41598,
								41606,
								41611,
								41616,
								41626,
								41632,
								41640,
								41648,
								41657
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 40714,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						41552,
						41562,
						41569,
						41582,
						41597
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						41575,
						41591
					]
				}
			]
		},
		{
			"id": 43059,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 43067,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43060,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 43061,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 43067,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 43062,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 42146,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 43063,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 43064,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 43065,
							"name": "logOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 43066,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								43061,
								43062,
								43063,
								43064,
								43065,
								43066
							]
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 41582,
					"name": "WorkflowOrchestratorRunDTO"
				}
			]
		},
		{
			"id": 42203,
			"name": "CreateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "CreateProductVariantDTO"
						},
						"name": "ProductTypes.CreateProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "CreateProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 42204,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 42205,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										42205
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 42206,
			"name": "UpdateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductVariantDTO"
						},
						"name": "ProductTypes.UpsertProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 42207,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 42208,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										42208
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 42209,
			"name": "CreateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
									"qualifiedName": "CreateProductDTO"
								},
								"name": "ProductTypes.CreateProductDTO",
								"package": "@medusajs/types",
								"qualifiedName": "CreateProductDTO"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 42210,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 42211,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 42212,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 42213,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															42213
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 42214,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 42203,
											"name": "CreateProductVariantWorkflowInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										42211,
										42214
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 42215,
			"name": "UpdateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductDTO"
						},
						"name": "ProductTypes.UpsertProductDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 42216,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 42217,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 42218,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 42219,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															42219
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										42217
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 42197,
			"name": "CreateLocationFulfillmentSetWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 42198,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 42199,
					"name": "fulfillment_set_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 42200,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 42201,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 42202,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										42201,
										42202
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						42198,
						42199
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				37653,
				37654,
				37668,
				37880,
				38071,
				38191,
				38264,
				38283,
				38374,
				39989,
				40106,
				40458,
				40516,
				41149,
				41261,
				41305,
				41437,
				41439,
				41551
			]
		},
		{
			"title": "Enumerations",
			"children": [
				42317,
				42418
			]
		},
		{
			"title": "Interfaces",
			"children": [
				37650,
				41678,
				41702,
				41706,
				41718,
				41731,
				41734,
				41745,
				41748,
				41754,
				41764,
				41766,
				41768,
				42229,
				42252,
				41800,
				41803,
				41808,
				41811,
				41813,
				42309,
				42322,
				42327,
				42333,
				42298,
				42277,
				42337,
				42349,
				42371,
				42358,
				42373,
				42410,
				42423,
				42428,
				42434,
				42401,
				42380,
				42438,
				42447,
				43225,
				43093,
				43097,
				43102,
				43108,
				43229,
				43115,
				43120,
				43126,
				43133,
				42452,
				42468,
				42488,
				42492,
				42499,
				42509,
				42541,
				42555,
				42516,
				42526,
				42568,
				42577,
				42580,
				42582,
				41836,
				41840,
				41854,
				41857,
				41860,
				41878,
				41881,
				41892,
				41969,
				41901,
				41975,
				42008,
				42645,
				42045,
				42048,
				42055,
				42063,
				42071,
				42079,
				42082,
				42087,
				42091,
				42094,
				42097,
				42100,
				42105,
				42125,
				42132,
				42146,
				42182,
				43052,
				42197
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				37635,
				42220,
				43220,
				43219,
				43071,
				43076,
				43078,
				43083,
				43073,
				43080,
				43085,
				42227,
				43068,
				42225,
				42222,
				42248,
				42249,
				42243,
				42237,
				42239,
				43087,
				43244,
				43234,
				43223,
				43091,
				42236,
				42241,
				41817,
				41820,
				41823,
				42441,
				42450,
				42451,
				42549,
				43141,
				43143,
				42598,
				42591,
				42604,
				43165,
				42609,
				42623,
				43178,
				42612,
				42610,
				42608,
				42614,
				42624,
				41826,
				41888,
				41949,
				41955,
				43214,
				43184,
				42877,
				42867,
				42860,
				42886,
				42892,
				42903,
				42911,
				42919,
				42927,
				42935,
				42943,
				42951,
				42959,
				42967,
				42975,
				42985,
				42995,
				43004,
				43013,
				43021,
				43030,
				42644,
				43181,
				43180,
				43182,
				42633,
				43216,
				43051,
				43217,
				43040,
				43038,
				43042,
				42108,
				42115,
				42122,
				42190,
				42195,
				42196,
				42159,
				43059,
				42203,
				42206,
				42209,
				42215
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"37634": {
			"sourceFileName": "../../../../packages/core/types/src/index.ts",
			"qualifiedName": ""
		},
		"37635": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"37636": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"37637": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"37638": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"37639": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"37640": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"37641": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"37642": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"37643": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"37644": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"37645": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"37646": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"37647": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"37648": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"37649": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"37650": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps"
		},
		"37651": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.data"
		},
		"37652": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.TData"
		},
		"37653": {
			"sourceFileName": "../../../../packages/core/types/src/admin/index.ts",
			"qualifiedName": ""
		},
		"37654": {
			"sourceFileName": "../../../../packages/core/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"37655": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"37656": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"37657": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"37658": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"37659": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"37660": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"37661": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"37662": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"37663": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"37664": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"37665": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"37666": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"37667": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"37668": {
			"sourceFileName": "../../../../packages/core/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"37669": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkMethodRequest"
		},
		"37670": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"37671": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"37672": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"37673": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkWorkflowInput"
		},
		"37674": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"37675": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"37676": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"37677": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"37678": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodRequest"
		},
		"37679": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"37680": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.create"
		},
		"37681": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.update"
		},
		"37682": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.delete"
		},
		"37683": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"37684": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"37685": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"37686": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodResponse"
		},
		"37687": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"37688": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.created"
		},
		"37689": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.updated"
		},
		"37690": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"37691": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"37692": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowInput"
		},
		"37693": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"37694": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"37695": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"37696": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowOutput"
		},
		"37697": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"37698": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCase"
		},
		"37699": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"37700": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "Prettify"
		},
		"37701": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"37702": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"37703": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"37704": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"37705": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"37709": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"37710": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"37711": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"37712": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"37713": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"37714": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"37715": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"37716": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"37717": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"37718": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"37719": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"37720": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"37721": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"37722": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"37723": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"37724": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"37725": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"37726": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"37727": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"37728": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"37730": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"37731": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"37732": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"37733": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"37734": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"37735": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"37736": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"37737": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"37738": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"37739": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"37740": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"37741": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"37742": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"37743": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"37744": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"37745": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"37746": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"37747": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"37748": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"37749": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"37750": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"37751": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"37752": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"37753": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"37754": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"37757": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"37758": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"37759": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"37760": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"37761": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"37762": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RawRounding"
		},
		"37763": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"37764": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.value"
		},
		"37765": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.precision"
		},
		"37773": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "TransformObjectMethodToAsync"
		},
		"37774": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"37775": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"37776": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "args"
		},
		"37777": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"37778": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"37779": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "args"
		},
		"37780": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"37781": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions"
		},
		"37782": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions.disable"
		},
		"37783": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions.path"
		},
		"37784": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions.backendUrl"
		},
		"37785": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions.storefrontUrl"
		},
		"37786": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions.vite"
		},
		"37787": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37788": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37789": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "config"
		},
		"37790": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"37791": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"37792": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"37793": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"37794": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"37795": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"37796": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseName"
		},
		"37797": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseUrl"
		},
		"37798": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseSchema"
		},
		"37799": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseLogging"
		},
		"37800": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseDriverOptions"
		},
		"37801": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37802": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"37803": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37804": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"37805": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37806": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"37807": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisUrl"
		},
		"37808": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisPrefix"
		},
		"37809": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisOptions"
		},
		"37810": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.sessionOptions"
		},
		"37812": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.workerMode"
		},
		"37813": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.http"
		},
		"37814": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37815": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtSecret"
		},
		"37816": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtExpiresIn"
		},
		"37817": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookieSecret"
		},
		"37818": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authCors"
		},
		"37819": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.compression"
		},
		"37820": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.storeCors"
		},
		"37821": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.adminCors"
		},
		"37822": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authMethodsPerActor"
		},
		"37823": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.restrictedFields"
		},
		"37824": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37825": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.store"
		},
		"37826": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"37827": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"37828": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin"
		},
		"37833": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"37834": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"37835": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "PluginDetails"
		},
		"37836": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"37837": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"37838": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"37839": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.id"
		},
		"37840": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"37841": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.version"
		},
		"37842": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "ExecArgs"
		},
		"37843": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type"
		},
		"37844": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.container"
		},
		"37845": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.args"
		},
		"37846": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"37847": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"37848": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"37849": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37850": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37851": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"37852": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"37853": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"37854": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37855": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"37856": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"37857": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"37867": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"37868": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"37869": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"37870": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37871": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"37872": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"37873": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"37874": {
			"sourceFileName": "../../../../packages/core/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"37875": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice"
		},
		"37876": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice.calculated_price"
		},
		"37877": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type"
		},
		"37878": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.calculated_amount"
		},
		"37879": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.is_calculated_price_tax_inclusive"
		},
		"37880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"37881": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"37882": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37883": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"37885": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"37886": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"37887": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"37888": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37889": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"37890": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"37891": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"37892": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"37893": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"37894": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"37895": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"37896": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"37897": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"37898": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"37899": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"37900": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"37901": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"37902": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"37903": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"37904": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"37905": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"37906": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"37907": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"37908": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"37909": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"37910": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"37911": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"37912": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"37913": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"37914": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"37915": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"37916": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"37917": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"37918": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"37919": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"37920": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"37921": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.strategy"
		},
		"37922": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"37923": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"37924": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"37925": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"37926": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"37927": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37928": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"37930": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37931": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"37933": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"37934": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"37935": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"37936": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"37937": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"37938": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "PerformedActions"
		},
		"37939": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"37940": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.created"
		},
		"37941": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.updated"
		},
		"37942": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.deleted"
		},
		"37943": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"37944": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"37945": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"37946": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"37947": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37948": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"37949": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"37950": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"37951": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37952": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"37953": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"37954": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"37955": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37956": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"37957": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"37958": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"37959": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"37960": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"37961": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"37962": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37963": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"37964": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"37965": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"37966": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37967": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"37969": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37970": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"37972": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37973": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"37974": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"37975": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"37976": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37977": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37978": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37979": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"37980": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"37981": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"37982": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"37983": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37984": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"37985": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"37986": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"37987": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37988": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"37989": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"37990": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"37991": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"37992": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"37993": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"37994": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entities"
		},
		"37995": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"37996": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"37997": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"37998": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"37999": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"38000": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38001": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38002": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"38003": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38004": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38005": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"38006": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"38007": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"38008": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"38009": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"38010": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38011": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"38012": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"38013": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38014": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"38015": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"38016": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"38017": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"38018": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"38019": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"38020": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"38021": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"38022": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"38023": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"38024": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"38025": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38026": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"38027": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"38028": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"38029": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"38030": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38031": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"38032": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"38033": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"38034": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38035": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"38036": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"38037": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"38038": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38039": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"38040": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"38041": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38042": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"38043": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38044": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38045": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"38046": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"38047": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"38048": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"38049": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"38050": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"38051": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"38052": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"38053": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38054": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"38055": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"38056": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"38057": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"38058": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"38059": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"38060": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"38061": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"38062": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"38063": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"38064": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"38065": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"38066": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"38067": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"38068": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"38069": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "ModelDateColumns"
		},
		"38070": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableModelDateColumns"
		},
		"38071": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": ""
		},
		"38072": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "DMLSchema"
		},
		"38073": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntityConfig"
		},
		"38074": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38075": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38076": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"38077": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferDmlEntityNameFromConfig"
		},
		"38078": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38079": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38080": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38081": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"38082": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TConfig"
		},
		"38083": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity"
		},
		"38084": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.name"
		},
		"38085": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.schema"
		},
		"38086": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Schema"
		},
		"38087": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Config"
		},
		"38088": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "KnownDataTypes"
		},
		"38089": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipTypes"
		},
		"38090": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyMetadata"
		},
		"38091": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38092": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.fieldName"
		},
		"38093": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"38094": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"38095": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.dataType"
		},
		"38096": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38097": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38098": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"38099": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.indexes"
		},
		"38100": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38101": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38102": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38103": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"38104": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"38105": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyType"
		},
		"38106": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38107": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"38108": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"38109": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"38110": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "fieldName"
		},
		"38111": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38112": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipOptions"
		},
		"38113": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38114": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"38115": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipMetadata"
		},
		"38116": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38117": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38118": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38119": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.entity"
		},
		"38120": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"38121": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"38122": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"38123": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipType"
		},
		"38124": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38125": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"38126": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38127": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"38128": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"38129": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "relationshipName"
		},
		"38130": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38131": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"38132": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor.Props"
		},
		"38133": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"38134": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"38135": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferForeignKeys"
		},
		"38136": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38137": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38138": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38139": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38140": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"38141": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferBelongsToFields"
		},
		"38142": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38143": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38144": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38145": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38146": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38147": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasOneFields"
		},
		"38148": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38149": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasManyFields"
		},
		"38150": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38151": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38152": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38153": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferManyToManyFields"
		},
		"38154": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"38155": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferSchemaFields"
		},
		"38156": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"38157": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Infer"
		},
		"38158": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38159": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "ExtractEntityRelations"
		},
		"38160": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38161": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38162": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"38163": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "OfType"
		},
		"38164": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityCascades"
		},
		"38165": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38166": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.delete"
		},
		"38167": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relationships"
		},
		"38168": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferTypeOf"
		},
		"38169": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38170": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferEntityType"
		},
		"38171": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38172": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferIndexableProperties"
		},
		"38173": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38174": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"38175": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38176": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityIndex"
		},
		"38177": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38178": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"38179": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.unique"
		},
		"38180": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.on"
		},
		"38181": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.where"
		},
		"38182": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TSchema"
		},
		"38183": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TWhere"
		},
		"38184": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "SimpleQueryValue"
		},
		"38185": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "NeQueryValue"
		},
		"38186": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"38187": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$ne"
		},
		"38188": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryValue"
		},
		"38189": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryCondition"
		},
		"38190": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"38191": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"38192": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"38193": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38194": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38195": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"38196": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"38197": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"38198": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38199": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"38200": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"38201": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38202": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"38203": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"38204": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"38205": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38206": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"38207": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"38208": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38209": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"38210": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"38211": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"38212": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"38213": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"38214": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38215": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"38216": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"38217": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"38218": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"38219": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"38220": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"38221": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"38222": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"38223": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"38224": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"38225": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"38226": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"38227": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"38228": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"38229": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"38230": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"38231": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"38232": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"38233": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"38234": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"38235": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"38236": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"38237": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"38238": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"38239": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"38240": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"38241": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"38242": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"38243": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"38244": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"38245": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"38246": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"38247": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"38248": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"38249": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"38250": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"38251": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"38252": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"38253": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"38254": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"38255": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"38256": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"38257": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"38258": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"38259": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"38260": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"38261": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"38262": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"38263": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"38264": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"38265": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"38266": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"38267": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"38268": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"38269": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"38270": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"38271": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"38272": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"38273": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"38274": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"38275": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"38276": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"38277": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"38278": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"38279": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"38280": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"38281": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"38282": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"38283": {
			"sourceFileName": "../../../../packages/core/types/src/file/index.ts",
			"qualifiedName": ""
		},
		"38284": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO"
		},
		"38285": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.id"
		},
		"38286": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.url"
		},
		"38287": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps"
		},
		"38288": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps.id"
		},
		"38289": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO"
		},
		"38290": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.filename"
		},
		"38291": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.mimeType"
		},
		"38292": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.content"
		},
		"38293": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.access"
		},
		"38294": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService"
		},
		"38295": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"38296": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"38297": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"38298": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38299": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"38300": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"38301": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38302": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"38303": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"38304": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "ids"
		},
		"38305": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38306": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"38307": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"38308": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38309": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"38310": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"38311": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"38312": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"38313": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38314": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"38315": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"38316": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"38317": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"38318": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38319": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"38320": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"38321": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"38322": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"38323": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"38337": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderFileResultDTO"
		},
		"38338": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.url"
		},
		"38339": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.key"
		},
		"38340": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderGetFileDTO"
		},
		"38341": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"38342": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderDeleteFileDTO"
		},
		"38343": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"38344": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderUploadFileDTO"
		},
		"38345": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.filename"
		},
		"38346": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.mimeType"
		},
		"38347": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.content"
		},
		"38348": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.access"
		},
		"38349": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider"
		},
		"38350": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"38351": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"38352": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "file"
		},
		"38353": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"38354": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"38355": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"38356": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"38357": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"38358": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"38359": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions"
		},
		"38360": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.file_url"
		},
		"38361": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.access_key_id"
		},
		"38362": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.secret_access_key"
		},
		"38363": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.region"
		},
		"38364": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.bucket"
		},
		"38365": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.prefix"
		},
		"38366": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.endpoint"
		},
		"38367": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.cache_control"
		},
		"38368": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.download_file_duration"
		},
		"38369": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.additional_client_config"
		},
		"38370": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions"
		},
		"38371": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.upload_dir"
		},
		"38372": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.private_upload_dir"
		},
		"38373": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.backend_url"
		},
		"38374": {
			"sourceFileName": "../../../../packages/core/types/src/http/index.ts",
			"qualifiedName": ""
		},
		"38375": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress"
		},
		"38376": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.id"
		},
		"38377": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.customer_id"
		},
		"38378": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.first_name"
		},
		"38379": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.last_name"
		},
		"38380": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.phone"
		},
		"38381": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.company"
		},
		"38382": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.address_1"
		},
		"38383": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.address_2"
		},
		"38384": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.city"
		},
		"38385": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.country_code"
		},
		"38386": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.province"
		},
		"38387": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.postal_code"
		},
		"38388": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.metadata"
		},
		"38389": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.created_at"
		},
		"38390": {
			"sourceFileName": "../../../../packages/core/types/src/http/address/entities.ts",
			"qualifiedName": "BaseAddress.updated_at"
		},
		"38391": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign"
		},
		"38392": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.name"
		},
		"38393": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.description"
		},
		"38394": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.currency"
		},
		"38395": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.campaign_identifier"
		},
		"38396": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.starts_at"
		},
		"38397": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.ends_at"
		},
		"38398": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.budget"
		},
		"38399": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38400": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"38401": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"38402": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"38403": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign"
		},
		"38404": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.name"
		},
		"38405": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.description"
		},
		"38406": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.currency"
		},
		"38407": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.campaign_identifier"
		},
		"38408": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.starts_at"
		},
		"38409": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.ends_at"
		},
		"38410": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.budget"
		},
		"38411": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38412": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"38413": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"38414": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"38415": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams"
		},
		"38416": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.q"
		},
		"38417": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.campaign_identifier"
		},
		"38418": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.budget"
		},
		"38419": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "__type"
		},
		"38420": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "__type.currency_code"
		},
		"38421": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.$and"
		},
		"38422": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignsParams.$or"
		},
		"38423": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38424": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38425": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38426": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38427": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/queries.ts",
			"qualifiedName": "AdminGetCampaignParams"
		},
		"38428": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38429": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign"
		},
		"38430": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.id"
		},
		"38431": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.name"
		},
		"38432": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.description"
		},
		"38433": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.currency"
		},
		"38434": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.campaign_identifier"
		},
		"38435": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.starts_at"
		},
		"38436": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.ends_at"
		},
		"38437": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.budget"
		},
		"38438": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38439": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.id"
		},
		"38440": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.type"
		},
		"38441": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.currency_code"
		},
		"38442": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.limit"
		},
		"38443": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.used"
		},
		"38444": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.created_at"
		},
		"38445": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.updated_at"
		},
		"38446": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaign.deleted_at"
		},
		"38447": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignListResponse"
		},
		"38448": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38449": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.campaigns"
		},
		"38450": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse"
		},
		"38451": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse.campaign"
		},
		"38452": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignDeleteResponse"
		},
		"38453": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim"
		},
		"38454": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim.order"
		},
		"38455": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim.return"
		},
		"38456": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim.shipping_methods"
		},
		"38457": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.id"
		},
		"38458": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.type"
		},
		"38459": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"38460": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"38461": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.display_id"
		},
		"38462": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_version"
		},
		"38463": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"38464": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.created_by"
		},
		"38465": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.created_at"
		},
		"38466": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.updated_at"
		},
		"38467": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.canceled_at"
		},
		"38468": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.deleted_at"
		},
		"38469": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"38470": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"38471": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"38472": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.transactions"
		},
		"38473": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.metadata"
		},
		"38474": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim"
		},
		"38475": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.type"
		},
		"38476": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.order_id"
		},
		"38477": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.description"
		},
		"38478": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.internal_note"
		},
		"38479": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.metadata"
		},
		"38480": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimItems"
		},
		"38481": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"38482": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38483": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38484": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38485": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38486": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38487": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38488": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimItem"
		},
		"38489": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"38490": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"38491": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"38492": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"38493": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimInboundItems"
		},
		"38494": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"38495": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38496": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38497": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38498": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38499": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38500": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38501": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimInboundItem"
		},
		"38502": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"38503": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"38504": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"38505": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"38506": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimOutboundItems"
		},
		"38507": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"38508": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38509": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38510": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38511": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38512": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38513": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38514": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimOutboundItem"
		},
		"38515": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"38516": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"38517": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"38518": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"38519": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddInboundShipping"
		},
		"38520": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"38521": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_amount"
		},
		"38522": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"38523": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"38524": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"38525": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateInboundShipping"
		},
		"38526": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_amount"
		},
		"38527": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"38528": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"38529": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddOutboundShipping"
		},
		"38530": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"38531": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_amount"
		},
		"38532": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"38533": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"38534": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"38535": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateOutboundShipping"
		},
		"38536": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_amount"
		},
		"38537": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"38538": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"38539": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminRequestClaim"
		},
		"38540": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim"
		},
		"38541": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim.no_notification"
		},
		"38542": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams"
		},
		"38543": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"38544": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"38545": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"38546": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"38547": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"38548": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"38549": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.deleted_at"
		},
		"38550": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38551": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38552": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38553": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38554": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"38555": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"38556": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams"
		},
		"38557": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.id"
		},
		"38558": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.status"
		},
		"38559": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.created_at"
		},
		"38560": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.updated_at"
		},
		"38561": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.deleted_at"
		},
		"38562": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38563": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse"
		},
		"38564": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse.claim"
		},
		"38565": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimListResponse"
		},
		"38566": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38567": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"38568": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"38569": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"38570": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"38571": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"38572": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse"
		},
		"38573": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse.order"
		},
		"38574": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse.claim"
		},
		"38575": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse"
		},
		"38576": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.order_preview"
		},
		"38577": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.claim"
		},
		"38578": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse"
		},
		"38579": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse.order_preview"
		},
		"38580": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse.return"
		},
		"38581": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimRequestResponse"
		},
		"38582": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimRequestResponse.return"
		},
		"38583": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.order_preview"
		},
		"38584": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.claim"
		},
		"38585": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimDeleteResponse"
		},
		"38586": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"38587": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38588": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38589": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/entities.ts",
			"qualifiedName": "AdminCollection"
		},
		"38590": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"38591": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"38592": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"38593": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"38594": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"38595": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"38596": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"38597": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"38598": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection"
		},
		"38599": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.title"
		},
		"38600": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.handle"
		},
		"38601": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.metadata"
		},
		"38602": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection"
		},
		"38603": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.title"
		},
		"38604": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.handle"
		},
		"38605": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.metadata"
		},
		"38606": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts"
		},
		"38607": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.add"
		},
		"38608": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.remove"
		},
		"38609": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams"
		},
		"38610": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams.deleted_at"
		},
		"38611": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"38612": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"38613": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"38614": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"38615": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"38616": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"38617": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38618": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38619": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38620": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38621": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"38622": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"38623": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionParams"
		},
		"38624": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38625": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse"
		},
		"38626": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse.collection"
		},
		"38627": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionListResponse"
		},
		"38628": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38629": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"38630": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"38631": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"38632": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"38633": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"38634": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionDeleteResponse"
		},
		"38635": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"38636": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38637": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38638": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams"
		},
		"38639": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38640": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams"
		},
		"38641": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38642": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38643": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38644": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38645": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink"
		},
		"38646": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.add"
		},
		"38647": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.remove"
		},
		"38648": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponse"
		},
		"38649": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"38650": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"38651": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38652": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38653": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"38654": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponseWithParent"
		},
		"38655": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"38656": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"38657": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"38658": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TParent"
		},
		"38659": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"38660": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"38661": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"38662": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"38663": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"38664": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"38665": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"38666": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "BatchResponse"
		},
		"38667": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"38668": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.created"
		},
		"38669": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.updated"
		},
		"38670": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38671": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"38672": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.ids"
		},
		"38673": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38674": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38675": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"38676": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "AdditionalData"
		},
		"38677": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type"
		},
		"38678": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type.additional_data"
		},
		"38679": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/entities.ts",
			"qualifiedName": "AdminCustomerGroup"
		},
		"38680": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/entities.ts",
			"qualifiedName": "AdminCustomerGroup.customers"
		},
		"38681": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.id"
		},
		"38682": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.name"
		},
		"38683": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.metadata"
		},
		"38684": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.created_at"
		},
		"38685": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.updated_at"
		},
		"38686": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminCreateCustomerGroup"
		},
		"38687": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminCreateCustomerGroup.name"
		},
		"38688": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminCreateCustomerGroup.metadata"
		},
		"38689": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCustomerGroup"
		},
		"38690": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCustomerGroup.name"
		},
		"38691": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCustomerGroup.metadata"
		},
		"38692": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters"
		},
		"38693": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.id"
		},
		"38694": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.email"
		},
		"38695": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.default_billing_address_id"
		},
		"38696": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.default_shipping_address_id"
		},
		"38697": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.company_name"
		},
		"38698": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.first_name"
		},
		"38699": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.last_name"
		},
		"38700": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.created_by"
		},
		"38701": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.created_at"
		},
		"38702": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.updated_at"
		},
		"38703": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminCustomerInGroupFilters.deleted_at"
		},
		"38704": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams"
		},
		"38705": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.q"
		},
		"38706": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.id"
		},
		"38707": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.name"
		},
		"38708": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.customers"
		},
		"38709": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.created_by"
		},
		"38710": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.created_at"
		},
		"38711": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.updated_at"
		},
		"38712": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupsParams.deleted_at"
		},
		"38713": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38714": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38715": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38716": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38717": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"38718": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"38719": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/queries.ts",
			"qualifiedName": "AdminGetCustomerGroupParams"
		},
		"38720": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38721": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "AdminCustomerGroupResponse"
		},
		"38722": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "AdminCustomerGroupResponse.customer_group"
		},
		"38723": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "AdminCustomerGroupListResponse"
		},
		"38724": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38725": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/admin/responses.ts",
			"qualifiedName": "__type.customer_groups"
		},
		"38726": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/entities.ts",
			"qualifiedName": "AdminExchange"
		},
		"38727": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.id"
		},
		"38728": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_id"
		},
		"38729": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_id"
		},
		"38730": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.display_id"
		},
		"38731": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_version"
		},
		"38732": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.created_by"
		},
		"38733": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.created_at"
		},
		"38734": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.updated_at"
		},
		"38735": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.canceled_at"
		},
		"38736": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.deleted_at"
		},
		"38737": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.additional_items"
		},
		"38738": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_items"
		},
		"38739": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.no_notification"
		},
		"38740": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.difference_due"
		},
		"38741": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return"
		},
		"38742": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order"
		},
		"38743": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.allow_backorder"
		},
		"38744": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.shipping_methods"
		},
		"38745": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.transactions"
		},
		"38746": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.metadata"
		},
		"38747": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange"
		},
		"38748": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.order_id"
		},
		"38749": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.description"
		},
		"38750": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.internal_note"
		},
		"38751": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCreateExchange.metadata"
		},
		"38752": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminAddExchangeInboundItems"
		},
		"38753": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"38754": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38755": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38756": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38757": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38758": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38759": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38760": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminUpdateExchangeInboundItem"
		},
		"38761": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"38762": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"38763": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"38764": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"38765": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminAddExchangeOutboundItems"
		},
		"38766": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"38767": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"38768": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"38769": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"38770": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"38771": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"38772": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"38773": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminUpdateExchangeOutboundItem"
		},
		"38774": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"38775": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"38776": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"38777": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"38778": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddInboundShipping"
		},
		"38779": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.shipping_option_id"
		},
		"38780": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.custom_amount"
		},
		"38781": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.description"
		},
		"38782": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.internal_note"
		},
		"38783": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.metadata"
		},
		"38784": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateInboundShipping"
		},
		"38785": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.custom_amount"
		},
		"38786": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.internal_note"
		},
		"38787": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.metadata"
		},
		"38788": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddOutboundShipping"
		},
		"38789": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.shipping_option_id"
		},
		"38790": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.custom_amount"
		},
		"38791": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.description"
		},
		"38792": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.internal_note"
		},
		"38793": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.metadata"
		},
		"38794": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateOutboundShipping"
		},
		"38795": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.custom_amount"
		},
		"38796": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.internal_note"
		},
		"38797": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.metadata"
		},
		"38798": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminRequestExchange"
		},
		"38799": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminRequestExchange.no_notification"
		},
		"38800": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCancelExchange"
		},
		"38801": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminCancelExchange.no_notification"
		},
		"38802": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams"
		},
		"38803": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.id"
		},
		"38804": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.order_id"
		},
		"38805": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.status"
		},
		"38806": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.created_at"
		},
		"38807": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.updated_at"
		},
		"38808": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/queries.ts",
			"qualifiedName": "AdminExchangeListParams.deleted_at"
		},
		"38809": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38810": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeResponse"
		},
		"38811": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeResponse.exchange"
		},
		"38812": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeListResponse"
		},
		"38813": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38814": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "__type.exchanges"
		},
		"38815": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse"
		},
		"38816": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse.order"
		},
		"38817": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse.exchange"
		},
		"38818": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse"
		},
		"38819": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.order_preview"
		},
		"38820": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.exchange"
		},
		"38821": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeRequestResponse"
		},
		"38822": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeRequestResponse.return"
		},
		"38823": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.order_preview"
		},
		"38824": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.exchange"
		},
		"38825": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse"
		},
		"38826": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse.order_preview"
		},
		"38827": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse.return"
		},
		"38828": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeDeleteResponse"
		},
		"38829": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"38830": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38831": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38832": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/entities.ts",
			"qualifiedName": "AdminFile"
		},
		"38833": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"38834": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"38835": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/payloads.ts",
			"qualifiedName": "AdminUploadFile"
		},
		"38836": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileResponse"
		},
		"38837": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileResponse.file"
		},
		"38838": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileListResponse"
		},
		"38839": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileListResponse.files"
		},
		"38840": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin/responses.ts",
			"qualifiedName": "AdminFileDeleteResponse"
		},
		"38841": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/store.ts",
			"qualifiedName": "StoreFile"
		},
		"38842": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"38843": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"38844": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider"
		},
		"38845": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.id"
		},
		"38846": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.is_enabled"
		},
		"38847": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams"
		},
		"38848": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.id"
		},
		"38849": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.q"
		},
		"38850": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.is_enabled"
		},
		"38851": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.stock_location_id"
		},
		"38852": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38853": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38854": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38855": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38856": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentProviderListResponse"
		},
		"38857": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38858": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"38859": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"38860": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"38861": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"38862": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"38863": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone"
		},
		"38864": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.id"
		},
		"38865": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.type"
		},
		"38866": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.country_code"
		},
		"38867": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.province_code"
		},
		"38868": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.city"
		},
		"38869": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.postal_expression"
		},
		"38870": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.created_at"
		},
		"38871": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.updated_at"
		},
		"38872": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.deleted_at"
		},
		"38873": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone"
		},
		"38874": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.id"
		},
		"38875": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.name"
		},
		"38876": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set_id"
		},
		"38877": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set"
		},
		"38878": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.geo_zones"
		},
		"38879": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.shipping_options"
		},
		"38880": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.created_at"
		},
		"38881": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.updated_at"
		},
		"38882": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.deleted_at"
		},
		"38883": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet"
		},
		"38884": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.id"
		},
		"38885": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.name"
		},
		"38886": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.type"
		},
		"38887": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.location"
		},
		"38888": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.service_zones"
		},
		"38889": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.created_at"
		},
		"38890": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.updated_at"
		},
		"38891": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.deleted_at"
		},
		"38892": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
		},
		"38893": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.name"
		},
		"38894": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.geo_zones"
		},
		"38895": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
		},
		"38896": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.name"
		},
		"38897": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.geo_zones"
		},
		"38898": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse"
		},
		"38899": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse.service_zone"
		},
		"38900": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneDeleteResponse"
		},
		"38901": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"38902": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38903": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38904": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"38905": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse"
		},
		"38906": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse.fulfillment_set"
		},
		"38907": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetDeleteResponse"
		},
		"38908": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"38909": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"38910": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"38911": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem"
		},
		"38912": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.id"
		},
		"38913": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.sku"
		},
		"38914": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.origin_country"
		},
		"38915": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.hs_code"
		},
		"38916": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.requires_shipping"
		},
		"38917": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.mid_code"
		},
		"38918": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.material"
		},
		"38919": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.weight"
		},
		"38920": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.length"
		},
		"38921": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.height"
		},
		"38922": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.width"
		},
		"38923": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.title"
		},
		"38924": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.description"
		},
		"38925": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.thumbnail"
		},
		"38926": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.metadata"
		},
		"38927": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.location_levels"
		},
		"38928": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel"
		},
		"38929": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.id"
		},
		"38930": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.created_at"
		},
		"38931": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.updated_at"
		},
		"38932": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.deleted_at"
		},
		"38933": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.inventory_item_id"
		},
		"38934": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.location_id"
		},
		"38935": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.stocked_quantity"
		},
		"38936": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.reserved_quantity"
		},
		"38937": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.incoming_quantity"
		},
		"38938": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.metadata"
		},
		"38939": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.inventory_item"
		},
		"38940": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryLevel.available_quantity"
		},
		"38941": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem"
		},
		"38942": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"38943": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"38944": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"38945": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"38946": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"38947": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"38948": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"38949": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"38950": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"38951": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"38952": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"38953": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"38954": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"38955": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"38956": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryItem"
		},
		"38957": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"38958": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"38959": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"38960": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"38961": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"38962": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"38963": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"38964": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"38965": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"38966": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"38967": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"38968": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"38969": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"38970": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"38971": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams"
		},
		"38972": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.id"
		},
		"38973": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.q"
		},
		"38974": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.sku"
		},
		"38975": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.origin_country"
		},
		"38976": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.mid_code"
		},
		"38977": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.hs_code"
		},
		"38978": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.material"
		},
		"38979": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.requires_shipping"
		},
		"38980": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.weight"
		},
		"38981": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.length"
		},
		"38982": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.height"
		},
		"38983": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.width"
		},
		"38984": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.location_levels"
		},
		"38985": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"38986": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"38987": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"38988": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"38989": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"38990": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"38991": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse"
		},
		"38992": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse.inventory_item"
		},
		"38993": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemListResponse"
		},
		"38994": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"38995": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"38996": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemDeleteResponse"
		},
		"38997": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelDeleteResponse"
		},
		"38998": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel"
		},
		"38999": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.id"
		},
		"39000": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.inventory_item_id"
		},
		"39001": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.location_id"
		},
		"39002": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.stocked_quantity"
		},
		"39003": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.reserved_quantity"
		},
		"39004": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.available_quantity"
		},
		"39005": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.incoming_quantity"
		},
		"39006": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.metadata"
		},
		"39007": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel"
		},
		"39008": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.stocked_quantity"
		},
		"39009": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.incoming_quantity"
		},
		"39010": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel"
		},
		"39011": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.location_id"
		},
		"39012": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.stocked_quantity"
		},
		"39013": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.incoming_quantity"
		},
		"39014": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation"
		},
		"39015": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.delete"
		},
		"39017": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.create"
		},
		"39018": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters"
		},
		"39019": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters.location_id"
		},
		"39020": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39021": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39022": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39023": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39024": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse"
		},
		"39025": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse.inventory_level"
		},
		"39026": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelListResponse"
		},
		"39027": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39028": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type.inventory_levels"
		},
		"39029": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite"
		},
		"39030": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.id"
		},
		"39031": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.email"
		},
		"39032": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.accepted"
		},
		"39033": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.token"
		},
		"39034": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.expires_at"
		},
		"39035": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.metadata"
		},
		"39036": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.created_at"
		},
		"39037": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.updated_at"
		},
		"39038": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "AdminAcceptInvite"
		},
		"39039": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"39040": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.email"
		},
		"39041": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.first_name"
		},
		"39042": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.last_name"
		},
		"39043": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "AdminCreateInvite"
		},
		"39044": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"39045": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.email"
		},
		"39046": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"39047": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams"
		},
		"39048": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.q"
		},
		"39049": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.id"
		},
		"39050": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.email"
		},
		"39051": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.created_at"
		},
		"39052": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.updated_at"
		},
		"39053": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/queries.ts",
			"qualifiedName": "AdminGetInvitesParams.deleted_at"
		},
		"39054": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39055": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39056": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39057": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39058": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39059": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39060": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteResponse"
		},
		"39061": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteResponse.invite"
		},
		"39062": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteListResponse"
		},
		"39063": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39064": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.invites"
		},
		"39065": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminAcceptInviteResponse"
		},
		"39066": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39067": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.user"
		},
		"39068": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39069": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.message"
		},
		"39070": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteDeleteResponse"
		},
		"39071": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification"
		},
		"39072": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.id"
		},
		"39073": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.to"
		},
		"39074": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.channel"
		},
		"39075": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.template"
		},
		"39076": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.data"
		},
		"39077": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.trigger_type"
		},
		"39078": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_id"
		},
		"39079": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_type"
		},
		"39080": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.receiver_id"
		},
		"39081": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.original_notification_id"
		},
		"39082": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.external_id"
		},
		"39083": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.provider_id"
		},
		"39084": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.created_at"
		},
		"39085": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams"
		},
		"39086": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.q"
		},
		"39087": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.id"
		},
		"39088": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.channel"
		},
		"39089": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39090": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39091": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39092": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39093": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39094": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39095": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationParams"
		},
		"39096": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39097": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse"
		},
		"39098": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse.notification"
		},
		"39099": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationListResponse"
		},
		"39100": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39101": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"39102": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39103": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39104": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39105": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"39106": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditPreviewResponse"
		},
		"39107": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditPreviewResponse.order_preview"
		},
		"39108": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditResponse"
		},
		"39109": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditResponse.order_change"
		},
		"39110": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/responses.ts",
			"qualifiedName": "AdminOrderEditDeleteResponse"
		},
		"39111": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest"
		},
		"39112": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.order_id"
		},
		"39113": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.description"
		},
		"39114": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.internal_note"
		},
		"39115": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminInitiateOrderEditRequest.metadata"
		},
		"39116": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminAddOrderEditItems"
		},
		"39117": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminAddOrderEditItems.items"
		},
		"39118": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"39119": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.variant_id"
		},
		"39120": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"39121": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.unit_price"
		},
		"39122": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"39123": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.allow_backorder"
		},
		"39124": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"39125": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminUpdateOrderEditItem"
		},
		"39126": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminUpdateOrderEditItem.quantity"
		},
		"39127": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/admin/payloads.ts",
			"qualifiedName": "AdminUpdateOrderEditItem.internal_note"
		},
		"39128": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem"
		},
		"39129": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.id"
		},
		"39130": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.order_id"
		},
		"39131": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.item_id"
		},
		"39132": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.quantity"
		},
		"39133": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.metadata"
		},
		"39134": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.created_at"
		},
		"39135": {
			"sourceFileName": "../../../../packages/core/types/src/http/order-edit/common.ts",
			"qualifiedName": "BaseOrderEditItem.updated_at"
		},
		"39136": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice"
		},
		"39137": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.variant_id"
		},
		"39138": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.rules"
		},
		"39139": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList"
		},
		"39140": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.id"
		},
		"39141": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.title"
		},
		"39142": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.description"
		},
		"39143": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.rules"
		},
		"39144": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.starts_at"
		},
		"39145": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.ends_at"
		},
		"39146": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.status"
		},
		"39147": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.type"
		},
		"39148": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.prices"
		},
		"39149": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.created_at"
		},
		"39150": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.updated_at"
		},
		"39151": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.deleted_at"
		},
		"39152": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice"
		},
		"39153": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.currency_code"
		},
		"39154": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.amount"
		},
		"39155": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.variant_id"
		},
		"39156": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.min_quantity"
		},
		"39157": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.max_quantity"
		},
		"39158": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.rules"
		},
		"39159": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList"
		},
		"39160": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.title"
		},
		"39161": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.description"
		},
		"39162": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.starts_at"
		},
		"39163": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.ends_at"
		},
		"39164": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.status"
		},
		"39165": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.type"
		},
		"39166": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.rules"
		},
		"39167": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.prices"
		},
		"39168": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice"
		},
		"39169": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.id"
		},
		"39170": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.currency_code"
		},
		"39171": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.amount"
		},
		"39172": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.variant_id"
		},
		"39173": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.min_quantity"
		},
		"39174": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.max_quantity"
		},
		"39175": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.rules"
		},
		"39176": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList"
		},
		"39177": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.title"
		},
		"39178": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.description"
		},
		"39179": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.starts_at"
		},
		"39180": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.ends_at"
		},
		"39181": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.status"
		},
		"39182": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.type"
		},
		"39183": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.rules"
		},
		"39184": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice"
		},
		"39185": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.create"
		},
		"39186": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.update"
		},
		"39187": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.delete"
		},
		"39188": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts"
		},
		"39189": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts.remove"
		},
		"39190": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams"
		},
		"39191": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.q"
		},
		"39192": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.id"
		},
		"39193": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.starts_at"
		},
		"39194": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.ends_at"
		},
		"39195": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.status"
		},
		"39196": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.rules_count"
		},
		"39197": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39198": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39199": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39200": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39201": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39202": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39203": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListParams"
		},
		"39204": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39205": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse"
		},
		"39206": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse.price_list"
		},
		"39207": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListListResponse"
		},
		"39208": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39209": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"39210": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39211": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39212": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39213": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"39214": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListDeleteResponse"
		},
		"39215": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39216": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39217": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39218": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse"
		},
		"39219": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.created"
		},
		"39220": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.updated"
		},
		"39221": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.deleted"
		},
		"39222": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39223": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.ids"
		},
		"39224": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.object"
		},
		"39225": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.deleted"
		},
		"39226": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory"
		},
		"39227": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.category_children"
		},
		"39228": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.parent_category"
		},
		"39229": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.products"
		},
		"39230": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "description"
		},
		"39231": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "name"
		},
		"39232": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "id"
		},
		"39233": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "created_at"
		},
		"39234": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "updated_at"
		},
		"39235": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "deleted_at"
		},
		"39236": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "metadata"
		},
		"39237": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "handle"
		},
		"39238": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "parent_category_id"
		},
		"39239": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_active"
		},
		"39240": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_internal"
		},
		"39241": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "rank"
		},
		"39242": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory"
		},
		"39243": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.name"
		},
		"39244": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.description"
		},
		"39245": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.handle"
		},
		"39246": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_internal"
		},
		"39247": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_active"
		},
		"39248": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.parent_category_id"
		},
		"39249": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.rank"
		},
		"39250": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.metadata"
		},
		"39251": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory"
		},
		"39252": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.name"
		},
		"39253": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.description"
		},
		"39254": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.handle"
		},
		"39255": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_internal"
		},
		"39256": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_active"
		},
		"39257": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.parent_category_id"
		},
		"39258": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.rank"
		},
		"39259": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.metadata"
		},
		"39260": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts"
		},
		"39261": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.add"
		},
		"39262": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.remove"
		},
		"39263": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams"
		},
		"39264": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_internal"
		},
		"39265": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_active"
		},
		"39266": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"39267": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"39268": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"39269": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"39270": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"39271": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"39272": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"39273": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"39274": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"39275": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"39276": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"39277": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39278": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39279": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39280": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39281": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39282": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39283": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryParams"
		},
		"39284": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"39285": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"39286": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39287": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse"
		},
		"39288": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse.product_category"
		},
		"39289": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryListResponse"
		},
		"39290": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39291": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"39292": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39293": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39294": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39295": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"39296": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryDeleteResponse"
		},
		"39297": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39298": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39299": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39300": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/entities.ts",
			"qualifiedName": "AdminProductTag"
		},
		"39301": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"39302": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"39303": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"39304": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"39305": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"39306": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"39307": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag"
		},
		"39308": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.value"
		},
		"39309": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.metadata"
		},
		"39310": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag"
		},
		"39311": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.value"
		},
		"39312": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.metadata"
		},
		"39313": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams"
		},
		"39314": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams.deleted_at"
		},
		"39315": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"39316": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"39317": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"39318": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"39319": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"39320": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39321": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39322": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39323": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39324": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39325": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39326": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagParams"
		},
		"39327": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39328": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse"
		},
		"39329": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse.product_tag"
		},
		"39330": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagListResponse"
		},
		"39331": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39332": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"39333": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39334": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39335": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39336": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"39337": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagDeleteResponse"
		},
		"39338": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39339": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39340": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39341": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/entities.ts",
			"qualifiedName": "AdminProductType"
		},
		"39342": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"39343": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"39344": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"39345": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"39346": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"39347": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"39348": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType"
		},
		"39349": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.value"
		},
		"39350": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.metadata"
		},
		"39351": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType"
		},
		"39352": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.value"
		},
		"39353": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.metadata"
		},
		"39354": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams"
		},
		"39355": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.q"
		},
		"39356": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.id"
		},
		"39357": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.value"
		},
		"39358": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.created_at"
		},
		"39359": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.updated_at"
		},
		"39360": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.deleted_at"
		},
		"39361": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39362": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39363": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39364": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39365": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39366": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39367": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeParams"
		},
		"39368": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39369": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse"
		},
		"39370": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse.product_type"
		},
		"39371": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeListResponse"
		},
		"39372": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39373": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"39374": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39375": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39376": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39377": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"39378": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeDeleteResponse"
		},
		"39379": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39380": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39381": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39382": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation"
		},
		"39383": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.id"
		},
		"39384": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.line_item_id"
		},
		"39385": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.location_id"
		},
		"39386": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.quantity"
		},
		"39387": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.external_id"
		},
		"39388": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.description"
		},
		"39389": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.inventory_item_id"
		},
		"39390": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.inventory_item"
		},
		"39391": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.metadata"
		},
		"39392": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.created_by"
		},
		"39393": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.deleted_at"
		},
		"39394": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.created_at"
		},
		"39395": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/entities.ts",
			"qualifiedName": "AdminReservation.updated_at"
		},
		"39396": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation"
		},
		"39397": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.line_item_id"
		},
		"39398": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.location_id"
		},
		"39399": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.inventory_item_id"
		},
		"39400": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.quantity"
		},
		"39401": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.description"
		},
		"39402": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminCreateReservation.metadata"
		},
		"39403": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation"
		},
		"39404": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.location_id"
		},
		"39405": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.quantity"
		},
		"39406": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.description"
		},
		"39407": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReservation.metadata"
		},
		"39408": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams"
		},
		"39409": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.limit"
		},
		"39410": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.offset"
		},
		"39411": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.location_id"
		},
		"39412": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.inventory_item_id"
		},
		"39413": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.line_item_id"
		},
		"39414": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.created_by"
		},
		"39415": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.description"
		},
		"39416": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.created_at"
		},
		"39417": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.updated_at"
		},
		"39418": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminGetReservationsParams.deleted_at"
		},
		"39419": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/queries.ts",
			"qualifiedName": "AdminReservationParams"
		},
		"39420": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39421": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationResponse"
		},
		"39422": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationResponse.reservation"
		},
		"39423": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationListResponse"
		},
		"39424": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39425": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "__type.reservations"
		},
		"39426": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/responses.ts",
			"qualifiedName": "AdminReservationDeleteResponse"
		},
		"39427": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/entities.ts",
			"qualifiedName": "AdminReturnItem"
		},
		"39428": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.id"
		},
		"39429": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.quantity"
		},
		"39430": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.received_quantity"
		},
		"39431": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.damaged_quantity"
		},
		"39432": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.reason_id"
		},
		"39433": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.note"
		},
		"39434": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.item_id"
		},
		"39435": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.return_id"
		},
		"39436": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.metadata"
		},
		"39437": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/entities.ts",
			"qualifiedName": "AdminReturn"
		},
		"39438": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/entities.ts",
			"qualifiedName": "AdminReturn.items"
		},
		"39439": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.id"
		},
		"39440": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_id"
		},
		"39441": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.status"
		},
		"39442": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.exchange_id"
		},
		"39443": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.location_id"
		},
		"39444": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.claim_id"
		},
		"39445": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_version"
		},
		"39446": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.display_id"
		},
		"39447": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.no_notification"
		},
		"39448": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.refund_amount"
		},
		"39449": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.received_at"
		},
		"39450": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.created_at"
		},
		"39451": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.canceled_at"
		},
		"39452": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest"
		},
		"39453": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.order_id"
		},
		"39454": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.location_id"
		},
		"39455": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.description"
		},
		"39456": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.internal_note"
		},
		"39457": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.no_notification"
		},
		"39458": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReturnRequest.metadata"
		},
		"39459": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem"
		},
		"39460": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.id"
		},
		"39461": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.quantity"
		},
		"39462": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.description"
		},
		"39463": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.internal_note"
		},
		"39464": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItem.metadata"
		},
		"39465": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItems"
		},
		"39466": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnItems.items"
		},
		"39467": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems"
		},
		"39468": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems.quantity"
		},
		"39469": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems.internal_note"
		},
		"39470": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnItems.reason_id"
		},
		"39471": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping"
		},
		"39472": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.shipping_option_id"
		},
		"39473": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.custom_amount"
		},
		"39474": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.description"
		},
		"39475": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.internal_note"
		},
		"39476": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminAddReturnShipping.metadata"
		},
		"39477": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping"
		},
		"39478": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping.custom_amount"
		},
		"39479": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping.internal_note"
		},
		"39480": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnShipping.metadata"
		},
		"39481": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReturnRequest"
		},
		"39482": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReturnRequest.no_notification"
		},
		"39483": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest"
		},
		"39484": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest.location_id"
		},
		"39485": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest.no_notification"
		},
		"39486": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnRequest.metadata"
		},
		"39487": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReceiveReturn"
		},
		"39488": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminConfirmReceiveReturn.no_notification"
		},
		"39489": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn"
		},
		"39490": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.internal_note"
		},
		"39491": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.description"
		},
		"39492": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.metadata"
		},
		"39493": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminReceiveItems"
		},
		"39494": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminReceiveItems.items"
		},
		"39495": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"39496": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"39497": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"39498": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"39499": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminDismissItems"
		},
		"39500": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminDismissItems.items"
		},
		"39501": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"39502": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"39503": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"39504": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"39505": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems"
		},
		"39506": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.quantity"
		},
		"39507": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.internal_note"
		},
		"39508": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.reason_id"
		},
		"39509": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReceiveItems.metadata"
		},
		"39510": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems"
		},
		"39511": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.quantity"
		},
		"39512": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.internal_note"
		},
		"39513": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.reason_id"
		},
		"39514": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/payloads.ts",
			"qualifiedName": "AdminUpdateDismissItems.metadata"
		},
		"39515": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters"
		},
		"39516": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.id"
		},
		"39517": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.order_id"
		},
		"39518": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.status"
		},
		"39519": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.created_at"
		},
		"39520": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/queries.ts",
			"qualifiedName": "AdminReturnFilters.updated_at"
		},
		"39521": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39522": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39523": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39524": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39525": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnResponse"
		},
		"39526": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnResponse.return"
		},
		"39527": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnsResponse"
		},
		"39528": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39529": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "__type.returns"
		},
		"39530": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminOrderReturnResponse"
		},
		"39531": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminOrderReturnResponse.order"
		},
		"39532": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminOrderReturnResponse.return"
		},
		"39533": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnPreviewResponse"
		},
		"39534": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnPreviewResponse.order_preview"
		},
		"39535": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnPreviewResponse.return"
		},
		"39536": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin/responses.ts",
			"qualifiedName": "AdminReturnDeleteResponse"
		},
		"39537": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/entities.ts",
			"qualifiedName": "AdminReturnReason"
		},
		"39538": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"39539": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"39540": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"39541": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"39542": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"39543": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"39544": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"39545": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminCreateReturnReason"
		},
		"39546": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminCreateReturnReason.parent_return_reason_id"
		},
		"39547": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.value"
		},
		"39548": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.label"
		},
		"39549": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"39550": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"39551": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnReason"
		},
		"39552": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.value"
		},
		"39553": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.label"
		},
		"39554": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"39555": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"39556": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonListParams"
		},
		"39557": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonListParams.deleted_at"
		},
		"39558": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.q"
		},
		"39559": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.id"
		},
		"39560": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.value"
		},
		"39561": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.label"
		},
		"39562": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.description"
		},
		"39563": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.parent_return_reason_id"
		},
		"39564": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.created_at"
		},
		"39565": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.updated_at"
		},
		"39566": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39567": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39568": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39569": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39570": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39571": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39572": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonParams"
		},
		"39573": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39574": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonResponse"
		},
		"39575": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonResponse.return_reason"
		},
		"39576": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonListResponse"
		},
		"39577": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39578": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"39579": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39580": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39581": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39582": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"39583": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonDeleteResponse"
		},
		"39584": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39585": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39586": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39587": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType"
		},
		"39588": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.id"
		},
		"39589": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.label"
		},
		"39590": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.description"
		},
		"39591": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.code"
		},
		"39592": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.shipping_option_id"
		},
		"39593": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.created_at"
		},
		"39594": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.updated_at"
		},
		"39595": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.deleted_at"
		},
		"39596": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule"
		},
		"39597": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.id"
		},
		"39598": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.attribute"
		},
		"39599": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.operator"
		},
		"39600": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.value"
		},
		"39601": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.shipping_option_id"
		},
		"39602": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.created_at"
		},
		"39603": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.updated_at"
		},
		"39604": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.deleted_at"
		},
		"39605": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule"
		},
		"39606": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.id"
		},
		"39607": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.value"
		},
		"39608": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice"
		},
		"39609": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.price_rules"
		},
		"39610": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.rules_count"
		},
		"39611": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption"
		},
		"39612": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.id"
		},
		"39613": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.name"
		},
		"39614": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.price_type"
		},
		"39615": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone_id"
		},
		"39616": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone"
		},
		"39617": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider_id"
		},
		"39618": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider"
		},
		"39619": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_option_type_id"
		},
		"39620": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.type"
		},
		"39621": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile_id"
		},
		"39622": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile"
		},
		"39623": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.rules"
		},
		"39624": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.prices"
		},
		"39625": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.data"
		},
		"39626": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.metadata"
		},
		"39627": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.created_at"
		},
		"39628": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.updated_at"
		},
		"39629": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.deleted_at"
		},
		"39630": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule"
		},
		"39631": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"39632": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"39633": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"39634": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType"
		},
		"39635": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.label"
		},
		"39636": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.description"
		},
		"39637": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.code"
		},
		"39638": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency"
		},
		"39639": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.currency_code"
		},
		"39640": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.amount"
		},
		"39641": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion"
		},
		"39642": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.region_id"
		},
		"39643": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.amount"
		},
		"39644": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption"
		},
		"39645": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.name"
		},
		"39646": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.service_zone_id"
		},
		"39647": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.shipping_profile_id"
		},
		"39648": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.data"
		},
		"39649": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.price_type"
		},
		"39650": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.provider_id"
		},
		"39651": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.type"
		},
		"39652": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.prices"
		},
		"39653": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.rules"
		},
		"39654": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule"
		},
		"39655": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule.id"
		},
		"39656": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"39657": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"39658": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"39659": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency"
		},
		"39660": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.id"
		},
		"39661": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.currency_code"
		},
		"39662": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.amount"
		},
		"39663": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion"
		},
		"39664": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.id"
		},
		"39665": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.region_id"
		},
		"39666": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.amount"
		},
		"39667": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption"
		},
		"39668": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.name"
		},
		"39669": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.data"
		},
		"39670": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.price_type"
		},
		"39671": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.provider_id"
		},
		"39672": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.shipping_profile_id"
		},
		"39673": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.type"
		},
		"39674": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.prices"
		},
		"39675": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.rules"
		},
		"39676": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules"
		},
		"39677": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.create"
		},
		"39678": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.update"
		},
		"39679": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.delete"
		},
		"39680": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams"
		},
		"39681": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.id"
		},
		"39682": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.q"
		},
		"39683": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.service_zone_id"
		},
		"39684": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.stock_location_id"
		},
		"39685": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.is_return"
		},
		"39686": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.admin_only"
		},
		"39687": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_profile_id"
		},
		"39688": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.provider_id"
		},
		"39689": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_option_type_id"
		},
		"39690": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.created_at"
		},
		"39691": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.updated_at"
		},
		"39692": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.deleted_at"
		},
		"39693": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39694": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39695": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39696": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39697": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse"
		},
		"39698": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse.shipping_option"
		},
		"39699": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionListResponse"
		},
		"39700": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39701": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"39702": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionDeleteResponse"
		},
		"39703": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39704": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39705": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39706": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
		},
		"39707": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile"
		},
		"39708": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.id"
		},
		"39709": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.name"
		},
		"39710": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.type"
		},
		"39711": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.metadata"
		},
		"39712": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.created_at"
		},
		"39713": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.updated_at"
		},
		"39714": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.deleted_at"
		},
		"39715": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile"
		},
		"39716": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.name"
		},
		"39717": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.type"
		},
		"39718": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.metadata"
		},
		"39719": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile"
		},
		"39720": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.name"
		},
		"39721": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.type"
		},
		"39722": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.metadata"
		},
		"39723": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams"
		},
		"39724": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.id"
		},
		"39725": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.q"
		},
		"39726": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.type"
		},
		"39727": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.name"
		},
		"39728": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.created_at"
		},
		"39729": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.updated_at"
		},
		"39730": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.deleted_at"
		},
		"39731": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$and"
		},
		"39732": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$or"
		},
		"39733": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39734": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39735": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39736": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39737": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse"
		},
		"39738": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse.shipping_profile"
		},
		"39739": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileListResponse"
		},
		"39740": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39741": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"39742": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileDeleteResponse"
		},
		"39743": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39744": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39745": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39746": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress"
		},
		"39747": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.id"
		},
		"39748": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_1"
		},
		"39749": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_2"
		},
		"39750": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.company"
		},
		"39751": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.country_code"
		},
		"39752": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.city"
		},
		"39753": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.phone"
		},
		"39754": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.postal_code"
		},
		"39755": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.province"
		},
		"39756": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation"
		},
		"39757": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.id"
		},
		"39758": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.name"
		},
		"39759": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address_id"
		},
		"39760": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address"
		},
		"39761": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.sales_channels"
		},
		"39762": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_providers"
		},
		"39763": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_sets"
		},
		"39764": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation"
		},
		"39765": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.name"
		},
		"39766": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address_id"
		},
		"39767": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address"
		},
		"39768": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.metadata"
		},
		"39769": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation"
		},
		"39770": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.name"
		},
		"39771": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address_id"
		},
		"39772": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address"
		},
		"39773": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.metadata"
		},
		"39774": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels"
		},
		"39775": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.add"
		},
		"39776": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.remove"
		},
		"39777": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
		},
		"39778": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.name"
		},
		"39779": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.type"
		},
		"39780": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams"
		},
		"39781": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.id"
		},
		"39782": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.q"
		},
		"39783": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.name"
		},
		"39784": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.address_id"
		},
		"39785": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.sales_channel_id"
		},
		"39786": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$and"
		},
		"39787": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$or"
		},
		"39788": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.created_at"
		},
		"39789": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.updated_at"
		},
		"39790": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.deleted_at"
		},
		"39791": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39792": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39793": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39794": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39795": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse"
		},
		"39796": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse.stock_location"
		},
		"39797": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationListResponse"
		},
		"39798": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39799": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"39800": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"39801": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"39802": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"39803": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"39804": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationDeleteResponse"
		},
		"39805": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39806": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39807": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39808": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule"
		},
		"39809": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference"
		},
		"39810": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference_id"
		},
		"39811": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate"
		},
		"39812": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.id"
		},
		"39813": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rate"
		},
		"39814": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.code"
		},
		"39815": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.name"
		},
		"39816": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.metadata"
		},
		"39817": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region_id"
		},
		"39818": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_combinable"
		},
		"39819": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_default"
		},
		"39820": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_at"
		},
		"39821": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.updated_at"
		},
		"39822": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.deleted_at"
		},
		"39823": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_by"
		},
		"39824": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region"
		},
		"39825": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rules"
		},
		"39826": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate"
		},
		"39827": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.name"
		},
		"39828": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.tax_region_id"
		},
		"39829": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rate"
		},
		"39830": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.code"
		},
		"39831": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rules"
		},
		"39832": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_default"
		},
		"39833": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_combinable"
		},
		"39834": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.metadata"
		},
		"39835": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate"
		},
		"39836": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.name"
		},
		"39837": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rate"
		},
		"39838": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.code"
		},
		"39839": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rules"
		},
		"39840": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_default"
		},
		"39841": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_combinable"
		},
		"39842": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.metadata"
		},
		"39843": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams"
		},
		"39844": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.q"
		},
		"39845": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.tax_region_id"
		},
		"39846": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.is_default"
		},
		"39847": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.service_zone_id"
		},
		"39848": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_profile_id"
		},
		"39849": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.provider_id"
		},
		"39850": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_option_type_id"
		},
		"39851": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.created_at"
		},
		"39852": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.updated_at"
		},
		"39853": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.deleted_at"
		},
		"39854": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39855": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39856": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39857": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39858": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39859": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39860": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse"
		},
		"39861": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse.tax_rate"
		},
		"39862": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateListResponse"
		},
		"39863": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39864": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"39865": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateDeleteResponse"
		},
		"39866": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39867": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39868": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39869": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateRuleDeleteResponse"
		},
		"39870": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion"
		},
		"39871": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.id"
		},
		"39872": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.country_code"
		},
		"39873": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.province_code"
		},
		"39874": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.metadata"
		},
		"39875": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent_id"
		},
		"39876": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_at"
		},
		"39877": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.updated_at"
		},
		"39878": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.deleted_at"
		},
		"39879": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_by"
		},
		"39880": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_rates"
		},
		"39881": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent"
		},
		"39882": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.children"
		},
		"39883": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion"
		},
		"39884": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.country_code"
		},
		"39885": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.province_code"
		},
		"39886": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.parent_id"
		},
		"39887": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.default_tax_rate"
		},
		"39888": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"39889": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.rate"
		},
		"39890": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.code"
		},
		"39891": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.name"
		},
		"39892": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.is_combinable"
		},
		"39893": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"39894": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.metadata"
		},
		"39895": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams"
		},
		"39896": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.id"
		},
		"39897": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.q"
		},
		"39898": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.parent_id"
		},
		"39899": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.country_code"
		},
		"39900": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.province_code"
		},
		"39901": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_at"
		},
		"39902": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.updated_at"
		},
		"39903": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.deleted_at"
		},
		"39904": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_by"
		},
		"39905": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39906": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39907": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39908": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39909": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"39910": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"39911": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionParams"
		},
		"39912": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39913": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse"
		},
		"39914": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse.tax_region"
		},
		"39915": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionListResponse"
		},
		"39916": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39917": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type.tax_regions"
		},
		"39918": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionDeleteResponse"
		},
		"39919": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"39920": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"39921": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"39922": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "TransactionStepStatus"
		},
		"39923": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "TransactionState"
		},
		"39924": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "TransactionStepState"
		},
		"39925": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "StepInvokeResult"
		},
		"39926": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"39927": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.output"
		},
		"39928": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"39929": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.output"
		},
		"39930": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.compensateInput"
		},
		"39931": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "StepError"
		},
		"39932": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"39933": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.error"
		},
		"39934": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.action"
		},
		"39935": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.handlerType"
		},
		"39936": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext"
		},
		"39937": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext.data"
		},
		"39938": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type"
		},
		"39939": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.invoke"
		},
		"39940": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "__type.payload"
		},
		"39941": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext.compensate"
		},
		"39942": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionContext.errors"
		},
		"39943": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition"
		},
		"39944": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.async"
		},
		"39945": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.compensateAsync"
		},
		"39946": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.noCompensation"
		},
		"39947": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.continueOnPermanentFailure"
		},
		"39948": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.maxRetries"
		},
		"39949": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.noWait"
		},
		"39950": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.retryInterval"
		},
		"39951": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.retryIntervalAwaiting"
		},
		"39952": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.saveResponse"
		},
		"39953": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionDefinition.timeout"
		},
		"39954": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionFn"
		},
		"39955": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionFn.state"
		},
		"39956": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "WorkflowExecutionFn.status"
		},
		"39957": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep"
		},
		"39958": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.id"
		},
		"39959": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.invoke"
		},
		"39960": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.definition"
		},
		"39961": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.compensate"
		},
		"39962": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.depth"
		},
		"39963": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionStep.startedAt"
		},
		"39964": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution"
		},
		"39965": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.id"
		},
		"39966": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.workflow_id"
		},
		"39967": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.transaction_id"
		},
		"39968": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.execution"
		},
		"39969": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.context"
		},
		"39970": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.state"
		},
		"39971": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.created_at"
		},
		"39972": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.updated_at"
		},
		"39973": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecution.deleted_at"
		},
		"39974": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams"
		},
		"39975": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.transaction_id"
		},
		"39976": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/queries.ts",
			"qualifiedName": "AdminGetWorkflowExecutionsParams.workflow_id"
		},
		"39977": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"39978": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"39979": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"39980": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"39981": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowExecutionResponse"
		},
		"39982": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowExecutionResponse.workflow_execution"
		},
		"39983": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowExecutionListResponse"
		},
		"39984": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39985": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type.workflow_executions"
		},
		"39986": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "AdminWorkflowRunResponse"
		},
		"39987": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"39988": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/responses.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"39989": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index.ts",
			"qualifiedName": ""
		},
		"39990": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "SchemaObjectEntityRepresentation"
		},
		"39991": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"39992": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.entity"
		},
		"39993": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.parents"
		},
		"39994": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"39995": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.ref"
		},
		"39996": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.inSchemaRef"
		},
		"39997": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.targetProp"
		},
		"39998": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.isList"
		},
		"39999": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.fields"
		},
		"40000": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.listeners"
		},
		"40001": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.alias"
		},
		"40002": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.moduleConfig"
		},
		"40003": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "EntityNameModuleConfigMap"
		},
		"40004": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"40005": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.__index"
		},
		"40007": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "SchemaPropertiesMap"
		},
		"40008": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"40009": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.__index"
		},
		"40011": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"40012": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.shortCutOf"
		},
		"40013": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.ref"
		},
		"40014": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "SchemaObjectRepresentation"
		},
		"40015": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"40016": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type.__index"
		},
		"40018": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type"
		},
		"40019": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type._schemaPropertiesMap"
		},
		"40020": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/common.ts",
			"qualifiedName": "__type._serviceNameModuleConfigMap"
		},
		"40021": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-service-entry-points.ts",
			"qualifiedName": "IndexServiceEntryPoints"
		},
		"40022": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant"
		},
		"40023": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.product_variants"
		},
		"40024": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.variant"
		},
		"40025": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.variants"
		},
		"40026": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.product"
		},
		"40027": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.products"
		},
		"40028": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.price"
		},
		"40029": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.prices"
		},
		"40030": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "IndexQueryConfig"
		},
		"40031": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type"
		},
		"40032": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.fields"
		},
		"40033": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.filters"
		},
		"40034": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.joinFilters"
		},
		"40035": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.pagination"
		},
		"40036": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.keepFilteredEntities"
		},
		"40037": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "TEntry"
		},
		"40038": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "QueryFunctionReturnPagination"
		},
		"40039": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type"
		},
		"40040": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.skip"
		},
		"40041": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.take"
		},
		"40042": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.count"
		},
		"40043": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "QueryResultSet"
		},
		"40044": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type"
		},
		"40045": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.data"
		},
		"40046": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "__type.metadata"
		},
		"40047": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config.ts",
			"qualifiedName": "TEntry"
		},
		"40048": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "ObjectToIndexFields"
		},
		"40049": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "__type"
		},
		"40050": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "__type.__typename"
		},
		"40051": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "__type"
		},
		"40052": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "__type.__typename"
		},
		"40053": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "MaybeT"
		},
		"40054": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "Depth"
		},
		"40055": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "Exclusion"
		},
		"40056": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "T"
		},
		"40057": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "IndexFilters"
		},
		"40058": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "TEntry"
		},
		"40059": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "IndexEntryPointsLevel"
		},
		"40060": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "Exclusion"
		},
		"40061": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "Lim"
		},
		"40062": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "OrderBy"
		},
		"40063": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "IndexOrderBy"
		},
		"40064": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "TEntry"
		},
		"40065": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "IndexEntryPointsLevel"
		},
		"40066": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "Exclusion"
		},
		"40067": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "Lim"
		},
		"40068": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IndexModuleOptions"
		},
		"40069": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IndexModuleOptions.customAdapter"
		},
		"40070": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "__type"
		},
		"40071": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "__type.constructor"
		},
		"40072": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "__type"
		},
		"40073": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "__type"
		},
		"40074": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "args"
		},
		"40075": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "__type.options"
		},
		"40076": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IndexModuleOptions.defaultAdapterOptions"
		},
		"40077": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IndexModuleOptions.schema"
		},
		"40078": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IIndexService"
		},
		"40079": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IIndexService.query"
		},
		"40080": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "IIndexService.query"
		},
		"40081": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "TEntry"
		},
		"40082": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/service.ts",
			"qualifiedName": "config"
		},
		"40096": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider"
		},
		"40097": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider.onApplicationStart"
		},
		"40098": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider.onApplicationStart"
		},
		"40099": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider.query"
		},
		"40100": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider.query"
		},
		"40101": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "TEntry"
		},
		"40102": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "config"
		},
		"40103": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider.consumeEvent"
		},
		"40104": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "StorageProvider.consumeEvent"
		},
		"40105": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/sotrage-provider.ts",
			"qualifiedName": "schemaEntityObjectRepresentation"
		},
		"40106": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/index.ts",
			"qualifiedName": ""
		},
		"40107": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"40108": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"40109": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"40110": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"40111": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"40112": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"40113": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"40114": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"40115": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"40116": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"40117": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"40118": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"40119": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"40120": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"40121": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"40122": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"40123": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"40124": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"40125": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"40126": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"40127": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"40128": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"40129": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"40130": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"40131": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"40132": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"40133": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"40134": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"40135": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"40136": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"40137": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"40138": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"40139": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"40140": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"40141": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"40142": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"40143": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"40144": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"40145": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"40146": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"40147": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.id"
		},
		"40148": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"40149": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"40150": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"40151": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"40152": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"40153": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"40154": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"40155": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"40156": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"40157": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"40158": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"40159": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"40160": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"40161": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"40162": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"40163": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"40164": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"40165": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"40166": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"40167": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"40168": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"40169": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"40171": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"40172": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"40173": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"40174": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"40175": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"40176": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"40177": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"40178": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"40179": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"40180": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"40181": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"40182": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"40183": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"40184": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"40185": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"40186": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"40187": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"40188": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"40189": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"40190": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"40191": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"40192": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"40193": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"40194": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"40195": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"40196": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"40197": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"40198": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"40199": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"40200": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"40201": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"40202": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"40203": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"40204": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"40205": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"40206": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"40207": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"40208": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"40209": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"40210": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"40211": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"40212": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"40213": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"40214": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"40215": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"40216": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"40217": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"40218": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"40219": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"40220": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"40221": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"40222": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"40223": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkAdjustInventoryLevelInput"
		},
		"40224": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type"
		},
		"40225": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"40226": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"40227": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.adjustment"
		},
		"40228": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"40229": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"40230": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"40231": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"40232": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"40233": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"40234": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"40235": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"40236": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"40237": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"40238": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"40239": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"40240": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"40241": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"40242": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"40243": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"40244": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"40245": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext"
		},
		"40246": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.locationId"
		},
		"40247": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.lineItemId"
		},
		"40248": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.salesChannelId"
		},
		"40249": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"40250": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"40251": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"40252": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"40253": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40254": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40255": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"40256": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"40257": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"40258": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40259": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40260": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"40261": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"40262": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"40263": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40264": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40265": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"40266": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"40267": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"40268": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40269": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40270": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"40271": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"40272": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"40273": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40274": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40275": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"40276": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"40277": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"40278": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40279": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40280": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"40281": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"40282": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40283": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40284": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40285": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"40286": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"40287": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40288": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"40289": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40290": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"40291": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"40292": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"40293": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40294": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40295": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"40296": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"40297": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"40298": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40299": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40300": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"40301": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"40302": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40303": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40304": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"40305": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40306": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40307": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"40308": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"40309": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40310": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40311": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"40312": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40313": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40314": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"40315": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"40316": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"40317": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40318": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"40319": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"40320": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40321": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"40322": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"40323": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"40324": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40325": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"40326": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"40327": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40328": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"40329": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"40330": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40331": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40332": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"40333": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40334": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40335": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"40336": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"40337": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40338": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40339": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"40340": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"40341": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40342": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"40343": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"40344": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"40345": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40346": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"40347": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"40348": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"40349": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40350": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"40351": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"40352": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"40353": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40354": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"40355": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"40356": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"40357": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemIds"
		},
		"40358": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40359": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"40360": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"40361": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"40362": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"40363": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemIds"
		},
		"40364": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40365": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"40366": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"40367": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"40368": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40369": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40370": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"40371": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"40372": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"40373": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"40374": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40375": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"40376": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"40377": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"40378": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"40379": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"40380": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40381": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"40382": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"40383": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"40384": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"40385": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40386": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"40387": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"40388": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"40389": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40390": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"40391": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"40392": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40393": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"40394": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40395": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"40396": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"40397": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"40398": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40399": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"40400": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"40401": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"40402": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"40403": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40404": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"40405": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"40406": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"40407": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"40408": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"40409": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"40410": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"40411": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"40412": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"40413": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"40414": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"40415": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"40416": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"40417": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"40418": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40419": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"40420": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40421": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"40422": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"40423": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40424": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"40425": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"40426": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40427": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"40428": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"40429": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40430": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"40431": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"40432": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40433": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"40434": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40435": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"40436": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"40437": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40438": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"40439": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40440": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"40441": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"40442": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"40443": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"40444": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"40458": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"40459": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"40460": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"40461": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40462": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40463": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"40464": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"40465": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40466": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40467": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"40468": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"40469": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40470": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40471": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"40472": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"40473": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40474": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40475": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"40476": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40477": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40478": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40479": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"40480": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"40481": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40482": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40483": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"40484": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40485": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"40486": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40487": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40488": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"40489": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"40490": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"40491": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40492": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40493": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"40494": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40495": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"40496": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40497": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40498": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"40499": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40500": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"40501": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40502": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40503": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40504": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"40505": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40506": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40507": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40508": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"40509": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40510": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40511": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"40512": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"40513": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40514": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"40515": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"40516": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"40517": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "RemoteQueryGraph"
		},
		"40518": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type"
		},
		"40519": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.__TConfig"
		},
		"40520": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "TEntry"
		},
		"40521": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "RemoteQueryInput"
		},
		"40522": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type"
		},
		"40523": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.entity"
		},
		"40524": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.fields"
		},
		"40525": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.pagination"
		},
		"40526": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type"
		},
		"40527": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.skip"
		},
		"40528": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.take"
		},
		"40529": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.order"
		},
		"40530": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.filters"
		},
		"40531": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.context"
		},
		"40532": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "TEntry"
		},
		"40533": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "RemoteQueryObjectConfig"
		},
		"40534": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type"
		},
		"40535": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.entryPoint"
		},
		"40536": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.variables"
		},
		"40537": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.fields"
		},
		"40538": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "TEntry"
		},
		"40539": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "RemoteQueryObjectFromStringResult"
		},
		"40540": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type"
		},
		"40541": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.__TConfig"
		},
		"40542": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "__type.__value"
		},
		"40543": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
			"qualifiedName": "TConfig"
		},
		"40544": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"40545": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40546": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40547": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40548": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40549": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"40550": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"40551": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"40552": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"40553": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"40554": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40555": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"40556": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"40557": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"40558": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"40559": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"40560": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40561": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"40562": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"40563": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"40564": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"40565": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"40566": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"40567": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"40568": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"40569": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"40570": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40571": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"40572": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"40573": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"40574": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40575": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"40576": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"40577": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"40578": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"40579": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"40580": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"40581": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"40582": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40583": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"40584": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"40585": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"40586": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"40587": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"40588": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"40589": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"40590": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40591": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"40592": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"40593": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"40594": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"40595": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"40596": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"40598": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"40599": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"40600": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40601": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"40602": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"40603": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"40604": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"40605": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"40606": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40607": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"40608": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"40609": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"40610": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"40611": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40612": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"40613": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"40614": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"40615": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40616": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"40617": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"40618": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"40619": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"40620": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"40621": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"40622": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40623": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40624": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"40625": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40626": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"40627": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40628": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"40629": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"40630": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"40631": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40632": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"40633": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"40634": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"40635": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"40636": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkDefinition"
		},
		"40637": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40638": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"40640": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40641": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"40643": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40644": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.data"
		},
		"40645": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"40646": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40647": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"40648": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"40649": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"40650": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40651": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"40652": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"40653": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40654": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"40655": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"40656": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"40657": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"40658": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"40659": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"40660": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"40661": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"40662": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"40663": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"40664": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"40665": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40666": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"40667": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"40668": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"40669": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"40670": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40671": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"40672": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"40673": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40674": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"40675": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"40676": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"40677": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"40678": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"40679": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40680": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"40681": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"40682": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"40683": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40684": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"40685": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"40686": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"40687": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40688": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"40689": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"40690": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"40691": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"40692": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40693": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"40694": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"40695": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"40696": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"40697": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"40698": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"40699": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"40700": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"40701": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"40702": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40703": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"40704": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"40705": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"40706": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"40707": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40708": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"40709": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"40710": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"40711": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"40713": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"40714": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"40728": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService"
		},
		"40729": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"40730": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"40731": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"40732": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"40733": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"40734": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"40735": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40736": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"40737": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"40738": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"40739": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40740": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"40741": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"40742": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"40743": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40744": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40745": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"40746": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40747": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"40748": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"40749": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"40750": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40751": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40752": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"40753": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40754": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"40755": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"40756": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40757": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40758": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"40759": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40760": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40761": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"40762": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"40763": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40764": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40765": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"40766": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40767": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40768": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"40769": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"40770": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"40771": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"40772": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40773": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40774": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"40775": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40776": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"40777": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"40778": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"40779": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"40780": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40781": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40782": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"40783": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40784": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"40785": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"40786": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"40787": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40788": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"40789": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"40790": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40791": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"40792": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"40793": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40794": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"40795": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"40796": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40797": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"40798": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"40799": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"40800": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"40801": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40802": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40803": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40804": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"40805": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"40806": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"40807": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40808": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40809": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40810": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"40811": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"40812": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"40813": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"40814": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40815": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"40816": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"40817": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40818": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40819": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"40820": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40821": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40822": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"40823": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"40824": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"40825": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"40826": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"40827": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"40828": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.entities"
		},
		"40829": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"40830": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TEntity"
		},
		"40831": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"40832": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TContainer"
		},
		"40833": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ProviderLoaderOptions"
		},
		"40834": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"40835": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.container"
		},
		"40836": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"40837": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.logger"
		},
		"40838": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.moduleOptions"
		},
		"40839": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "TOptions"
		},
		"40840": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"40841": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"40842": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.module"
		},
		"40843": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"40844": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.loaders"
		},
		"40845": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"40846": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"40847": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "options"
		},
		"40848": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40849": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"40850": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"40851": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "options"
		},
		"40852": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40853": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"40854": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"40855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "options"
		},
		"40856": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40857": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.discoveryPath"
		},
		"40858": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "Service"
		},
		"40859": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderLoaderFunction"
		},
		"40860": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"40861": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"40862": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "options"
		},
		"40863": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"40864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"40865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"40866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"40867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.id"
		},
		"40868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"40869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.is_default"
		},
		"40870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "RemoteQueryFunctionReturnPagination"
		},
		"40871": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.skip"
		},
		"40873": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.take"
		},
		"40874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.count"
		},
		"40875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "GraphResultSet"
		},
		"40876": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40877": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.data"
		},
		"40878": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.metadata"
		},
		"40879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "TEntry"
		},
		"40880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "QueryGraphFunction"
		},
		"40881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "TEntry"
		},
		"40884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "queryConfig"
		},
		"40885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40886": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"40887": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "data"
		},
		"40888": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "metadata"
		},
		"40889": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"40890": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40891": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.graph"
		},
		"40892": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type.gql"
		},
		"40893": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40894": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40895": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "query"
		},
		"40896": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "variables"
		},
		"40897": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40898": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40899": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "TEntry"
		},
		"40900": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "queryConfig"
		},
		"40901": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40902": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40903": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "TConfig"
		},
		"40904": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "queryConfig"
		},
		"40905": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40906": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40907": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "query"
		},
		"40908": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40909": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query"
		},
		"40910": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query.query"
		},
		"40911": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query.query"
		},
		"40912": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "TEntry"
		},
		"40913": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "queryConfig"
		},
		"40914": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40915": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query.query"
		},
		"40916": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "TConfig"
		},
		"40917": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "queryConfig"
		},
		"40918": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40919": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query.query"
		},
		"40920": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "query"
		},
		"40921": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40922": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query.graph"
		},
		"40923": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "Query.gql"
		},
		"40924": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40925": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "__type"
		},
		"40926": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "query"
		},
		"40927": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "variables"
		},
		"40928": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "options"
		},
		"40929": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-entry-points.ts",
			"qualifiedName": "RemoteQueryEntryPoints"
		},
		"40930": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.file"
		},
		"40931": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.files"
		},
		"40932": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.workflow_execution"
		},
		"40933": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.workflow_executions"
		},
		"40934": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_items"
		},
		"40935": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_item"
		},
		"40936": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory"
		},
		"40937": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservation"
		},
		"40938": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservations"
		},
		"40939": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservation_item"
		},
		"40940": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservation_items"
		},
		"40941": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_level"
		},
		"40942": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_levels"
		},
		"40943": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_location_address"
		},
		"40944": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_location_addresses"
		},
		"40945": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_location"
		},
		"40946": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_locations"
		},
		"40947": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_set"
		},
		"40948": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_sets"
		},
		"40949": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_list"
		},
		"40950": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_lists"
		},
		"40951": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price"
		},
		"40952": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.prices"
		},
		"40953": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_preference"
		},
		"40954": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_preferences"
		},
		"40955": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant"
		},
		"40956": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variants"
		},
		"40957": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.variant"
		},
		"40958": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.variants"
		},
		"40959": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product"
		},
		"40960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.products"
		},
		"40961": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.simple_product"
		},
		"40962": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_option"
		},
		"40963": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_options"
		},
		"40964": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_type"
		},
		"40965": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_types"
		},
		"40966": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_image"
		},
		"40967": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_images"
		},
		"40968": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_tag"
		},
		"40969": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_tags"
		},
		"40970": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_collection"
		},
		"40971": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_collections"
		},
		"40972": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_category"
		},
		"40973": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_categories"
		},
		"40974": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channel"
		},
		"40975": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channels"
		},
		"40976": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_address"
		},
		"40977": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_addresses"
		},
		"40978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_group_customer"
		},
		"40979": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_group_customers"
		},
		"40980": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_group"
		},
		"40981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_groups"
		},
		"40982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer"
		},
		"40983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customers"
		},
		"40984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart"
		},
		"40985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.carts"
		},
		"40986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.address"
		},
		"40987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.addresses"
		},
		"40988": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item"
		},
		"40989": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_items"
		},
		"40990": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_adjustment"
		},
		"40991": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_adjustments"
		},
		"40992": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_tax_line"
		},
		"40993": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_tax_lines"
		},
		"40994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method"
		},
		"40995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_methods"
		},
		"40996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_adjustment"
		},
		"40997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_adjustments"
		},
		"40998": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_tax_line"
		},
		"40999": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_tax_lines"
		},
		"41000": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotion"
		},
		"41001": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotions"
		},
		"41002": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.campaign"
		},
		"41003": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.campaigns"
		},
		"41004": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotion_rule"
		},
		"41005": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotion_rules"
		},
		"41006": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.api_key"
		},
		"41007": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.api_keys"
		},
		"41008": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rate"
		},
		"41009": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rates"
		},
		"41010": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_region"
		},
		"41011": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_regions"
		},
		"41012": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rate_rule"
		},
		"41013": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rate_rules"
		},
		"41014": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_provider"
		},
		"41015": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_providers"
		},
		"41016": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.store"
		},
		"41017": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stores"
		},
		"41018": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.store_currency"
		},
		"41019": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.store_currencies"
		},
		"41020": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.user"
		},
		"41021": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.users"
		},
		"41022": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.invite"
		},
		"41023": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.invites"
		},
		"41024": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.auth_identity"
		},
		"41025": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.auth_identities"
		},
		"41026": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order"
		},
		"41027": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.orders"
		},
		"41028": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_address"
		},
		"41029": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_addresses"
		},
		"41030": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item"
		},
		"41031": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_items"
		},
		"41032": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_adjustment"
		},
		"41033": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_adjustments"
		},
		"41034": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_tax_line"
		},
		"41035": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_tax_lines"
		},
		"41036": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method"
		},
		"41037": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_methods"
		},
		"41038": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_adjustment"
		},
		"41039": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_adjustments"
		},
		"41040": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_tax_line"
		},
		"41041": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_tax_lines"
		},
		"41042": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_transaction"
		},
		"41043": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_transactions"
		},
		"41044": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_change"
		},
		"41045": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_changes"
		},
		"41046": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_change_action"
		},
		"41047": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_change_actions"
		},
		"41048": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_item"
		},
		"41049": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_items"
		},
		"41050": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_summary"
		},
		"41051": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_summaries"
		},
		"41052": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping"
		},
		"41053": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shippings"
		},
		"41054": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_reason"
		},
		"41055": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_reasons"
		},
		"41056": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return"
		},
		"41057": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.returns"
		},
		"41058": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_item"
		},
		"41059": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_items"
		},
		"41060": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim"
		},
		"41061": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claims"
		},
		"41062": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_item"
		},
		"41063": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_items"
		},
		"41064": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_item_image"
		},
		"41065": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_item_images"
		},
		"41066": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchange"
		},
		"41067": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchanges"
		},
		"41068": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchange_item"
		},
		"41069": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchange_items"
		},
		"41070": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment"
		},
		"41071": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payments"
		},
		"41072": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_collection"
		},
		"41073": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_collections"
		},
		"41074": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_provider"
		},
		"41075": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_providers"
		},
		"41076": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_session"
		},
		"41077": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_sessions"
		},
		"41078": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.refund_reason"
		},
		"41079": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.refund_reasons"
		},
		"41080": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_address"
		},
		"41081": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_addresses"
		},
		"41082": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_item"
		},
		"41083": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_items"
		},
		"41084": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_label"
		},
		"41085": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_labels"
		},
		"41086": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_provider"
		},
		"41087": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_providers"
		},
		"41088": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_set"
		},
		"41089": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_sets"
		},
		"41090": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment"
		},
		"41091": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillments"
		},
		"41092": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.geo_zone"
		},
		"41093": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.geo_zones"
		},
		"41094": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.service_zone"
		},
		"41095": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.service_zones"
		},
		"41096": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_rule"
		},
		"41097": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_rules"
		},
		"41098": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_type"
		},
		"41099": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_types"
		},
		"41100": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option"
		},
		"41101": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_options"
		},
		"41102": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_profile"
		},
		"41103": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_profiles"
		},
		"41104": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.notification"
		},
		"41105": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.notifications"
		},
		"41106": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.region"
		},
		"41107": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.regions"
		},
		"41108": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.country"
		},
		"41109": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.countries"
		},
		"41110": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.currency"
		},
		"41111": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.currencies"
		},
		"41112": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_payment_collection"
		},
		"41113": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_payment_collections"
		},
		"41114": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_promotion"
		},
		"41115": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_promotions"
		},
		"41116": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_provider"
		},
		"41117": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_providers"
		},
		"41118": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_set"
		},
		"41119": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_sets"
		},
		"41120": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_cart"
		},
		"41121": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_carts"
		},
		"41122": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_fulfillment"
		},
		"41123": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_fulfillments"
		},
		"41124": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_payment_collection"
		},
		"41125": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_payment_collections"
		},
		"41126": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_promotion"
		},
		"41127": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_promotions"
		},
		"41128": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_fulfillment"
		},
		"41129": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_fulfillments"
		},
		"41130": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_sales_channel"
		},
		"41131": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_sales_channels"
		},
		"41132": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_inventory_item"
		},
		"41133": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_inventory_items"
		},
		"41134": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_price_set"
		},
		"41135": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_price_sets"
		},
		"41136": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.publishable_api_key_sales_channel"
		},
		"41137": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.publishable_api_key_sales_channels"
		},
		"41138": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.region_payment_provider"
		},
		"41139": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.region_payment_providers"
		},
		"41140": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channel_location"
		},
		"41141": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channel_locations"
		},
		"41142": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_price_set"
		},
		"41143": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_price_sets"
		},
		"41144": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "RemoteQueryFilters"
		},
		"41145": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "TEntry"
		},
		"41146": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "RemoteQueryEntryPointsLevel"
		},
		"41147": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "Exclusion"
		},
		"41148": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "Lim"
		},
		"41149": {
			"sourceFileName": "../../../../packages/core/types/src/notification/index.ts",
			"qualifiedName": ""
		},
		"41150": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment"
		},
		"41151": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.content"
		},
		"41152": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.filename"
		},
		"41153": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.content_type"
		},
		"41154": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.disposition"
		},
		"41155": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "Attachment.id"
		},
		"41156": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO"
		},
		"41157": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.id"
		},
		"41158": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.to"
		},
		"41159": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.from"
		},
		"41160": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.attachments"
		},
		"41161": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.channel"
		},
		"41162": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.template"
		},
		"41163": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.data"
		},
		"41164": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.trigger_type"
		},
		"41165": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_id"
		},
		"41166": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_type"
		},
		"41167": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.receiver_id"
		},
		"41168": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.original_notification_id"
		},
		"41169": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.external_id"
		},
		"41170": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider_id"
		},
		"41171": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider"
		},
		"41172": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.created_at"
		},
		"41173": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.status"
		},
		"41174": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO"
		},
		"41175": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.id"
		},
		"41176": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.handle"
		},
		"41177": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.name"
		},
		"41178": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.channels"
		},
		"41179": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps"
		},
		"41180": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.q"
		},
		"41181": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.to"
		},
		"41182": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.channel"
		},
		"41183": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.template"
		},
		"41184": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.trigger_type"
		},
		"41185": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_id"
		},
		"41186": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_type"
		},
		"41187": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.receiver_id"
		},
		"41188": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.created_at"
		},
		"41189": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"41190": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"41191": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationContent"
		},
		"41192": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationContent.subject"
		},
		"41193": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationContent.text"
		},
		"41194": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationContent.html"
		},
		"41195": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/logger.ts",
			"qualifiedName": "LocalNotificationServiceOptions"
		},
		"41196": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions"
		},
		"41197": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.api_key"
		},
		"41198": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.from"
		},
		"41199": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO"
		},
		"41200": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.to"
		},
		"41201": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.channel"
		},
		"41202": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.template"
		},
		"41203": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.data"
		},
		"41204": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.content"
		},
		"41205": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.trigger_type"
		},
		"41206": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_id"
		},
		"41207": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_type"
		},
		"41208": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.receiver_id"
		},
		"41209": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.original_notification_id"
		},
		"41210": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.idempotency_key"
		},
		"41211": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService"
		},
		"41212": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"41213": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"41214": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"41215": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41216": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"41217": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"41218": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41219": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"41220": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"41221": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "notificationId"
		},
		"41222": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"41223": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41224": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"41225": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"41226": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"41227": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"41228": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41229": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"41230": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"41231": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"41232": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"41233": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41247": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationDTO"
		},
		"41248": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.to"
		},
		"41249": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.from"
		},
		"41250": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.attachments"
		},
		"41251": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.channel"
		},
		"41252": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.template"
		},
		"41253": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.data"
		},
		"41254": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.content"
		},
		"41255": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationResultsDTO"
		},
		"41256": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.id"
		},
		"41257": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider"
		},
		"41258": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"41259": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"41260": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "notification"
		},
		"41261": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"41262": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"41263": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"41264": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"41265": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"41266": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"41267": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"41268": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"41269": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"41270": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"41271": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"41272": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"41273": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"41274": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41275": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"41276": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"41277": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"41278": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41279": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"41280": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"41281": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41282": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"41283": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"41284": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"41285": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"41286": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41287": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"41288": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"41289": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"41290": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"41291": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41292": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"41293": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"41294": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"41295": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41296": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"41297": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"41298": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41299": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"41300": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"41301": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"41302": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"41303": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"41304": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"41305": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/index.ts",
			"qualifiedName": ""
		},
		"41306": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"41307": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"41308": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"41309": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"41310": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"41311": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"41312": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"41313": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"41314": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"41315": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"41316": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"41317": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"41318": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"41319": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"41320": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"41321": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"41322": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"41323": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"41324": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"41325": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"41326": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"41327": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"41328": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.fulfillment_sets"
		},
		"41329": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"41330": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"41331": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"41332": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"41333": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"41334": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"41335": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps"
		},
		"41336": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.q"
		},
		"41337": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.id"
		},
		"41338": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.name"
		},
		"41339": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"41340": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"41341": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressInput"
		},
		"41342": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"41343": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"41344": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"41345": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"41346": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"41347": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"41348": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"41349": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"41350": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"41351": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "CreateStockLocationInput"
		},
		"41352": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"41353": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"41354": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"41355": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"41356": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"41357": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpdateStockLocationInput"
		},
		"41358": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"41359": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"41360": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"41361": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"41362": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"41363": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpsertStockLocationInput"
		},
		"41364": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "name"
		},
		"41365": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address_id"
		},
		"41366": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address"
		},
		"41367": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "metadata"
		},
		"41368": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"41369": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService"
		},
		"41370": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"41371": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"41372": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"41373": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"41374": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41375": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"41376": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"41377": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"41378": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"41379": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41380": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"41381": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"41382": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"41383": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"41384": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41385": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"41386": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"41387": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"41388": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41389": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"41390": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"41391": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41392": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"41393": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"41394": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"41395": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41396": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"41397": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"41398": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41399": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"41400": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"41401": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"41402": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"41403": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41404": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"41405": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"41406": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"41407": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41408": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"41409": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"41410": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"41411": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"41412": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"41413": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"41414": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"41415": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"41416": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"41417": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41418": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"41419": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"41420": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"41421": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"41422": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"41423": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41437": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"41438": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"41439": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"41440": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"41441": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"41442": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"41443": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"41444": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"41445": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"41446": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"41447": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"41448": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"41449": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"41450": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"qualifiedName": ""
		},
		"41451": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO"
		},
		"41452": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.sku"
		},
		"41453": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.hs_code"
		},
		"41454": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.weight"
		},
		"41455": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.length"
		},
		"41456": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.height"
		},
		"41457": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.width"
		},
		"41458": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.origin_country"
		},
		"41459": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.mid_code"
		},
		"41460": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.material"
		},
		"41461": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.title"
		},
		"41462": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.description"
		},
		"41463": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.thumbnail"
		},
		"41464": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.metadata"
		},
		"41465": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO"
		},
		"41466": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO.inventoryItems"
		},
		"41467": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"41468": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"41469": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"41470": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"41471": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"41472": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"41473": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"41474": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_identity_id"
		},
		"41475": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"41476": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"41477": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"41478": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"41479": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"41480": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"41481": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"41482": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"41483": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"41484": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"41485": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"41486": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"41487": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"41488": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"41489": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"41490": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"41491": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"41492": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"41493": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"41494": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"41495": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"41496": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"41497": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"41498": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"41499": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"41500": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"41501": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.attribute"
		},
		"41502": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"41503": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"41504": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"41505": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"41506": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"41507": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"41508": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"41509": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"41510": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"41511": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"41512": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"41513": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"41514": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"41515": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"41516": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"41517": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"41518": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"41519": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"41520": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"41521": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"41522": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"41523": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"41524": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"41525": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"41526": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"41527": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"41528": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"41529": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"41530": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"41531": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"41532": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"41533": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"41534": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": ""
		},
		"41535": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput"
		},
		"41536": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput.product_categories"
		},
		"41537": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput"
		},
		"41538": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.selector"
		},
		"41539": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.update"
		},
		"41540": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
		},
		"41541": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"41542": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"41543": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"41544": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"qualifiedName": ""
		},
		"41545": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput"
		},
		"41546": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput.reservations"
		},
		"41547": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowOutput"
		},
		"41548": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput"
		},
		"41549": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput.updates"
		},
		"41550": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowOutput"
		},
		"41551": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"qualifiedName": ""
		},
		"41552": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO"
		},
		"41553": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.id"
		},
		"41554": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.workflow_id"
		},
		"41555": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.transaction_id"
		},
		"41556": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.execution"
		},
		"41557": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.context"
		},
		"41558": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.state"
		},
		"41559": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.created_at"
		},
		"41560": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.updated_at"
		},
		"41561": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.deleted_at"
		},
		"41562": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps"
		},
		"41563": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.id"
		},
		"41564": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.workflow_id"
		},
		"41565": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.transaction_id"
		},
		"41566": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.state"
		},
		"41567": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"41568": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"41569": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO"
		},
		"41570": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.workflow_id"
		},
		"41571": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.transaction_id"
		},
		"41572": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.execution"
		},
		"41573": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.context"
		},
		"41574": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.state"
		},
		"41575": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "Acknowledgement"
		},
		"41576": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41577": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"41578": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"41579": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"41580": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.hasFinished"
		},
		"41581": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.hasFailed"
		},
		"41582": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO"
		},
		"41583": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.transactionId"
		},
		"41584": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"41585": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"41586": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"41587": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"41588": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.logOnError"
		},
		"41589": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"41590": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.T"
		},
		"41591": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IdempotencyKeyParts"
		},
		"41592": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41593": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"41594": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"41595": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepId"
		},
		"41596": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.action"
		},
		"41597": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService"
		},
		"41598": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"41599": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"41600": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "idOrObject"
		},
		"41601": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41602": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflow_id"
		},
		"41603": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"41604": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"41605": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41606": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"41607": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"41608": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"41609": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"41610": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41611": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"41612": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"41613": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"41614": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"41615": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41616": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"41617": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"41618": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"41619": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"41620": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41621": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41622": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.errors"
		},
		"41623": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction"
		},
		"41624": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.result"
		},
		"41625": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"41626": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"41627": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"41628": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"41629": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "transactionId"
		},
		"41630": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"41631": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41632": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"41633": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"41634": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"41635": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41636": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"41637": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"41638": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"41639": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41640": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"41641": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"41642": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"41643": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41644": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"41645": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"41646": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"41647": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41648": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"41649": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"41650": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"41651": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41652": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"41653": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"41654": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriber"
		},
		"41655": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"41656": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41657": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"41658": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"41659": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"41660": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"41661": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"41662": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"41663": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberOrId"
		},
		"41664": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41678": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO"
		},
		"41679": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.quantity"
		},
		"41680": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_id"
		},
		"41681": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.title"
		},
		"41682": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.subtitle"
		},
		"41683": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.thumbnail"
		},
		"41684": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_id"
		},
		"41685": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_title"
		},
		"41686": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_description"
		},
		"41687": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_subtitle"
		},
		"41688": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_type"
		},
		"41689": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_collection"
		},
		"41690": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.product_handle"
		},
		"41691": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_sku"
		},
		"41692": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_barcode"
		},
		"41693": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_title"
		},
		"41694": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.variant_option_values"
		},
		"41695": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.requires_shipping"
		},
		"41696": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_discountable"
		},
		"41697": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_tax_inclusive"
		},
		"41698": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.is_giftcard"
		},
		"41699": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.compare_at_unit_price"
		},
		"41700": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.unit_price"
		},
		"41701": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartCreateLineItemDTO.metadata"
		},
		"41702": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO"
		},
		"41703": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.cart"
		},
		"41704": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.item"
		},
		"41705": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateLineItemInCartWorkflowInputDTO.update"
		},
		"41706": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO"
		},
		"41707": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.first_name"
		},
		"41708": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.last_name"
		},
		"41709": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.phone"
		},
		"41710": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.company"
		},
		"41711": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.address_1"
		},
		"41712": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.address_2"
		},
		"41713": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.city"
		},
		"41714": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.country_code"
		},
		"41715": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.province"
		},
		"41716": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.postal_code"
		},
		"41717": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartAddressDTO.metadata"
		},
		"41718": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO"
		},
		"41719": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.region_id"
		},
		"41720": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.customer_id"
		},
		"41721": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.sales_channel_id"
		},
		"41722": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.email"
		},
		"41723": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.currency_code"
		},
		"41724": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address_id"
		},
		"41725": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address_id"
		},
		"41726": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.shipping_address"
		},
		"41727": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.billing_address"
		},
		"41728": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.metadata"
		},
		"41729": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.items"
		},
		"41730": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreateCartWorkflowInputDTO.promo_codes"
		},
		"41731": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO"
		},
		"41732": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO.items"
		},
		"41733": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "AddToCartWorkflowInputDTO.cart"
		},
		"41734": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO"
		},
		"41735": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.id"
		},
		"41736": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.promo_codes"
		},
		"41737": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.region_id"
		},
		"41738": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.customer_id"
		},
		"41739": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.sales_channel_id"
		},
		"41740": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.email"
		},
		"41741": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.currency_code"
		},
		"41742": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.metadata"
		},
		"41743": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.shipping_address"
		},
		"41744": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "UpdateCartWorkflowInputDTO.billing_address"
		},
		"41745": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO"
		},
		"41746": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.cart_id"
		},
		"41747": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CreatePaymentCollectionForCartWorkflowInputDTO.metadata"
		},
		"41748": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO"
		},
		"41749": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.customer"
		},
		"41750": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.product"
		},
		"41751": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.region"
		},
		"41752": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.id"
		},
		"41753": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CartWorkflowDTO.payment_collection"
		},
		"41754": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO"
		},
		"41755": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.cart_id"
		},
		"41756": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.is_return"
		},
		"41757": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.sales_channel_id"
		},
		"41758": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.currency_code"
		},
		"41759": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ListShippingOptionsForCartWorkflowInputDTO.shipping_address"
		},
		"41760": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41761": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.city"
		},
		"41762": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.country_code"
		},
		"41763": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.province"
		},
		"41764": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "PricedShippingOptionDTO"
		},
		"41765": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "PricedShippingOptionDTO.amount"
		},
		"41766": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CompleteCartWorkflowInputDTO"
		},
		"41767": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "CompleteCartWorkflowInputDTO.id"
		},
		"41768": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO"
		},
		"41769": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.sales_channel_id"
		},
		"41770": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.variants"
		},
		"41771": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41772": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"41773": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.manage_inventory"
		},
		"41774": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"41775": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41776": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"41777": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.variant_id"
		},
		"41778": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.required_quantity"
		},
		"41779": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.inventory"
		},
		"41780": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41781": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.location_levels"
		},
		"41782": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41783": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"41784": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41785": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"41786": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"41787": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41788": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"41789": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.items"
		},
		"41790": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41791": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.variant_id"
		},
		"41792": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.quantity"
		},
		"41793": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"41794": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "ConfirmVariantInventoryWorkflowInputDTO.itemsToUpdate"
		},
		"41795": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41796": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"41797": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type"
		},
		"41798": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.variant_id"
		},
		"41799": {
			"sourceFileName": "../../../../packages/core/types/src/cart/workflows.ts",
			"qualifiedName": "__type.quantity"
		},
		"41800": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"41801": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"41802": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"41803": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"41804": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"41805": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"41806": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"41807": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"41808": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"41809": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"41810": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"41811": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"41812": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"41813": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"41814": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"41815": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"41816": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"41817": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "AddFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"41818": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"41819": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"41820": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "RemoveFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"41821": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"41822": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.ids"
		},
		"41823": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "UpdateFulfillmentShippingOptionRulesWorkflowDTO"
		},
		"41824": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type"
		},
		"41825": {
			"sourceFileName": "../../../../packages/core/types/src/fulfillment/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"41826": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"41827": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41828": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"41829": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"41830": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"41831": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"41832": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"41833": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"41834": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"41835": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"41836": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"41837": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"41838": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"41839": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"41840": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"41841": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"41842": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"41843": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"41844": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41845": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"41846": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"41847": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"41848": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"41849": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"41850": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41851": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"41852": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"41853": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"41854": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"41855": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"41856": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"41857": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"41858": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"41859": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"41860": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"41861": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"41862": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"41863": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"41864": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41865": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"41866": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"41867": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"41868": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"41869": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41870": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"41872": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"41873": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"41874": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"41875": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41876": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"41878": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"41879": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"41880": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"41881": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"41882": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"41884": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41885": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"41886": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"41887": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"41888": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "InternalJoinerServiceConfig"
		},
		"41889": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"41890": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"41891": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"41892": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"41893": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"41894": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"41895": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"41896": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"41897": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.entity"
		},
		"41898": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"41899": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"41900": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"41901": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule"
		},
		"41902": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"41903": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"41904": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"41905": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"41906": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41907": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"41908": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"41909": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"41910": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"41911": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41912": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"41913": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"41914": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"41915": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"41916": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41917": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"41918": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"41919": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"41920": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"41921": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41922": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"41923": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"41924": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"41925": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41926": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"41927": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"41928": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"41929": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"41930": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41931": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"41932": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"41933": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"41934": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"41935": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"41949": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "PlannerActionLinkDescriptor"
		},
		"41950": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"41951": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModule"
		},
		"41952": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModule"
		},
		"41953": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModel"
		},
		"41954": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModel"
		},
		"41955": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "LinkMigrationsPlannerAction"
		},
		"41956": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"41957": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"41958": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"41959": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.sql"
		},
		"41960": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"41961": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"41962": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"41963": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"41964": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"41965": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"41966": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"41967": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"41968": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"41969": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner"
		},
		"41970": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"41971": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"41972": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"41973": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"41974": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "actions"
		},
		"41975": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider"
		},
		"41976": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.execute"
		},
		"41977": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.execute"
		},
		"41978": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "T"
		},
		"41979": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "keys"
		},
		"41980": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "job"
		},
		"41981": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"41982": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"41983": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"41984": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"41985": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.timeout"
		},
		"41986": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"41987": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.acquire"
		},
		"41988": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.acquire"
		},
		"41989": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "keys"
		},
		"41990": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"41991": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"41992": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.ownerId"
		},
		"41993": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.expire"
		},
		"41994": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"41995": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.release"
		},
		"41996": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.release"
		},
		"41997": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "keys"
		},
		"41998": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"41999": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42000": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.ownerId"
		},
		"42001": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"42002": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.releaseAll"
		},
		"42003": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingProvider.releaseAll"
		},
		"42004": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"42005": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42006": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.ownerId"
		},
		"42007": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"42008": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule"
		},
		"42009": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.execute"
		},
		"42010": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.execute"
		},
		"42011": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "T"
		},
		"42012": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "keys"
		},
		"42013": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "job"
		},
		"42014": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42015": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42016": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"42017": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42018": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.timeout"
		},
		"42019": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.provider"
		},
		"42020": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"42021": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.acquire"
		},
		"42022": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.acquire"
		},
		"42023": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "keys"
		},
		"42024": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"42025": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42026": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.ownerId"
		},
		"42027": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.expire"
		},
		"42028": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.provider"
		},
		"42029": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"42030": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.release"
		},
		"42031": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.release"
		},
		"42032": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "keys"
		},
		"42033": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"42034": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42035": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.ownerId"
		},
		"42036": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.provider"
		},
		"42037": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"42038": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.releaseAll"
		},
		"42039": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "ILockingModule.releaseAll"
		},
		"42040": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "args"
		},
		"42041": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type"
		},
		"42042": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.ownerId"
		},
		"42043": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "__type.provider"
		},
		"42044": {
			"sourceFileName": "../../../../packages/core/types/src/locking/index.ts",
			"qualifiedName": "sharedContext"
		},
		"42045": {
			"sourceFileName": "../../../../packages/core/types/src/order/workflows.ts",
			"qualifiedName": "OrderWorkflowDTO"
		},
		"42046": {
			"sourceFileName": "../../../../packages/core/types/src/order/workflows.ts",
			"qualifiedName": "OrderWorkflowDTO.customer"
		},
		"42047": {
			"sourceFileName": "../../../../packages/core/types/src/order/workflows.ts",
			"qualifiedName": "OrderWorkflowDTO.region"
		},
		"42048": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO"
		},
		"42049": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.amount"
		},
		"42050": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.currency_code"
		},
		"42051": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.variant_id"
		},
		"42052": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.max_quantity"
		},
		"42053": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.min_quantity"
		},
		"42054": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPriceWorkflowDTO.rules"
		},
		"42055": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO"
		},
		"42056": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.id"
		},
		"42057": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.variant_id"
		},
		"42058": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.amount"
		},
		"42059": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.currency_code"
		},
		"42060": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.max_quantity"
		},
		"42061": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.min_quantity"
		},
		"42062": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowDTO.rules"
		},
		"42063": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"42064": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.title"
		},
		"42065": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.description"
		},
		"42066": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.starts_at"
		},
		"42067": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.ends_at"
		},
		"42068": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.status"
		},
		"42069": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.rules"
		},
		"42070": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.prices"
		},
		"42071": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO"
		},
		"42072": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.id"
		},
		"42073": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.title"
		},
		"42074": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.description"
		},
		"42075": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.starts_at"
		},
		"42076": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.ends_at"
		},
		"42077": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.status"
		},
		"42078": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListWorkflowInputDTO.rules"
		},
		"42079": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPricesWorkflowDTO"
		},
		"42080": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPricesWorkflowDTO.id"
		},
		"42081": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPricesWorkflowDTO.prices"
		},
		"42082": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO"
		},
		"42083": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.id"
		},
		"42084": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.create"
		},
		"42085": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.update"
		},
		"42086": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowDTO.delete"
		},
		"42087": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult"
		},
		"42088": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult.created"
		},
		"42089": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult.updated"
		},
		"42090": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "BatchPriceListPricesWorkflowResult.deleted"
		},
		"42091": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowDTO"
		},
		"42092": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowDTO.id"
		},
		"42093": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowDTO.prices"
		},
		"42094": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowStepDTO"
		},
		"42095": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowStepDTO.data"
		},
		"42096": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "UpdatePriceListPriceWorkflowStepDTO.variant_price_map"
		},
		"42097": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListsWorkflowStepDTO"
		},
		"42098": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListsWorkflowStepDTO.data"
		},
		"42099": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListsWorkflowStepDTO.variant_price_map"
		},
		"42100": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowStepDTO"
		},
		"42101": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowStepDTO.data"
		},
		"42102": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "__type"
		},
		"42103": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"42104": {
			"sourceFileName": "../../../../packages/core/types/src/pricing/workflows.ts",
			"qualifiedName": "CreatePriceListPricesWorkflowStepDTO.variant_price_map"
		},
		"42105": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"42106": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"42107": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeAncestorsTree"
		},
		"42108": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "AddPromotionRulesWorkflowDTO"
		},
		"42109": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"42110": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_type"
		},
		"42111": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"42112": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"42113": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"42114": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rules"
		},
		"42115": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "RemovePromotionRulesWorkflowDTO"
		},
		"42116": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"42117": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_type"
		},
		"42118": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"42119": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"42120": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.id"
		},
		"42121": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.rule_ids"
		},
		"42122": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "UpdatePromotionRulesWorkflowDTO"
		},
		"42123": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type"
		},
		"42124": {
			"sourceFileName": "../../../../packages/core/types/src/promotion/workflows.ts",
			"qualifiedName": "__type.data"
		},
		"42125": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"42126": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"42127": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"42128": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"42129": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"42132": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"42133": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"42134": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"42135": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"42136": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"42137": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"42138": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"42139": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"42140": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"42141": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"42142": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"42143": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"42144": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"42145": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"42146": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"42147": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"42148": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"42149": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"42150": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"42151": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"42152": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"42153": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"42154": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"42155": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"42156": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"42157": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"42158": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"42159": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "CartLikeWithTotals"
		},
		"42160": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type"
		},
		"42161": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_subtotal"
		},
		"42162": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_tax_total"
		},
		"42163": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_total"
		},
		"42164": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_subtotal"
		},
		"42165": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"42166": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_total"
		},
		"42167": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_subtotal"
		},
		"42168": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_tax_total"
		},
		"42169": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.total"
		},
		"42170": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.subtotal"
		},
		"42171": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.tax_total"
		},
		"42172": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_total"
		},
		"42173": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_tax_total"
		},
		"42174": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"42175": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"42176": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"42177": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_subtotal"
		},
		"42178": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"42179": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_total"
		},
		"42180": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_subtotal"
		},
		"42181": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_tax_total"
		},
		"42182": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"42183": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"42184": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"42185": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"42186": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"42187": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"42188": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"42189": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"42190": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"42191": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"42192": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"42193": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"42195": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"42196": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"42197": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO"
		},
		"42198": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.location_id"
		},
		"42199": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.fulfillment_set_data"
		},
		"42200": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type"
		},
		"42201": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"42202": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.type"
		},
		"42203": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductVariantWorkflowInputDTO"
		},
		"42204": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"42205": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"42206": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
		},
		"42207": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"42208": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"42209": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductWorkflowInputDTO"
		},
		"42210": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"42211": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"42212": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"42213": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"42214": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.variants"
		},
		"42215": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductWorkflowInputDTO"
		},
		"42216": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"42217": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"42218": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"42219": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"42220": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsStringLiteral"
		},
		"42221": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"42222": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Join"
		},
		"42223": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"42224": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "JoinedString"
		},
		"42225": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCapitalizer"
		},
		"42226": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"42227": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SplitAnyCase"
		},
		"42228": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"42229": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"42230": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"42231": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"42232": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"42233": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"42234": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"42235": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"42236": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"42237": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"42238": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"42239": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"42240": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"42241": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"42242": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"42243": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"42244": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"42245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"42247": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"42248": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityClassName"
		},
		"42249": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityValues"
		},
		"42250": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"42251": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.id"
		},
		"42252": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"42253": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"42254": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"42255": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"42256": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"42257": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"42258": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"42259": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"42260": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"42261": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"42262": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"42263": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"42264": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"42265": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"42266": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"42267": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"42268": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"42269": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"42270": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"42271": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"42272": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"42273": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"42274": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"42275": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"42276": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"42277": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim"
		},
		"42278": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.id"
		},
		"42279": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.type"
		},
		"42280": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"42281": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"42282": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.display_id"
		},
		"42283": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_version"
		},
		"42284": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"42285": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.created_by"
		},
		"42286": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.created_at"
		},
		"42287": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.updated_at"
		},
		"42288": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.canceled_at"
		},
		"42289": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.deleted_at"
		},
		"42290": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"42291": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"42292": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"42293": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order"
		},
		"42294": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"42295": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.shipping_methods"
		},
		"42296": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.transactions"
		},
		"42297": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.metadata"
		},
		"42298": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem"
		},
		"42299": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.id"
		},
		"42300": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.claim_id"
		},
		"42301": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.order_id"
		},
		"42302": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.item_id"
		},
		"42303": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.quantity"
		},
		"42304": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.reason"
		},
		"42305": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.raw_quantity"
		},
		"42306": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.metadata"
		},
		"42307": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.created_at"
		},
		"42308": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.updated_at"
		},
		"42309": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems"
		},
		"42310": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"42311": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"42312": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"42313": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"42314": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"42315": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"42316": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"42317": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason"
		},
		"42318": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.MISSING_ITEM"
		},
		"42319": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.WRONG_ITEM"
		},
		"42320": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.PRODUCTION_FAILURE"
		},
		"42321": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.OTHER"
		},
		"42322": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem"
		},
		"42323": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"42324": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"42325": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"42326": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"42327": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod"
		},
		"42328": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"42329": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_amount"
		},
		"42330": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"42331": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"42332": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"42333": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod"
		},
		"42334": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_amount"
		},
		"42335": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"42336": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"42337": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams"
		},
		"42338": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"42339": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"42340": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"42341": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"42342": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"42343": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"42344": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.deleted_at"
		},
		"42345": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"42346": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"42347": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"42348": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42349": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection"
		},
		"42350": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"42351": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"42352": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"42353": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"42354": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"42355": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"42356": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"42357": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"42358": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams"
		},
		"42359": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"42360": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"42361": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"42362": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"42363": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"42364": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"42365": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"42366": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"42367": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"42368": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42369": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"42370": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"42371": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionParams"
		},
		"42372": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42373": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup"
		},
		"42374": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.id"
		},
		"42375": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.name"
		},
		"42376": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.customers"
		},
		"42377": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.metadata"
		},
		"42378": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.created_at"
		},
		"42379": {
			"sourceFileName": "../../../../packages/core/types/src/http/customer-group/common.ts",
			"qualifiedName": "BaseCustomerGroup.updated_at"
		},
		"42380": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange"
		},
		"42381": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.id"
		},
		"42382": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_id"
		},
		"42383": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_id"
		},
		"42384": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.display_id"
		},
		"42385": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_version"
		},
		"42386": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.created_by"
		},
		"42387": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.created_at"
		},
		"42388": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.updated_at"
		},
		"42389": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.canceled_at"
		},
		"42390": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.deleted_at"
		},
		"42391": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.additional_items"
		},
		"42392": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_items"
		},
		"42393": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.no_notification"
		},
		"42394": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.difference_due"
		},
		"42395": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return"
		},
		"42396": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order"
		},
		"42397": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.allow_backorder"
		},
		"42398": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.shipping_methods"
		},
		"42399": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.transactions"
		},
		"42400": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.metadata"
		},
		"42401": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem"
		},
		"42402": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.id"
		},
		"42403": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.exchange_id"
		},
		"42404": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.order_id"
		},
		"42405": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.item_id"
		},
		"42406": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.quantity"
		},
		"42407": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.metadata"
		},
		"42408": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.created_at"
		},
		"42409": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.updated_at"
		},
		"42410": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems"
		},
		"42411": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddItems.items"
		},
		"42412": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"42413": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"42414": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"42415": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"42416": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"42417": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"42418": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason"
		},
		"42419": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.MISSING_ITEM"
		},
		"42420": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.WRONG_ITEM"
		},
		"42421": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.PRODUCTION_FAILURE"
		},
		"42422": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "ExchangeReason.OTHER"
		},
		"42423": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem"
		},
		"42424": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.quantity"
		},
		"42425": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.reason_id"
		},
		"42426": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.description"
		},
		"42427": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateItem.internal_note"
		},
		"42428": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod"
		},
		"42429": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.shipping_option_id"
		},
		"42430": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.custom_amount"
		},
		"42431": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.description"
		},
		"42432": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.internal_note"
		},
		"42433": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeAddShippingMethod.metadata"
		},
		"42434": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod"
		},
		"42435": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.custom_amount"
		},
		"42436": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.internal_note"
		},
		"42437": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/payloads.ts",
			"qualifiedName": "AdminExchangeUpdateShippingMethod.metadata"
		},
		"42438": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile"
		},
		"42439": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"42440": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"42441": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseUploadFile"
		},
		"42442": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"42443": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.files"
		},
		"42444": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"42445": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.name"
		},
		"42446": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.content"
		},
		"42447": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider"
		},
		"42448": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.id"
		},
		"42449": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.is_enabled"
		},
		"42450": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneGeoZone"
		},
		"42451": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneGeoZone"
		},
		"42452": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory"
		},
		"42453": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.id"
		},
		"42454": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.name"
		},
		"42455": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.description"
		},
		"42456": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.handle"
		},
		"42457": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_active"
		},
		"42458": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_internal"
		},
		"42459": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.rank"
		},
		"42460": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category_id"
		},
		"42461": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category"
		},
		"42462": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.category_children"
		},
		"42463": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.products"
		},
		"42464": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.metadata"
		},
		"42465": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.created_at"
		},
		"42466": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.updated_at"
		},
		"42467": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.deleted_at"
		},
		"42468": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams"
		},
		"42469": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"42470": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"42471": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"42472": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"42473": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"42474": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"42475": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_active"
		},
		"42476": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_internal"
		},
		"42477": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"42478": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"42479": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"42480": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"42481": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"42482": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"42483": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"42484": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"42485": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42486": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"42487": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"42488": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams"
		},
		"42489": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"42490": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"42491": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42492": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag"
		},
		"42493": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"42494": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"42495": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"42496": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"42497": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"42498": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"42499": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams"
		},
		"42500": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"42501": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"42502": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"42503": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"42504": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"42505": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"42506": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"42507": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"42508": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42509": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType"
		},
		"42510": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"42511": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"42512": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"42513": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"42514": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"42515": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"42516": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem"
		},
		"42517": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.id"
		},
		"42518": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.quantity"
		},
		"42519": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.received_quantity"
		},
		"42520": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.damaged_quantity"
		},
		"42521": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.reason_id"
		},
		"42522": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.note"
		},
		"42523": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.item_id"
		},
		"42524": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.return_id"
		},
		"42525": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturnItem.metadata"
		},
		"42526": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn"
		},
		"42527": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.id"
		},
		"42528": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_id"
		},
		"42529": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.status"
		},
		"42530": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.exchange_id"
		},
		"42531": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.location_id"
		},
		"42532": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.claim_id"
		},
		"42533": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.order_version"
		},
		"42534": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.display_id"
		},
		"42535": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.no_notification"
		},
		"42536": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.refund_amount"
		},
		"42537": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.items"
		},
		"42538": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.received_at"
		},
		"42539": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.created_at"
		},
		"42540": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/common.ts",
			"qualifiedName": "BaseReturn.canceled_at"
		},
		"42541": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason"
		},
		"42542": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"42543": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"42544": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"42545": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"42546": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"42547": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"42548": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"42549": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminBaseReturnReasonPayload"
		},
		"42550": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"42551": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.value"
		},
		"42552": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.label"
		},
		"42553": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"42554": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"42555": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams"
		},
		"42556": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.q"
		},
		"42557": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.id"
		},
		"42558": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.value"
		},
		"42559": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.label"
		},
		"42560": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.description"
		},
		"42561": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.parent_return_reason_id"
		},
		"42562": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.created_at"
		},
		"42563": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.updated_at"
		},
		"42564": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"42565": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"42566": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"42567": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"42568": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress"
		},
		"42569": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_1"
		},
		"42570": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_2"
		},
		"42571": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.company"
		},
		"42572": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.country_code"
		},
		"42573": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.city"
		},
		"42574": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.phone"
		},
		"42575": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.postal_code"
		},
		"42576": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.province"
		},
		"42577": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule"
		},
		"42578": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference"
		},
		"42579": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference_id"
		},
		"42580": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionExecution"
		},
		"42581": {
			"sourceFileName": "../../../../packages/core/types/src/http/workflow-execution/admin/entities.ts",
			"qualifiedName": "AdminWorkflowExecutionExecution.steps"
		},
		"42582": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints"
		},
		"42583": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant"
		},
		"42584": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.product_variants"
		},
		"42585": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.variant"
		},
		"42586": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.variants"
		},
		"42587": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.product"
		},
		"42588": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.products"
		},
		"42589": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.price"
		},
		"42590": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "FixtureEntryPoints.prices"
		},
		"42591": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "ProductVariant"
		},
		"42592": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"42593": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.__typename"
		},
		"42594": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.id"
		},
		"42595": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.product_id"
		},
		"42596": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.sku"
		},
		"42597": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.prices"
		},
		"42598": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "Product"
		},
		"42599": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"42600": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.__typename"
		},
		"42601": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.id"
		},
		"42602": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.title"
		},
		"42603": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.variants"
		},
		"42604": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "Price"
		},
		"42605": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"42606": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.__typename"
		},
		"42607": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.amount"
		},
		"42608": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-fields.ts",
			"qualifiedName": "RawBigNumberPrefix"
		},
		"42609": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "ExcludedProps"
		},
		"42610": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "TypeOnly"
		},
		"42611": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "T"
		},
		"42612": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "OmitNever"
		},
		"42613": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "T"
		},
		"42614": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "ExtractFiltersOperators"
		},
		"42615": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "__type"
		},
		"42616": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "__type.__typename"
		},
		"42617": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "__type"
		},
		"42618": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "__type.__typename"
		},
		"42619": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "MaybeT"
		},
		"42620": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "Lim"
		},
		"42621": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "Exclusion"
		},
		"42622": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-filters.ts",
			"qualifiedName": "T"
		},
		"42623": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "Depth"
		},
		"42624": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "ExtractOrderByOperators"
		},
		"42625": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "__type"
		},
		"42626": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "__type.__typename"
		},
		"42627": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "__type"
		},
		"42628": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "__type.__typename"
		},
		"42629": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "MaybeT"
		},
		"42630": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "Lim"
		},
		"42631": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "Exclusion"
		},
		"42632": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/query-input-config-order-by.ts",
			"qualifiedName": "T"
		},
		"42633": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "ObjectToRemoteQueryFields"
		},
		"42634": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "__type"
		},
		"42635": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "__type.__typename"
		},
		"42636": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "__type"
		},
		"42637": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "__type.__typename"
		},
		"42638": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "MaybeT"
		},
		"42639": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "Depth"
		},
		"42640": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "Exclusion"
		},
		"42641": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "T"
		},
		"42642": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "__type"
		},
		"42643": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "__type.*"
		},
		"42644": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"42645": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints"
		},
		"42646": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.file"
		},
		"42647": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.files"
		},
		"42648": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.workflow_execution"
		},
		"42649": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.workflow_executions"
		},
		"42650": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_items"
		},
		"42651": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_item"
		},
		"42652": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory"
		},
		"42653": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservation"
		},
		"42654": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservations"
		},
		"42655": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservation_item"
		},
		"42656": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.reservation_items"
		},
		"42657": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_level"
		},
		"42658": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.inventory_levels"
		},
		"42659": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_location_address"
		},
		"42660": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_location_addresses"
		},
		"42661": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_location"
		},
		"42662": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stock_locations"
		},
		"42663": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_set"
		},
		"42664": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_sets"
		},
		"42665": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_list"
		},
		"42666": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_lists"
		},
		"42667": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price"
		},
		"42668": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.prices"
		},
		"42669": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_preference"
		},
		"42670": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.price_preferences"
		},
		"42671": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant"
		},
		"42672": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variants"
		},
		"42673": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.variant"
		},
		"42674": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.variants"
		},
		"42675": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product"
		},
		"42676": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.products"
		},
		"42677": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.simple_product"
		},
		"42678": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_option"
		},
		"42679": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_options"
		},
		"42680": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_type"
		},
		"42681": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_types"
		},
		"42682": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_image"
		},
		"42683": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_images"
		},
		"42684": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_tag"
		},
		"42685": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_tags"
		},
		"42686": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_collection"
		},
		"42687": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_collections"
		},
		"42688": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_category"
		},
		"42689": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_categories"
		},
		"42690": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channel"
		},
		"42691": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channels"
		},
		"42692": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_address"
		},
		"42693": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_addresses"
		},
		"42694": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_group_customer"
		},
		"42695": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_group_customers"
		},
		"42696": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_group"
		},
		"42697": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer_groups"
		},
		"42698": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customer"
		},
		"42699": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.customers"
		},
		"42700": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart"
		},
		"42701": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.carts"
		},
		"42702": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.address"
		},
		"42703": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.addresses"
		},
		"42704": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item"
		},
		"42705": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_items"
		},
		"42706": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_adjustment"
		},
		"42707": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_adjustments"
		},
		"42708": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_tax_line"
		},
		"42709": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.line_item_tax_lines"
		},
		"42710": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method"
		},
		"42711": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_methods"
		},
		"42712": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_adjustment"
		},
		"42713": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_adjustments"
		},
		"42714": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_tax_line"
		},
		"42715": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_method_tax_lines"
		},
		"42716": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotion"
		},
		"42717": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotions"
		},
		"42718": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.campaign"
		},
		"42719": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.campaigns"
		},
		"42720": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotion_rule"
		},
		"42721": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.promotion_rules"
		},
		"42722": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.api_key"
		},
		"42723": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.api_keys"
		},
		"42724": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rate"
		},
		"42725": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rates"
		},
		"42726": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_region"
		},
		"42727": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_regions"
		},
		"42728": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rate_rule"
		},
		"42729": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_rate_rules"
		},
		"42730": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_provider"
		},
		"42731": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.tax_providers"
		},
		"42732": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.store"
		},
		"42733": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.stores"
		},
		"42734": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.store_currency"
		},
		"42735": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.store_currencies"
		},
		"42736": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.user"
		},
		"42737": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.users"
		},
		"42738": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.invite"
		},
		"42739": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.invites"
		},
		"42740": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.auth_identity"
		},
		"42741": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.auth_identities"
		},
		"42742": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order"
		},
		"42743": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.orders"
		},
		"42744": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_address"
		},
		"42745": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_addresses"
		},
		"42746": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item"
		},
		"42747": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_items"
		},
		"42748": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_adjustment"
		},
		"42749": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_adjustments"
		},
		"42750": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_tax_line"
		},
		"42751": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_line_item_tax_lines"
		},
		"42752": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method"
		},
		"42753": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_methods"
		},
		"42754": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_adjustment"
		},
		"42755": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_adjustments"
		},
		"42756": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_tax_line"
		},
		"42757": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping_method_tax_lines"
		},
		"42758": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_transaction"
		},
		"42759": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_transactions"
		},
		"42760": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_change"
		},
		"42761": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_changes"
		},
		"42762": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_change_action"
		},
		"42763": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_change_actions"
		},
		"42764": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_item"
		},
		"42765": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_items"
		},
		"42766": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_summary"
		},
		"42767": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_summaries"
		},
		"42768": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shipping"
		},
		"42769": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_shippings"
		},
		"42770": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_reason"
		},
		"42771": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_reasons"
		},
		"42772": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return"
		},
		"42773": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.returns"
		},
		"42774": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_item"
		},
		"42775": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_items"
		},
		"42776": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim"
		},
		"42777": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claims"
		},
		"42778": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_item"
		},
		"42779": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_items"
		},
		"42780": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_item_image"
		},
		"42781": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_claim_item_images"
		},
		"42782": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchange"
		},
		"42783": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchanges"
		},
		"42784": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchange_item"
		},
		"42785": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_exchange_items"
		},
		"42786": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment"
		},
		"42787": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payments"
		},
		"42788": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_collection"
		},
		"42789": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_collections"
		},
		"42790": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_provider"
		},
		"42791": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_providers"
		},
		"42792": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_session"
		},
		"42793": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.payment_sessions"
		},
		"42794": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.refund_reason"
		},
		"42795": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.refund_reasons"
		},
		"42796": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_address"
		},
		"42797": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_addresses"
		},
		"42798": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_item"
		},
		"42799": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_items"
		},
		"42800": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_label"
		},
		"42801": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_labels"
		},
		"42802": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_provider"
		},
		"42803": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_providers"
		},
		"42804": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_set"
		},
		"42805": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment_sets"
		},
		"42806": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillment"
		},
		"42807": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.fulfillments"
		},
		"42808": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.geo_zone"
		},
		"42809": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.geo_zones"
		},
		"42810": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.service_zone"
		},
		"42811": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.service_zones"
		},
		"42812": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_rule"
		},
		"42813": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_rules"
		},
		"42814": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_type"
		},
		"42815": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_types"
		},
		"42816": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option"
		},
		"42817": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_options"
		},
		"42818": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_profile"
		},
		"42819": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_profiles"
		},
		"42820": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.notification"
		},
		"42821": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.notifications"
		},
		"42822": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.region"
		},
		"42823": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.regions"
		},
		"42824": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.country"
		},
		"42825": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.countries"
		},
		"42826": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.currency"
		},
		"42827": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.currencies"
		},
		"42828": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_payment_collection"
		},
		"42829": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_payment_collections"
		},
		"42830": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_promotion"
		},
		"42831": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.cart_promotions"
		},
		"42832": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_provider"
		},
		"42833": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_providers"
		},
		"42834": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_set"
		},
		"42835": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.location_fulfillment_sets"
		},
		"42836": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_cart"
		},
		"42837": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_carts"
		},
		"42838": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_fulfillment"
		},
		"42839": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_fulfillments"
		},
		"42840": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_payment_collection"
		},
		"42841": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_payment_collections"
		},
		"42842": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_promotion"
		},
		"42843": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.order_promotions"
		},
		"42844": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_fulfillment"
		},
		"42845": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.return_fulfillments"
		},
		"42846": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_sales_channel"
		},
		"42847": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_sales_channels"
		},
		"42848": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_inventory_item"
		},
		"42849": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_inventory_items"
		},
		"42850": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_price_set"
		},
		"42851": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.product_variant_price_sets"
		},
		"42852": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.publishable_api_key_sales_channel"
		},
		"42853": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.publishable_api_key_sales_channels"
		},
		"42854": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.region_payment_provider"
		},
		"42855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.region_payment_providers"
		},
		"42856": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channel_location"
		},
		"42857": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.sales_channel_locations"
		},
		"42858": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_price_set"
		},
		"42859": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "FixtureEntryPoints.shipping_option_price_sets"
		},
		"42860": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "ProductVariant"
		},
		"42861": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42862": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42863": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.id"
		},
		"42864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.handle"
		},
		"42865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.title"
		},
		"42866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.product"
		},
		"42867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "Product"
		},
		"42868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.id"
		},
		"42871": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.handle"
		},
		"42872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.title"
		},
		"42873": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.description"
		},
		"42874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.variants"
		},
		"42875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channels_link"
		},
		"42876": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"42877": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "SimpleProduct"
		},
		"42878": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.id"
		},
		"42881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.handle"
		},
		"42882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.title"
		},
		"42883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.variants"
		},
		"42884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channels_link"
		},
		"42885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"42886": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "ProductCategory"
		},
		"42887": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42888": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42889": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.id"
		},
		"42890": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.handle"
		},
		"42891": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.title"
		},
		"42892": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "SalesChannel"
		},
		"42893": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42894": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42895": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.id"
		},
		"42896": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.name"
		},
		"42897": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.description"
		},
		"42898": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.created_at"
		},
		"42899": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updated_at"
		},
		"42900": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.products_link"
		},
		"42901": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.api_keys_link"
		},
		"42902": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.locations_link"
		},
		"42903": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkCartPaymentCollection"
		},
		"42904": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42905": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42906": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.cart_id"
		},
		"42907": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.payment_collection_id"
		},
		"42908": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42909": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42910": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42911": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkCartPromotion"
		},
		"42912": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42913": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42914": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.cart_id"
		},
		"42915": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.promotion_id"
		},
		"42916": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42917": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42918": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42919": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkLocationFulfillmentProvider"
		},
		"42920": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42921": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42922": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.stock_location_id"
		},
		"42923": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.fulfillment_provider_id"
		},
		"42924": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42925": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42926": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42927": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkLocationFulfillmentSet"
		},
		"42928": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42929": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42930": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.stock_location_id"
		},
		"42931": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.fulfillment_set_id"
		},
		"42932": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42933": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42934": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42935": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkOrderCart"
		},
		"42936": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42937": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42938": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.order_id"
		},
		"42939": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.cart_id"
		},
		"42940": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42941": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42942": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42943": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkOrderFulfillment"
		},
		"42944": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42945": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42946": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.order_id"
		},
		"42947": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"42948": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42949": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42950": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42951": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkOrderPaymentCollection"
		},
		"42952": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42953": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42954": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.order_id"
		},
		"42955": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.payment_collection_id"
		},
		"42956": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42957": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42958": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42959": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkOrderPromotion"
		},
		"42960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42961": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42962": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.order_id"
		},
		"42963": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.promotion_id"
		},
		"42964": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42965": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42966": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42967": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkReturnFulfillment"
		},
		"42968": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42969": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42970": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.return_id"
		},
		"42971": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.fulfillment_id"
		},
		"42972": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42973": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42974": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42975": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkProductSalesChannel"
		},
		"42976": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42977": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.product_id"
		},
		"42979": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"42980": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.product"
		},
		"42981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channel"
		},
		"42982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkProductVariantInventoryItem"
		},
		"42986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42988": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.variant_id"
		},
		"42989": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"42990": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.required_quantity"
		},
		"42991": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.variant"
		},
		"42992": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"42993": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"42994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"42995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkProductVariantPriceSet"
		},
		"42996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"42997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"42998": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.variant_id"
		},
		"42999": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.price_set_id"
		},
		"43000": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.variant"
		},
		"43001": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"43002": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"43003": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"43004": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkPublishableApiKeySalesChannel"
		},
		"43005": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43006": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"43007": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.publishable_key_id"
		},
		"43008": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"43009": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channel"
		},
		"43010": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"43011": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"43012": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"43013": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkRegionPaymentProvider"
		},
		"43014": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43015": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"43016": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.region_id"
		},
		"43017": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.payment_provider_id"
		},
		"43018": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"43019": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"43020": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"43021": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkSalesChannelStockLocation"
		},
		"43022": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43023": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"43024": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channel_id"
		},
		"43025": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.stock_location_id"
		},
		"43026": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.sales_channel"
		},
		"43027": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"43028": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"43029": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"43030": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "LinkShippingOptionPriceSet"
		},
		"43031": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43032": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"43033": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.shipping_option_id"
		},
		"43034": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.price_set_id"
		},
		"43035": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.createdAt"
		},
		"43036": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.updatedAt"
		},
		"43037": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.deletedAt"
		},
		"43038": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "TypeOnly"
		},
		"43039": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "T"
		},
		"43040": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "OmitNever"
		},
		"43041": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "T"
		},
		"43042": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "ExtractFiltersOperators"
		},
		"43043": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "__type"
		},
		"43044": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"43045": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "__type"
		},
		"43046": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "__type.__typename"
		},
		"43047": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "MaybeT"
		},
		"43048": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "Lim"
		},
		"43049": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "Exclusion"
		},
		"43050": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "T"
		},
		"43051": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "Depth"
		},
		"43052": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"43053": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"43054": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"43055": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"43056": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"43057": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"43058": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"43059": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"43060": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"43061": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"43062": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"43063": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"43064": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"43065": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.logOnError"
		},
		"43066": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"43067": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "TData"
		},
		"43068": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCapitalizer"
		},
		"43069": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43070": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"43071": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IncludesSeparator"
		},
		"43072": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43073": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SeparatorCaseParser"
		},
		"43074": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43075": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"43076": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsOneWord"
		},
		"43077": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43078": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsCamelCase"
		},
		"43079": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43080": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCaseParser"
		},
		"43081": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43082": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"43083": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsPascalCase"
		},
		"43084": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43085": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCaseParser"
		},
		"43086": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43087": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"43088": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"43089": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"43090": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"43091": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"43092": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"43093": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry"
		},
		"43094": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry.type"
		},
		"43095": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43096": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43097": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince"
		},
		"43098": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.type"
		},
		"43099": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.province_code"
		},
		"43100": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43101": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43102": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity"
		},
		"43103": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.type"
		},
		"43104": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.province_code"
		},
		"43105": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.city"
		},
		"43106": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43107": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43108": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip"
		},
		"43109": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.type"
		},
		"43110": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.province_code"
		},
		"43111": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.city"
		},
		"43112": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.postal_expression"
		},
		"43113": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43114": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43115": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry"
		},
		"43116": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry.type"
		},
		"43117": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"43118": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43119": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43120": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince"
		},
		"43121": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.type"
		},
		"43122": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.province_code"
		},
		"43123": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"43124": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43125": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43126": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity"
		},
		"43127": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.type"
		},
		"43128": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.province_code"
		},
		"43129": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.city"
		},
		"43130": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"43131": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43132": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43133": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip"
		},
		"43134": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.type"
		},
		"43135": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.province_code"
		},
		"43136": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.city"
		},
		"43137": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.postal_expression"
		},
		"43138": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"43139": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43140": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43141": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "Maybe"
		},
		"43142": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "T"
		},
		"43143": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "Scalars"
		},
		"43144": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"43145": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.ID"
		},
		"43146": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"43147": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.input"
		},
		"43148": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.output"
		},
		"43149": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.String"
		},
		"43150": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"43151": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.input"
		},
		"43152": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.output"
		},
		"43153": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.Boolean"
		},
		"43154": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"43155": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.input"
		},
		"43156": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.output"
		},
		"43157": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.Int"
		},
		"43158": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"43159": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.input"
		},
		"43160": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.output"
		},
		"43161": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.Float"
		},
		"43162": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type"
		},
		"43163": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.input"
		},
		"43164": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/__fixtures__/index-service-entry-points.ts",
			"qualifiedName": "__type.output"
		},
		"43165": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "IndexOperatorMap"
		},
		"43166": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type"
		},
		"43167": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$eq"
		},
		"43168": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$lt"
		},
		"43169": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$lte"
		},
		"43170": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$gt"
		},
		"43171": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$gte"
		},
		"43172": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$ne"
		},
		"43173": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$in"
		},
		"43174": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$is"
		},
		"43175": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$like"
		},
		"43176": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "__type.$ilike"
		},
		"43177": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/index-operator-map.ts",
			"qualifiedName": "T"
		},
		"43178": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "CleanupObject"
		},
		"43179": {
			"sourceFileName": "../../../../packages/core/types/src/index-data/query-config/common.ts",
			"qualifiedName": "T"
		},
		"43180": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "RawBigNumberPrefix"
		},
		"43181": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "ExcludedProps"
		},
		"43182": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "TypeOnly"
		},
		"43183": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/object-to-remote-query-fields.ts",
			"qualifiedName": "T"
		},
		"43184": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "Scalars"
		},
		"43185": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43186": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.ID"
		},
		"43187": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43188": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43189": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43190": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.String"
		},
		"43191": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43192": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43193": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43194": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.Boolean"
		},
		"43195": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43196": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43197": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43198": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.Int"
		},
		"43199": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43200": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43201": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43202": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.Float"
		},
		"43203": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43204": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43205": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43206": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.DateTime"
		},
		"43207": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43208": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43209": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43210": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.JSON"
		},
		"43211": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type"
		},
		"43212": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.input"
		},
		"43213": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "__type.output"
		},
		"43214": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "Maybe"
		},
		"43215": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/__fixtures__/remote-query.ts",
			"qualifiedName": "T"
		},
		"43216": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "ExcludedProps"
		},
		"43217": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "CleanupObject"
		},
		"43218": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/to-remote-query.ts",
			"qualifiedName": "T"
		},
		"43219": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Separator"
		},
		"43220": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "WordInCamelCase"
		},
		"43221": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"43222": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Word"
		},
		"43223": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"43224": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"43225": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone"
		},
		"43226": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"43227": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43228": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43229": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone"
		},
		"43230": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"43231": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"43232": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"43233": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"43234": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"43235": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"43236": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"43237": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"43238": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"43239": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"43240": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"43241": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"43242": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"43243": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"43244": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"43245": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/index.ts",
			"2": "../../../../packages/core/types/src/admin/index.ts",
			"3": "../../../../packages/core/types/src/cache/index.ts",
			"4": "../../../../packages/core/types/src/common/index.ts",
			"5": "../../../../packages/core/types/src/dal/index.ts",
			"6": "../../../../packages/core/types/src/dml/index.ts",
			"7": "../../../../packages/core/types/src/event-bus/index.ts",
			"8": "../../../../packages/core/types/src/feature-flag/index.ts",
			"9": "../../../../packages/core/types/src/file/index.ts",
			"10": "../../../../packages/core/types/src/http/index.ts",
			"11": "../../../../packages/core/types/src/index-data/index.ts",
			"12": "../../../../packages/core/types/src/inventory/index.ts",
			"13": "../../../../packages/core/types/src/logger/index.ts",
			"14": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"15": "../../../../packages/core/types/src/notification/index.ts",
			"16": "../../../../packages/core/types/src/search/index.ts",
			"17": "../../../../packages/core/types/src/stock-location/index.ts",
			"18": "../../../../packages/core/types/src/transaction-base/index.ts",
			"19": "../../../../packages/core/types/src/workflow/index.ts",
			"20": "../../../../packages/core/types/src/workflow/common.ts",
			"21": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"22": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"23": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"24": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"25": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"26": "../../../../packages/core/types/src/workflows-sdk/index.ts"
		},
		"reflections": {
			"1": 37634,
			"2": 37653,
			"3": 37654,
			"4": 37668,
			"5": 37880,
			"6": 38071,
			"7": 38191,
			"8": 38264,
			"9": 38283,
			"10": 38374,
			"11": 39989,
			"12": 40106,
			"13": 40458,
			"14": 40516,
			"15": 41149,
			"16": 41261,
			"17": 41305,
			"18": 41437,
			"19": 41439,
			"20": 41440,
			"21": 41450,
			"22": 41467,
			"23": 41484,
			"24": 41534,
			"25": 41544,
			"26": 41551
		}
	}
}
