{
	"id": 32522,
	"name": "types",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 32523,
			"name": "AddressDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 32524,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 32525,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32526,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32527,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32528,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32529,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32530,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32531,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32532,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32533,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32534,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						},
						{
							"id": 32535,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32536,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 32537,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32525,
								32526,
								32527,
								32528,
								32529,
								32530,
								32531,
								32532,
								32533,
								32534,
								32535,
								32536,
								32537
							]
						}
					]
				}
			}
		},
		{
			"id": 32538,
			"name": "DetailWidgetProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The props for detail widgets. All widgets that are rendered in a detail view,\ne.g. the product detail view, should implement this interface.\n\nThe type of the data prop should be the same as the data that is passed to the widget.\nIf the widget is rendered in the product detail view, the data prop should be of\ntype AdminProduct."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```tsx\nimport type { DetailWidgetProps, AdminProduct } from \"@medusajs/types\"\nimport { defineConfig } from \"@medusajs/admin-shared\"\n\nconst ProductWidget = ({ data }: DetailWidgetProps<AdminProduct>) => {\n return <div>{data.title}</div>\n}\n\nexport const config = defineConfig({\n zone: \"product.details.after\",\n})\n\nexport default ProductWidget\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 32539,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 32540,
						"name": "TData",
						"package": "@medusajs/types",
						"qualifiedName": "DetailWidgetProps.TData",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						32539
					]
				}
			],
			"typeParameters": [
				{
					"id": 32540,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 32541,
			"name": "AdminTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {}
		},
		{
			"id": 32542,
			"name": "CacheTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32543,
					"name": "ICacheService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32544,
							"name": "get",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32545,
									"name": "get",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 32546,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 32547,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "reference",
														"target": 32546,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32548,
							"name": "set",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32549,
									"name": "set",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32550,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32551,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 32552,
											"name": "ttl",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32553,
							"name": "invalidate",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32554,
									"name": "invalidate",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32555,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32544,
								32548,
								32553
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32543
					]
				}
			]
		},
		{
			"id": 36046,
			"name": "IsStringLiteral",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36047,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36047,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "intrinsic",
						"name": "string"
					},
					"extendsType": {
						"type": "reference",
						"target": 36047,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"trueType": {
						"type": "literal",
						"value": false
					},
					"falseType": {
						"type": "literal",
						"value": true
					}
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 36411,
			"name": "WordInCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36412,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 36413,
					"name": "Word",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36412,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "reference",
								"target": 36413,
								"name": "Word",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "NextCharacter"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "_"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "NextCharacter"
						},
						"name": "NextCharacter",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Capitalize"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "NextCharacter"
								},
								"name": "NextCharacter",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Capitalize",
						"package": "typescript"
					},
					"trueType": {
						"type": "reference",
						"target": 36413,
						"name": "Word",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"falseType": {
						"type": "reference",
						"target": 36411,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36412,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 36413,
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "NextCharacter"
											},
											"name": "NextCharacter",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "WordInCamelCase",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 36413,
					"name": "Word",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 36410,
			"name": "Separator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "_"
					},
					{
						"type": "literal",
						"value": "-"
					}
				]
			}
		},
		{
			"id": 36340,
			"name": "IncludesSeparator",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36341,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36341,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 36410,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "intrinsic",
								"name": "string"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 36345,
			"name": "IsOneWord",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36346,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36346,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Lowercase"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 36346,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Lowercase",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 36346,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Uppercase"
						},
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 36346,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						],
						"name": "Uppercase",
						"package": "typescript"
					},
					"trueType": {
						"type": "literal",
						"value": true
					},
					"falseType": {
						"type": "literal",
						"value": false
					}
				}
			}
		},
		{
			"id": 36347,
			"name": "IsCamelCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36348,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36348,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Uncapitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 36348,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Uncapitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 36352,
			"name": "IsPascalCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36353,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36353,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Capitalize"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 36353,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Capitalize",
					"package": "typescript"
				},
				"trueType": {
					"type": "literal",
					"value": true
				},
				"falseType": {
					"type": "literal",
					"value": false
				}
			}
		},
		{
			"id": 36342,
			"name": "SeparatorCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "snake_case, CONSTANT_CASE, kebab-case or COBOL-CASE"
					}
				]
			},
			"typeParameters": [
				{
					"id": 36343,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 36344,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36343,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "templateLiteral",
					"head": "",
					"tail": [
						[
							{
								"type": "inferred",
								"name": "Word"
							},
							""
						],
						[
							{
								"type": "reference",
								"target": 36410,
								"name": "Separator",
								"package": "@medusajs/types"
							},
							""
						],
						[
							{
								"type": "inferred",
								"name": "Tail"
							},
							""
						]
					]
				},
				"trueType": {
					"type": "reference",
					"target": 36342,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "rest",
									"elementType": {
										"type": "reference",
										"target": 36344,
										"name": "Tuple",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Lowercase"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Word"
											},
											"name": "Word",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Lowercase",
									"package": "typescript"
								}
							]
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 36343,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "inferred",
									"name": "Word"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "rest",
								"elementType": {
									"type": "reference",
									"target": 36344,
									"name": "Tuple",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Word"
										},
										"name": "Word",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "reference",
						"target": 36344,
						"name": "Tuple",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 36349,
			"name": "CamelCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36350,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 36351,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36350,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "literal",
					"value": ""
				},
				"trueType": {
					"type": "reference",
					"target": 36351,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 36350,
						"name": "Type",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "templateLiteral",
						"head": "",
						"tail": [
							[
								{
									"type": "reference",
									"target": 36411,
									"typeArguments": [
										{
											"type": "reference",
											"target": 36350,
											"name": "Type",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "WordInCamelCase",
									"package": "@medusajs/types"
								},
								""
							],
							[
								{
									"type": "inferred",
									"name": "Tail"
								},
								""
							]
						]
					},
					"trueType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 36350,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "Word"
									},
									""
								],
								[
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
											"qualifiedName": "Tail"
										},
										"name": "Tail",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									""
								]
							]
						},
						"trueType": {
							"type": "reference",
							"target": 36349,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Uncapitalize"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Tail"
											},
											"name": "Tail",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Uncapitalize",
									"package": "typescript"
								},
								{
									"type": "tuple",
									"elements": [
										{
											"type": "rest",
											"elementType": {
												"type": "reference",
												"target": 36351,
												"name": "Tuple",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
														"qualifiedName": "Word"
													},
													"name": "Word",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										}
									]
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 36354,
			"name": "PascalCaseParser",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36355,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36355,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "string"
				},
				"trueType": {
					"type": "reference",
					"target": 36349,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Uncapitalize"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 36355,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "Uncapitalize",
							"package": "typescript"
						}
					],
					"name": "CamelCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "intrinsic",
					"name": "never"
				}
			}
		},
		{
			"id": 36053,
			"name": "SplitAnyCase",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36054,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36340,
					"typeArguments": [
						{
							"type": "reference",
							"target": 36054,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "IncludesSeparator",
					"package": "@medusajs/types"
				},
				"extendsType": {
					"type": "literal",
					"value": true
				},
				"trueType": {
					"type": "reference",
					"target": 36342,
					"typeArguments": [
						{
							"type": "reference",
							"target": 36054,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "SeparatorCaseParser",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 36345,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36054,
								"name": "Type",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "IsOneWord",
						"package": "@medusajs/types"
					},
					"extendsType": {
						"type": "literal",
						"value": true
					},
					"trueType": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Lowercase"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": 36054,
												"name": "Type",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Lowercase",
								"package": "typescript"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 36347,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36054,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsCamelCase",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 36349,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36054,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCaseParser",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 36352,
								"typeArguments": [
									{
										"type": "reference",
										"target": 36054,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "IsPascalCase",
								"package": "@medusajs/types"
							},
							"extendsType": {
								"type": "literal",
								"value": true
							},
							"trueType": {
								"type": "reference",
								"target": 36354,
								"typeArguments": [
									{
										"type": "reference",
										"target": 36054,
										"name": "Type",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "PascalCaseParser",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "tuple"
							}
						}
					}
				}
			}
		},
		{
			"id": 36337,
			"name": "PascalCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36338,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 36339,
					"name": "Tuple",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "readonly",
						"target": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					},
					"default": {
						"type": "tuple"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36338,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 36337,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "rest",
										"elementType": {
											"type": "reference",
											"target": 36339,
											"name": "Tuple",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Capitalize"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
													"qualifiedName": "Head"
												},
												"name": "Head",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Capitalize",
										"package": "typescript"
									}
								]
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 36337,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 36339,
								"name": "Tuple",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "PascalCapitalizer",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 36339,
					"name": "Tuple",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 36051,
			"name": "CamelCapitalizer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36052,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36052,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "First"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "reference",
					"target": 36337,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
								"qualifiedName": "Tail"
							},
							"name": "Tail",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
										"qualifiedName": "First"
									},
									"name": "First",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							]
						}
					],
					"name": "PascalCapitalizer",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "tuple"
				}
			}
		},
		{
			"id": 36048,
			"name": "Join",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36049,
					"name": "Type",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 36050,
					"name": "JoinedString",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"default": {
						"type": "literal",
						"value": ""
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36049,
					"name": "Type",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "tuple",
					"elements": [
						{
							"type": "inferred",
							"name": "Head"
						},
						{
							"type": "rest",
							"elementType": {
								"type": "inferred",
								"name": "Tail"
							}
						}
					]
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
							"qualifiedName": "Head"
						},
						"name": "Head",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "intrinsic",
						"name": "string"
					},
					"trueType": {
						"type": "reference",
						"target": 36048,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": 36050,
											"name": "JoinedString",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
												"qualifiedName": "Head"
											},
											"name": "Head",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									]
								]
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 36048,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
									"qualifiedName": "Tail"
								},
								"name": "Tail",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Join",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 36050,
					"name": "JoinedString",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 36039,
			"name": "SessionOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to pass to "
					},
					{
						"kind": "code",
						"text": "`express-session`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 36040,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the session ID cookie to set in the response (and read from in the request). The default value is "
							},
							{
								"kind": "code",
								"text": "`connect.sid`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#name) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36041,
					"name": "resave",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session should be saved back to the session store, even if the session was never modified during the request. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#resave) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36042,
					"name": "rolling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the session identifier cookie should be force-set on every response. The default value is "
							},
							{
								"kind": "code",
								"text": "`false`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#rolling) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36043,
					"name": "saveUninitialized",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether a session that is \"uninitialized\" is forced to be saved to the store. The default value is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#saveUninitialized) for more details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36044,
					"name": "secret",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The secret to sign the session ID cookie. By default, the value of "
							},
							{
								"kind": "code",
								"text": "`http.cookieSecret`"
							},
							{
								"kind": "text",
								"text": " is used.\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#secret) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36045,
					"name": "ttl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used when calculating the "
							},
							{
								"kind": "code",
								"text": "`Expires`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`Set-Cookie`"
							},
							{
								"kind": "text",
								"text": " attribute of cookies. By default, its value is "
							},
							{
								"kind": "code",
								"text": "`10 * 60 * 60 * 1000`"
							},
							{
								"kind": "text",
								"text": ".\nRefer to [express-session’s documentation](https://www.npmjs.com/package/express-session#cookiemaxage) for details."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36040,
						36041,
						36042,
						36043,
						36044,
						36045
					]
				}
			]
		},
		{
			"id": 32556,
			"name": "CommonTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32663,
					"name": "LinkMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32664,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32665,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32666,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32665,
										32666
									]
								}
							]
						}
					}
				},
				{
					"id": 32667,
					"name": "LinkWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32668,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32669,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32670,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32671,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32669,
										32670,
										32671
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 35526,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput"
						}
					]
				},
				{
					"id": 32672,
					"name": "BatchMethodRequest",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32677,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 32678,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 32679,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32673,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32674,
									"name": "create",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32677,
											"name": "TCreate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 32675,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32678,
											"name": "TUpdate",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 32676,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32679,
											"name": "TDelete",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32674,
										32675,
										32676
									]
								}
							]
						}
					}
				},
				{
					"id": 32680,
					"name": "BatchMethodResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32689,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32681,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32682,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32689,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 32683,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 32689,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								},
								{
									"id": 32684,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 32685,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32686,
													"name": "ids",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 32687,
													"name": "object",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 32688,
													"name": "deleted",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32686,
														32687,
														32688
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32682,
										32683,
										32684
									]
								}
							]
						}
					}
				},
				{
					"id": 32690,
					"name": "BatchWorkflowInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32691,
							"name": "TCreate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 32692,
							"name": "TUpdate",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 32693,
							"name": "TDelete",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 32672,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32691,
								"name": "TCreate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 32692,
								"name": "TUpdate",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 32693,
								"name": "TDelete",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodRequest",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 32694,
					"name": "BatchWorkflowOutput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32695,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 32680,
						"typeArguments": [
							{
								"type": "reference",
								"target": 32695,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "BatchMethodResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 32793,
					"name": "CamelCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32794,
							"name": "Type",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 36046,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32794,
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "IsStringLiteral",
							"package": "@medusajs/types"
						},
						"extendsType": {
							"type": "literal",
							"value": true
						},
						"trueType": {
							"type": "reference",
							"target": 36048,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36051,
									"typeArguments": [
										{
											"type": "reference",
											"target": 36053,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32794,
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "SplitAnyCase",
											"package": "@medusajs/types"
										}
									],
									"name": "CamelCapitalizer",
									"package": "@medusajs/types"
								}
							],
							"name": "Join",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 32794,
							"name": "Type",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 32557,
					"name": "Prettify",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prettify complex types to a flat object structure"
							}
						]
					},
					"typeParameters": [
						{
							"id": 32559,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 32559,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "K"
										},
										"name": "K",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 32559,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32558,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						]
					}
				},
				{
					"id": 32560,
					"name": "WithRequiredProperty",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Utility type used to remove some optional attributes (coming from K) from a type T"
							}
						]
					},
					"typeParameters": [
						{
							"id": 32561,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 32562,
							"name": "K",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 32561,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 32561,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "mapped",
								"parameter": "Property",
								"parameterType": {
									"type": "reference",
									"target": 32562,
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"templateType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "Property"
										},
										"name": "Property",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 32561,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"optionalModifier": "-"
							}
						]
					}
				},
				{
					"id": 32566,
					"name": "BaseEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a table in the database."
							}
						]
					},
					"children": [
						{
							"id": 32567,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32568,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 32569,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32567,
								32568,
								32569
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 32570,
							"name": "SoftDeletableEntity"
						}
					]
				},
				{
					"id": 32570,
					"name": "SoftDeletableEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representing a deletable entity."
							}
						]
					},
					"children": [
						{
							"id": 32572,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of an entity's record."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32567,
								"name": "BaseEntity.id"
							}
						},
						{
							"id": 32573,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32568,
								"name": "BaseEntity.created_at"
							}
						},
						{
							"id": 32574,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was updated."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32569,
								"name": "BaseEntity.updated_at"
							}
						},
						{
							"id": 32571,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date an entity's record was deleted."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32572,
								32573,
								32574,
								32571
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32566,
							"name": "BaseEntity",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32577,
					"name": "FindConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
							},
							{
								"kind": "code",
								"text": "`Entity`"
							},
							{
								"kind": "text",
								"text": " class,\nwhich provides correct typing of field names in its properties."
							}
						]
					},
					"children": [
						{
							"id": 32578,
							"name": "select",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 32589,
												"name": "Entity",
												"package": "@medusajs/types",
												"qualifiedName": "FindConfig.Entity",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 32579,
							"name": "skip",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to skip before retrieving the results."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 32580,
							"name": "take",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A number indicating the number of records to return in the result."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 32581,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being relation names of the entity to retrieve in the result."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32582,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
									},
									{
										"kind": "code",
										"text": "`ASC`"
									},
									{
										"kind": "text",
										"text": "\nto sort retrieved records in an ascending order, or "
									},
									{
										"kind": "code",
										"text": "`DESC`"
									},
									{
										"kind": "text",
										"text": " to sort retrieved records in a descending order."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32583,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"indexSignatures": [
										{
											"id": 32584,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"parameters": [
												{
													"id": 32585,
													"name": "K",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "ASC"
													},
													{
														"type": "literal",
														"value": "DESC"
													}
												]
											}
										}
									]
								}
							}
						},
						{
							"id": 32586,
							"name": "withDeleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
									},
									{
										"kind": "code",
										"text": "`SoftDeletableEntity`"
									},
									{
										"kind": "text",
										"text": " class."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 32587,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined filters"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 32588,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enable ORM specific defined options"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32578,
								32579,
								32580,
								32581,
								32582,
								32586,
								32587,
								32588
							]
						}
					],
					"typeParameters": [
						{
							"id": 32589,
							"name": "Entity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 32625,
					"name": "RequestQueryFields",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields that can be passed in the query parameters of a request."
							}
						]
					},
					"children": [
						{
							"id": 32626,
							"name": "expand",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated relations that should be expanded in the returned data."
									}
								],
								"blockTags": [
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Use "
											},
											{
												"kind": "code",
												"text": "`fields`"
											},
											{
												"kind": "text",
												"text": " instead and the relations will be inferred"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32627,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Comma-separated fields that should be included in the returned data.\nif a field is prefixed with "
									},
									{
										"kind": "code",
										"text": "`+`"
									},
									{
										"kind": "text",
										"text": " it will be added to the default fields, using "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": " will remove it from the default fields.\nwithout prefix it will replace the entire default fields."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32628,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip when retrieving a list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32629,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items returned in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32630,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The field to sort the data by. By default, the sort order is ascending. To change the order to descending, prefix the field name with "
									},
									{
										"kind": "code",
										"text": "`-`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32626,
								32627,
								32628,
								32629,
								32630
							]
						}
					]
				},
				{
					"id": 32631,
					"name": "EmptyQueryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Requests that don't accept any query parameters can use this type."
							}
						]
					}
				},
				{
					"id": 32632,
					"name": "RepositoryTransformOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 35940,
							"name": "ProductCategoryTransformOptions"
						}
					]
				},
				{
					"id": 32633,
					"name": "DateComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on dates."
							}
						]
					},
					"children": [
						{
							"id": 32634,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 32635,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 32636,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 32637,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered date must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32634,
								32635,
								32636,
								32637
							]
						}
					]
				},
				{
					"id": 32638,
					"name": "StringComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on strings."
							}
						]
					},
					"children": [
						{
							"id": 32639,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32640,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32641,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32642,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32643,
							"name": "contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must contain this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32644,
							"name": "starts_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must start with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32645,
							"name": "ends_with",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered string must end with this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32639,
								32640,
								32641,
								32642,
								32643,
								32644,
								32645
							]
						}
					]
				},
				{
					"id": 32646,
					"name": "NumericalComparisonOperator",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Fields used to apply flexible filters on numbers."
							}
						]
					},
					"children": [
						{
							"id": 32647,
							"name": "lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32648,
							"name": "gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32649,
							"name": "gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be greater than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32650,
							"name": "lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filtered number must be less than or equal to this value."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32647,
								32648,
								32649,
								32650
							]
						}
					]
				},
				{
					"id": 32653,
					"name": "SnakeCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32654,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 32654,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"_"
									],
									[
										{
											"type": "reference",
											"target": 32653,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 32653,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "SnakeCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 32654,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 32655,
					"name": "KebabCase",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32656,
							"name": "S",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 32656,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "templateLiteral",
							"head": "",
							"tail": [
								[
									{
										"type": "inferred",
										"name": "T"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "U"
									},
									""
								],
								[
									{
										"type": "inferred",
										"name": "V"
									},
									""
								]
							]
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Uppercase"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
											"qualifiedName": "U"
										},
										"name": "U",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Uppercase",
								"package": "typescript"
							},
							"trueType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Lowercase"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
														"qualifiedName": "T"
													},
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Lowercase",
											"package": "typescript"
										},
										"-"
									],
									[
										{
											"type": "reference",
											"target": 32655,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Lowercase"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																],
																"name": "Lowercase",
																"package": "typescript"
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							},
							"falseType": {
								"type": "templateLiteral",
								"head": "",
								"tail": [
									[
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
												"qualifiedName": "T"
											},
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										""
									],
									[
										{
											"type": "reference",
											"target": 32655,
											"typeArguments": [
												{
													"type": "templateLiteral",
													"head": "",
													"tail": [
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														],
														[
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															""
														]
													]
												}
											],
											"name": "KebabCase",
											"package": "@medusajs/types"
										},
										""
									]
								]
							}
						},
						"falseType": {
							"type": "reference",
							"target": 32656,
							"name": "S",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 32657,
					"name": "MetadataType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 32658,
					"name": "RawRounding",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32659,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32660,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32661,
									"name": "precision",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32660,
										32661
									]
								}
							]
						}
					}
				},
				{
					"id": 32696,
					"name": "AdminOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Admin dashboard configurations."
							}
						]
					},
					"children": [
						{
							"id": 32697,
							"name": "disable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to disable the admin dashboard. If set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the admin dashboard is disabled,\nin both development and production environments. The default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 32698,
							"name": "path",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The path to the admin dashboard. The default value is "
									},
									{
										"kind": "code",
										"text": "`/app`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe value cannot be one of the reserved paths:\n- "
									},
									{
										"kind": "code",
										"text": "`/admin`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/store`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/auth`"
									},
									{
										"kind": "text",
										"text": "\n- "
									},
									{
										"kind": "code",
										"text": "`/`"
									}
								]
							},
							"type": {
								"type": "templateLiteral",
								"head": "/",
								"tail": [
									[
										{
											"type": "intrinsic",
											"name": "string"
										},
										""
									]
								]
							}
						},
						{
							"id": 32699,
							"name": "outDir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The directory where the admin build is output. This is where the build process places the generated files.\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`./build`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32700,
							"name": "backendUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of your Medusa backend. Defaults to an empty string, which means requests will hit the same server that serves the dashboard."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32701,
							"name": "vite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the Vite configuration for the admin dashboard. This function receives the default Vite configuration\nand returns the modified configuration. The default value is "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32702,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 32703,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 32704,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
															"qualifiedName": "InlineConfig"
														},
														"name": "InlineConfig",
														"package": "vite"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/node_modules/vite/dist/node/index.d.ts",
													"qualifiedName": "InlineConfig"
												},
												"name": "InlineConfig",
												"package": "vite"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32697,
								32698,
								32699,
								32700,
								32701
							]
						}
					]
				},
				{
					"id": 32705,
					"name": "HttpCompressionOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "HTTP compression configurations."
							}
						]
					},
					"children": [
						{
							"id": 32706,
							"name": "enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether HTTP compression is enabled. By default, it's "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 32707,
							"name": "level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The level of zlib compression to apply to responses. A higher level will result in better compression but will take longer to complete.\nA lower level will result in less compression but will be much faster. The default value is "
									},
									{
										"kind": "code",
										"text": "`6`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32708,
							"name": "memLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How much memory should be allocated to the internal compression state. It's an integer in the range of 1 (minimum level) and 9 (maximum level).\nThe default value is "
									},
									{
										"kind": "code",
										"text": "`8`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32709,
							"name": "threshold",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The minimum response body size that compression is applied on. Its value can be the number of bytes or any string accepted by the\n[bytes](https://www.npmjs.com/package/bytes) module. The default value is "
									},
									{
										"kind": "code",
										"text": "`1024`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32706,
								32707,
								32708,
								32709
							]
						}
					]
				},
				{
					"id": 32710,
					"name": "ProjectConfigOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Essential configurations related to the Medusa backend, such as database and CORS configurations."
							}
						]
					},
					"children": [
						{
							"id": 32711,
							"name": "databaseName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the database to connect to. If specified in "
									},
									{
										"kind": "code",
										"text": "`databaseUrl`"
									},
									{
										"kind": "text",
										"text": ", then it’s not required to include it.\n\nMake sure to create the PostgreSQL database before using it. You can check how to create a database in\n[PostgreSQL's documentation](https://www.postgresql.org/docs/current/sql-createdatabase.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseName: process.env.DATABASE_NAME ||\n      \"medusa-store\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32712,
							"name": "databaseUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The connection URL of the database. The format of the connection URL for PostgreSQL is:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\npostgres://[user][:password]@[host][:port]/[dbname]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nWhere:\n\n- "
									},
									{
										"kind": "code",
										"text": "`[user]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL username. If not specified, the system's username is used by default. The database user that you use must have create privileges. If you're using the "
									},
									{
										"kind": "code",
										"text": "`postgres`"
									},
									{
										"kind": "text",
										"text": " superuser, then it should have these privileges by default. Otherwise, make sure to grant your user create privileges. You can learn how to do that in [PostgreSQL's documentation](https://www.postgresql.org/docs/current/ddl-priv.html).\n- "
									},
									{
										"kind": "code",
										"text": "`[:password]`"
									},
									{
										"kind": "text",
										"text": ": an optional password for the user. When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the password.\n- "
									},
									{
										"kind": "code",
										"text": "`[host]`"
									},
									{
										"kind": "text",
										"text": ": (required) your PostgreSQL host. When run locally, it should be "
									},
									{
										"kind": "code",
										"text": "`localhost`"
									},
									{
										"kind": "text",
										"text": ".\n- "
									},
									{
										"kind": "code",
										"text": "`[:port]`"
									},
									{
										"kind": "text",
										"text": ": an optional port that the PostgreSQL server is listening on. By default, it's "
									},
									{
										"kind": "code",
										"text": "`5432`"
									},
									{
										"kind": "text",
										"text": ". When provided, make sure to put "
									},
									{
										"kind": "code",
										"text": "`:`"
									},
									{
										"kind": "text",
										"text": " before the port.\n- "
									},
									{
										"kind": "code",
										"text": "`[dbname]`"
									},
									{
										"kind": "text",
										"text": ": (required) the name of the database.\n\nYou can learn more about the connection URL format in [PostgreSQL’s documentation](https://www.postgresql.org/docs/current/libpq-connect.html)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "For example, set the following database URL in your environment variables:\n\n"
											},
											{
												"kind": "code",
												"text": "```bash\nDATABASE_URL=postgres://postgres@localhost/medusa-store\n```"
											},
											{
												"kind": "text",
												"text": "\n\nThen, use the value in "
											},
											{
												"kind": "code",
												"text": "`medusa-config.js`"
											},
											{
												"kind": "text",
												"text": ":\n\n"
											},
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseUrl: process.env.DATABASE_URL,\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32713,
							"name": "databaseSchema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The database schema to connect to. This is not required to provide if you’re using the default schema, which is "
									},
									{
										"kind": "code",
										"text": "`public`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseSchema: process.env.DATABASE_SCHEMA ||\n      \"custom\",\n    // ...\n  },\n  // ...\n})\n```"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32714,
							"name": "databaseLogging",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This configuration specifies what database messages to log. Its value can be one of the following:\n\n- (default) A boolean value that indicates whether any messages should be logged.\n- The string value "
									},
									{
										"kind": "code",
										"text": "`all`"
									},
									{
										"kind": "text",
										"text": " that indicates all types of messages should be logged.\n- An array of log-level strings to indicate which type of messages to show in the logs. The strings can be "
									},
									{
										"kind": "code",
										"text": "`query`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`schema`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`error`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`warn`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`info`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`log`"
									},
									{
										"kind": "text",
										"text": ", or "
									},
									{
										"kind": "code",
										"text": "`migration`"
									},
									{
										"kind": "text",
										"text": ". Refer to [Typeorm’s documentation](https://typeorm.io/logging#logging-options) for more details on what each of these values means.\n\nIf this configuration isn't set, its default value is "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", meaning no database messages are logged."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseLogging: [\"query\", \"error\"]\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/typeorm/logger/LoggerOptions.d.ts",
									"qualifiedName": "LoggerOptions"
								},
								"name": "LoggerOptions",
								"package": "typeorm"
							}
						},
						{
							"id": 32716,
							"name": "databaseDriverOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object that includes additional configurations to pass to the database connection for v2. You can pass any configuration. One defined configuration to pass is\n"
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " which enables support for TLS/SSL connections.\n\nThis is useful for production databases, which can be supported by setting the "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": " attribute of "
									},
									{
										"kind": "code",
										"text": "`ssl`"
									},
									{
										"kind": "text",
										"text": " object to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ".\nDuring development, it’s recommended not to pass this option.\n\n:::note\n\nMake sure to add to the end of the database URL "
									},
									{
										"kind": "code",
										"text": "`?ssl_mode=disable`"
									},
									{
										"kind": "text",
										"text": " as well when disabling "
									},
									{
										"kind": "code",
										"text": "`rejectUnauthorized`"
									},
									{
										"kind": "text",
										"text": ".\n\n:::"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    databaseDriverOptions: process.env.NODE_ENV !== \"development\" ?\n      { ssl: { rejectUnauthorized: false } } : {}\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 32717,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 32718,
													"name": "connection",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 32719,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 32720,
																	"name": "ssl",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"comment": {
																		"summary": [
																			{
																				"kind": "text",
																				"text": "Configure support for TLS/SSL connection"
																			}
																		]
																	},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 32721,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 32722,
																					"name": "rejectUnauthorized",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"comment": {
																						"summary": [
																							{
																								"kind": "text",
																								"text": "Whether to fail connection if the server certificate is verified against the list of supplied CAs and the hostname and no match is found."
																							}
																						]
																					},
																					"type": {
																						"type": "literal",
																						"value": false
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						32722
																					]
																				}
																			]
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		32720
																	]
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														32718
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"id": 32723,
							"name": "redisUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Used to specify the URL to connect to Redis. This is only used for scheduled jobs. If you omit this configuration, scheduled jobs won't work.\n\n:::note\n\nYou must first have Redis installed. You can refer to [Redis's installation guide](https://redis.io/docs/getting-started/installation/).\n\n:::\n\nThe Redis connection URL has the following format:\n\n"
									},
									{
										"kind": "code",
										"text": "```bash\nredis[s]://[[username][:password]@][host][:port][/db-number]\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFor a local Redis installation, the connection URL should be "
									},
									{
										"kind": "code",
										"text": "`redis://localhost:6379`"
									},
									{
										"kind": "text",
										"text": " unless you’ve made any changes to the Redis configuration during installation."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisUrl: process.env.REDIS_URL ||\n      \"redis://localhost:6379\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32724,
							"name": "redisPrefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The prefix set on all keys stored in Redis. The default value is "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": ".\n\nIf this configuration option is provided, it is prepended to "
									},
									{
										"kind": "code",
										"text": "`sess:`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisPrefix: process.env.REDIS_URL || \"medusa:\",\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 32725,
							"name": "redisOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass ioredis. You can refer to [ioredis’s RedisOptions documentation](https://redis.github.io/ioredis/index.html#RedisOptions)\nfor the list of available options."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    redisOptions: {\n      connectionName: process.env.REDIS_CONNECTION_NAME ||\n        \"medusa\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../node_modules/ioredis/built/redis/RedisOptions.d.ts",
									"qualifiedName": "RedisOptions"
								},
								"name": "RedisOptions",
								"package": "ioredis"
							}
						},
						{
							"id": 32726,
							"name": "sessionOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object of options to pass to [express-session](https://www.npmjs.com/package/express-session)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    sessionOptions: {\n      name: process.env.SESSION_NAME || \"custom\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 36039,
								"name": "SessionOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32728,
							"name": "jobsBatchSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the number of staged jobs that are polled from the database. Default is "
									},
									{
										"kind": "code",
										"text": "`1000`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    jobsBatchSize: 100\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32729,
							"name": "workerMode",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's worker mode.\n\nWorkers are processes running separately from the main application. They're useful for executing long-running or resource-heavy tasks in the background, such as importing products.\n\nWith a worker, these tasks are offloaded to a separate process. So, they won't affect the performance of the main application.\n\n![Diagram showcasing how the server and worker work together](https://res.cloudinary.com/dza7lstvk/image/upload/fl_lossy/f_auto/r_16/ar_16:9,c_pad/v1/Medusa%20Book/medusa-worker_klkbch.jpg?_a=BATFJtAA0)\n\nMedusa has three runtime modes:\n\n- Use "
									},
									{
										"kind": "code",
										"text": "`shared`"
									},
									{
										"kind": "text",
										"text": " to run the application in a single process.\n- Use "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": " to run the a worker process only.\n- Use "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": " to run the application server only.\n\nIn production, it's recommended to deploy two instances:\n\n1. One having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`server`"
									},
									{
										"kind": "text",
										"text": ".\n2. Another having the "
									},
									{
										"kind": "code",
										"text": "`workerMode`"
									},
									{
										"kind": "text",
										"text": " configuration set to "
									},
									{
										"kind": "code",
										"text": "`worker`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    workerMode: process.env.WORKER_MODE || \"shared\"\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "shared"
									},
									{
										"type": "literal",
										"value": "worker"
									},
									{
										"type": "literal",
										"value": "server"
									}
								]
							}
						},
						{
							"id": 32730,
							"name": "http",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Configure the application's http-specific settings"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\",\n      compression: {\n        // ...\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32731,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32732,
											"name": "jwtSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create authentication tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": " However, in production, if this configuration is not set an error, an\nerror is thrown and the backend crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtSecret: \"supersecret\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32733,
											"name": "jwtExpiresIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The expiration time for the JWT token. If not provided, the default value is "
													},
													{
														"kind": "code",
														"text": "`24h`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      jwtExpiresIn: \"2d\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32734,
											"name": "cookieSecret",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A random string used to create cookie tokens in the http layer. Although this configuration option is not required, it’s highly recommended to set it for better security.\n\nIn a development environment, if this option is not set, the default secret is "
													},
													{
														"kind": "code",
														"text": "`supersecret`"
													},
													{
														"kind": "text",
														"text": " However, in production, if this configuration is not set, an error is thrown and\nthe backend crashes."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      cookieSecret: \"supersecret\"\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32735,
											"name": "authCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for API Routes starting with "
													},
													{
														"kind": "code",
														"text": "`/auth`"
													},
													{
														"kind": "text",
														"text": ". It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nAUTH_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nAUTH_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nAUTH_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: process.env.AUTH_CORS\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authCors: \"/http:\\\\/\\\\/localhost:700\\\\d+$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32736,
											"name": "compression",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configure HTTP compression from the application layer. If you have access to the HTTP server, the recommended approach would be to enable it there.\nHowever, some platforms don't offer access to the HTTP layer and in those cases, this is a good alternative.\n\nIts value is an object that has the following properties:\n\nIf you enable HTTP compression and you want to disable it for specific API Routes, you can pass in the request header "
													},
													{
														"kind": "code",
														"text": "`\"x-no-compression\": true`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      compression: {\n        enabled: true,\n        level: 6,\n        memLevel: 8,\n        threshold: 1024\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32705,
												"name": "HttpCompressionOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32737,
											"name": "storeCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`store_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for store API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:8000`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 800\nSTORE_CORS=/http://localhost:800\\d+$/\n\n# Allow any origin ending with vercel.app. For example, storefront.vercel.app\nSTORE_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nSTORE_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: process.env.STORE_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      storeCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32738,
											"name": "adminCors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The Medusa backend’s API Routes are protected by Cross-Origin Resource Sharing (CORS). So, only allowed URLs or URLs matching a specified pattern can send requests to the backend’s API Routes.\n\n"
													},
													{
														"kind": "code",
														"text": "`admin_cors`"
													},
													{
														"kind": "text",
														"text": " is a string used to specify the accepted URLs or patterns for admin API Routes. It can either be one accepted origin, or a comma-separated list of accepted origins.\n\nEvery origin in that list must either be:\n\n1. A URL. For example, "
													},
													{
														"kind": "code",
														"text": "`http://localhost:7001`"
													},
													{
														"kind": "text",
														"text": ". The URL must not end with a backslash;\n2. Or a regular expression pattern that can match more than one origin. For example, "
													},
													{
														"kind": "code",
														"text": "`.example.com`"
													},
													{
														"kind": "text",
														"text": ". The regex pattern that the backend tests for is "
													},
													{
														"kind": "code",
														"text": "`^([/~@;%#'])(.*?)\\1([gimsuy]*)$`"
													},
													{
														"kind": "text",
														"text": "."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\n"
															},
															{
																"kind": "code",
																"text": "```bash\n# Allow different ports locally starting with 700\nADMIN_CORS=/http://localhost:700\\d+$/\n\n# Allow any origin ending with vercel.app. For example, admin.vercel.app\nADMIN_CORS=/vercel\\.app$/\n\n# Allow all HTTP requests\nADMIN_CORS=/http://.+/\n```"
															},
															{
																"kind": "text",
																"text": "\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: process.env.ADMIN_CORS,\n    }\n    // ...\n  },\n  // ...\n})\n```"
															},
															{
																"kind": "text",
																"text": "\n\nIf you’re adding the value directly within "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ", make sure to add an extra escaping "
															},
															{
																"kind": "code",
																"text": "`/`"
															},
															{
																"kind": "text",
																"text": " for every backslash in the pattern. For example:\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      adminCors: \"/vercel\\\\.app$/\",\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 32739,
											"name": "authMethodsPerActor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Optionally you can specify the supported authentication providers per actor type (such as user, customer, or any custom actors).\nFor example, you only want to allow SSO logins for "
													},
													{
														"kind": "code",
														"text": "`users`"
													},
													{
														"kind": "text",
														"text": " to the admin, while you want to allow email/password logins for "
													},
													{
														"kind": "code",
														"text": "`customers`"
													},
													{
														"kind": "text",
														"text": " to the storefront.\n\n"
													},
													{
														"kind": "code",
														"text": "`authMethodsPerActor`"
													},
													{
														"kind": "text",
														"text": " is a a map where the actor type (eg. 'user') is the key, and an array of supported auth providers as the value."
													}
												],
												"blockTags": [
													{
														"tag": "@example",
														"content": [
															{
																"kind": "text",
																"text": "Some example values of common use cases:\n\nThen, set the configuration in "
															},
															{
																"kind": "code",
																"text": "`medusa-config.js`"
															},
															{
																"kind": "text",
																"text": ":\n\n"
															},
															{
																"kind": "code",
																"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    http: {\n      authMethodsPerActor: {\n        user: [\"email\"],\n        customer: [\"emailpas\", \"google\"]\n      }\n    }\n    // ...\n  },\n  // ...\n})\n```"
															}
														]
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32732,
												32733,
												32734,
												32735,
												32736,
												32737,
												32738,
												32739
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32711,
								32712,
								32713,
								32714,
								32716,
								32723,
								32724,
								32725,
								32726,
								32728,
								32729,
								32730
							]
						}
					]
				},
				{
					"id": 32740,
					"name": "ConfigModule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configurations for your Medusa backend are in "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " located in the root of your Medusa project. The configurations include database, modules, and plugin configurations, among other configurations.\n\n"
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": " exports an object having the following properties:\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "projectConfig",
								"target": 32741,
								"tsLinkText": "projectConfig"
							},
							{
								"kind": "text",
								"text": " (required): An object that holds general configurations related to the Medusa backend, such as database or CORS configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "admin",
								"target": 32742,
								"tsLinkText": "admin"
							},
							{
								"kind": "text",
								"text": ": An object that holds admin-related configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ConfigModule.plugins | plugins",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
									"qualifiedName": "__type.plugins"
								},
								"tsLinkText": "plugins"
							},
							{
								"kind": "text",
								"text": ": An array of plugin configurations that defines what plugins are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "modules",
								"target": 32747,
								"tsLinkText": "modules"
							},
							{
								"kind": "text",
								"text": ": An object that defines what modules are installed and optionally specifies each of their configurations.\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "featureFlags",
								"target": 32748,
								"tsLinkText": "featureFlags"
							},
							{
								"kind": "text",
								"text": ": An object that enables or disables features guarded by a feature flag.\n\nFor example:\n\n"
							},
							{
								"kind": "code",
								"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  projectConfig: {\n    // ...\n  },\n  admin: {\n    // ...\n  },\n  modules: {\n    // ...\n  },\n  featureFlags: {\n    // ...\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\n---\n\n## Environment Variables\n\nIt's highly recommended to store the values of configurations in environment variables, then reference them within "
							},
							{
								"kind": "code",
								"text": "`medusa-config.js`"
							},
							{
								"kind": "text",
								"text": ".\n\nDuring development, you can set your environment variables in the "
							},
							{
								"kind": "code",
								"text": "`.env`"
							},
							{
								"kind": "text",
								"text": " file at the root of your Medusa backend project. In production,\nsetting the environment variables depends on the hosting provider.\n\n---"
							}
						]
					},
					"children": [
						{
							"id": 32741,
							"name": "projectConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This property holds essential configurations related to the Medusa backend, such as database and CORS configurations."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32710,
								"name": "ProjectConfigOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32742,
							"name": "admin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Admin dashboard configurations."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  admin: {\n    backendUrl: process.env.MEDUSA_BACKEND_URL ||\n      \"http://localhost:9000\"\n  },\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32696,
								"name": "AdminOptions",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 32747,
							"name": "modules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In Medusa, commerce and core logic are modularized to allow developers to extend or replace certain [modules](https://docs.medusajs.com/development/modules/overview)\nwith custom implementations.\n\nAside from installing the module with NPM, you must add it to the exported object in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe keys of the "
									},
									{
										"kind": "code",
										"text": "`modules`"
									},
									{
										"kind": "text",
										"text": " configuration object refer to the module's registration name. Its value can be one of the following:\n\n1. A boolean value indicating whether the module type is enabled. This is only supported for Medusa's commerce and architectural modules;\n2. Or an object having the following properties:\n    1. "
									},
									{
										"kind": "code",
										"text": "`resolve`"
									},
									{
										"kind": "text",
										"text": ": a string indicating the path to the module relative to "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": ", or the module's NPM package name.\n    2. "
									},
									{
										"kind": "code",
										"text": "`options`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object indicating the options to pass to the module.\n    3. "
									},
									{
										"kind": "code",
										"text": "`definition`"
									},
									{
										"kind": "text",
										"text": ": (optional) an object of extra configurations, such as "
									},
									{
										"kind": "code",
										"text": "`isQueryable`"
									},
									{
										"kind": "text",
										"text": " used when a module has relationships."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  modules: {\n    helloModuleService: {\n      resolve: \"./modules/hello\"\n    }\n  }\n  // ...\n})\n```"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "union",
														"types": [
															{
																"type": "reference",
																"target": 34868,
																"name": "InternalModuleDeclaration",
																"package": "@medusajs/types"
															},
															{
																"type": "reference",
																"target": 34879,
																"name": "ExternalModuleDeclaration",
																"package": "@medusajs/types"
															}
														]
													}
												],
												"name": "Partial",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 32748,
							"name": "featureFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Some features in the Medusa backend are guarded by a feature flag. This ensures constant shipping of new features while maintaining the engine’s stability.\n\nYou can specify whether a feature should or shouldn’t be used in your backend by enabling its feature flag. Feature flags can be enabled through either environment\nvariables or through this configuration exported in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.js`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`featureFlags`"
									},
									{
										"kind": "text",
										"text": " configuration is an object. Its properties are the names of the feature flags. Each property’s value is a boolean indicating whether the feature flag is enabled.\n\nYou can find available feature flags and their key name [here](https://github.com/medusajs/medusa/tree/develop/packages/medusa/src/loaders/feature-flags)."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```js title=\"medusa-config.js\"\nmodule.exports = defineConfig({\n  featureFlags: {\n    product_categories: true,\n    // ...\n  }\n  // ...\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\n:::note\n\nAfter enabling a feature flag, make sure to run migrations as it may require making changes to the database.\n\n:::"
											}
										]
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "boolean"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32741,
								32742,
								32747,
								32748
							]
						}
					]
				},
				{
					"id": 32749,
					"name": "PluginDetails",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32750,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32751,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32752,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32753,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32754,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32755,
									"name": "version",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32751,
										32752,
										32753,
										32754,
										32755
									]
								}
							]
						}
					}
				},
				{
					"id": 32756,
					"name": "ExecArgs",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32757,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32758,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 32761,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32759,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32758,
										32759
									]
								}
							]
						}
					}
				},
				{
					"id": 32760,
					"name": "ModuleImplementations",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The following interface acts as a bucket that other modules or the\nutils package can fill using declaration merging"
							}
						]
					}
				},
				{
					"id": 32761,
					"name": "MedusaContainer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Medusa Container extends [Awilix](https://github.com/jeffijoe/awilix) to\nprovide dependency injection functionalities."
							}
						]
					},
					"typeParameters": [
						{
							"id": 32781,
							"name": "Cradle",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "reference",
								"target": 32760,
								"name": "ModuleImplementations",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
											"qualifiedName": "AwilixContainer"
										},
										"name": "AwilixContainer",
										"package": "awilix"
									},
									{
										"type": "literal",
										"value": "resolve"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32762,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32763,
											"name": "resolve",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 32764,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 32765,
															"name": "K",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															}
														}
													],
													"parameters": [
														{
															"id": 32766,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 32765,
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 32767,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 32765,
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 32781,
															"name": "Cradle",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												{
													"id": 32768,
													"name": "resolve",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"typeParameters": [
														{
															"id": 32769,
															"name": "T",
															"variant": "typeParam",
															"kind": 131072,
															"flags": {}
														}
													],
													"parameters": [
														{
															"id": 32770,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 32771,
															"name": "resolveOptions",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../node_modules/awilix/lib/container.d.ts",
																	"qualifiedName": "ResolveOptions"
																},
																"name": "ResolveOptions",
																"package": "awilix"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 32769,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												32763
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 32782,
					"name": "ContainerLike",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32783,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32784,
									"name": "resolve",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 32785,
											"name": "resolve",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"typeParameters": [
												{
													"id": 32786,
													"name": "T",
													"variant": "typeParam",
													"kind": 131072,
													"flags": {},
													"default": {
														"type": "intrinsic",
														"name": "unknown"
													}
												}
											],
											"parameters": [
												{
													"id": 32787,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 32786,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										32784
									]
								}
							]
						}
					}
				},
				{
					"id": 32662,
					"name": "RuleOperatorType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accepted values for the shipping rule option's operator."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "in"
							},
							{
								"type": "literal",
								"value": "eq"
							},
							{
								"type": "literal",
								"value": "ne"
							},
							{
								"type": "literal",
								"value": "gt"
							},
							{
								"type": "literal",
								"value": "gte"
							},
							{
								"type": "literal",
								"value": "lt"
							},
							{
								"type": "literal",
								"value": "lte"
							},
							{
								"type": "literal",
								"value": "nin"
							}
						]
					}
				},
				{
					"id": 32788,
					"name": "WithCalculatedPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 32789,
							"name": "calculated_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 32790,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32791,
											"name": "calculated_amount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 32792,
											"name": "is_calculated_price_tax_inclusive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32791,
												32792
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32789
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32566,
						32570,
						32577,
						32625,
						32631,
						32632,
						32633,
						32638,
						32646,
						32696,
						32705,
						32710,
						32740,
						32760,
						32788
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32663,
						32667,
						32672,
						32680,
						32690,
						32694,
						32793,
						32557,
						32560,
						32653,
						32655,
						32657,
						32658,
						32749,
						32756,
						32761,
						32782,
						32662
					]
				}
			]
		},
		{
			"id": 32795,
			"name": "DAL",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32982,
					"name": "ModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "created_at"
							},
							{
								"type": "literal",
								"value": "updated_at"
							}
						]
					}
				},
				{
					"id": 32983,
					"name": "SoftDeletableModelDateColumns",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "deleted_at"
							},
							{
								"type": "reference",
								"target": 32982,
								"name": "ModelDateColumns",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 32824,
					"name": "BaseFilterable",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 32825,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32827,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32827,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						},
						{
							"id": 32826,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32827,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "BaseFilterable.T",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32827,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32825,
								32826
							]
						}
					],
					"typeParameters": [
						{
							"id": 32827,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33291,
							"name": "AdminClaimListParams"
						},
						{
							"type": "reference",
							"target": 33663,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 33738,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 33864,
							"name": "AdminProductTagListParams"
						},
						{
							"type": "reference",
							"target": 33907,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 34058,
							"name": "AdminReturnReasonListParams"
						},
						{
							"type": "reference",
							"target": 34413,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 34482,
							"name": "FilterableInventoryLevelProps"
						},
						{
							"type": "reference",
							"target": 35170,
							"name": "FilterableNotificationProps"
						},
						{
							"type": "reference",
							"target": 35318,
							"name": "FilterableStockLocationProps"
						},
						{
							"type": "reference",
							"target": 35548,
							"name": "FilterableWorkflowExecutionProps"
						},
						{
							"type": "reference",
							"target": 36164,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 36225,
							"name": "BaseProductCategoryListParams"
						}
					]
				},
				{
					"id": 32828,
					"name": "OptionsQuery",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The options to apply when retrieving an item."
							}
						]
					},
					"children": [
						{
							"id": 32829,
							"name": "populate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Relations to populate in the retrieved items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32830,
							"name": "orderBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Fields to sort-order items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 36060,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32836,
												"name": "T",
												"package": "@medusajs/types",
												"qualifiedName": "OptionsQuery.T",
												"refersToTypeParameter": true
											}
										],
										"name": "Order",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36060,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32836,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "OptionsQuery.T",
													"refersToTypeParameter": true
												}
											],
											"name": "Order",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 32831,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Limit the number of items retrieved in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32832,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of items to skip before the retrieved items in the list."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 32833,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The fields to include in each of the items."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 32834,
							"name": "groupBy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Group results by a field or set of fields."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 32835,
							"name": "filters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the retrieved items."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "boolean"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 36062,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "reference",
														"target": 36062,
														"name": "Dictionary",
														"package": "@medusajs/types"
													}
												]
											}
										],
										"name": "Dictionary",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32829,
								32830,
								32831,
								32832,
								32833,
								32834,
								32835
							]
						}
					],
					"typeParameters": [
						{
							"id": 32836,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						},
						{
							"id": 32837,
							"name": "P",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"default": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					]
				},
				{
					"id": 32838,
					"name": "FindOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify filters and options on a list of items."
							}
						]
					},
					"children": [
						{
							"id": 32839,
							"name": "where",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filters to apply on the items."
									}
								]
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "Key",
										"parameterType": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "number"
												},
												{
													"type": "intrinsic",
													"name": "symbol"
												}
											]
										},
										"templateType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "Key"
													},
													"name": "Key",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 32847,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													},
													{
														"type": "intrinsic",
														"name": "bigint"
													},
													{
														"type": "intrinsic",
														"name": "boolean"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Date"
														},
														"name": "Date",
														"package": "typescript"
													}
												]
											},
											"trueType": {
												"type": "union",
												"types": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "intrinsic",
															"name": "any"
														},
														"objectType": {
															"type": "intrinsic",
															"name": "any"
														}
													},
													{
														"type": "reference",
														"target": 32802,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"name": "OperatorMap",
														"package": "@medusajs/types"
													}
												]
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 32847,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												"extendsType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "U"
													},
													"name": "U",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"trueType": {
													"type": "conditional",
													"checkType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "U"
														},
														"name": "U",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"extendsType": {
														"type": "reflection",
														"declaration": {
															"id": 32840,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"indexSignatures": [
																{
																	"id": 32841,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"parameters": [
																		{
																			"id": 32842,
																			"name": "x",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	],
																	"type": {
																		"type": "inferred",
																		"name": "V"
																	}
																}
															]
														}
													},
													"trueType": {
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "V"
															},
															"name": "V",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "object"
														},
														"trueType": {
															"type": "mapped",
															"parameter": "Key",
															"parameterType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	}
																]
															},
															"templateType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"objectType": {
																		"type": "unknown",
																		"name": "..."
																	}
																},
																"extendsType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"trueType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "unknown",
																			"name": "..."
																		},
																		{
																			"type": "unknown",
																			"name": "..."
																		}
																	]
																},
																"falseType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"extendsType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"trueType": {
																		"type": "unknown",
																		"name": "..."
																	},
																	"falseType": {
																		"type": "unknown",
																		"name": "..."
																	}
																}
															},
															"optionalModifier": "+"
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												},
												"falseType": {
													"type": "intrinsic",
													"name": "never"
												}
											}
										},
										"optionalModifier": "+"
									},
									{
										"type": "reference",
										"target": 32824,
										"typeArguments": [
											{
												"type": "mapped",
												"parameter": "Key",
												"parameterType": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "number"
														},
														{
															"type": "intrinsic",
															"name": "symbol"
														}
													]
												},
												"templateType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "Key"
															},
															"name": "Key",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 32847,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													},
													"extendsType": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "intrinsic",
																"name": "boolean"
															},
															{
																"type": "intrinsic",
																"name": "symbol"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Date"
																},
																"name": "Date",
																"package": "typescript"
															}
														]
													},
													"trueType": {
														"type": "union",
														"types": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "intrinsic",
																	"name": "any"
																},
																"objectType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"type": "reference",
																"target": 32802,
																"typeArguments": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																],
																"name": "OperatorMap",
																"package": "@medusajs/types"
															}
														]
													},
													"falseType": {
														"type": "conditional",
														"checkType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "Key"
																},
																"name": "Key",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 32847,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														"extendsType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																"qualifiedName": "U"
															},
															"name": "U",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"trueType": {
															"type": "conditional",
															"checkType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "U"
																},
																"name": "U",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"extendsType": {
																"type": "reflection",
																"declaration": {
																	"id": 32843,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"indexSignatures": [
																		{
																			"id": 32844,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 32845,
																					"name": "x",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"type": {
																				"type": "inferred",
																				"name": "V"
																			}
																		}
																	]
																}
															},
															"trueType": {
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "V"
																	},
																	"name": "V",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "object"
																},
																"trueType": {
																	"type": "mapped",
																	"parameter": "Key",
																	"parameterType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			}
																		]
																	},
																	"templateType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"extendsType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"trueType": {
																			"type": "unknown",
																			"name": "..."
																		},
																		"falseType": {
																			"type": "unknown",
																			"name": "..."
																		}
																	},
																	"optionalModifier": "+"
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															},
															"falseType": {
																"type": "intrinsic",
																"name": "never"
															}
														},
														"falseType": {
															"type": "intrinsic",
															"name": "never"
														}
													}
												},
												"optionalModifier": "+"
											}
										],
										"name": "BaseFilterable",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 32846,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The options to apply when retrieving the items."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32828,
								"typeArguments": [
									{
										"type": "reference",
										"target": 32847,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "OptionsQuery",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32839,
								32846
							]
						}
					],
					"typeParameters": [
						{
							"id": 32847,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 32848,
					"name": "UpsertWithReplaceConfig",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify the configuration of how the upsert should be performed."
							}
						]
					},
					"children": [
						{
							"id": 32849,
							"name": "relations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The relationships that will be updated/created/deleted as part of the upsert"
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 32850,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32849
							]
						}
					],
					"typeParameters": [
						{
							"id": 32850,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					]
				},
				{
					"id": 32851,
					"name": "PerformedActions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32852,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32853,
									"name": "created",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36067,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 36068,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32854,
									"name": "updated",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36067,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 36068,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 32855,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36067,
												"name": "EntityClassName",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 36068,
												"name": "EntityValues",
												"package": "@medusajs/types"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32853,
										32854,
										32855
									]
								}
							]
						}
					}
				},
				{
					"id": 32856,
					"name": "RepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 32909,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32910,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32911,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 32912,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32913,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 32914,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 32915,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 32911,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 32916,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32917,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32918,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 32919,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 32911,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 32920,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32918,
																32919,
																32920
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36073,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36072,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 32921,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32922,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32923,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 32923,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36085,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36084,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 32924,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32925,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32926,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 32926,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36088,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36087,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 32927,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32928,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32929,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 32930,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 32931,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32929,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36091,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36090,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 32857,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32858,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32859,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32838,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32932,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32860,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32932,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32861,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32862,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32863,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32838,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32932,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32864,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32932,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32865,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32866,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32867,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32868,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32932,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32869,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32870,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32871,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 32872,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 32873,
																"name": "entity",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															},
															{
																"id": 32874,
																"name": "update",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	32873,
																	32874
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 32875,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32932,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32876,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32877,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32878,
											"name": "idsOrPKs",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "mapped",
														"parameter": "Key",
														"parameterType": {
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "number"
																},
																{
																	"type": "intrinsic",
																	"name": "symbol"
																}
															]
														},
														"templateType": {
															"type": "conditional",
															"checkType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "Key"
																	},
																	"name": "Key",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 32932,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															},
															"extendsType": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "bigint"
																	},
																	{
																		"type": "intrinsic",
																		"name": "boolean"
																	},
																	{
																		"type": "intrinsic",
																		"name": "symbol"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Date"
																		},
																		"name": "Date",
																		"package": "typescript"
																	}
																]
															},
															"trueType": {
																"type": "union",
																"types": [
																	{
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "intrinsic",
																			"name": "any"
																		},
																		"objectType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	},
																	{
																		"type": "reference",
																		"target": 32802,
																		"typeArguments": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		],
																		"name": "OperatorMap",
																		"package": "@medusajs/types"
																	}
																]
															},
															"falseType": {
																"type": "conditional",
																"checkType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "Key"
																		},
																		"name": "Key",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 32932,
																		"name": "T",
																		"package": "@medusajs/types",
																		"qualifiedName": "RepositoryService.T",
																		"refersToTypeParameter": true
																	}
																},
																"extendsType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																		"qualifiedName": "U"
																	},
																	"name": "U",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"trueType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																			"qualifiedName": "U"
																		},
																		"name": "U",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"extendsType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 32879,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"indexSignatures": [
																				{
																					"id": 32880,
																					"name": "__index",
																					"variant": "signature",
																					"kind": 8192,
																					"flags": {},
																					"parameters": [
																						{
																							"id": 32881,
																							"name": "x",
																							"variant": "param",
																							"kind": 32768,
																							"flags": {},
																							"type": {
																								"type": "intrinsic",
																								"name": "number"
																							}
																						}
																					],
																					"type": {
																						"type": "inferred",
																						"name": "V"
																					}
																				}
																			]
																		}
																	},
																	"trueType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "V"
																			},
																			"name": "V",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"extendsType": {
																			"type": "intrinsic",
																			"name": "object"
																		},
																		"trueType": {
																			"type": "mapped",
																			"parameter": "Key",
																			"parameterType": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "intrinsic",
																						"name": "symbol"
																					}
																				]
																			},
																			"templateType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "indexedAccess",
																					"indexType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"objectType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				},
																				"extendsType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"trueType": {
																					"type": "union",
																					"types": [
																						{
																							"type": "unknown",
																							"name": "..."
																						},
																						{
																							"type": "unknown",
																							"name": "..."
																						}
																					]
																				},
																				"falseType": {
																					"type": "conditional",
																					"checkType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"extendsType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"trueType": {
																						"type": "unknown",
																						"name": "..."
																					},
																					"falseType": {
																						"type": "unknown",
																						"name": "..."
																					}
																				}
																			},
																			"optionalModifier": "+"
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	},
																	"falseType": {
																		"type": "intrinsic",
																		"name": "never"
																	}
																},
																"falseType": {
																	"type": "intrinsic",
																	"name": "never"
																}
															}
														},
														"optionalModifier": "+"
													},
													{
														"type": "reference",
														"target": 32824,
														"typeArguments": [
															{
																"type": "mapped",
																"parameter": "Key",
																"parameterType": {
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "intrinsic",
																			"name": "number"
																		},
																		{
																			"type": "intrinsic",
																			"name": "symbol"
																		}
																	]
																},
																"templateType": {
																	"type": "conditional",
																	"checkType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "Key"
																			},
																			"name": "Key",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": 32932,
																			"name": "T",
																			"package": "@medusajs/types",
																			"qualifiedName": "RepositoryService.T",
																			"refersToTypeParameter": true
																		}
																	},
																	"extendsType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "number"
																			},
																			{
																				"type": "intrinsic",
																				"name": "bigint"
																			},
																			{
																				"type": "intrinsic",
																				"name": "boolean"
																			},
																			{
																				"type": "intrinsic",
																				"name": "symbol"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Date"
																				},
																				"name": "Date",
																				"package": "typescript"
																			}
																		]
																	},
																	"trueType": {
																		"type": "union",
																		"types": [
																			{
																				"type": "indexedAccess",
																				"indexType": {
																					"type": "intrinsic",
																					"name": "any"
																				},
																				"objectType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			},
																			{
																				"type": "reference",
																				"target": 32802,
																				"typeArguments": [
																					{
																						"type": "indexedAccess",
																						"indexType": {
																							"type": "intrinsic",
																							"name": "any"
																						},
																						"objectType": {
																							"type": "intrinsic",
																							"name": "any"
																						}
																					}
																				],
																				"name": "OperatorMap",
																				"package": "@medusajs/types"
																			}
																		]
																	},
																	"falseType": {
																		"type": "conditional",
																		"checkType": {
																			"type": "indexedAccess",
																			"indexType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "Key"
																				},
																				"name": "Key",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"objectType": {
																				"type": "reference",
																				"target": 32932,
																				"name": "T",
																				"package": "@medusajs/types",
																				"qualifiedName": "RepositoryService.T",
																				"refersToTypeParameter": true
																			}
																		},
																		"extendsType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																				"qualifiedName": "U"
																			},
																			"name": "U",
																			"package": "@medusajs/types",
																			"refersToTypeParameter": true
																		},
																		"trueType": {
																			"type": "conditional",
																			"checkType": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																					"qualifiedName": "U"
																				},
																				"name": "U",
																				"package": "@medusajs/types",
																				"refersToTypeParameter": true
																			},
																			"extendsType": {
																				"type": "reflection",
																				"declaration": {
																					"id": 32882,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"indexSignatures": [
																						{
																							"id": 32883,
																							"name": "__index",
																							"variant": "signature",
																							"kind": 8192,
																							"flags": {},
																							"parameters": [
																								{
																									"id": 32884,
																									"name": "x",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "intrinsic",
																										"name": "number"
																									}
																								}
																							],
																							"type": {
																								"type": "inferred",
																								"name": "V"
																							}
																						}
																					]
																				}
																			},
																			"trueType": {
																				"type": "conditional",
																				"checkType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																						"qualifiedName": "V"
																					},
																					"name": "V",
																					"package": "@medusajs/types",
																					"refersToTypeParameter": true
																				},
																				"extendsType": {
																					"type": "intrinsic",
																					"name": "object"
																				},
																				"trueType": {
																					"type": "mapped",
																					"parameter": "Key",
																					"parameterType": {
																						"type": "union",
																						"types": [
																							{
																								"type": "intrinsic",
																								"name": "string"
																							},
																							{
																								"type": "intrinsic",
																								"name": "number"
																							},
																							{
																								"type": "intrinsic",
																								"name": "symbol"
																							}
																						]
																					},
																					"templateType": {
																						"type": "conditional",
																						"checkType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"extendsType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"trueType": {
																							"type": "unknown",
																							"name": "..."
																						},
																						"falseType": {
																							"type": "unknown",
																							"name": "..."
																						}
																					},
																					"optionalModifier": "+"
																				},
																				"falseType": {
																					"type": "intrinsic",
																					"name": "never"
																				}
																			},
																			"falseType": {
																				"type": "intrinsic",
																				"name": "never"
																			}
																		},
																		"falseType": {
																			"type": "intrinsic",
																			"name": "never"
																		}
																	}
																},
																"optionalModifier": "+"
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 32885,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32886,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32887,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Soft delete entities and cascade to related entities if configured."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "[T[], Record<string, string[]>] the second value being the map of the entity names and ids that were soft deleted"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 32888,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32889,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 32890,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 32891,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32932,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32892,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32893,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32894,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 32895,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 32896,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32932,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "RepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32897,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32898,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32899,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32900,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32932,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "RepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32901,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32902,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32903,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 32904,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32848,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32932,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "RepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32905,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 32906,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32907,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 32932,
																	"name": "T",
																	"package": "@medusajs/types",
																	"qualifiedName": "RepositoryService.T",
																	"refersToTypeParameter": true
																}
															}
														},
														{
															"id": 32908,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 32851,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32907,
																32908
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32909,
								32921,
								32924,
								32927,
								32857,
								32861,
								32865,
								32869,
								32876,
								32886,
								32892,
								32897,
								32901
							]
						}
					],
					"typeParameters": [
						{
							"id": 32932,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36071,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32932,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "RepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32933,
					"name": "TreeRepositoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
							}
						]
					},
					"children": [
						{
							"id": 32952,
							"name": "transaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32953,
									"name": "transaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32954,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"parameters": [
										{
											"id": 32955,
											"name": "task",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32956,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"signatures": [
														{
															"id": 32957,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"parameters": [
																{
																	"id": 32958,
																	"name": "transactionManager",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": 32911,
																		"name": "TManager",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 32959,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 32960,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 32961,
															"name": "isolationLevel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 32962,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 32911,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														},
														{
															"id": 32963,
															"name": "enableNestedTransactions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "boolean"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																32961,
																32962,
																32963
															]
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36073,
										"name": "BaseRepositoryService.transaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36072,
								"name": "BaseRepositoryService.transaction"
							}
						},
						{
							"id": 32964,
							"name": "getFreshManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32965,
									"name": "getFreshManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32966,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 32923,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36085,
										"name": "BaseRepositoryService.getFreshManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36084,
								"name": "BaseRepositoryService.getFreshManager"
							}
						},
						{
							"id": 32967,
							"name": "getActiveManager",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32968,
									"name": "getActiveManager",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32969,
											"name": "TManager",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"default": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 32926,
										"name": "TManager",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36088,
										"name": "BaseRepositoryService.getActiveManager"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36087,
								"name": "BaseRepositoryService.getActiveManager"
							}
						},
						{
							"id": 32970,
							"name": "serialize",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 32971,
									"name": "serialize",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"typeParameters": [
										{
											"id": 32972,
											"name": "TOutput",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "object"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													}
												]
											}
										}
									],
									"parameters": [
										{
											"id": 32973,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 32974,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 32929,
												"name": "TOutput",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 36091,
										"name": "BaseRepositoryService.serialize"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 36090,
								"name": "BaseRepositoryService.serialize"
							}
						},
						{
							"id": 32934,
							"name": "find",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32935,
									"name": "find",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32936,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32838,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32975,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32937,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32632,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32938,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32975,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32939,
							"name": "findAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32940,
									"name": "findAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32941,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32838,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32975,
														"name": "T",
														"package": "@medusajs/types",
														"qualifiedName": "TreeRepositoryService.T",
														"refersToTypeParameter": true
													}
												],
												"name": "FindOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32942,
											"name": "transformOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32632,
												"name": "RepositoryTransformOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 32943,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 32975,
															"name": "T",
															"package": "@medusajs/types",
															"qualifiedName": "TreeRepositoryService.T",
															"refersToTypeParameter": true
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32944,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32945,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32946,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											}
										},
										{
											"id": 32947,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 32975,
													"name": "T",
													"package": "@medusajs/types",
													"qualifiedName": "TreeRepositoryService.T",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 32948,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 32949,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32950,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 32951,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								32952,
								32964,
								32967,
								32970,
								32934,
								32939,
								32944,
								32948
							]
						}
					],
					"typeParameters": [
						{
							"id": 32975,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36071,
							"typeArguments": [
								{
									"type": "reference",
									"target": 32975,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "TreeRepositoryService.T",
									"refersToTypeParameter": true
								}
							],
							"name": "BaseRepositoryService",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 32976,
					"name": "SoftDeleteReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
							}
						]
					},
					"children": [
						{
							"id": 32977,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 32978,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32977
							]
						}
					],
					"typeParameters": [
						{
							"id": 32978,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 32979,
					"name": "RestoreReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
							}
						]
					},
					"children": [
						{
							"id": 32980,
							"name": "returnLinkableKeys",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of strings, each being the ID attribute names of the entity's relations."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 32981,
									"name": "TReturnableLinkableKeys",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								32980
							]
						}
					],
					"typeParameters": [
						{
							"id": 32981,
							"name": "TReturnableLinkableKeys",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 32802,
					"name": "OperatorMap",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32823,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32803,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32804,
									"name": "$and",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36056,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32823,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32805,
									"name": "$or",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36056,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32823,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Query",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32806,
									"name": "$eq",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 36058,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32823,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "ExpandScalar",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36058,
													"typeArguments": [
														{
															"type": "reference",
															"target": 32823,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "ExpandScalar",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 32807,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 36058,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32823,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32808,
									"name": "$in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36058,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32823,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32809,
									"name": "$nin",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36058,
											"typeArguments": [
												{
													"type": "reference",
													"target": 32823,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 32810,
									"name": "$not",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 36056,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32823,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "Query",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32811,
									"name": "$gt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 36058,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32823,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32812,
									"name": "$gte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 36058,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32823,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32813,
									"name": "$lt",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 36058,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32823,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32814,
									"name": "$lte",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 36058,
										"typeArguments": [
											{
												"type": "reference",
												"target": 32823,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 32815,
									"name": "$like",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32816,
									"name": "$re",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32817,
									"name": "$ilike",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32818,
									"name": "$fulltext",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32819,
									"name": "$overlap",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32820,
									"name": "$contains",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32821,
									"name": "$contained",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 32822,
									"name": "$exists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32804,
										32805,
										32806,
										32807,
										32808,
										32809,
										32810,
										32811,
										32812,
										32813,
										32814,
										32815,
										32816,
										32817,
										32818,
										32819,
										32820,
										32821,
										32822
									]
								}
							]
						}
					}
				},
				{
					"id": 32796,
					"name": "FilterQuery",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32800,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 32801,
							"name": "Prev",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"default": {
								"type": "literal",
								"value": 3
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 32801,
							"name": "Prev",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "never"
						},
						"trueType": {
							"type": "intrinsic",
							"name": "never"
						},
						"falseType": {
							"type": "mapped",
							"parameter": "Key",
							"parameterType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 32800,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"templateType": {
								"type": "conditional",
								"checkType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 32800,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"extendsType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "boolean"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "bigint"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Date"
											},
											"name": "Date",
											"package": "typescript"
										}
									]
								},
								"trueType": {
									"type": "union",
									"types": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 32800,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "reference",
											"target": 32802,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "Key"
														},
														"name": "Key",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 32800,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											],
											"name": "OperatorMap",
											"package": "@medusajs/types"
										}
									]
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 32800,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "inferred",
										"name": "U"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "U"
											},
											"name": "U",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 32797,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 32798,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 32799,
																"name": "x",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														],
														"type": {
															"type": "inferred",
															"name": "V"
														}
													}
												]
											}
										},
										"trueType": {
											"type": "conditional",
											"checkType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"extendsType": {
												"type": "intrinsic",
												"name": "object"
											},
											"trueType": {
												"type": "reference",
												"target": 32796,
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Partial"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
																	"qualifiedName": "V"
																},
																"name": "V",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Partial",
														"package": "typescript"
													},
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": 32801,
															"name": "Prev",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 36055,
															"name": "PrevLimit",
															"package": "@medusajs/types"
														}
													}
												],
												"name": "FilterQuery",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "intrinsic",
												"name": "never"
											}
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							},
							"optionalModifier": "+"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						32824,
						32828,
						32838,
						32848,
						32856,
						32933,
						32976,
						32979
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32982,
						32983,
						32851,
						32802,
						32796
					]
				}
			]
		},
		{
			"id": 36067,
			"name": "EntityClassName",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 36068,
			"name": "EntityValues",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "array",
				"elementType": {
					"type": "reflection",
					"declaration": {
						"id": 36069,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 36070,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									36070
								]
							}
						]
					}
				}
			}
		},
		{
			"id": 36071,
			"name": "BaseRepositoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Data access layer (DAL) interface to implements for any repository service.\nThis layer helps to separate the business logic (service layer) from accessing the\nORM directly and allows to switch to another ORM without changing the business logic."
					}
				]
			},
			"children": [
				{
					"id": 36072,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 36073,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 36074,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"parameters": [
								{
									"id": 36075,
									"name": "task",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 36076,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 36077,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 36078,
															"name": "transactionManager",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 32911,
																"name": "TManager",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 36079,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 36080,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 36081,
													"name": "isolationLevel",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 36082,
													"name": "transaction",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 32911,
														"name": "TManager",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												},
												{
													"id": 36083,
													"name": "enableNestedTransactions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														36081,
														36082,
														36083
													]
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 36084,
					"name": "getFreshManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 36085,
							"name": "getFreshManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 36086,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 32923,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 36087,
					"name": "getActiveManager",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 36088,
							"name": "getActiveManager",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 36089,
									"name": "TManager",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"default": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 32926,
								"name": "TManager",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				},
				{
					"id": 36090,
					"name": "serialize",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 36091,
							"name": "serialize",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 36092,
									"name": "TOutput",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "object"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 36093,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 36094,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 32929,
										"name": "TOutput",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						36072,
						36084,
						36087,
						36090
					]
				}
			],
			"typeParameters": [
				{
					"id": 36095,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 32856,
					"name": "RepositoryService"
				},
				{
					"type": "reference",
					"target": 32933,
					"name": "TreeRepositoryService"
				}
			]
		},
		{
			"id": 36062,
			"name": "Dictionary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36066,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36063,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"indexSignatures": [
						{
							"id": 36064,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 36065,
									"name": "k",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 36066,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 36056,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36057,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36057,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 36057,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 36356,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 32796,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36057,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 36360,
					"typeArguments": [
						{
							"type": "reference",
							"target": 36057,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 36058,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36059,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 36059,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 36059,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 36059,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 36356,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36357,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36358,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 36359,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										36358
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 36435,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36436,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36436,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 36436,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 36436,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 36425,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36434,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 36434,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 36426,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 36427,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									36427
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 36435,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 36434,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 36428,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36429,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36429
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 36435,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 36434,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 36430,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 36431,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											36431
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 36435,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 36434,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 36432,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 36433,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												36433
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 36435,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 36414,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36415,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 36415,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 36058,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36415,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36425,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36415,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 36360,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36361,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36414,
								"typeArguments": [
									{
										"type": "reference",
										"target": 36361,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36414,
						"typeArguments": [
							{
								"type": "reference",
								"target": 36361,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36414,
							"typeArguments": [
								{
									"type": "reference",
									"target": 36361,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 36055,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 36060,
			"name": "Order",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36061,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 36061,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "union",
					"types": [
						{
							"type": "literal",
							"value": "ASC"
						},
						{
							"type": "literal",
							"value": "DESC"
						},
						{
							"type": "reference",
							"target": 36060,
							"typeArguments": [
								{
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 36061,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"trueType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": 0
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "key"
												},
												"name": "key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 36061,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "key"
											},
											"name": "key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 36061,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								}
							],
							"name": "Order",
							"package": "@medusajs/types"
						}
					]
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 35656,
			"name": "DmlTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35657,
					"name": "IsDmlEntity",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Symbol to identify a DML entity from an object"
							}
						]
					},
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 35657,
							"name": "IsDmlEntity",
							"package": "@medusajs/types"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 35658,
					"name": "DMLSchema",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of DML schema. It must be a key-value pair\nwith string based keys and properties/relationships\nas the value."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 35692,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "PropertyType",
										"package": "@medusajs/types"
									},
									{
										"type": "reference",
										"target": 35710,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 35659,
					"name": "IDmlEntityConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 35660,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35661,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35662,
											"name": "tableName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35661,
												35662
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 35663,
					"name": "InferDmlEntityNameFromConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35668,
							"name": "TConfig",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35659,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 35668,
							"name": "TConfig",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "reference",
							"target": 32793,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35668,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "CamelCase",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 35668,
								"name": "TConfig",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 35664,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35665,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35665
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 32793,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "name"
										},
										"objectType": {
											"type": "reference",
											"target": 35668,
											"name": "TConfig",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "CamelCase",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": 35668,
									"name": "TConfig",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 35666,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 35667,
												"name": "tableName",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													35667
												]
											}
										]
									}
								},
								"trueType": {
									"type": "reference",
									"target": 32793,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "tableName"
											},
											"objectType": {
												"type": "reference",
												"target": 35668,
												"name": "TConfig",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "CamelCase",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							}
						}
					}
				},
				{
					"id": 35669,
					"name": "IDmlEntity",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Representation of a DML entity"
							}
						]
					},
					"children": [
						{
							"id": 35672,
							"name": "[IsDmlEntity]",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": true
							}
						},
						{
							"id": 35670,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35663,
								"typeArguments": [
									{
										"type": "reference",
										"target": 35674,
										"name": "Config",
										"package": "@medusajs/types",
										"qualifiedName": "IDmlEntity.Config",
										"refersToTypeParameter": true
									}
								],
								"name": "InferDmlEntityNameFromConfig",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35671,
							"name": "schema",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35673,
								"name": "Schema",
								"package": "@medusajs/types",
								"qualifiedName": "IDmlEntity.Schema",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35672,
								35670,
								35671
							]
						}
					],
					"typeParameters": [
						{
							"id": 35673,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35674,
							"name": "Config",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35659,
								"name": "IDmlEntityConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 35675,
					"name": "KnownDataTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The supported data types"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "text"
							},
							{
								"type": "literal",
								"value": "boolean"
							},
							{
								"type": "literal",
								"value": "enum"
							},
							{
								"type": "literal",
								"value": "number"
							},
							{
								"type": "literal",
								"value": "bigNumber"
							},
							{
								"type": "literal",
								"value": "dateTime"
							},
							{
								"type": "literal",
								"value": "array"
							},
							{
								"type": "literal",
								"value": "json"
							},
							{
								"type": "literal",
								"value": "id"
							}
						]
					}
				},
				{
					"id": 35676,
					"name": "RelationshipTypes",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "List of available relationships at DML level"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "hasOne"
							},
							{
								"type": "literal",
								"value": "hasMany"
							},
							{
								"type": "literal",
								"value": "belongsTo"
							},
							{
								"type": "literal",
								"value": "manyToMany"
							}
						]
					}
				},
				{
					"id": 35677,
					"name": "PropertyMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the property parse method"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35678,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35679,
									"name": "fieldName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35680,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 35681,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 35682,
									"name": "dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35683,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35684,
													"name": "name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 35675,
														"name": "KnownDataTypes",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 35685,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35684,
														35685
													]
												}
											]
										}
									}
								},
								{
									"id": 35686,
									"name": "indexes",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 35687,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 35688,
														"name": "name",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 35689,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "union",
															"types": [
																{
																	"type": "literal",
																	"value": "index"
																},
																{
																	"type": "literal",
																	"value": "unique"
																}
															]
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															35688,
															35689
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 35690,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35702,
											"name": "RelationshipMetadata",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 35691,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35679,
										35680,
										35681,
										35682,
										35686,
										35690,
										35691
									]
								}
							]
						}
					}
				},
				{
					"id": 35692,
					"name": "PropertyType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a property type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35698,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35693,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35694,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35698,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 35695,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 35696,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 35697,
													"name": "fieldName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 35677,
												"name": "PropertyMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35694
									]
								},
								{
									"title": "Methods",
									"children": [
										35695
									]
								}
							]
						}
					}
				},
				{
					"id": 35699,
					"name": "RelationshipOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Options accepted by all the relationships"
							}
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 35700,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35701,
											"name": "mappedBy",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The name of the relationship as defined in the other\ndata model. This is only required by the "
													},
													{
														"kind": "code",
														"text": "`belongsTo`"
													},
													{
														"kind": "text",
														"text": "\nrelationship method."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35701
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 35702,
					"name": "RelationshipMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The meta-data returned by the relationship parse\nmethod"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35703,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35704,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35705,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35676,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35706,
									"name": "entity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 35707,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 35708,
									"name": "mappedBy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35709,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35704,
										35705,
										35706,
										35707,
										35708,
										35709
									]
								}
							]
						}
					}
				},
				{
					"id": 35710,
					"name": "RelationshipType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Definition of a relationship type. It should have a parse\nmethod to get the metadata and a type-only property\nto get its static type"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35717,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35711,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35712,
									"name": "$dataType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35717,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 35713,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35676,
										"name": "RelationshipTypes",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35714,
									"name": "parse",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 35715,
											"name": "parse",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 35716,
													"name": "relationshipName",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": 35702,
												"name": "RelationshipMetadata",
												"package": "@medusajs/types"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35712,
										35713
									]
								},
								{
									"title": "Methods",
									"children": [
										35714
									]
								}
							]
						}
					}
				},
				{
					"id": 35718,
					"name": "EntityConstructor",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A type-only representation of a MikroORM entity. Since we generate\nentities on the fly, we need a way to represent a type-safe\nconstructor and its instance properties."
							}
						]
					},
					"children": [
						{
							"id": 35720,
							"name": "constructor",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 35721,
									"name": "new EntityConstructor",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35719,
										"name": "Props",
										"package": "@medusajs/types",
										"qualifiedName": "EntityConstructor.Props",
										"refersToTypeParameter": true
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "Function.constructor"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Function.constructor"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"children": [
								35720
							]
						}
					],
					"typeParameters": [
						{
							"id": 35719,
							"name": "Props",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Function"
							},
							"name": "Function",
							"package": "typescript"
						}
					]
				},
				{
					"id": 35722,
					"name": "InferForeignKeys",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "From a IDmlEntity, infer the foreign keys name and type for\n\"belongsTo\" relation meaning \"hasOne\" and \"ManyToOne\""
							}
						]
					},
					"typeParameters": [
						{
							"id": 35727,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 35727,
								"name": "Schema",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 35727,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 35723,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35724,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35724
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 35676,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "string"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"nameType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 35727,
									"name": "Schema",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 35725,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35726,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "inferred",
												"name": "Type"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35726
											]
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "Type"
									},
									"name": "Type",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": 35676,
									"name": "RelationshipTypes",
									"package": "@medusajs/types"
								},
								"trueType": {
									"type": "templateLiteral",
									"head": "",
									"tail": [
										[
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											},
											"_id"
										]
									]
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 35728,
					"name": "InferBelongsToFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a belongsTo relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35733,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 35733,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 35729,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 35730,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 35669,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 35742,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "R"
									},
									"name": "R",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferSchemaFields",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 35733,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 35731,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 35732,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 35669,
														"typeArguments": [
															{
																"type": "inferred",
																"name": "R"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "IDmlEntity",
														"package": "@medusajs/types"
													},
													{
														"type": "literal",
														"value": null
													}
												]
											}
										}
									]
								}
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 35742,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "R"
												},
												"name": "R",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferSchemaFields",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 35734,
					"name": "InferHasOneFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for a hasOne relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35735,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 35728,
						"typeArguments": [
							{
								"type": "reference",
								"target": 35735,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferBelongsToFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35736,
					"name": "InferHasManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for hasMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35739,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 35739,
							"name": "Relation",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 35737,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"signatures": [
									{
										"id": 35738,
										"name": "__type",
										"variant": "signature",
										"kind": 4096,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 35669,
											"typeArguments": [
												{
													"type": "inferred",
													"name": "R"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "IDmlEntity",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						"trueType": {
							"type": "array",
							"elementType": {
								"type": "reference",
								"target": 35742,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
											"qualifiedName": "R"
										},
										"name": "R",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "InferSchemaFields",
								"package": "@medusajs/types"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 35740,
					"name": "InferManyToManyFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer fields for manyToMany relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35741,
							"name": "Relation",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reference",
						"target": 35736,
						"typeArguments": [
							{
								"type": "reference",
								"target": 35741,
								"name": "Relation",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "InferHasManyFields",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35742,
					"name": "InferSchemaFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Inferring the types of the schema fields from the DML\nentity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35743,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 32557,
						"typeArguments": [
							{
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 35743,
										"name": "Schema",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 35743,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 35710,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "literal",
												"value": "type"
											},
											"objectType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 35743,
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											}
										},
										"extendsType": {
											"type": "literal",
											"value": "belongsTo"
										},
										"trueType": {
											"type": "reference",
											"target": 35728,
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "$dataType"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 35743,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "InferBelongsToFields",
											"package": "@medusajs/types"
										},
										"falseType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "literal",
													"value": "type"
												},
												"objectType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
															"qualifiedName": "K"
														},
														"name": "K",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													},
													"objectType": {
														"type": "reference",
														"target": 35743,
														"name": "Schema",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											},
											"extendsType": {
												"type": "literal",
												"value": "hasOne"
											},
											"trueType": {
												"type": "reference",
												"target": 35734,
												"typeArguments": [
													{
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "$dataType"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 35743,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													}
												],
												"name": "InferHasOneFields",
												"package": "@medusajs/types"
											},
											"falseType": {
												"type": "conditional",
												"checkType": {
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "type"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																"qualifiedName": "K"
															},
															"name": "K",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														"objectType": {
															"type": "reference",
															"target": 35743,
															"name": "Schema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												},
												"extendsType": {
													"type": "literal",
													"value": "hasMany"
												},
												"trueType": {
													"type": "reference",
													"target": 35736,
													"typeArguments": [
														{
															"type": "indexedAccess",
															"indexType": {
																"type": "literal",
																"value": "$dataType"
															},
															"objectType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																		"qualifiedName": "K"
																	},
																	"name": "K",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 35743,
																	"name": "Schema",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															}
														}
													],
													"name": "InferHasManyFields",
													"package": "@medusajs/types"
												},
												"falseType": {
													"type": "conditional",
													"checkType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "type"
														},
														"objectType": {
															"type": "indexedAccess",
															"indexType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																	"qualifiedName": "K"
																},
																"name": "K",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															},
															"objectType": {
																"type": "reference",
																"target": 35743,
																"name": "Schema",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													},
													"extendsType": {
														"type": "literal",
														"value": "manyToMany"
													},
													"trueType": {
														"type": "reference",
														"target": 35740,
														"typeArguments": [
															{
																"type": "indexedAccess",
																"indexType": {
																	"type": "literal",
																	"value": "$dataType"
																},
																"objectType": {
																	"type": "indexedAccess",
																	"indexType": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
																			"qualifiedName": "K"
																		},
																		"name": "K",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	},
																	"objectType": {
																		"type": "reference",
																		"target": 35743,
																		"name": "Schema",
																		"package": "@medusajs/types",
																		"refersToTypeParameter": true
																	}
																}
															}
														],
														"name": "InferManyToManyFields",
														"package": "@medusajs/types"
													},
													"falseType": {
														"type": "intrinsic",
														"name": "never"
													}
												}
											}
										}
									},
									"falseType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "$dataType"
										},
										"objectType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 35743,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									}
								}
							}
						],
						"name": "Prettify",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35744,
					"name": "Infer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the schema type of a DmlEntity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35745,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 35745,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 35669,
							"typeArguments": [
								{
									"type": "inferred",
									"name": "Schema"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 35718,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35742,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "Schema"
											},
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "InferSchemaFields",
									"package": "@medusajs/types"
								}
							],
							"name": "EntityConstructor",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				{
					"id": 35746,
					"name": "ExtractEntityRelations",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extracts names of relationships from a schema"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35749,
							"name": "Schema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35750,
							"name": "OfType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35676,
								"name": "RelationshipTypes",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "intersection",
								"types": [
									{
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 35749,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"objectType": {
								"type": "mapped",
								"parameter": "K",
								"parameterType": {
									"type": "intersection",
									"types": [
										{
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": 35749,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										{
											"type": "intrinsic",
											"name": "string"
										}
									]
								},
								"templateType": {
									"type": "conditional",
									"checkType": {
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 35749,
											"name": "Schema",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									},
									"extendsType": {
										"type": "reference",
										"target": 35710,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "RelationshipType",
										"package": "@medusajs/types"
									},
									"trueType": {
										"type": "conditional",
										"checkType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 35749,
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"extendsType": {
											"type": "reflection",
											"declaration": {
												"id": 35747,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 35748,
														"name": "type",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 35750,
															"name": "OfType",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															35748
														]
													}
												]
											}
										},
										"trueType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
												"qualifiedName": "K"
											},
											"name": "K",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"falseType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								}
							}
						}
					}
				},
				{
					"id": 35751,
					"name": "EntityCascades",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The actions to cascade from a given entity to its\nrelationship."
							}
						]
					},
					"typeParameters": [
						{
							"id": 35754,
							"name": "Relationships",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35752,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35753,
									"name": "delete",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The related models to delete when a record of this data model\nis deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 35754,
										"name": "Relationships",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35753
									]
								}
							]
						}
					}
				},
				{
					"id": 35755,
					"name": "InferTypeOf",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Helper to infer the instance type of a IDmlEntity once converted as an Entity"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35756,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35669,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "InstanceType"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 35744,
								"typeArguments": [
									{
										"type": "reference",
										"target": 35756,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Infer",
								"package": "@medusajs/types"
							}
						],
						"name": "InstanceType",
						"package": "typescript"
					}
				},
				{
					"id": 35757,
					"name": "InferEntityType",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Used in the module sdk internal service to infer propert entity typings from DML"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35758,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 35758,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reference",
							"target": 35669,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "IDmlEntity",
							"package": "@medusajs/types"
						},
						"trueType": {
							"type": "reference",
							"target": 35755,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35758,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "InferTypeOf",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "reference",
							"target": 35758,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 35759,
					"name": "InferIndexableProperties",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Infer all indexable properties from a DML entity including inferred foreign keys and excluding relationship"
							}
						]
					},
					"typeParameters": [
						{
							"id": 35762,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 35762,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": 35669,
								"typeArguments": [
									{
										"type": "inferred",
										"name": "Schema"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "IDmlEntity",
								"package": "@medusajs/types"
							},
							"trueType": {
								"type": "intersection",
								"types": [
									{
										"type": "mapped",
										"parameter": "K",
										"parameterType": {
											"type": "typeOperator",
											"operator": "keyof",
											"target": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										},
										"templateType": {
											"type": "intrinsic",
											"name": "string"
										},
										"nameType": {
											"type": "conditional",
											"checkType": {
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Schema"
													},
													"name": "Schema",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"extendsType": {
												"type": "reflection",
												"declaration": {
													"id": 35760,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35761,
															"name": "type",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "inferred",
																"name": "Type"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35761
															]
														}
													]
												}
											},
											"trueType": {
												"type": "conditional",
												"checkType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "Type"
													},
													"name": "Type",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"extendsType": {
													"type": "reference",
													"target": 35676,
													"name": "RelationshipTypes",
													"package": "@medusajs/types"
												},
												"trueType": {
													"type": "intrinsic",
													"name": "never"
												},
												"falseType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
														"qualifiedName": "K"
													},
													"name": "K",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											},
											"falseType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "K"
												},
												"name": "K",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									},
									{
										"type": "reference",
										"target": 35722,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
													"qualifiedName": "Schema"
												},
												"name": "Schema",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "InferForeignKeys",
										"package": "@medusajs/types"
									}
								]
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				},
				{
					"id": 35763,
					"name": "EntityIndex",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35769,
							"name": "TSchema",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35770,
							"name": "TWhere",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35764,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35765,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the index. If not provided,\nMedusa generates the name."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35766,
									"name": "unique",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "When enabled, a unique index is created on the specified\nproperties."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 35767,
									"name": "on",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of properties to create the index on."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35759,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35669,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35769,
															"name": "TSchema",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														},
														{
															"type": "intrinsic",
															"name": "any"
														}
													],
													"name": "IDmlEntity",
													"package": "@medusajs/types"
												}
											],
											"name": "InferIndexableProperties",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 35768,
									"name": "where",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Conditions to restrict which records are indexed."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 35770,
										"name": "TWhere",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35765,
										35766,
										35767,
										35768
									]
								}
							]
						}
					}
				},
				{
					"id": 35771,
					"name": "SimpleQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": null
							}
						]
					}
				},
				{
					"id": 35772,
					"name": "NeQueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35773,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35774,
									"name": "$ne",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35771,
										"name": "SimpleQueryValue",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35774
									]
								}
							]
						}
					}
				},
				{
					"id": 35775,
					"name": "QueryValue",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 35771,
								"name": "SimpleQueryValue",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 35772,
								"name": "NeQueryValue",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 35776,
					"name": "QueryCondition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 35777,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							},
							"default": {
								"type": "reference",
								"target": 35658,
								"name": "DMLSchema",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "mapped",
						"parameter": "K",
						"parameterType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "schema"
								},
								"objectType": {
									"type": "reference",
									"target": 35669,
									"typeArguments": [
										{
											"type": "reference",
											"target": 35777,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "IDmlEntity",
									"package": "@medusajs/types"
								}
							}
						},
						"templateType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
										"qualifiedName": "K"
									},
									"name": "K",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 35777,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "intrinsic",
								"name": "object"
							},
							"trueType": {
								"type": "reference",
								"target": 35775,
								"name": "QueryValue",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "reference",
								"target": 35776,
								"typeArguments": [
									{
										"type": "reference",
										"target": 35777,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "QueryCondition",
								"package": "@medusajs/types"
							}
						},
						"optionalModifier": "+"
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35669,
						35718
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						35658,
						35659,
						35663,
						35675,
						35676,
						35677,
						35692,
						35699,
						35702,
						35710,
						35722,
						35728,
						35734,
						35736,
						35740,
						35742,
						35744,
						35746,
						35751,
						35755,
						35757,
						35759,
						35763,
						35771,
						35772,
						35775,
						35776
					]
				},
				{
					"title": "Variables",
					"children": [
						35657
					]
				}
			]
		},
		{
			"id": 32984,
			"name": "EventBusTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 32985,
					"name": "Subscriber",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 32989,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32986,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 32987,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 32988,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 33000,
												"typeArguments": [
													{
														"type": "reference",
														"target": 32989,
														"name": "TData",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Event",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 32990,
					"name": "SubscriberContext",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32991,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32992,
									"name": "subscriberId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32992
									]
								}
							]
						}
					}
				},
				{
					"id": 32993,
					"name": "SubscriberDescriptor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 32994,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 32995,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 32996,
									"name": "subscriber",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 32985,
										"name": "Subscriber",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										32995,
										32996
									]
								}
							]
						}
					}
				},
				{
					"id": 32997,
					"name": "EventMetadata",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 32998,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 32999,
											"name": "eventGroupId",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												32999
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 33000,
					"name": "Event",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33005,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33001,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33002,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33003,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32997,
										"name": "EventMetadata",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 33004,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33005,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33002,
										33003,
										33004
									]
								}
							]
						}
					}
				},
				{
					"id": 33006,
					"name": "Message",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33009,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 33000,
								"typeArguments": [
									{
										"type": "reference",
										"target": 33009,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Event",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33007,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33008,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33008
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 33010,
					"name": "RawMessageFormat",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33019,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33011,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33012,
									"name": "eventName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33013,
									"name": "data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 33019,
										"name": "TData",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 33014,
									"name": "source",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33015,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33016,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33017,
									"name": "context",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Pick"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											},
											{
												"type": "literal",
												"value": "eventGroupId"
											}
										],
										"name": "Pick",
										"package": "typescript"
									}
								},
								{
									"id": 33018,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33012,
										33013,
										33014,
										33015,
										33016,
										33017,
										33018
									]
								}
							]
						}
					}
				},
				{
					"id": 33038,
					"name": "IEventBusModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33039,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33040,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 33041,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 33042,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 33006,
														"typeArguments": [
															{
																"type": "reference",
																"target": 33041,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 33006,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 33041,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										},
										{
											"id": 33043,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33044,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33045,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33046,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 33047,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32985,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33048,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32990,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 33049,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33050,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33051,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 33052,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32985,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33053,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32990,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 33054,
							"name": "releaseGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33055,
									"name": "releaseGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33056,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33057,
							"name": "clearGroupedEvents",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33058,
									"name": "clearGroupedEvents",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33059,
											"name": "eventGroupId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								33039,
								33044,
								33049,
								33054,
								33057
							]
						}
					]
				},
				{
					"id": 33020,
					"name": "IEventBusService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33021,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33022,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33023,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 33024,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32985,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33025,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32990,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 33026,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33027,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 33028,
											"name": "eventName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "symbol"
													}
												]
											}
										},
										{
											"id": 33029,
											"name": "subscriber",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 32985,
												"name": "Subscriber",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33030,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32990,
												"name": "SubscriberContext",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						},
						{
							"id": 33031,
							"name": "emit",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33032,
									"name": "emit",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"typeParameters": [
										{
											"id": 33033,
											"name": "T",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {}
										}
									],
									"parameters": [
										{
											"id": 33034,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 33006,
														"typeArguments": [
															{
																"type": "reference",
																"target": 33033,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														],
														"name": "Message",
														"package": "@medusajs/types"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 33006,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 33033,
																	"name": "T",
																	"package": "@medusajs/types",
																	"refersToTypeParameter": true
																}
															],
															"name": "Message",
															"package": "@medusajs/types"
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33035,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {
								"isInherited": true
							},
							"signatures": [
								{
									"id": 33036,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isInherited": true
									},
									"parameters": [
										{
											"id": 33037,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": 35423,
										"name": "ITransactionBaseService.withTransaction"
									}
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"target": 35422,
								"name": "ITransactionBaseService.withTransaction"
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								33021,
								33026,
								33031,
								33035
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35421,
							"name": "ITransactionBaseService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						33038,
						33020
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						32985,
						32990,
						32993,
						32997,
						33000,
						33006,
						33010
					]
				}
			]
		},
		{
			"id": 33060,
			"name": "FeatureFlagTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 33061,
					"name": "IFlagRouter",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33062,
							"name": "isFeatureEnabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33063,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33064,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 33065,
													"name": "key",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 33066,
							"name": "listFlags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33067,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 33068,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 33069,
												"name": "FeatureFlagsResponse",
												"package": "@medusajs/types"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33062,
								33066
							]
						}
					]
				},
				{
					"id": 33069,
					"name": "FeatureFlagsResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 33070,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 33071,
										"name": "key",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 33072,
										"name": "value",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
														"qualifiedName": "Record"
													},
													"typeArguments": [
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "intrinsic",
															"name": "boolean"
														}
													],
													"name": "Record",
													"package": "typescript"
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											33071,
											33072
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 33073,
					"name": "FlagSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33074,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33075,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33076,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33077,
									"name": "env_key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33078,
									"name": "default_val",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33075,
										33076,
										33077,
										33078
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						33061
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						33069,
						33073
					]
				}
			]
		},
		{
			"id": 35778,
			"name": "FileServiceUploadResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Details of a file upload's result."
					}
				]
			},
			"children": [
				{
					"id": 35779,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's URL."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35780,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. This key is used in other operations,\nsuch as deleting a file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35779,
						35780
					]
				}
			]
		},
		{
			"id": 35781,
			"name": "FileServiceGetUploadStreamResult",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The relevant details to upload a file through a stream."
					}
				]
			},
			"children": [
				{
					"id": 35782,
					"name": "writeStream",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A [PassThrough](https://nodejs.org/api/stream.html#class-streampassthrough) write stream object to be used to write the file."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/stream.d.ts",
							"qualifiedName": "internal.PassThrough"
						},
						"name": "PassThrough",
						"package": "@types/node",
						"qualifiedName": "internal.PassThrough"
					}
				},
				{
					"id": 35783,
					"name": "promise",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A promise that should resolved when the writing process is done to finish the upload."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Promise"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Promise",
						"package": "typescript"
					}
				},
				{
					"id": 35784,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the file once it’s uploaded."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35785,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The identifier of the file in the storage. For example, for a local file service, this can be the file's name."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35782,
						35783,
						35784,
						35785
					]
				}
			]
		},
		{
			"id": 35786,
			"name": "GetUploadedFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of a file to retrieve."
					}
				]
			},
			"children": [
				{
					"id": 35787,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35788,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file is private."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35787,
						35788
					]
				}
			]
		},
		{
			"id": 35789,
			"name": "DeleteFileType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file to remove."
					}
				]
			},
			"children": [
				{
					"id": 35790,
					"name": "fileKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The file's key. When uploading a file, the\nreturned key is used here."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35790
					]
				}
			]
		},
		{
			"id": 35791,
			"name": "UploadStreamDescriptorType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the file being uploaded through a stream."
					}
				]
			},
			"children": [
				{
					"id": 35792,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35793,
					"name": "ext",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The extension of the file."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35794,
					"name": "isPrivate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the file should be uploaded to a private bucket or location. By convention, the default value of this property is "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35792,
						35793,
						35794
					]
				}
			]
		},
		{
			"id": 33079,
			"name": "FileTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 33080,
					"name": "FileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File details."
							}
						]
					},
					"children": [
						{
							"id": 33081,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33082,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The URL of the File."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33081,
								33082
							]
						}
					]
				},
				{
					"id": 33083,
					"name": "FilterableFileProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on a currency."
							}
						]
					},
					"children": [
						{
							"id": 33084,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file ID to filter by."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33084
							]
						}
					]
				},
				{
					"id": 33085,
					"name": "CreateFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The File to be created."
							}
						]
					},
					"children": [
						{
							"id": 33086,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33087,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33088,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33089,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33086,
								33087,
								33088,
								33089
							]
						}
					]
				},
				{
					"id": 33133,
					"name": "ProviderFileResultDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of a file upload's result."
							}
						]
					},
					"children": [
						{
							"id": 33134,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's URL."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33135,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33134,
								33135
							]
						}
					]
				},
				{
					"id": 33136,
					"name": "ProviderGetFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of a file to retrieve."
							}
						]
					},
					"children": [
						{
							"id": 33137,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33137
							]
						}
					]
				},
				{
					"id": 33138,
					"name": "ProviderDeleteFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to remove."
							}
						]
					},
					"children": [
						{
							"id": 33139,
							"name": "fileKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file's key. When uploading a file, the\nreturned key is used here."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33139
							]
						}
					]
				},
				{
					"id": 33140,
					"name": "ProviderUploadFileDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the file to create."
							}
						]
					},
					"children": [
						{
							"id": 33141,
							"name": "filename",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The filename of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33142,
							"name": "mimeType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mimetype of the uploaded file"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33143,
							"name": "content",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The file content as a binary-encoded string"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33144,
							"name": "access",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The access level of the file. Defaults to private if not passed"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "public"
									},
									{
										"type": "literal",
										"value": "private"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33141,
								33142,
								33143,
								33144
							]
						}
					]
				},
				{
					"id": 33145,
					"name": "IFileProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33146,
							"name": "upload",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33147,
									"name": "upload",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to upload a file"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The details of the upload's result."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33148,
											"name": "file",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The contents and metadata of the file.\nAmong the file’s details, you can access the file’s path in the "
													},
													{
														"kind": "code",
														"text": "`path`"
													},
													{
														"kind": "text",
														"text": " property of the file object."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33140,
												"name": "ProviderUploadFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33133,
												"name": "ProviderFileResultDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33149,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33150,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to delete a file from storage."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33151,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file to remove."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33138,
												"name": "ProviderDeleteFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33152,
							"name": "getPresignedDownloadUrl",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33153,
									"name": "getPresignedDownloadUrl",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a download URL of the file. For some file services, such as S3, a presigned URL indicates a temporary URL to get access to a file.\n\nIf your file service doesn’t perform or offer a similar functionality, you can just return the URL to download the file."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The presigned URL to download the file"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33154,
											"name": "fileData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33136,
												"name": "ProviderGetFileDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								33146,
								33149,
								33152
							]
						}
					]
				},
				{
					"id": 33166,
					"name": "LocalFileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33167,
							"name": "upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33168,
							"name": "private_upload_dir",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33169,
							"name": "backend_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33167,
								33168,
								33169
							]
						}
					]
				},
				{
					"id": 33155,
					"name": "S3FileServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33156,
							"name": "file_url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33157,
							"name": "access_key_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33158,
							"name": "secret_access_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33159,
							"name": "region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33160,
							"name": "bucket",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33161,
							"name": "prefix",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33162,
							"name": "endpoint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33163,
							"name": "cache_control",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33164,
							"name": "download_file_duration",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33165,
							"name": "additional_client_config",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33156,
								33157,
								33158,
								33159,
								33160,
								33161,
								33162,
								33163,
								33164,
								33165
							]
						}
					]
				},
				{
					"id": 33090,
					"name": "IFileModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the File Module."
							}
						]
					},
					"children": [
						{
							"id": 33091,
							"name": "createFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33092,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads files to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created files."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst [file] = await fileModuleService.createFiles([{\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n}])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33093,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The files to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33085,
													"name": "CreateFileDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 33094,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33080,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 33095,
									"name": "createFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method uploads a file to the designated file storage system."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.createFiles({\n  filename: \"product.png\",\n  mimeType: \"image/png\",\n  content: \"somecontent\"\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33096,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The file to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33085,
												"name": "CreateFileDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33097,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33080,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33098,
							"name": "deleteFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33099,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes files by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the files are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles([\"file_123\"])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33100,
											"name": "ids",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the files."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 33101,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 33102,
									"name": "deleteFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a file by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the file is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait fileModuleService.deleteFiles(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33103,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 33104,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33105,
							"name": "retrieveFile",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33106,
									"name": "retrieveFile",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a file with a downloadable URL by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved file."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst file = await fileModuleService.retrieveFile(\"file_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33107,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the file."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 33108,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the file is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 33080,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33109,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 33080,
												"name": "FileDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33110,
							"name": "listFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33111,
									"name": "listFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the list method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33112,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33083,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33113,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 33080,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33114,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33080,
													"name": "FileDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 33115,
							"name": "listAndCountFiles",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 33116,
									"name": "listAndCountFiles",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a file by ID, similarly to "
											},
											{
												"kind": "code",
												"text": "`retrieve`"
											},
											{
												"kind": "text",
												"text": ". Enumeration of files is not supported, but the listAndCount method is in order to support remote queries"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of files and their count. In this particular case, it will either be at most one file."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 33117,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved files."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 33083,
												"name": "FilterableFileProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33118,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the files are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a file."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 33080,
														"name": "FileDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33119,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 33080,
															"name": "FileDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								33091,
								33098,
								33105,
								33110,
								33115
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35022,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						33080,
						33083,
						33085,
						33133,
						33136,
						33138,
						33140,
						33145,
						33166,
						33155,
						33090
					]
				}
			]
		},
		{
			"id": 36123,
			"name": "ClaimReason",
			"variant": "declaration",
			"kind": 8,
			"flags": {},
			"children": [
				{
					"id": 36124,
					"name": "MISSING_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "missing_item"
					}
				},
				{
					"id": 36125,
					"name": "WRONG_ITEM",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "wrong_item"
					}
				},
				{
					"id": 36126,
					"name": "PRODUCTION_FAILURE",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "production_failure"
					}
				},
				{
					"id": 36127,
					"name": "OTHER",
					"variant": "declaration",
					"kind": 16,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "other"
					}
				}
			],
			"groups": [
				{
					"title": "Enumeration Members",
					"children": [
						36124,
						36125,
						36126,
						36127
					]
				}
			]
		},
		{
			"id": 36115,
			"name": "AdminClaimAddItems",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36116,
					"name": "items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 36117,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 36118,
										"name": "id",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 36119,
										"name": "quantity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									},
									{
										"id": 36120,
										"name": "reason",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reference",
											"target": 36123,
											"name": "ClaimReason",
											"package": "@medusajs/types"
										}
									},
									{
										"id": 36121,
										"name": "description",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 36122,
										"name": "internal_note",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											36118,
											36119,
											36120,
											36121,
											36122
										]
									}
								]
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36116
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33229,
					"name": "AdminAddClaimItems"
				},
				{
					"type": "reference",
					"target": 33242,
					"name": "AdminAddClaimInboundItems"
				},
				{
					"type": "reference",
					"target": 33255,
					"name": "AdminAddClaimOutboundItems"
				}
			]
		},
		{
			"id": 36128,
			"name": "AdminClaimUpdateItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36129,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36130,
					"name": "reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36131,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36132,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36129,
						36130,
						36131,
						36132
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33237,
					"name": "AdminUpdateClaimItem"
				},
				{
					"type": "reference",
					"target": 33250,
					"name": "AdminUpdateClaimInboundItem"
				},
				{
					"type": "reference",
					"target": 33263,
					"name": "AdminUpdateClaimOutboundItem"
				}
			]
		},
		{
			"id": 36133,
			"name": "AdminClaimAddShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36134,
					"name": "shipping_option_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36135,
					"name": "custom_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36136,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36137,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36138,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36134,
						36135,
						36136,
						36137,
						36138
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33268,
					"name": "AdminClaimAddInboundShipping"
				},
				{
					"type": "reference",
					"target": 33278,
					"name": "AdminClaimAddOutboundShipping"
				}
			]
		},
		{
			"id": 36139,
			"name": "AdminClaimUpdateShippingMethod",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36140,
					"name": "custom_price",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 36141,
					"name": "internal_note",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36142,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36140,
						36141,
						36142
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33274,
					"name": "AdminClaimUpdateInboundShipping"
				},
				{
					"type": "reference",
					"target": 33284,
					"name": "AdminClaimUpdateOutboundShipping"
				}
			]
		},
		{
			"id": 36104,
			"name": "BaseClaimItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36105,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36106,
					"name": "claim_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36107,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36108,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36109,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36110,
					"name": "reason",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/mutations.ts",
							"qualifiedName": "ClaimReason"
						},
						"name": "ClaimReason",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36111,
					"name": "raw_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 36009,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36112,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 36113,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 36114,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36105,
						36106,
						36107,
						36108,
						36109,
						36110,
						36111,
						36112,
						36113,
						36114
					]
				}
			]
		},
		{
			"id": 36096,
			"name": "BaseClaim",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36097,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36098,
					"name": "claim_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36104,
							"name": "BaseClaimItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 36099,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 36100,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
							"qualifiedName": "ReturnDTO"
						},
						"name": "ReturnDTO",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36101,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36102,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36103,
					"name": "refund_amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36097,
						36098,
						36099,
						36100,
						36101,
						36102,
						36103
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrder"
							},
							"name": "BaseOrder",
							"package": "@medusajs/types"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "status"
								},
								{
									"type": "literal",
									"value": "version"
								},
								{
									"type": "literal",
									"value": "items"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33215,
					"name": "AdminClaim"
				}
			]
		},
		{
			"id": 36143,
			"name": "BaseClaimListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36144,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36145,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36146,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36147,
					"name": "status",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36148,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36149,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36150,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36154,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33397,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 36151,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33394,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 36152,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33395,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 36153,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33396,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36144,
						36145,
						36146,
						36147,
						36148,
						36149,
						36150,
						36154,
						36151,
						36152,
						36153
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33393,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33291,
					"name": "AdminClaimListParams"
				}
			]
		},
		{
			"id": 36155,
			"name": "BaseCollection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36156,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36157,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36158,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36159,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36160,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36161,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36162,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
								"qualifiedName": "AdminProduct"
							},
							"name": "AdminProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 36163,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36156,
						36157,
						36158,
						36159,
						36160,
						36161,
						36162,
						36163
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33340,
					"name": "AdminCollection"
				}
			]
		},
		{
			"id": 36177,
			"name": "BaseCollectionParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36178,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33392,
						"name": "SelectParams.fields"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36178
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33391,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33374,
					"name": "AdminCollectionParams"
				}
			]
		},
		{
			"id": 36164,
			"name": "BaseCollectionListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 36175,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 36164,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 32824,
									"typeArguments": [
										{
											"type": "reference",
											"target": 36164,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 32825,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 36176,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 36164,
									"name": "BaseCollectionListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 32824,
									"typeArguments": [
										{
											"type": "reference",
											"target": 36164,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 32826,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 36165,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36166,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36167,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36168,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36169,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36170,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36174,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33397,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 36171,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33394,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 36172,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33395,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 36173,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33396,
						"name": "FindParams.order"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36175,
						36176,
						36165,
						36166,
						36167,
						36168,
						36169,
						36170,
						36174,
						36171,
						36172,
						36173
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33393,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 32824,
					"typeArguments": [
						{
							"type": "reference",
							"target": 36164,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33360,
					"name": "AdminCollectionListParams"
				}
			]
		},
		{
			"id": 36187,
			"name": "BaseExchangeItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36188,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36189,
					"name": "exchange_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36190,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36191,
					"name": "item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36192,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36193,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 36194,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36195,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36188,
						36189,
						36190,
						36191,
						36192,
						36193,
						36194,
						36195
					]
				}
			]
		},
		{
			"id": 36179,
			"name": "BaseExchange",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36180,
					"name": "order_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36181,
					"name": "return_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 33942,
							"name": "AdminBaseReturnItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 36182,
					"name": "additional_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36187,
							"name": "BaseExchangeItem",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 36183,
					"name": "no_notification",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36184,
					"name": "difference_due",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36185,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 33951,
						"name": "AdminReturn",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36186,
					"name": "return_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36180,
						36181,
						36182,
						36183,
						36184,
						36185,
						36186
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/order/common.ts",
								"qualifiedName": "BaseOrder"
							},
							"name": "BaseOrder",
							"package": "@medusajs/types"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "status"
								},
								{
									"type": "literal",
									"value": "version"
								},
								{
									"type": "literal",
									"value": "items"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33419,
					"name": "AdminExchange"
				}
			]
		},
		{
			"id": 36196,
			"name": "BaseFile",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36197,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36198,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36197,
						36198
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33445,
					"name": "AdminFile"
				},
				{
					"type": "reference",
					"target": 33449,
					"name": "StoreFile"
				}
			]
		},
		{
			"id": 36199,
			"name": "BaseUploadFile",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 36200,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36201,
									"name": "files",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reflection",
													"declaration": {
														"id": 36202,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 36203,
																"name": "name",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 36204,
																"name": "content",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	36203,
																	36204
																]
															}
														]
													}
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
														"qualifiedName": "File"
													},
													"name": "File",
													"package": "typescript"
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36201
									]
								}
							]
						}
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.dom.d.ts",
							"qualifiedName": "FileList"
						},
						"name": "FileList",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 36205,
			"name": "BaseFulfillmentProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36206,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36207,
					"name": "is_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36206,
						36207
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33452,
					"name": "AdminFulfillmentProvider"
				}
			]
		},
		{
			"id": 36416,
			"name": "AdminUpsertGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36417,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36418,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36419,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36417,
						36418,
						36419
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36362,
					"name": "AdminUpsertFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 36366,
					"name": "AdminUpsertFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 36371,
					"name": "AdminUpsertFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 36377,
					"name": "AdminUpsertFulfillmentSetServiceZoneZip"
				},
				{
					"type": "reference",
					"target": 36420,
					"name": "AdminUpdateGeoZone"
				}
			]
		},
		{
			"id": 36362,
			"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36364,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36418,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 36365,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36419,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 36363,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 36417,
						"name": "AdminUpsertGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36364,
						36365,
						36363
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36416,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36366,
			"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36369,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36418,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 36370,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36419,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 36367,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 36417,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 36368,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36369,
						36370,
						36367,
						36368
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36416,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36371,
			"name": "AdminUpsertFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36375,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36418,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 36376,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36419,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 36372,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 36417,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 36373,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36374,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36375,
						36376,
						36372,
						36373,
						36374
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36416,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36377,
			"name": "AdminUpsertFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36382,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36418,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 36383,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36419,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 36378,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 36417,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 36379,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36380,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36381,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36382,
						36383,
						36378,
						36379,
						36380,
						36381
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36416,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36208,
			"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 36362,
						"name": "AdminUpsertFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36366,
						"name": "AdminUpsertFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36371,
						"name": "AdminUpsertFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36377,
						"name": "AdminUpsertFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 36420,
			"name": "AdminUpdateGeoZone",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36422,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36417,
						"name": "AdminUpsertGeoZone.type"
					}
				},
				{
					"id": 36423,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36418,
						"name": "AdminUpsertGeoZone.country_code"
					}
				},
				{
					"id": 36424,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36419,
						"name": "AdminUpsertGeoZone.metadata"
					}
				},
				{
					"id": 36421,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36422,
						36423,
						36424,
						36421
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36416,
					"name": "AdminUpsertGeoZone",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 36384,
					"name": "AdminUpdateFulfillmentSetServiceZoneCountry"
				},
				{
					"type": "reference",
					"target": 36389,
					"name": "AdminUpdateFulfillmentSetServiceZoneProvince"
				},
				{
					"type": "reference",
					"target": 36395,
					"name": "AdminUpdateFulfillmentSetServiceZoneCity"
				},
				{
					"type": "reference",
					"target": 36402,
					"name": "AdminUpdateFulfillmentSetServiceZoneZip"
				}
			]
		},
		{
			"id": 36384,
			"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36387,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36423,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 36388,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36424,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 36386,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36421,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 36385,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "country"
					},
					"overwrites": {
						"type": "reference",
						"target": 36422,
						"name": "AdminUpdateGeoZone.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36387,
						36388,
						36386,
						36385
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36420,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36389,
			"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36393,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36423,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 36394,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36424,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 36392,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36421,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 36390,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "province"
					},
					"overwrites": {
						"type": "reference",
						"target": 36422,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 36391,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36393,
						36394,
						36392,
						36390,
						36391
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36420,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36395,
			"name": "AdminUpdateFulfillmentSetServiceZoneCity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36400,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36423,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 36401,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36424,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 36399,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36421,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 36396,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "city"
					},
					"overwrites": {
						"type": "reference",
						"target": 36422,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 36397,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36398,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36400,
						36401,
						36399,
						36396,
						36397,
						36398
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36420,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36402,
			"name": "AdminUpdateFulfillmentSetServiceZoneZip",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36408,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36423,
						"name": "AdminUpdateGeoZone.country_code"
					}
				},
				{
					"id": 36409,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36424,
						"name": "AdminUpdateGeoZone.metadata"
					}
				},
				{
					"id": 36407,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 36421,
						"name": "AdminUpdateGeoZone.id"
					}
				},
				{
					"id": 36403,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "literal",
						"value": "zip"
					},
					"overwrites": {
						"type": "reference",
						"target": 36422,
						"name": "AdminUpdateGeoZone.type"
					}
				},
				{
					"id": 36404,
					"name": "province_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36405,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36406,
					"name": "postal_expression",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36408,
						36409,
						36407,
						36403,
						36404,
						36405,
						36406
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 36420,
					"name": "AdminUpdateGeoZone",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 36209,
			"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 36384,
						"name": "AdminUpdateFulfillmentSetServiceZoneCountry",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36389,
						"name": "AdminUpdateFulfillmentSetServiceZoneProvince",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36395,
						"name": "AdminUpdateFulfillmentSetServiceZoneCity",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 36402,
						"name": "AdminUpdateFulfillmentSetServiceZoneZip",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 33170,
			"name": "HttpTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 33171,
					"name": "AdminCreateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33172,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33173,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33174,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33175,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33176,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33177,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33178,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 33179,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33180,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 33181,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 33182,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33180,
														33181,
														33182
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33172,
								33173,
								33174,
								33175,
								33176,
								33177,
								33178
							]
						}
					]
				},
				{
					"id": 33183,
					"name": "AdminUpdateCampaign",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33184,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33185,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33186,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33187,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33188,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33189,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33190,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 33191,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 33192,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
															"qualifiedName": "CampaignBudgetTypeValues"
														},
														"name": "CampaignBudgetTypeValues",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 33193,
													"name": "currency_code",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 33194,
													"name": "limit",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														33192,
														33193,
														33194
													]
												}
											]
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33184,
								33185,
								33186,
								33187,
								33188,
								33189,
								33190
							]
						}
					]
				},
				{
					"id": 33195,
					"name": "CampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33196,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33197,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33198,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33199,
							"name": "currency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33200,
							"name": "campaign_identifier",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33201,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33202,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33203,
							"name": "budget",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33204,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33205,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 33206,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/promotion/common/campaign-budget.ts",
													"qualifiedName": "CampaignBudgetTypeValues"
												},
												"name": "CampaignBudgetTypeValues",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 33207,
											"name": "currency_code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 33208,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 33209,
											"name": "used",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33205,
												33206,
												33207,
												33208,
												33209
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33196,
								33197,
								33198,
								33199,
								33200,
								33201,
								33202,
								33203
							]
						}
					]
				},
				{
					"id": 33210,
					"name": "AdminCampaignListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33211,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33212,
											"name": "campaigns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33195,
													"name": "CampaignResponse",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33212
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33213,
					"name": "AdminCampaignResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33214,
							"name": "campaign",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33195,
								"name": "CampaignResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33214
							]
						}
					]
				},
				{
					"id": 33215,
					"name": "AdminClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33216,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36097,
								"name": "BaseClaim.order_id"
							}
						},
						{
							"id": 33217,
							"name": "claim_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36104,
									"name": "BaseClaimItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36098,
								"name": "BaseClaim.claim_items"
							}
						},
						{
							"id": 33218,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36099,
								"name": "BaseClaim.additional_items"
							}
						},
						{
							"id": 33219,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "ReturnDTO"
								},
								"name": "ReturnDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36100,
								"name": "BaseClaim.return"
							}
						},
						{
							"id": 33220,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36101,
								"name": "BaseClaim.return_id"
							}
						},
						{
							"id": 33221,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36102,
								"name": "BaseClaim.no_notification"
							}
						},
						{
							"id": 33222,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36103,
								"name": "BaseClaim.refund_amount"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33216,
								33217,
								33218,
								33219,
								33220,
								33221,
								33222
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36096,
							"name": "BaseClaim",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33223,
					"name": "AdminCreateClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33224,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "replace"
									},
									{
										"type": "literal",
										"value": "refund"
									}
								]
							}
						},
						{
							"id": 33225,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33226,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33227,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33228,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33224,
								33225,
								33226,
								33227,
								33228
							]
						}
					]
				},
				{
					"id": 33229,
					"name": "AdminAddClaimItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33230,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 33231,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33232,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 33233,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 33234,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 36123,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 33235,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 33236,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33232,
													33233,
													33234,
													33235,
													33236
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36116,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33230
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36115,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33237,
					"name": "AdminUpdateClaimItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33238,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36129,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 33239,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36130,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 33240,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36131,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 33241,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36132,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33238,
								33239,
								33240,
								33241
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36128,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33242,
					"name": "AdminAddClaimInboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33243,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 33244,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33245,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 33246,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 33247,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 36123,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 33248,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 33249,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33245,
													33246,
													33247,
													33248,
													33249
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36116,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33243
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36115,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33250,
					"name": "AdminUpdateClaimInboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33251,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36129,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 33252,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36130,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 33253,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36131,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 33254,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36132,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33251,
								33252,
								33253,
								33254
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36128,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33255,
					"name": "AdminAddClaimOutboundItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33256,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 33257,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33258,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 33259,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 33260,
												"name": "reason",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "reference",
													"target": 36123,
													"name": "ClaimReason",
													"package": "@medusajs/types"
												}
											},
											{
												"id": 33261,
												"name": "description",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 33262,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33258,
													33259,
													33260,
													33261,
													33262
												]
											}
										]
									}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36116,
								"name": "AdminClaimAddItems.items"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33256
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36115,
							"name": "AdminClaimAddItems",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33263,
					"name": "AdminUpdateClaimOutboundItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33264,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36129,
								"name": "AdminClaimUpdateItem.quantity"
							}
						},
						{
							"id": 33265,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36130,
								"name": "AdminClaimUpdateItem.reason_id"
							}
						},
						{
							"id": 33266,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36131,
								"name": "AdminClaimUpdateItem.description"
							}
						},
						{
							"id": 33267,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36132,
								"name": "AdminClaimUpdateItem.internal_note"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33264,
								33265,
								33266,
								33267
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36128,
							"name": "AdminClaimUpdateItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33268,
					"name": "AdminClaimAddInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33269,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36134,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 33270,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36135,
								"name": "AdminClaimAddShippingMethod.custom_price"
							}
						},
						{
							"id": 33271,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36136,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 33272,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36137,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 33273,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36138,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33269,
								33270,
								33271,
								33272,
								33273
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36133,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33274,
					"name": "AdminClaimUpdateInboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33275,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36140,
								"name": "AdminClaimUpdateShippingMethod.custom_price"
							}
						},
						{
							"id": 33276,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36141,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 33277,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36142,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33275,
								33276,
								33277
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36139,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33278,
					"name": "AdminClaimAddOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33279,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36134,
								"name": "AdminClaimAddShippingMethod.shipping_option_id"
							}
						},
						{
							"id": 33280,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36135,
								"name": "AdminClaimAddShippingMethod.custom_price"
							}
						},
						{
							"id": 33281,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36136,
								"name": "AdminClaimAddShippingMethod.description"
							}
						},
						{
							"id": 33282,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36137,
								"name": "AdminClaimAddShippingMethod.internal_note"
							}
						},
						{
							"id": 33283,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36138,
								"name": "AdminClaimAddShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33279,
								33280,
								33281,
								33282,
								33283
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36133,
							"name": "AdminClaimAddShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33284,
					"name": "AdminClaimUpdateOutboundShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33285,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36140,
								"name": "AdminClaimUpdateShippingMethod.custom_price"
							}
						},
						{
							"id": 33286,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36141,
								"name": "AdminClaimUpdateShippingMethod.internal_note"
							}
						},
						{
							"id": 33287,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36142,
								"name": "AdminClaimUpdateShippingMethod.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33285,
								33286,
								33287
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36139,
							"name": "AdminClaimUpdateShippingMethod",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33288,
					"name": "AdminRequestClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 33289,
					"name": "AdminCancelClaim",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33290,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33290
							]
						}
					]
				},
				{
					"id": 33291,
					"name": "AdminClaimListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33303,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33291,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33291,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 33304,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33291,
											"name": "AdminClaimListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33291,
													"name": "AdminClaimListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 33292,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"overwrites": {
								"type": "reference",
								"target": 36150,
								"name": "BaseClaimListParams.deleted_at"
							}
						},
						{
							"id": 33293,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36144,
								"name": "BaseClaimListParams.q"
							}
						},
						{
							"id": 33294,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36145,
								"name": "BaseClaimListParams.id"
							}
						},
						{
							"id": 33295,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36146,
								"name": "BaseClaimListParams.order_id"
							}
						},
						{
							"id": 33296,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36147,
								"name": "BaseClaimListParams.status"
							}
						},
						{
							"id": 33297,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36148,
								"name": "BaseClaimListParams.created_at"
							}
						},
						{
							"id": 33298,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36149,
								"name": "BaseClaimListParams.updated_at"
							}
						},
						{
							"id": 33302,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36154,
								"name": "BaseClaimListParams.fields"
							}
						},
						{
							"id": 33299,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36151,
								"name": "BaseClaimListParams.limit"
							}
						},
						{
							"id": 33300,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36152,
								"name": "BaseClaimListParams.offset"
							}
						},
						{
							"id": 33301,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36153,
								"name": "BaseClaimListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33303,
								33304,
								33292,
								33293,
								33294,
								33295,
								33296,
								33297,
								33298,
								33302,
								33299,
								33300,
								33301
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36143,
							"name": "BaseClaimListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33291,
									"name": "AdminClaimListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33305,
					"name": "AdminClaimParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33306,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33307,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33308,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33309,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33310,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33311,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33306,
								33307,
								33308,
								33309,
								33310,
								33311
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33312,
					"name": "AdminClaimResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33313,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33215,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33313
							]
						}
					]
				},
				{
					"id": 33314,
					"name": "AdminClaimListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33320,
							"name": "claims",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33215,
									"name": "AdminClaim",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.claims"
							}
						},
						{
							"id": 33317,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33318,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33319,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33320,
								33317,
								33318,
								33319
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33315,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33316,
												"name": "claims",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33215,
														"name": "AdminClaim",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33316
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33321,
					"name": "AdminClaimOrderResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33322,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33323,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33215,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33322,
								33323
							]
						}
					]
				},
				{
					"id": 33324,
					"name": "AdminClaimPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33325,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33326,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33215,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33325,
								33326
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33330,
							"name": "AdminClaimRequestResponse"
						}
					]
				},
				{
					"id": 33327,
					"name": "AdminClaimReturnPreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33328,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33329,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33951,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33328,
								33329
							]
						}
					]
				},
				{
					"id": 33330,
					"name": "AdminClaimRequestResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33332,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33325,
								"name": "AdminClaimPreviewResponse.order_preview"
							}
						},
						{
							"id": 33333,
							"name": "claim",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33215,
								"name": "AdminClaim",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33326,
								"name": "AdminClaimPreviewResponse.claim"
							}
						},
						{
							"id": 33331,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33951,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33332,
								33333,
								33331
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33324,
							"name": "AdminClaimPreviewResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33334,
					"name": "AdminClaimDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33335,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33336,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "claim"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33337,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33338,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33339,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33335,
								33336,
								33337,
								33338
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "claim"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33340,
					"name": "AdminCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33341,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36156,
								"name": "BaseCollection.id"
							}
						},
						{
							"id": 33342,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36157,
								"name": "BaseCollection.title"
							}
						},
						{
							"id": 33343,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36158,
								"name": "BaseCollection.handle"
							}
						},
						{
							"id": 33344,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36159,
								"name": "BaseCollection.created_at"
							}
						},
						{
							"id": 33345,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36160,
								"name": "BaseCollection.updated_at"
							}
						},
						{
							"id": 33346,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36161,
								"name": "BaseCollection.deleted_at"
							}
						},
						{
							"id": 33347,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36162,
								"name": "BaseCollection.products"
							}
						},
						{
							"id": 33348,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36163,
								"name": "BaseCollection.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33341,
								33342,
								33343,
								33344,
								33345,
								33346,
								33347,
								33348
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36155,
							"name": "BaseCollection",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33349,
					"name": "AdminCreateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33350,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33351,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33352,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33350,
								33351,
								33352
							]
						}
					]
				},
				{
					"id": 33353,
					"name": "AdminUpdateCollection",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33354,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33355,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33356,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33354,
								33355,
								33356
							]
						}
					]
				},
				{
					"id": 33357,
					"name": "AdminUpdateCollectionProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33358,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33359,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33358,
								33359
							]
						}
					]
				},
				{
					"id": 33360,
					"name": "AdminCollectionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33372,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36164,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36164,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36175,
								"name": "BaseCollectionListParams.$and"
							}
						},
						{
							"id": 33373,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36164,
											"name": "BaseCollectionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36164,
													"name": "BaseCollectionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36176,
								"name": "BaseCollectionListParams.$or"
							}
						},
						{
							"id": 33361,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33362,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36165,
								"name": "BaseCollectionListParams.q"
							}
						},
						{
							"id": 33363,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36166,
								"name": "BaseCollectionListParams.id"
							}
						},
						{
							"id": 33364,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36167,
								"name": "BaseCollectionListParams.handle"
							}
						},
						{
							"id": 33365,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36168,
								"name": "BaseCollectionListParams.title"
							}
						},
						{
							"id": 33366,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36169,
								"name": "BaseCollectionListParams.created_at"
							}
						},
						{
							"id": 33367,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36170,
								"name": "BaseCollectionListParams.updated_at"
							}
						},
						{
							"id": 33371,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36174,
								"name": "BaseCollectionListParams.fields"
							}
						},
						{
							"id": 33368,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36171,
								"name": "BaseCollectionListParams.limit"
							}
						},
						{
							"id": 33369,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36172,
								"name": "BaseCollectionListParams.offset"
							}
						},
						{
							"id": 33370,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36173,
								"name": "BaseCollectionListParams.order"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33372,
								33373,
								33361,
								33362,
								33363,
								33364,
								33365,
								33366,
								33367,
								33371,
								33368,
								33369,
								33370
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36164,
							"name": "BaseCollectionListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33374,
					"name": "AdminCollectionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33375,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36178,
								"name": "BaseCollectionParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33375
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36177,
							"name": "BaseCollectionParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33376,
					"name": "AdminCollectionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33377,
							"name": "collection",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33340,
								"name": "AdminCollection",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33377
							]
						}
					]
				},
				{
					"id": 33378,
					"name": "AdminCollectionListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33384,
							"name": "collections",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33340,
									"name": "AdminCollection",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.collections"
							}
						},
						{
							"id": 33381,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33382,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33383,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33384,
								33381,
								33382,
								33383
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33379,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33380,
												"name": "collections",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33340,
														"name": "AdminCollection",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33380
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33385,
					"name": "AdminCollectionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33386,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33387,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "collection"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33388,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33389,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33390,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33386,
								33387,
								33388,
								33389
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "collection"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33416,
					"name": "AdditionalData",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the additional_data property accepted in HTTP\nrequests to allow arbitrary values"
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33417,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33418,
									"name": "additional_data",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33418
									]
								}
							]
						}
					}
				},
				{
					"id": 33391,
					"name": "SelectParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33392,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33392
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33305,
							"name": "AdminClaimParams"
						},
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams"
						},
						{
							"type": "reference",
							"target": 33673,
							"name": "AdminNotificationParams"
						},
						{
							"type": "reference",
							"target": 33751,
							"name": "AdminPriceListParams"
						},
						{
							"type": "reference",
							"target": 33877,
							"name": "AdminProductTagParams"
						},
						{
							"type": "reference",
							"target": 33920,
							"name": "AdminProductTypeParams"
						},
						{
							"type": "reference",
							"target": 34074,
							"name": "AdminReturnReasonParams"
						},
						{
							"type": "reference",
							"target": 34429,
							"name": "AdminTaxRegionParams"
						},
						{
							"type": "reference",
							"target": 36177,
							"name": "BaseCollectionParams"
						},
						{
							"type": "reference",
							"target": 36245,
							"name": "BaseProductCategoryParams"
						}
					]
				},
				{
					"id": 33393,
					"name": "FindParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33397,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						},
						{
							"id": 33394,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33395,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33396,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33397,
								33394,
								33395,
								33396
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33455,
							"name": "AdminFulfillmentProviderListParams"
						},
						{
							"type": "reference",
							"target": 33567,
							"name": "AdminInventoryItemParams"
						},
						{
							"type": "reference",
							"target": 33611,
							"name": "AdminInventoryLevelFilters"
						},
						{
							"type": "reference",
							"target": 33663,
							"name": "AdminNotificationListParams"
						},
						{
							"type": "reference",
							"target": 33738,
							"name": "AdminPriceListListParams"
						},
						{
							"type": "reference",
							"target": 33907,
							"name": "AdminProductTypeListParams"
						},
						{
							"type": "reference",
							"target": 34030,
							"name": "AdminReturnFilters"
						},
						{
							"type": "reference",
							"target": 34184,
							"name": "AdminShippingOptionListParams"
						},
						{
							"type": "reference",
							"target": 34234,
							"name": "AdminShippingProfileListParams"
						},
						{
							"type": "reference",
							"target": 34293,
							"name": "AdminStockLocationListParams"
						},
						{
							"type": "reference",
							"target": 34355,
							"name": "AdminTaxRateListParams"
						},
						{
							"type": "reference",
							"target": 34413,
							"name": "AdminTaxRegionListParams"
						},
						{
							"type": "reference",
							"target": 36143,
							"name": "BaseClaimListParams"
						},
						{
							"type": "reference",
							"target": 36164,
							"name": "BaseCollectionListParams"
						},
						{
							"type": "reference",
							"target": 36225,
							"name": "BaseProductCategoryListParams"
						},
						{
							"type": "reference",
							"target": 36256,
							"name": "BaseProductTagListParams"
						},
						{
							"type": "reference",
							"target": 36296,
							"name": "BaseReturnReasonListParams"
						}
					]
				},
				{
					"id": 33398,
					"name": "AdminBatchLink",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33399,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33400,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33399,
								33400
							]
						}
					]
				},
				{
					"id": 33401,
					"name": "DeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33407,
							"name": "TObject",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33408,
							"name": "TParent",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reflection",
								"declaration": {
									"id": 33409,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33402,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33403,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33404,
									"name": "object",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The type of the item that was deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 33407,
										"name": "TObject",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 33405,
									"name": "deleted",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Whether the item was deleted successfully."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 33406,
									"name": "parent",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The parent resource of the item that was deleted, if applicable."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 33408,
										"name": "TParent",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33403,
										33404,
										33405,
										33406
									]
								}
							]
						}
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 33334,
							"name": "AdminClaimDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33385,
							"name": "AdminCollectionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33508,
							"name": "AdminServiceZoneDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33515,
							"name": "AdminFulfillmentSetDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33762,
							"name": "AdminPriceListDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33845,
							"name": "AdminProductCategoryDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33888,
							"name": "AdminProductTagDeleteResponse"
						},
						{
							"type": "reference",
							"target": 33931,
							"name": "AdminProductTypeDeleteResponse"
						},
						{
							"type": "reference",
							"target": 34085,
							"name": "AdminReturnReasonDeleteResponse"
						},
						{
							"type": "reference",
							"target": 34204,
							"name": "AdminShippingOptionDeleteResponse"
						},
						{
							"type": "reference",
							"target": 34253,
							"name": "AdminShippingProfileDeleteResponse"
						},
						{
							"type": "reference",
							"target": 34314,
							"name": "AdminStockLocationDeleteResponse"
						},
						{
							"type": "reference",
							"target": 34376,
							"name": "AdminTaxRateDeleteResponse"
						},
						{
							"type": "reference",
							"target": 34436,
							"name": "AdminTaxRegionDeleteResponse"
						}
					]
				},
				{
					"id": 33410,
					"name": "PaginatedResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 33415,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33411,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33412,
											"name": "limit",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 33413,
											"name": "offset",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 33414,
											"name": "count",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33412,
												33413,
												33414
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 33415,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						]
					},
					"extendedBy": [
						{
							"type": "reference",
							"target": 33314,
							"name": "AdminClaimListResponse"
						},
						{
							"type": "reference",
							"target": 33378,
							"name": "AdminCollectionListResponse"
						},
						{
							"type": "reference",
							"target": 33464,
							"name": "AdminFulfillmentProviderListResponse"
						},
						{
							"type": "reference",
							"target": 33677,
							"name": "AdminNotificationListResponse"
						},
						{
							"type": "reference",
							"target": 33755,
							"name": "AdminPriceListListResponse"
						},
						{
							"type": "reference",
							"target": 33838,
							"name": "AdminProductCategoryListResponse"
						},
						{
							"type": "reference",
							"target": 33881,
							"name": "AdminProductTagListResponse"
						},
						{
							"type": "reference",
							"target": 33924,
							"name": "AdminProductTypeListResponse"
						},
						{
							"type": "reference",
							"target": 34078,
							"name": "AdminReturnReasonListResponse"
						},
						{
							"type": "reference",
							"target": 34307,
							"name": "AdminStockLocationListResponse"
						}
					]
				},
				{
					"id": 33419,
					"name": "AdminExchange",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33420,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36180,
								"name": "BaseExchange.order_id"
							}
						},
						{
							"id": 33421,
							"name": "return_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33942,
									"name": "AdminBaseReturnItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36181,
								"name": "BaseExchange.return_items"
							}
						},
						{
							"id": 33422,
							"name": "additional_items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36187,
									"name": "BaseExchangeItem",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36182,
								"name": "BaseExchange.additional_items"
							}
						},
						{
							"id": 33423,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36183,
								"name": "BaseExchange.no_notification"
							}
						},
						{
							"id": 33424,
							"name": "difference_due",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36184,
								"name": "BaseExchange.difference_due"
							}
						},
						{
							"id": 33425,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33951,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36185,
								"name": "BaseExchange.return"
							}
						},
						{
							"id": 33426,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36186,
								"name": "BaseExchange.return_id"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33420,
								33421,
								33422,
								33423,
								33424,
								33425,
								33426
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36179,
							"name": "BaseExchange",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33427,
					"name": "AdminExchangeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33428,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33419,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33428
							]
						}
					]
				},
				{
					"id": 33429,
					"name": "AdminExchangeListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33430,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33431,
											"name": "exchanges",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 33419,
												"name": "AdminExchange",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33431
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33432,
					"name": "AdminExchangeOrderResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33433,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33434,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33419,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33433,
								33434
							]
						}
					]
				},
				{
					"id": 33435,
					"name": "AdminExchangePreviewResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33436,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33437,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33419,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33436,
								33437
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33438,
							"name": "AdminExchangeRequestResponse"
						}
					]
				},
				{
					"id": 33438,
					"name": "AdminExchangeRequestResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33440,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33436,
								"name": "AdminExchangePreviewResponse.order_preview"
							}
						},
						{
							"id": 33441,
							"name": "exchange",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 33419,
								"name": "AdminExchange",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33437,
								"name": "AdminExchangePreviewResponse.exchange"
							}
						},
						{
							"id": 33439,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33951,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33440,
								33441,
								33439
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33435,
							"name": "AdminExchangePreviewResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33442,
					"name": "AdminExchangeReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33443,
							"name": "order_preview",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/order/common.ts",
									"qualifiedName": "OrderDTO"
								},
								"name": "OrderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33444,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33951,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33443,
								33444
							]
						}
					]
				},
				{
					"id": 33445,
					"name": "AdminFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33446,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36197,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 33447,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36198,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33446,
								33447
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36196,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33448,
					"name": "AdminUploadFile",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 36199,
						"name": "BaseUploadFile",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33449,
					"name": "StoreFile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33450,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36197,
								"name": "BaseFile.id"
							}
						},
						{
							"id": 33451,
							"name": "url",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36198,
								"name": "BaseFile.url"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33450,
								33451
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36196,
							"name": "BaseFile",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33452,
					"name": "AdminFulfillmentProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33453,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36206,
								"name": "BaseFulfillmentProvider.id"
							}
						},
						{
							"id": 33454,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36207,
								"name": "BaseFulfillmentProvider.is_enabled"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33453,
								33454
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36205,
							"name": "BaseFulfillmentProvider",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33455,
					"name": "AdminFulfillmentProviderListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33463,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 33460,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 33461,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 33462,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 33456,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33457,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33458,
							"name": "is_enabled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33459,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33463,
								33460,
								33461,
								33462,
								33456,
								33457,
								33458,
								33459
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33464,
					"name": "AdminFulfillmentProviderListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33467,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33468,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33469,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 33470,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33452,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.fulfillment_providers"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33467,
								33468,
								33469,
								33470
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33465,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33466,
												"name": "fulfillment_providers",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33452,
														"name": "AdminFulfillmentProvider",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33466
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33471,
					"name": "AdminGeoZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33472,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33473,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/geo-zone.ts",
									"qualifiedName": "GeoZoneType"
								},
								"name": "GeoZoneType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33474,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33475,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33476,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33477,
							"name": "postal_expression",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33478,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33479,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33480,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33472,
								33473,
								33474,
								33475,
								33476,
								33477,
								33478,
								33479,
								33480
							]
						}
					]
				},
				{
					"id": 33481,
					"name": "AdminServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33482,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33483,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33484,
							"name": "fulfillment_set_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33485,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33491,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33486,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33471,
									"name": "AdminGeoZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33487,
							"name": "shipping_options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34115,
									"name": "AdminShippingOption",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33488,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33489,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33490,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33482,
								33483,
								33484,
								33485,
								33486,
								33487,
								33488,
								33489,
								33490
							]
						}
					]
				},
				{
					"id": 33491,
					"name": "AdminFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33492,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33493,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33494,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33495,
							"name": "location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34269,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33496,
							"name": "service_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33481,
									"name": "AdminServiceZone",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33497,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33498,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33499,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33492,
								33493,
								33494,
								33495,
								33496,
								33497,
								33498,
								33499
							]
						}
					]
				},
				{
					"id": 33500,
					"name": "AdminCreateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33501,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33502,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36208,
									"name": "AdminUpsertFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33501,
								33502
							]
						}
					]
				},
				{
					"id": 33503,
					"name": "AdminUpdateFulfillmentSetServiceZone",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33504,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33505,
							"name": "geo_zones",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36209,
									"name": "AdminUpdateFulfillmentSetServiceZoneGeoZone",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33504,
								33505
							]
						}
					]
				},
				{
					"id": 33506,
					"name": "AdminServiceZoneResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33507,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33481,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33507
							]
						}
					]
				},
				{
					"id": 33508,
					"name": "AdminServiceZoneDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33509,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33510,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "service_zone"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33511,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33512,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 33491,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33509,
								33510,
								33511,
								33512
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "service_zone"
								},
								{
									"type": "reference",
									"target": 33491,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33513,
					"name": "AdminFulfillmentSetResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33514,
							"name": "fulfillment_set",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33491,
								"name": "AdminFulfillmentSet",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33514
							]
						}
					]
				},
				{
					"id": 33515,
					"name": "AdminFulfillmentSetDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33516,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33517,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "fulfillment_set"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33518,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33519,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33520,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33516,
								33517,
								33518,
								33519
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "fulfillment_set"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33591,
					"name": "InventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33592,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33593,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33594,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33595,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33596,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33597,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33598,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33599,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33592,
								33593,
								33594,
								33595,
								33596,
								33597,
								33598,
								33599
							]
						}
					]
				},
				{
					"id": 33600,
					"name": "AdminUpdateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33601,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33602,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33601,
								33602
							]
						}
					]
				},
				{
					"id": 33603,
					"name": "AdminCreateInventoryLevel",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33604,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33605,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33606,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33604,
								33605,
								33606
							]
						}
					]
				},
				{
					"id": 33607,
					"name": "AdminBatchUpdateInventoryLevelLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33608,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33609,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "undefined"
							}
						},
						{
							"id": 33610,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33603,
									"name": "AdminCreateInventoryLevel",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33608,
								33609,
								33610
							]
						}
					]
				},
				{
					"id": 33611,
					"name": "AdminInventoryLevelFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33616,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 33613,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 33614,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 33615,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 33612,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33616,
								33613,
								33614,
								33615,
								33612
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33617,
					"name": "AdminInventoryLevelResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33618,
							"name": "inventory_level",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33591,
								"name": "InventoryLevel",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33618
							]
						}
					]
				},
				{
					"id": 33619,
					"name": "AdminInventoryLevelListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33620,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33621,
											"name": "inventory_levels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33591,
													"name": "InventoryLevel",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33621
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33521,
					"name": "AdminInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33522,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33523,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33524,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33525,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33526,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33527,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33528,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33529,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33530,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33531,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33532,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33533,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33534,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33535,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33536,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33522,
								33523,
								33524,
								33525,
								33526,
								33527,
								33528,
								33529,
								33530,
								33531,
								33532,
								33533,
								33534,
								33535,
								33536
							]
						}
					]
				},
				{
					"id": 33537,
					"name": "AdminCreateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33538,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33539,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33540,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33541,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33542,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33543,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33544,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33545,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33546,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33547,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33548,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33549,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33550,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33551,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33538,
								33539,
								33540,
								33541,
								33542,
								33543,
								33544,
								33545,
								33546,
								33547,
								33548,
								33549,
								33550,
								33551
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33552,
							"name": "AdminUpdateInventoryItem"
						}
					]
				},
				{
					"id": 33552,
					"name": "AdminUpdateInventoryItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33553,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33538,
								"name": "AdminCreateInventoryItem.sku"
							}
						},
						{
							"id": 33554,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33539,
								"name": "AdminCreateInventoryItem.hs_code"
							}
						},
						{
							"id": 33555,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33540,
								"name": "AdminCreateInventoryItem.weight"
							}
						},
						{
							"id": 33556,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33541,
								"name": "AdminCreateInventoryItem.length"
							}
						},
						{
							"id": 33557,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33542,
								"name": "AdminCreateInventoryItem.height"
							}
						},
						{
							"id": 33558,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33543,
								"name": "AdminCreateInventoryItem.width"
							}
						},
						{
							"id": 33559,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33544,
								"name": "AdminCreateInventoryItem.origin_country"
							}
						},
						{
							"id": 33560,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33545,
								"name": "AdminCreateInventoryItem.mid_code"
							}
						},
						{
							"id": 33561,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33546,
								"name": "AdminCreateInventoryItem.material"
							}
						},
						{
							"id": 33562,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33547,
								"name": "AdminCreateInventoryItem.title"
							}
						},
						{
							"id": 33563,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33548,
								"name": "AdminCreateInventoryItem.description"
							}
						},
						{
							"id": 33564,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33549,
								"name": "AdminCreateInventoryItem.requires_shipping"
							}
						},
						{
							"id": 33565,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33550,
								"name": "AdminCreateInventoryItem.thumbnail"
							}
						},
						{
							"id": 33566,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33551,
								"name": "AdminCreateInventoryItem.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33553,
								33554,
								33555,
								33556,
								33557,
								33558,
								33559,
								33560,
								33561,
								33562,
								33563,
								33564,
								33565,
								33566
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33537,
							"name": "AdminCreateInventoryItem",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33567,
					"name": "AdminInventoryItemParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33584,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 33581,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 33582,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 33583,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 33568,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33569,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33570,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33571,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33572,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33573,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33574,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33575,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33576,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 33577,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 33578,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 33579,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 33580,
							"name": "location_levels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "literal",
										"value": "location_id"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33584,
								33581,
								33582,
								33583,
								33568,
								33569,
								33570,
								33571,
								33572,
								33573,
								33574,
								33575,
								33576,
								33577,
								33578,
								33579,
								33580
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33585,
					"name": "AdminInventoryItemResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33586,
							"name": "inventory_item",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33521,
								"name": "AdminInventoryItem",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33586
							]
						}
					]
				},
				{
					"id": 33587,
					"name": "AdminInventoryItemListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33588,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33589,
											"name": "inventory_items",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33521,
													"name": "AdminInventoryItem",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33589
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33590,
					"name": "AdminInventoryItemDeleteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33401,
						"typeArguments": [
							{
								"type": "literal",
								"value": "inventory_item"
							}
						],
						"name": "DeleteResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33622,
					"name": "AdminInvite",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33623,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33624,
							"name": "email",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33625,
							"name": "accepted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33626,
							"name": "token",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33627,
							"name": "expires_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 33628,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 33629,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 33630,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33623,
								33624,
								33625,
								33626,
								33627,
								33628,
								33629,
								33630
							]
						}
					]
				},
				{
					"id": 33631,
					"name": "AdminAcceptInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33632,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33633,
									"name": "first_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33634,
									"name": "last_name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33633,
										33634
									]
								}
							]
						}
					}
				},
				{
					"id": 33635,
					"name": "AdminCreateInvite",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 33636,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 33637,
									"name": "email",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 33638,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										33637,
										33638
									]
								}
							]
						}
					}
				},
				{
					"id": 33639,
					"name": "AdminInviteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33640,
							"name": "invite",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33622,
								"name": "AdminInvite",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33640
							]
						}
					]
				},
				{
					"id": 33641,
					"name": "AdminInviteListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33642,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33643,
											"name": "invites",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33622,
													"name": "AdminInvite",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33643
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 33644,
					"name": "AdminAcceptInviteResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33645,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33646,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/http/user/admin/entities.ts",
													"qualifiedName": "AdminUser"
												},
												"name": "AdminUser",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33646
											]
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 33647,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33648,
											"name": "message",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33648
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 33649,
					"name": "AdminNotification",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33650,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33651,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33652,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33653,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33654,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 33655,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33656,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33657,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33658,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33659,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33660,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33661,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33662,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33650,
								33651,
								33652,
								33653,
								33654,
								33655,
								33656,
								33657,
								33658,
								33659,
								33660,
								33661,
								33662
							]
						}
					]
				},
				{
					"id": 33663,
					"name": "AdminNotificationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33667,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33663,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33663,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 33668,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33663,
											"name": "AdminNotificationListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33663,
													"name": "AdminNotificationListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 33672,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 33669,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 33670,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 33671,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 33664,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33665,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33666,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33667,
								33668,
								33672,
								33669,
								33670,
								33671,
								33664,
								33665,
								33666
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33663,
									"name": "AdminNotificationListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33673,
					"name": "AdminNotificationParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33674,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33674
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33675,
					"name": "AdminNotificationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33676,
							"name": "notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33649,
								"name": "AdminNotification",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33676
							]
						}
					]
				},
				{
					"id": 33677,
					"name": "AdminNotificationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33680,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33681,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33682,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 33683,
							"name": "notifications",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33649,
									"name": "AdminNotification",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.notifications"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33680,
								33681,
								33682,
								33683
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33678,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33679,
												"name": "notifications",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33649,
														"name": "AdminNotification",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33679
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33684,
					"name": "AdminPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33685,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33686,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33685,
								33686
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33687,
					"name": "AdminPriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33688,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33689,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33690,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33691,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 33692,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33693,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33694,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33695,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33696,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33684,
									"name": "AdminPriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33697,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33698,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33699,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33688,
								33689,
								33690,
								33691,
								33692,
								33693,
								33694,
								33695,
								33696,
								33697,
								33698,
								33699
							]
						}
					]
				},
				{
					"id": 33700,
					"name": "AdminCreatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33701,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33702,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33703,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33704,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33705,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33706,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33701,
								33702,
								33703,
								33704,
								33705,
								33706
							]
						}
					]
				},
				{
					"id": 33707,
					"name": "AdminCreatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33708,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33709,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33710,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33711,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33712,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33713,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33714,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 33715,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33700,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33708,
								33709,
								33710,
								33711,
								33712,
								33713,
								33714,
								33715
							]
						}
					]
				},
				{
					"id": 33716,
					"name": "AdminUpdatePriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33717,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33718,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33719,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33720,
							"name": "variant_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33721,
							"name": "min_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33722,
							"name": "max_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 33723,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33717,
								33718,
								33719,
								33720,
								33721,
								33722,
								33723
							]
						}
					]
				},
				{
					"id": 33724,
					"name": "AdminUpdatePriceList",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33725,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33726,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33727,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33728,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33729,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListStatus"
								},
								"name": "PriceListStatus",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33730,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
									"qualifiedName": "PriceListType"
								},
								"name": "PriceListType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33731,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33725,
								33726,
								33727,
								33728,
								33729,
								33730,
								33731
							]
						}
					]
				},
				{
					"id": 33732,
					"name": "AdminBatchPriceListPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33733,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33700,
									"name": "AdminCreatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33734,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33716,
									"name": "AdminUpdatePriceListPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33735,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33733,
								33734,
								33735
							]
						}
					]
				},
				{
					"id": 33736,
					"name": "AdminLinkPriceListProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33737,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33737
							]
						}
					]
				},
				{
					"id": 33738,
					"name": "AdminPriceListListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33749,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33738,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33738,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 33750,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33738,
											"name": "AdminPriceListListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33738,
													"name": "AdminPriceListListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 33748,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 33745,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 33746,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 33747,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 33739,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33740,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33741,
							"name": "starts_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33742,
							"name": "ends_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33743,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
										"qualifiedName": "PriceListStatus"
									},
									"name": "PriceListStatus",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33744,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33749,
								33750,
								33748,
								33745,
								33746,
								33747,
								33739,
								33740,
								33741,
								33742,
								33743,
								33744
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33738,
									"name": "AdminPriceListListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33751,
					"name": "AdminPriceListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33752,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33752
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33753,
					"name": "AdminPriceListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33754,
							"name": "price_list",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33687,
								"name": "AdminPriceList",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33754
							]
						}
					]
				},
				{
					"id": 33755,
					"name": "AdminPriceListListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33758,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33759,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33760,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 33761,
							"name": "price_lists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33687,
									"name": "AdminPriceList",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.price_lists"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33758,
								33759,
								33760,
								33761
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33756,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33757,
												"name": "price_lists",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33687,
														"name": "AdminPriceList",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33757
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33762,
					"name": "AdminPriceListDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33763,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33764,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "price_list"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33765,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33766,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33767,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33763,
								33764,
								33765,
								33766
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "price_list"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33768,
					"name": "AdminPriceListBatchResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33769,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
										"qualifiedName": "AdminPrice"
									},
									"name": "AdminPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33770,
							"name": "updated",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
										"qualifiedName": "AdminPrice"
									},
									"name": "AdminPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33771,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33772,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33773,
											"name": "ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 33774,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "price"
											}
										},
										{
											"id": 33775,
											"name": "deleted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33773,
												33774,
												33775
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33769,
								33770,
								33771
							]
						}
					]
				},
				{
					"id": 33776,
					"name": "AdminProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33777,
							"name": "category_children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33776,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33778,
							"name": "parent_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 33776,
										"name": "AdminProductCategory",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 33779,
							"name": "products",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/product/admin/entitites.ts",
										"qualifiedName": "AdminProduct"
									},
									"name": "AdminProduct",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 33781,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.id"
							}
						},
						{
							"id": 33780,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.name"
							}
						},
						{
							"id": 33785,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.description"
							}
						},
						{
							"id": 33786,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.handle"
							}
						},
						{
							"id": 33788,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_active"
							}
						},
						{
							"id": 33789,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.is_internal"
							}
						},
						{
							"id": 33790,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.rank"
							}
						},
						{
							"id": 33787,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.parent_category_id"
							}
						},
						{
							"id": 33782,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.created_at"
							}
						},
						{
							"id": 33783,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.updated_at"
							}
						},
						{
							"id": 33784,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Omit.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33777,
								33778,
								33779,
								33781,
								33780,
								33785,
								33786,
								33788,
								33789,
								33790,
								33787,
								33782,
								33783,
								33784
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Omit"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 36210,
									"name": "BaseProductCategory",
									"package": "@medusajs/types"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "literal",
											"value": "products"
										},
										{
											"type": "literal",
											"value": "category_children"
										},
										{
											"type": "literal",
											"value": "parent_category"
										}
									]
								}
							],
							"name": "Omit",
							"package": "typescript"
						}
					]
				},
				{
					"id": 33791,
					"name": "AdminCreateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33792,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33793,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33794,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33795,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33796,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33797,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33798,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33799,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33792,
								33793,
								33794,
								33795,
								33796,
								33797,
								33798,
								33799
							]
						}
					]
				},
				{
					"id": 33800,
					"name": "AdminUpdateProductCategory",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33801,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33802,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33803,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33804,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33805,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33806,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33807,
							"name": "rank",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33808,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33801,
								33802,
								33803,
								33804,
								33805,
								33806,
								33807,
								33808
							]
						}
					]
				},
				{
					"id": 33809,
					"name": "AdminUpdateProductCategoryProducts",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33810,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 33811,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33810,
								33811
							]
						}
					]
				},
				{
					"id": 33812,
					"name": "AdminProductCategoryListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33830,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36225,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36225,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36243,
								"name": "BaseProductCategoryListParams.$and"
							}
						},
						{
							"id": 33831,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 36225,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 36225,
													"name": "BaseProductCategoryListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36244,
								"name": "BaseProductCategoryListParams.$or"
							}
						},
						{
							"id": 33829,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36242,
								"name": "BaseProductCategoryListParams.fields"
							}
						},
						{
							"id": 33826,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36239,
								"name": "BaseProductCategoryListParams.limit"
							}
						},
						{
							"id": 33827,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36240,
								"name": "BaseProductCategoryListParams.offset"
							}
						},
						{
							"id": 33828,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36241,
								"name": "BaseProductCategoryListParams.order"
							}
						},
						{
							"id": 33813,
							"name": "is_internal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 36233,
								"name": "BaseProductCategoryListParams.is_internal"
							}
						},
						{
							"id": 33814,
							"name": "is_active",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"overwrites": {
								"type": "reference",
								"target": 36232,
								"name": "BaseProductCategoryListParams.is_active"
							}
						},
						{
							"id": 33815,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36226,
								"name": "BaseProductCategoryListParams.q"
							}
						},
						{
							"id": 33816,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36227,
								"name": "BaseProductCategoryListParams.id"
							}
						},
						{
							"id": 33817,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36228,
								"name": "BaseProductCategoryListParams.name"
							}
						},
						{
							"id": 33818,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36229,
								"name": "BaseProductCategoryListParams.description"
							}
						},
						{
							"id": 33819,
							"name": "parent_category_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36230,
								"name": "BaseProductCategoryListParams.parent_category_id"
							}
						},
						{
							"id": 33820,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36231,
								"name": "BaseProductCategoryListParams.handle"
							}
						},
						{
							"id": 33821,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36234,
								"name": "BaseProductCategoryListParams.include_descendants_tree"
							}
						},
						{
							"id": 33822,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36235,
								"name": "BaseProductCategoryListParams.include_ancestors_tree"
							}
						},
						{
							"id": 33823,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36236,
								"name": "BaseProductCategoryListParams.created_at"
							}
						},
						{
							"id": 33824,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36237,
								"name": "BaseProductCategoryListParams.updated_at"
							}
						},
						{
							"id": 33825,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36238,
								"name": "BaseProductCategoryListParams.deleted_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33830,
								33831,
								33829,
								33826,
								33827,
								33828,
								33813,
								33814,
								33815,
								33816,
								33817,
								33818,
								33819,
								33820,
								33821,
								33822,
								33823,
								33824,
								33825
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36225,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33832,
					"name": "AdminProductCategoryParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33835,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36248,
								"name": "BaseProductCategoryParams.fields"
							}
						},
						{
							"id": 33833,
							"name": "include_ancestors_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36246,
								"name": "BaseProductCategoryParams.include_ancestors_tree"
							}
						},
						{
							"id": 33834,
							"name": "include_descendants_tree",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36247,
								"name": "BaseProductCategoryParams.include_descendants_tree"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33835,
								33833,
								33834
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36245,
							"name": "BaseProductCategoryParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33836,
					"name": "AdminProductCategoryResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33837,
							"name": "product_category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33776,
								"name": "AdminProductCategory",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33837
							]
						}
					]
				},
				{
					"id": 33838,
					"name": "AdminProductCategoryListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33841,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33842,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33843,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 33844,
							"name": "product_categories",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33776,
									"name": "AdminProductCategory",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_categories"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33841,
								33842,
								33843,
								33844
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33839,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33840,
												"name": "product_categories",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33776,
														"name": "AdminProductCategory",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33840
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33845,
					"name": "AdminProductCategoryDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33846,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33847,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_category"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33848,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33849,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33850,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33846,
								33847,
								33848,
								33849
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_category"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33851,
					"name": "AdminProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33852,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36250,
								"name": "BaseProductTag.id"
							}
						},
						{
							"id": 33853,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36251,
								"name": "BaseProductTag.value"
							}
						},
						{
							"id": 33854,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36252,
								"name": "BaseProductTag.created_at"
							}
						},
						{
							"id": 33855,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36253,
								"name": "BaseProductTag.updated_at"
							}
						},
						{
							"id": 33856,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36254,
								"name": "BaseProductTag.deleted_at"
							}
						},
						{
							"id": 33857,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36255,
								"name": "BaseProductTag.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33852,
								33853,
								33854,
								33855,
								33856,
								33857
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36249,
							"name": "BaseProductTag",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33858,
					"name": "AdminCreateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33859,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33860,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33859,
								33860
							]
						}
					]
				},
				{
					"id": 33861,
					"name": "AdminUpdateProductTag",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33862,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33863,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33862,
								33863
							]
						}
					]
				},
				{
					"id": 33864,
					"name": "AdminProductTagListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33875,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33864,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33864,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 33876,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33864,
											"name": "AdminProductTagListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33864,
													"name": "AdminProductTagListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 33874,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36265,
								"name": "BaseProductTagListParams.fields"
							}
						},
						{
							"id": 33871,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36262,
								"name": "BaseProductTagListParams.limit"
							}
						},
						{
							"id": 33872,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36263,
								"name": "BaseProductTagListParams.offset"
							}
						},
						{
							"id": 33873,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36264,
								"name": "BaseProductTagListParams.order"
							}
						},
						{
							"id": 33865,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33866,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36257,
								"name": "BaseProductTagListParams.q"
							}
						},
						{
							"id": 33867,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36258,
								"name": "BaseProductTagListParams.id"
							}
						},
						{
							"id": 33868,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36259,
								"name": "BaseProductTagListParams.value"
							}
						},
						{
							"id": 33869,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36260,
								"name": "BaseProductTagListParams.created_at"
							}
						},
						{
							"id": 33870,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36261,
								"name": "BaseProductTagListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33875,
								33876,
								33874,
								33871,
								33872,
								33873,
								33865,
								33866,
								33867,
								33868,
								33869,
								33870
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36256,
							"name": "BaseProductTagListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33864,
									"name": "AdminProductTagListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33877,
					"name": "AdminProductTagParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33878,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33878
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33879,
					"name": "AdminProductTagResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33880,
							"name": "product_tag",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33851,
								"name": "AdminProductTag",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33880
							]
						}
					]
				},
				{
					"id": 33881,
					"name": "AdminProductTagListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33884,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33885,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33886,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 33887,
							"name": "product_tags",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33851,
									"name": "AdminProductTag",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_tags"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33884,
								33885,
								33886,
								33887
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33882,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33883,
												"name": "product_tags",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33851,
														"name": "AdminProductTag",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33883
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33888,
					"name": "AdminProductTagDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33889,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33890,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_tag"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33891,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33892,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33893,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33889,
								33890,
								33891,
								33892
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_tag"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33894,
					"name": "AdminProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33895,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36267,
								"name": "BaseProductType.id"
							}
						},
						{
							"id": 33896,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36268,
								"name": "BaseProductType.value"
							}
						},
						{
							"id": 33897,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36269,
								"name": "BaseProductType.created_at"
							}
						},
						{
							"id": 33898,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36270,
								"name": "BaseProductType.updated_at"
							}
						},
						{
							"id": 33899,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36271,
								"name": "BaseProductType.deleted_at"
							}
						},
						{
							"id": 33900,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36272,
								"name": "BaseProductType.metadata"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33895,
								33896,
								33897,
								33898,
								33899,
								33900
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36266,
							"name": "BaseProductType",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33901,
					"name": "AdminCreateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33902,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33903,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33902,
								33903
							]
						}
					]
				},
				{
					"id": 33904,
					"name": "AdminUpdateProductType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33905,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33906,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33905,
								33906
							]
						}
					]
				},
				{
					"id": 33907,
					"name": "AdminProductTypeListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 33918,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33907,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33907,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 33919,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 33907,
											"name": "AdminProductTypeListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 33907,
													"name": "AdminProductTypeListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 33917,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 33914,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 33915,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 33916,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 33908,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33909,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33910,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 33911,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33912,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 33913,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33918,
								33919,
								33917,
								33914,
								33915,
								33916,
								33908,
								33909,
								33910,
								33911,
								33912,
								33913
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 33907,
									"name": "AdminProductTypeListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33920,
					"name": "AdminProductTypeParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33921,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33921
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33922,
					"name": "AdminProductTypeResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33923,
							"name": "product_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33894,
								"name": "AdminProductType",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33923
							]
						}
					]
				},
				{
					"id": 33924,
					"name": "AdminProductTypeListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33927,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 33928,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 33929,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 33930,
							"name": "product_types",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33894,
									"name": "AdminProductType",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.product_types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33927,
								33928,
								33929,
								33930
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 33925,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 33926,
												"name": "product_types",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 33894,
														"name": "AdminProductType",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													33926
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33931,
					"name": "AdminProductTypeDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33932,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 33933,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "product_type"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 33934,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 33935,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 33936,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33932,
								33933,
								33934,
								33935
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "product_type"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33937,
					"name": "AdminReservationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33938,
							"name": "reservation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36273,
								"name": "ReservationResponse",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33938
							]
						}
					]
				},
				{
					"id": 33939,
					"name": "AdminReservationListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 33940,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 33941,
											"name": "reservations",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 36273,
													"name": "ReservationResponse",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												33941
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34040,
					"name": "AdminReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34041,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36288,
								"name": "BaseReturnReason.id"
							}
						},
						{
							"id": 34042,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36289,
								"name": "BaseReturnReason.value"
							}
						},
						{
							"id": 34043,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36290,
								"name": "BaseReturnReason.label"
							}
						},
						{
							"id": 34044,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36291,
								"name": "BaseReturnReason.description"
							}
						},
						{
							"id": 34045,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36292,
								"name": "BaseReturnReason.metadata"
							}
						},
						{
							"id": 34046,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36293,
								"name": "BaseReturnReason.created_at"
							}
						},
						{
							"id": 34047,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36294,
								"name": "BaseReturnReason.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34041,
								34042,
								34043,
								34044,
								34045,
								34046,
								34047
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36287,
							"name": "BaseReturnReason",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34048,
					"name": "AdminCreateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34049,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34050,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.value"
							}
						},
						{
							"id": 34052,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.label"
							}
						},
						{
							"id": 34051,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.description"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34049,
								34050,
								34052,
								34051
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36295,
							"name": "AdminBaseReturnReasonPayload",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34053,
					"name": "AdminUpdateReturnReason",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34054,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34055,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.value"
							}
						},
						{
							"id": 34057,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.label"
							}
						},
						{
							"id": 34056,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "AdminBaseReturnReasonPayload.description"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34054,
								34055,
								34057,
								34056
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36295,
							"name": "AdminBaseReturnReasonPayload",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34058,
					"name": "AdminReturnReasonListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 34072,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34058,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34058,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 34073,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34058,
											"name": "AdminReturnReasonListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34058,
													"name": "AdminReturnReasonListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 34071,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36308,
								"name": "BaseReturnReasonListParams.fields"
							}
						},
						{
							"id": 34068,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36305,
								"name": "BaseReturnReasonListParams.limit"
							}
						},
						{
							"id": 34069,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36306,
								"name": "BaseReturnReasonListParams.offset"
							}
						},
						{
							"id": 34070,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36307,
								"name": "BaseReturnReasonListParams.order"
							}
						},
						{
							"id": 34059,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34060,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36297,
								"name": "BaseReturnReasonListParams.q"
							}
						},
						{
							"id": 34061,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36298,
								"name": "BaseReturnReasonListParams.id"
							}
						},
						{
							"id": 34062,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36299,
								"name": "BaseReturnReasonListParams.value"
							}
						},
						{
							"id": 34063,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36300,
								"name": "BaseReturnReasonListParams.label"
							}
						},
						{
							"id": 34064,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36301,
								"name": "BaseReturnReasonListParams.description"
							}
						},
						{
							"id": 34065,
							"name": "parent_return_reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36302,
								"name": "BaseReturnReasonListParams.parent_return_reason_id"
							}
						},
						{
							"id": 34066,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36303,
								"name": "BaseReturnReasonListParams.created_at"
							}
						},
						{
							"id": 34067,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 36304,
								"name": "BaseReturnReasonListParams.updated_at"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34072,
								34073,
								34071,
								34068,
								34069,
								34070,
								34059,
								34060,
								34061,
								34062,
								34063,
								34064,
								34065,
								34066,
								34067
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36296,
							"name": "BaseReturnReasonListParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 34058,
									"name": "AdminReturnReasonListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34074,
					"name": "AdminReturnReasonParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34075,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34075
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34076,
					"name": "AdminReturnReasonResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34077,
							"name": "return_reason",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34040,
								"name": "AdminReturnReason",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34077
							]
						}
					]
				},
				{
					"id": 34078,
					"name": "AdminReturnReasonListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34081,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 34082,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 34083,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 34084,
							"name": "return_reasons",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34040,
									"name": "AdminReturnReason",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.return_reasons"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34081,
								34082,
								34083,
								34084
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 34079,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 34080,
												"name": "return_reasons",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 34040,
														"name": "AdminReturnReason",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													34080
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34085,
					"name": "AdminReturnReasonDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34086,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 34087,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "return_reason"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 34088,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 34089,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34090,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34086,
								34087,
								34088,
								34089
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "return_reason"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 33942,
					"name": "AdminBaseReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33943,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33944,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33945,
							"name": "received_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33946,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33947,
							"name": "note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33948,
							"name": "item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33949,
							"name": "return_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33950,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33943,
								33944,
								33945,
								33946,
								33947,
								33948,
								33949,
								33950
							]
						}
					]
				},
				{
					"id": 33951,
					"name": "AdminReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33952,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33953,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33954,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33955,
							"name": "exchange_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33956,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33957,
							"name": "claim_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33958,
							"name": "order_version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33959,
							"name": "display_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33960,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33961,
							"name": "refund_amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33962,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33942,
									"name": "AdminBaseReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33952,
								33953,
								33954,
								33955,
								33956,
								33957,
								33958,
								33959,
								33960,
								33961,
								33962
							]
						}
					]
				},
				{
					"id": 33963,
					"name": "AdminReturnResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33964,
							"name": "return",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33951,
								"name": "AdminReturn",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33964
							]
						}
					]
				},
				{
					"id": 33965,
					"name": "AdminReturnsResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33966,
							"name": "returns",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33951,
									"name": "AdminReturn",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33966
							]
						}
					]
				},
				{
					"id": 33967,
					"name": "AdminInitiateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33968,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33969,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33970,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33971,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33972,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 33973,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33968,
								33969,
								33970,
								33971,
								33972,
								33973
							]
						}
					]
				},
				{
					"id": 33974,
					"name": "AdminAddReturnItem",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33975,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33976,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33977,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33978,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33979,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33975,
								33976,
								33977,
								33978,
								33979
							]
						}
					]
				},
				{
					"id": 33980,
					"name": "AdminAddReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33981,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33974,
									"name": "AdminAddReturnItem",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33981
							]
						}
					]
				},
				{
					"id": 33982,
					"name": "AdminUpdateReturnItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33983,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33984,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 33985,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33983,
								33984,
								33985
							]
						}
					]
				},
				{
					"id": 33986,
					"name": "AdminAddReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33987,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33988,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33989,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33990,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33991,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33987,
								33988,
								33989,
								33990,
								33991
							]
						}
					]
				},
				{
					"id": 33992,
					"name": "AdminUpdateReturnShipping",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33993,
							"name": "custom_price",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 33994,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 33995,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33993,
								33994,
								33995
							]
						}
					]
				},
				{
					"id": 33996,
					"name": "AdminConfirmReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33997,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33997
							]
						}
					]
				},
				{
					"id": 33998,
					"name": "AdminUpdateReturnRequest",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 33999,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34000,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34001,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								33999,
								34000,
								34001
							]
						}
					]
				},
				{
					"id": 34002,
					"name": "AdminConfirmReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34003,
							"name": "no_notification",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34003
							]
						}
					]
				},
				{
					"id": 34004,
					"name": "AdminInitiateReceiveReturn",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34005,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34006,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34007,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34005,
								34006,
								34007
							]
						}
					]
				},
				{
					"id": 34008,
					"name": "AdminReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34009,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 34010,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 34011,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 34012,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 34013,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													34011,
													34012,
													34013
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34009
							]
						}
					]
				},
				{
					"id": 34014,
					"name": "AdminDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34015,
							"name": "items",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 34016,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 34017,
												"name": "id",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 34018,
												"name": "quantity",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"id": 34019,
												"name": "internal_note",
												"variant": "declaration",
												"kind": 1024,
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													34017,
													34018,
													34019
												]
											}
										]
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34015
							]
						}
					]
				},
				{
					"id": 34020,
					"name": "AdminUpdateReceiveItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34021,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34022,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34023,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34024,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34021,
								34022,
								34023,
								34024
							]
						}
					]
				},
				{
					"id": 34025,
					"name": "AdminUpdateDismissItems",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34026,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34027,
							"name": "internal_note",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34028,
							"name": "reason_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34029,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34026,
								34027,
								34028,
								34029
							]
						}
					]
				},
				{
					"id": 34030,
					"name": "AdminReturnFilters",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34039,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 34036,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 34037,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 34038,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 34031,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34032,
							"name": "order_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34033,
							"name": "status",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34034,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34035,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34039,
								34036,
								34037,
								34038,
								34031,
								34032,
								34033,
								34034,
								34035
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34091,
					"name": "AdminShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34092,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34093,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34094,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34095,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34096,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34097,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34098,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34099,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34092,
								34093,
								34094,
								34095,
								34096,
								34097,
								34098,
								34099
							]
						}
					]
				},
				{
					"id": 34100,
					"name": "AdminShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34101,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34102,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34103,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34104,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34105,
							"name": "shipping_option_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34106,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34107,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34108,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34101,
								34102,
								34103,
								34104,
								34105,
								34106,
								34107,
								34108
							]
						}
					]
				},
				{
					"id": 34109,
					"name": "AdminShippingOptionPriceRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34110,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34111,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34110,
								34111
							]
						}
					]
				},
				{
					"id": 34112,
					"name": "AdminShippingOptionPrice",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34113,
							"name": "price_rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34109,
									"name": "AdminShippingOptionPriceRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34114,
							"name": "rules_count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34113,
								34114
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/pricing/admin/entities.ts",
								"qualifiedName": "AdminPrice"
							},
							"name": "AdminPrice",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34115,
					"name": "AdminShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34116,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34117,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34118,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34119,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34120,
							"name": "service_zone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33481,
								"name": "AdminServiceZone",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34121,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34122,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 33452,
								"name": "AdminFulfillmentProvider",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34123,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34124,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34091,
								"name": "AdminShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34125,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34126,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34218,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34127,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34100,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34128,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34112,
									"name": "AdminShippingOptionPrice",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34129,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34130,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34131,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 34132,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 34133,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34116,
								34117,
								34118,
								34119,
								34120,
								34121,
								34122,
								34123,
								34124,
								34125,
								34126,
								34127,
								34128,
								34129,
								34130,
								34131,
								34132,
								34133
							]
						}
					]
				},
				{
					"id": 34134,
					"name": "AdminCreateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34135,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 32662,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34136,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34137,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34135,
								34136,
								34137
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 34158,
							"name": "AdminUpdateShippingOptionRule"
						}
					]
				},
				{
					"id": 34138,
					"name": "AdminCreateShippingOptionType",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34139,
							"name": "label",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34140,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34141,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34139,
								34140,
								34141
							]
						}
					]
				},
				{
					"id": 34142,
					"name": "AdminCreateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34143,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34144,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34143,
								34144
							]
						}
					]
				},
				{
					"id": 34145,
					"name": "AdminCreateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34146,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34147,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34146,
								34147
							]
						}
					]
				},
				{
					"id": 34148,
					"name": "AdminCreateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34149,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34150,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34151,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34152,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 34153,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34154,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34155,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34138,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34156,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34142,
											"name": "AdminCreateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34145,
											"name": "AdminCreateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 34157,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34134,
									"name": "AdminCreateShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34149,
								34150,
								34151,
								34152,
								34153,
								34154,
								34155,
								34156,
								34157
							]
						}
					]
				},
				{
					"id": 34158,
					"name": "AdminUpdateShippingOptionRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34160,
							"name": "operator",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 32662,
								"name": "RuleOperatorType",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34135,
								"name": "AdminCreateShippingOptionRule.operator"
							}
						},
						{
							"id": 34161,
							"name": "attribute",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34136,
								"name": "AdminCreateShippingOptionRule.attribute"
							}
						},
						{
							"id": 34162,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 34137,
								"name": "AdminCreateShippingOptionRule.value"
							}
						},
						{
							"id": 34159,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34160,
								34161,
								34162,
								34159
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 34134,
							"name": "AdminCreateShippingOptionRule",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34163,
					"name": "AdminUpdateShippingOptionPriceWithCurrency",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34164,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34165,
							"name": "currency_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34166,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34164,
								34165,
								34166
							]
						}
					]
				},
				{
					"id": 34167,
					"name": "AdminUpdateShippingOptionPriceWithRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34168,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34169,
							"name": "region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34170,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34168,
								34169,
								34170
							]
						}
					]
				},
				{
					"id": 34171,
					"name": "AdminUpdateShippingOption",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34172,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34173,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 34174,
							"name": "price_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/shipping-option.ts",
									"qualifiedName": "ShippingOptionPriceType"
								},
								"name": "ShippingOptionPriceType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34175,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34176,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34177,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34138,
								"name": "AdminCreateShippingOptionType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34178,
							"name": "prices",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34163,
											"name": "AdminUpdateShippingOptionPriceWithCurrency",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34167,
											"name": "AdminUpdateShippingOptionPriceWithRegion",
											"package": "@medusajs/types"
										}
									]
								}
							}
						},
						{
							"id": 34179,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34134,
											"name": "AdminCreateShippingOptionRule",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 34158,
											"name": "AdminUpdateShippingOptionRule",
											"package": "@medusajs/types"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34172,
								34173,
								34174,
								34175,
								34176,
								34177,
								34178,
								34179
							]
						}
					]
				},
				{
					"id": 34180,
					"name": "AdminUpdateShippingOptionRules",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34181,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 34182,
							"name": "update",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						},
						{
							"id": 34183,
							"name": "delete",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34181,
								34182,
								34183
							]
						}
					]
				},
				{
					"id": 34184,
					"name": "AdminShippingOptionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34198,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 34195,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 34196,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 34197,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 34185,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34186,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34187,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34188,
							"name": "stock_location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34189,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34190,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34191,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34192,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34193,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34194,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34198,
								34195,
								34196,
								34197,
								34185,
								34186,
								34187,
								34188,
								34189,
								34190,
								34191,
								34192,
								34193,
								34194
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34199,
					"name": "AdminShippingOptionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34200,
							"name": "shipping_option",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34115,
								"name": "AdminShippingOption",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34200
							]
						}
					]
				},
				{
					"id": 34201,
					"name": "AdminShippingOptionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 34202,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34203,
											"name": "shipping_options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34115,
													"name": "AdminShippingOption",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34203
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34204,
					"name": "AdminShippingOptionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34205,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 34206,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_option"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 34207,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 34208,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34209,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34205,
								34206,
								34207,
								34208
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_option"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34210,
					"name": "AdminUpdateShippingOptionRulesResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34211,
							"name": "created",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34100,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34212,
							"name": "updated",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34100,
									"name": "AdminShippingOptionRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34213,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34214,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34215,
											"name": "ids",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34216,
											"name": "object",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "literal",
												"value": "shipping_option_rule"
											}
										},
										{
											"id": 34217,
											"name": "deleted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34215,
												34216,
												34217
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34211,
								34212,
								34213
							]
						}
					]
				},
				{
					"id": 34218,
					"name": "AdminShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34219,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34220,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34221,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34222,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34223,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34224,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34225,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34219,
								34220,
								34221,
								34222,
								34223,
								34224,
								34225
							]
						}
					]
				},
				{
					"id": 34226,
					"name": "AdminCreateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34227,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34228,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34229,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34227,
								34228,
								34229
							]
						}
					]
				},
				{
					"id": 34230,
					"name": "AdminUpdateShippingProfile",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34231,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34232,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34233,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34231,
								34232,
								34233
							]
						}
					]
				},
				{
					"id": 34234,
					"name": "AdminShippingProfileListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34247,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 34244,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 34245,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 34246,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 34235,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34236,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34237,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34238,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34239,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34240,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34241,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34242,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34234,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34243,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34234,
									"name": "AdminShippingProfileListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34247,
								34244,
								34245,
								34246,
								34235,
								34236,
								34237,
								34238,
								34239,
								34240,
								34241,
								34242,
								34243
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34248,
					"name": "AdminShippingProfileResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34249,
							"name": "shipping_profile",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34218,
								"name": "AdminShippingProfile",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34249
							]
						}
					]
				},
				{
					"id": 34250,
					"name": "AdminShippingProfileListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 34251,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34252,
											"name": "shipping_profiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34218,
													"name": "AdminShippingProfile",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34252
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34253,
					"name": "AdminShippingProfileDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34254,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 34255,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "shipping_profile"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 34256,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 34257,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34258,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34254,
								34255,
								34256,
								34257
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "shipping_profile"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34259,
					"name": "AdminStockLocationAddress",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34260,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34261,
							"name": "address_1",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34262,
							"name": "address_2",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34263,
							"name": "company",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34264,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34265,
							"name": "city",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34266,
							"name": "phone",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34267,
							"name": "postal_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34268,
							"name": "province",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34260,
								34261,
								34262,
								34263,
								34264,
								34265,
								34266,
								34267,
								34268
							]
						}
					]
				},
				{
					"id": 34269,
					"name": "AdminStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34270,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34271,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34272,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34273,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 34259,
								"name": "AdminStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34274,
							"name": "sales_channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/http/sales-channel/admin/entities.ts",
										"qualifiedName": "AdminSalesChannel"
									},
									"name": "AdminSalesChannel",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34275,
							"name": "fulfillment_providers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33452,
									"name": "AdminFulfillmentProvider",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34276,
							"name": "fulfillment_sets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 33491,
									"name": "AdminFulfillmentSet",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34270,
								34271,
								34272,
								34273,
								34274,
								34275,
								34276
							]
						}
					]
				},
				{
					"id": 34277,
					"name": "AdminCreateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34278,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34279,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34280,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 36309,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34281,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34278,
								34279,
								34280,
								34281
							]
						}
					]
				},
				{
					"id": 34282,
					"name": "AdminUpdateStockLocation",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34283,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34284,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34285,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 36309,
								"name": "AdminUpsertStockLocationAddress",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34286,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34283,
								34284,
								34285,
								34286
							]
						}
					]
				},
				{
					"id": 34287,
					"name": "AdminUpdateStockLocationSalesChannels",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34288,
							"name": "add",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 34289,
							"name": "remove",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34288,
								34289
							]
						}
					]
				},
				{
					"id": 34290,
					"name": "AdminCreateStockLocationFulfillmentSet",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34291,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34292,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34291,
								34292
							]
						}
					]
				},
				{
					"id": 34293,
					"name": "AdminStockLocationListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34304,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 34301,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 34302,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 34303,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 34294,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34295,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34296,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34297,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34298,
							"name": "sales_channel_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34299,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34293,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34300,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34293,
									"name": "AdminStockLocationListParams",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34304,
								34301,
								34302,
								34303,
								34294,
								34295,
								34296,
								34297,
								34298,
								34299,
								34300
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34305,
					"name": "AdminStockLocationResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34306,
							"name": "stock_location",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34269,
								"name": "AdminStockLocation",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34306
							]
						}
					]
				},
				{
					"id": 34307,
					"name": "AdminStockLocationListResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34310,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.limit"
							}
						},
						{
							"id": 34311,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.offset"
							}
						},
						{
							"id": 34312,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.count"
							}
						},
						{
							"id": 34313,
							"name": "stock_locations",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34269,
									"name": "AdminStockLocation",
									"package": "@medusajs/types"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "PaginatedResponse.stock_locations"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34310,
								34311,
								34312,
								34313
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33410,
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 34308,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 34309,
												"name": "stock_locations",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"type": {
													"type": "array",
													"elementType": {
														"type": "reference",
														"target": 34269,
														"name": "AdminStockLocation",
														"package": "@medusajs/types"
													}
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [
													34309
												]
											}
										]
									}
								}
							],
							"name": "PaginatedResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34314,
					"name": "AdminStockLocationDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34315,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 34316,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "stock_location"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 34317,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 34318,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34319,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34315,
								34316,
								34317,
								34318
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "stock_location"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34320,
					"name": "AdminTaxRateRule",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34321,
							"name": "reference",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34322,
							"name": "reference_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34321,
								34322
							]
						}
					]
				},
				{
					"id": 34323,
					"name": "AdminTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34324,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34325,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34326,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34327,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34328,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34329,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34330,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34331,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34332,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34333,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34334,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "literal",
								"value": null
							}
						},
						{
							"id": 34335,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34336,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34382,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34337,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34320,
									"name": "AdminTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34324,
								34325,
								34326,
								34327,
								34328,
								34329,
								34330,
								34331,
								34332,
								34333,
								34334,
								34335,
								34336,
								34337
							]
						}
					]
				},
				{
					"id": 34338,
					"name": "AdminCreateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34339,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34340,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34341,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34342,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34343,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36318,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34344,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34345,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34346,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34339,
								34340,
								34341,
								34342,
								34343,
								34344,
								34345,
								34346
							]
						}
					]
				},
				{
					"id": 34347,
					"name": "AdminUpdateTaxRate",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34348,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34349,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34350,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34351,
							"name": "rules",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 36318,
									"name": "AdminCreateTaxRateRule",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34352,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34353,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34354,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34348,
								34349,
								34350,
								34351,
								34352,
								34353,
								34354
							]
						}
					]
				},
				{
					"id": 34355,
					"name": "AdminTaxRateListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34370,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 34367,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 34368,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 34369,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 34356,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34357,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34358,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34359,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34360,
							"name": "service_zone_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34361,
							"name": "shipping_profile_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34362,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34363,
							"name": "shipping_option_type_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34364,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34365,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34366,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34370,
								34367,
								34368,
								34369,
								34356,
								34357,
								34358,
								34359,
								34360,
								34361,
								34362,
								34363,
								34364,
								34365,
								34366
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34371,
					"name": "AdminTaxRateResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34372,
							"name": "tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34323,
								"name": "AdminTaxRate",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34372
							]
						}
					]
				},
				{
					"id": 34373,
					"name": "AdminTaxRateListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 34374,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34375,
											"name": "tax_rates",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34323,
													"name": "AdminTaxRate",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34375
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34376,
					"name": "AdminTaxRateDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34377,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 34378,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_rate"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 34379,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 34380,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34381,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34377,
								34378,
								34379,
								34380
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_rate"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34382,
					"name": "AdminTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34383,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34384,
							"name": "rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34385,
							"name": "code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34386,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34387,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34388,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34389,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34390,
							"name": "tax_region_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34391,
							"name": "is_combinable",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34392,
							"name": "is_default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34393,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34394,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34395,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34396,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34397,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34398,
							"name": "tax_rates",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34323,
									"name": "AdminTaxRate",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 34399,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": 34382,
										"name": "AdminTaxRegion",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34400,
							"name": "children",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34382,
									"name": "AdminTaxRegion",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34383,
								34384,
								34385,
								34386,
								34387,
								34388,
								34389,
								34390,
								34391,
								34392,
								34393,
								34394,
								34395,
								34396,
								34397,
								34398,
								34399,
								34400
							]
						}
					]
				},
				{
					"id": 34401,
					"name": "AdminCreateTaxRegion",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34402,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34403,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34404,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34405,
							"name": "default_tax_rate",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34406,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34407,
											"name": "rate",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 34408,
											"name": "code",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34409,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34410,
											"name": "is_combinable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 34411,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34407,
												34408,
												34409,
												34410,
												34411
											]
										}
									]
								}
							}
						},
						{
							"id": 34412,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34402,
								34403,
								34404,
								34405,
								34412
							]
						}
					]
				},
				{
					"id": 34413,
					"name": "AdminTaxRegionListParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 34427,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34413,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34413,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 34428,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34413,
											"name": "AdminTaxRegionListParams",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34413,
													"name": "AdminTaxRegionListParams",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 34426,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33397,
								"name": "FindParams.fields"
							}
						},
						{
							"id": 34423,
							"name": "limit",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33394,
								"name": "FindParams.limit"
							}
						},
						{
							"id": 34424,
							"name": "offset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33395,
								"name": "FindParams.offset"
							}
						},
						{
							"id": 34425,
							"name": "order",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33396,
								"name": "FindParams.order"
							}
						},
						{
							"id": 34414,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34415,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34416,
							"name": "parent_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34417,
							"name": "country_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34418,
							"name": "province_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34419,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34420,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34421,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34422,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34427,
								34428,
								34426,
								34423,
								34424,
								34425,
								34414,
								34415,
								34416,
								34417,
								34418,
								34419,
								34420,
								34421,
								34422
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33393,
							"name": "FindParams",
							"package": "@medusajs/types"
						},
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 34413,
									"name": "AdminTaxRegionListParams",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34429,
					"name": "AdminTaxRegionParams",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34430,
							"name": "fields",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 33392,
								"name": "SelectParams.fields"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34430
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33391,
							"name": "SelectParams",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34431,
					"name": "AdminTaxRegionResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34432,
							"name": "tax_region",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 34382,
								"name": "AdminTaxRegion",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34432
							]
						}
					]
				},
				{
					"id": 34433,
					"name": "AdminTaxRegionListResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 33410,
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 34434,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34435,
											"name": "tax_regions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34382,
													"name": "AdminTaxRegion",
													"package": "@medusajs/types"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34435
											]
										}
									]
								}
							}
						],
						"name": "PaginatedResponse",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 34436,
					"name": "AdminTaxRegionDeleteResponse",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34437,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.id"
							}
						},
						{
							"id": 34438,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the item that was deleted."
									}
								]
							},
							"type": {
								"type": "literal",
								"value": "tax_region"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.object"
							}
						},
						{
							"id": 34439,
							"name": "deleted",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the item was deleted successfully."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.deleted"
							}
						},
						{
							"id": 34440,
							"name": "parent",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The parent resource of the item that was deleted, if applicable."
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34441,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "DeleteResponse.parent"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34437,
								34438,
								34439,
								34440
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 33401,
							"typeArguments": [
								{
									"type": "literal",
									"value": "tax_region"
								}
							],
							"name": "DeleteResponse",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						33171,
						33183,
						33195,
						33213,
						33215,
						33223,
						33229,
						33237,
						33242,
						33250,
						33255,
						33263,
						33268,
						33274,
						33278,
						33284,
						33288,
						33289,
						33291,
						33305,
						33312,
						33314,
						33321,
						33324,
						33327,
						33330,
						33334,
						33340,
						33349,
						33353,
						33357,
						33360,
						33374,
						33376,
						33378,
						33385,
						33391,
						33393,
						33398,
						33419,
						33427,
						33432,
						33435,
						33438,
						33442,
						33445,
						33449,
						33452,
						33455,
						33464,
						33471,
						33481,
						33491,
						33500,
						33503,
						33506,
						33508,
						33513,
						33515,
						33591,
						33600,
						33603,
						33607,
						33611,
						33617,
						33521,
						33537,
						33552,
						33567,
						33585,
						33622,
						33639,
						33649,
						33663,
						33673,
						33675,
						33677,
						33684,
						33687,
						33700,
						33707,
						33716,
						33724,
						33732,
						33736,
						33738,
						33751,
						33753,
						33755,
						33762,
						33768,
						33776,
						33791,
						33800,
						33809,
						33812,
						33832,
						33836,
						33838,
						33845,
						33851,
						33858,
						33861,
						33864,
						33877,
						33879,
						33881,
						33888,
						33894,
						33901,
						33904,
						33907,
						33920,
						33922,
						33924,
						33931,
						33937,
						34040,
						34048,
						34053,
						34058,
						34074,
						34076,
						34078,
						34085,
						33942,
						33951,
						33963,
						33965,
						33967,
						33974,
						33980,
						33982,
						33986,
						33992,
						33996,
						33998,
						34002,
						34004,
						34008,
						34014,
						34020,
						34025,
						34030,
						34091,
						34100,
						34109,
						34112,
						34115,
						34134,
						34138,
						34142,
						34145,
						34148,
						34158,
						34163,
						34167,
						34171,
						34180,
						34184,
						34199,
						34204,
						34210,
						34218,
						34226,
						34230,
						34234,
						34248,
						34253,
						34259,
						34269,
						34277,
						34282,
						34287,
						34290,
						34293,
						34305,
						34307,
						34314,
						34320,
						34323,
						34338,
						34347,
						34355,
						34371,
						34376,
						34382,
						34401,
						34413,
						34429,
						34431,
						34436
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						33210,
						33416,
						33401,
						33410,
						33429,
						33448,
						33619,
						33587,
						33590,
						33631,
						33635,
						33641,
						33644,
						33939,
						34201,
						34250,
						34373,
						34433
					]
				}
			]
		},
		{
			"id": 36210,
			"name": "BaseProductCategory",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36211,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36212,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36213,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36214,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36215,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36216,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36217,
					"name": "rank",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 36218,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36219,
					"name": "parent_category",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 36210,
								"name": "BaseProductCategory",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 36220,
					"name": "category_children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 36210,
							"name": "BaseProductCategory",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 36221,
					"name": "products",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/http/product/common.ts",
								"qualifiedName": "BaseProduct"
							},
							"name": "BaseProduct",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 36222,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36223,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36224,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36211,
						36212,
						36213,
						36214,
						36215,
						36216,
						36217,
						36218,
						36219,
						36220,
						36221,
						36222,
						36223,
						36224
					]
				}
			]
		},
		{
			"id": 36225,
			"name": "BaseProductCategoryListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 36243,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 36225,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 32824,
									"typeArguments": [
										{
											"type": "reference",
											"target": 36225,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 32825,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 36244,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 36225,
									"name": "BaseProductCategoryListParams",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 32824,
									"typeArguments": [
										{
											"type": "reference",
											"target": 36225,
											"name": "BaseProductCategoryListParams",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 32826,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 36242,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33397,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 36239,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33394,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 36240,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33395,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 36241,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33396,
						"name": "FindParams.order"
					}
				},
				{
					"id": 36226,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36227,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36228,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36229,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36230,
					"name": "parent_category_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36231,
					"name": "handle",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36232,
					"name": "is_active",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36233,
					"name": "is_internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36234,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36235,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36236,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36237,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36238,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36243,
						36244,
						36242,
						36239,
						36240,
						36241,
						36226,
						36227,
						36228,
						36229,
						36230,
						36231,
						36232,
						36233,
						36234,
						36235,
						36236,
						36237,
						36238
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33393,
					"name": "FindParams",
					"package": "@medusajs/types"
				},
				{
					"type": "reference",
					"target": 32824,
					"typeArguments": [
						{
							"type": "reference",
							"target": 36225,
							"name": "BaseProductCategoryListParams",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33812,
					"name": "AdminProductCategoryListParams"
				}
			]
		},
		{
			"id": 36245,
			"name": "BaseProductCategoryParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36248,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33392,
						"name": "SelectParams.fields"
					}
				},
				{
					"id": 36246,
					"name": "include_ancestors_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 36247,
					"name": "include_descendants_tree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36248,
						36246,
						36247
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33391,
					"name": "SelectParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33832,
					"name": "AdminProductCategoryParams"
				}
			]
		},
		{
			"id": 36249,
			"name": "BaseProductTag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36250,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36251,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36252,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36253,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36254,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36255,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36250,
						36251,
						36252,
						36253,
						36254,
						36255
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33851,
					"name": "AdminProductTag"
				}
			]
		},
		{
			"id": 36256,
			"name": "BaseProductTagListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36265,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33397,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 36262,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33394,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 36263,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33395,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 36264,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33396,
						"name": "FindParams.order"
					}
				},
				{
					"id": 36257,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36258,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36259,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36260,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36261,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36265,
						36262,
						36263,
						36264,
						36257,
						36258,
						36259,
						36260,
						36261
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33393,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33864,
					"name": "AdminProductTagListParams"
				}
			]
		},
		{
			"id": 36266,
			"name": "BaseProductType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36267,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36268,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36269,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36270,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36271,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36272,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36267,
						36268,
						36269,
						36270,
						36271,
						36272
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 33894,
					"name": "AdminProductType"
				}
			]
		},
		{
			"id": 36273,
			"name": "ReservationResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36274,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36275,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36276,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36277,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36278,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36279,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36280,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36281,
					"name": "inventory_item",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 36282,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 36283,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36284,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 36285,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 36286,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36274,
						36275,
						36276,
						36277,
						36278,
						36279,
						36280,
						36281,
						36282,
						36283,
						36284,
						36285,
						36286
					]
				}
			]
		},
		{
			"id": 36295,
			"name": "AdminBaseReturnReasonPayload",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Pick"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 34040,
						"name": "AdminReturnReason",
						"package": "@medusajs/types"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "value"
							},
							{
								"type": "literal",
								"value": "label"
							},
							{
								"type": "literal",
								"value": "description"
							}
						]
					}
				],
				"name": "Pick",
				"package": "typescript"
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 34048,
					"name": "AdminCreateReturnReason"
				},
				{
					"type": "reference",
					"target": 34053,
					"name": "AdminUpdateReturnReason"
				}
			]
		},
		{
			"id": 36287,
			"name": "BaseReturnReason",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36288,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36289,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36290,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36291,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 36292,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 36293,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36294,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36288,
						36289,
						36290,
						36291,
						36292,
						36293,
						36294
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 34040,
					"name": "AdminReturnReason"
				}
			]
		},
		{
			"id": 36296,
			"name": "BaseReturnReasonListParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36308,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33397,
						"name": "FindParams.fields"
					}
				},
				{
					"id": 36305,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33394,
						"name": "FindParams.limit"
					}
				},
				{
					"id": 36306,
					"name": "offset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33395,
						"name": "FindParams.offset"
					}
				},
				{
					"id": 36307,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 33396,
						"name": "FindParams.order"
					}
				},
				{
					"id": 36297,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36298,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 36299,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 36300,
					"name": "label",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 36301,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 36302,
					"name": "parent_return_reason_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 36303,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36304,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 32802,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36308,
						36305,
						36306,
						36307,
						36297,
						36298,
						36299,
						36300,
						36301,
						36302,
						36303,
						36304
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 33393,
					"name": "FindParams",
					"package": "@medusajs/types"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 34058,
					"name": "AdminReturnReasonListParams"
				}
			]
		},
		{
			"id": 36309,
			"name": "AdminUpsertStockLocationAddress",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36310,
					"name": "address_1",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36311,
					"name": "address_2",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36312,
					"name": "company",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36313,
					"name": "country_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36314,
					"name": "city",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36315,
					"name": "phone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36316,
					"name": "postal_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36317,
					"name": "province",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36310,
						36311,
						36312,
						36313,
						36314,
						36315,
						36316,
						36317
					]
				}
			]
		},
		{
			"id": 36318,
			"name": "AdminCreateTaxRateRule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36319,
					"name": "reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36320,
					"name": "reference_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36319,
						36320
					]
				}
			]
		},
		{
			"id": 34442,
			"name": "InventoryTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34443,
					"name": "InventoryItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory item details."
							}
						]
					},
					"children": [
						{
							"id": 34444,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34445,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34446,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34447,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34448,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34449,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The mid code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34450,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34451,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34452,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34453,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34454,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34455,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34456,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34457,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34458,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34459,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34460,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34461,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34444,
								34445,
								34446,
								34447,
								34448,
								34449,
								34450,
								34451,
								34452,
								34453,
								34454,
								34455,
								34456,
								34457,
								34458,
								34459,
								34460,
								34461
							]
						}
					]
				},
				{
					"id": 34462,
					"name": "FilterableInventoryItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved inventory items."
							}
						]
					},
					"children": [
						{
							"id": 34463,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search term to search inventory items' attributes."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34464,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34465,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34466,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKUs to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32638,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34467,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34468,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS Codes to filter inventory items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32638,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34469,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory items by whether they require shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34463,
								34464,
								34465,
								34466,
								34467,
								34468,
								34469
							]
						}
					]
				},
				{
					"id": 34470,
					"name": "InventoryLevelDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The inventory level details."
							}
						]
					},
					"children": [
						{
							"id": 34471,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34472,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34473,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34474,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34475,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34476,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34477,
							"name": "available_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The available quantity of the inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34478,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34479,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34480,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34481,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the inventory level."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34471,
								34472,
								34473,
								34474,
								34475,
								34476,
								34477,
								34478,
								34479,
								34480,
								34481
							]
						}
					]
				},
				{
					"id": 34482,
					"name": "FilterableInventoryLevelProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved inventory levels."
							}
						]
					},
					"children": [
						{
							"id": 34488,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34482,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34482,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 34489,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 34482,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 34482,
													"name": "FilterableInventoryLevelProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 34483,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34484,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter inventory levels by the ID of their associated inventory location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34485,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`stocked_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34486,
							"name": "reserved_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`reserved_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34487,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on inventory levels' "
									},
									{
										"kind": "code",
										"text": "`incoming_quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Number"
												},
												"name": "Number",
												"package": "typescript"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34488,
								34489,
								34483,
								34484,
								34485,
								34486,
								34487
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 34482,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 34490,
					"name": "ReservationItemDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reservation item details."
							}
						]
					},
					"children": [
						{
							"id": 34491,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the reservation item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34492,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated location's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34493,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated inventory item's ID."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34494,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The quantity of the reservation item."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 36014,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34495,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated line item's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34496,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34497,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34498,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The created by of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34499,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34500,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The creation date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34501,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The update date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34502,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The deletion date of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34491,
								34492,
								34493,
								34494,
								34495,
								34496,
								34497,
								34498,
								34499,
								34500,
								34501,
								34502
							]
						}
					]
				},
				{
					"id": 34503,
					"name": "FilterableReservationItemProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved reservation items."
							}
						]
					},
					"children": [
						{
							"id": 34504,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34506,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34507,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34508,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter reservation items by the ID of their associated location."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34509,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Description filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`description`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": 32638,
										"name": "StringComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 34510,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The \"created by\" values to filter reservation items by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 34511,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters to apply on the reservation items' "
									},
									{
										"kind": "code",
										"text": "`quantity`"
									},
									{
										"kind": "text",
										"text": " attribute."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"target": 32646,
										"name": "NumericalComparisonOperator",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34504,
								34506,
								34507,
								34508,
								34509,
								34510,
								34511
							]
						}
					]
				},
				{
					"id": 34512,
					"name": "UpdateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34513,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34514,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.sku"
							}
						},
						{
							"id": 34515,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.origin_country"
							}
						},
						{
							"id": 34516,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.mid_code"
							}
						},
						{
							"id": 34517,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.material"
							}
						},
						{
							"id": 34518,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.weight"
							}
						},
						{
							"id": 34519,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.length"
							}
						},
						{
							"id": 34520,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.height"
							}
						},
						{
							"id": 34521,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.width"
							}
						},
						{
							"id": 34522,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.title"
							}
						},
						{
							"id": 34523,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.description"
							}
						},
						{
							"id": 34524,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.thumbnail"
							}
						},
						{
							"id": 34525,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.metadata"
							}
						},
						{
							"id": 34526,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.hs_code"
							}
						},
						{
							"id": 34527,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Partial.requires_shipping"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34513,
								34514,
								34515,
								34516,
								34517,
								34518,
								34519,
								34520,
								34521,
								34522,
								34523,
								34524,
								34525,
								34526,
								34527
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "Partial"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": 34528,
									"name": "CreateInventoryItemInput",
									"package": "@medusajs/types"
								}
							],
							"name": "Partial",
							"package": "typescript"
						}
					]
				},
				{
					"id": 34528,
					"name": "CreateInventoryItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the inventory item to be created."
							}
						]
					},
					"children": [
						{
							"id": 34529,
							"name": "sku",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The SKU of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34530,
							"name": "origin_country",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The origin country of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34531,
							"name": "mid_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The MID code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34532,
							"name": "material",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The material of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34533,
							"name": "weight",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The weight of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34534,
							"name": "length",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34535,
							"name": "height",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The height of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34536,
							"name": "width",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The width of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 34537,
							"name": "title",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The title of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34538,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34539,
							"name": "thumbnail",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The thumbnail of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34540,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 34541,
							"name": "hs_code",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The HS code of the inventory item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34542,
							"name": "requires_shipping",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether the inventory item requires shipping."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34529,
								34530,
								34531,
								34532,
								34533,
								34534,
								34535,
								34536,
								34537,
								34538,
								34539,
								34540,
								34541,
								34542
							]
						}
					]
				},
				{
					"id": 34543,
					"name": "CreateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34544,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34545,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34546,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34547,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34544,
								34545,
								34546,
								34547
							]
						}
					]
				},
				{
					"id": 34548,
					"name": "UpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level."
							}
						]
					},
					"children": [
						{
							"id": 34549,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34550,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34551,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34549,
								34550,
								34551
							]
						}
					]
				},
				{
					"id": 34552,
					"name": "BulkUpdateInventoryLevelInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
							}
						]
					},
					"children": [
						{
							"id": 34555,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "id of the inventory level to update"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34556,
							"name": "stocked_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The stocked quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34557,
							"name": "incoming_quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The incoming quantity of the associated inventory item in the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 34553,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory level."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34554,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34555,
								34556,
								34557,
								34553,
								34554
							]
						}
					]
				},
				{
					"id": 34558,
					"name": "BulkAdjustInventoryLevelInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 34559,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34560,
											"name": "inventory_item_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated inventory level."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34561,
											"name": "location_id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the associated location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34562,
											"name": "adjustment",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to adjust the inventory level by."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36014,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34560,
												34561,
												34562
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": 34548,
								"name": "UpdateInventoryLevelInput",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 34563,
					"name": "UpdateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The attributes to update in a reservation item."
							}
						]
					},
					"children": [
						{
							"id": 34564,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34565,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 36014,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34566,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34567,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34568,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34569,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34564,
								34565,
								34566,
								34567,
								34568,
								34569
							]
						}
					]
				},
				{
					"id": 34570,
					"name": "CreateReservationItemInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the reservation item to be created."
							}
						]
					},
					"children": [
						{
							"id": 34571,
							"name": "line_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated line item."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34572,
							"name": "inventory_item_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated inventory item."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34573,
							"name": "location_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the associated location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 34574,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The reserved quantity."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 36014,
								"name": "BigNumberInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 34575,
							"name": "allow_backorder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 34576,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The description of the reservation."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34577,
							"name": "created_by",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user or system that created the reservation. Can be any form of identification string."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34578,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An ID associated with an external third-party system that the reservation item is connected to."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34579,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34571,
								34572,
								34573,
								34574,
								34575,
								34576,
								34577,
								34578,
								34579
							]
						}
					]
				},
				{
					"id": 34580,
					"name": "ReserveQuantityContext",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34581,
							"name": "locationId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34582,
							"name": "lineItemId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 34583,
							"name": "salesChannelId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34581,
								34582,
								34583
							]
						}
					]
				},
				{
					"id": 34584,
					"name": "IInventoryService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Inventory Module."
							}
						]
					},
					"children": [
						{
							"id": 34585,
							"name": "listInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34586,
									"name": "listInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34587,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34462,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34588,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34443,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34589,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34443,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34590,
							"name": "listAndCountInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34591,
									"name": "listAndCountInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34592,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34462,
												"name": "FilterableInventoryItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34593,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34443,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34594,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34443,
															"name": "InventoryItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34595,
							"name": "listReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34596,
									"name": "listReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34597,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34503,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34598,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34490,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34599,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34490,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34600,
							"name": "listAndCountReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34601,
									"name": "listAndCountReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of reservation items along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of reservation items using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34602,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved reservation items."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34503,
												"name": "FilterableReservationItemProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34603,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34490,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34604,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34490,
															"name": "ReservationItemDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34605,
							"name": "listInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34606,
									"name": "listInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34607,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34482,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34608,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34470,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34609,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34470,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34610,
							"name": "listAndCountInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34611,
									"name": "listAndCountInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of inventory levels along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34612,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved inventory levels."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34482,
												"name": "FilterableInventoryLevelProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34613,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34470,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34614,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 34470,
															"name": "InventoryLevelDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34615,
							"name": "retrieveInventoryItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34616,
									"name": "retrieveInventoryItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34617,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34618,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34443,
														"name": "InventoryItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34619,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34443,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34620,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34621,
									"name": "retrieveInventoryLevelByItemAndLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level based on its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34622,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34623,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34624,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34470,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34625,
							"name": "retrieveInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34626,
									"name": "retrieveInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves an inventory level by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a inventory level by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34627,
											"name": "inventoryLevelId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory level's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34628,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a inventory level."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34470,
														"name": "InventoryLevelDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34629,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34470,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34630,
							"name": "retrieveReservationItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34631,
									"name": "retrieveReservationItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a reservation item by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a reservation item by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34632,
											"name": "reservationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34633,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34490,
														"name": "ReservationItemDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34634,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34490,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34635,
							"name": "createReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34636,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34637,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34570,
													"name": "CreateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34638,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34490,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34639,
									"name": "createReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34640,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the reservation item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34570,
												"name": "CreateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34641,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34490,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34642,
							"name": "createInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34643,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34644,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory items to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34528,
													"name": "CreateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34645,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34443,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34646,
									"name": "createInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34647,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory item to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34528,
												"name": "CreateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34648,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34443,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34649,
							"name": "createInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34650,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34651,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory levels to be created."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34543,
													"name": "CreateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34652,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34470,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34653,
									"name": "createInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates an inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34654,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The details of the inventory level to be created."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34543,
												"name": "CreateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34655,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34470,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34656,
							"name": "updateInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34657,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory levels."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory levels."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34658,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34552,
													"name": "BulkUpdateInventoryLevelInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34659,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34470,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34660,
									"name": "updateInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory level."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34661,
											"name": "updates",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34552,
												"name": "BulkUpdateInventoryLevelInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34662,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34470,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34663,
							"name": "updateInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34664,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing inventory item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34665,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34512,
												"name": "UpdateInventoryItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34666,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34443,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34667,
									"name": "updateInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing inventory items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34668,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the inventory items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34512,
													"name": "UpdateInventoryItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34669,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34443,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34670,
							"name": "updateReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34671,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates an existing reservation item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34672,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in a reservation item."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 34563,
												"name": "UpdateReservationItemInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34673,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34490,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34674,
									"name": "updateReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing reservation items."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated reservation items."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34675,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the reservation items."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34563,
													"name": "UpdateReservationItemInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34676,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34490,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34677,
							"name": "deleteReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34678,
									"name": "deleteReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a reservation item by its associated line item."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34679,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The line item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34680,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34681,
							"name": "restoreReservationItemsByLineItem",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34682,
									"name": "restoreReservationItemsByLineItem",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation items are successfully deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34683,
											"name": "lineItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID(s) of the line item(s)."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34684,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34685,
							"name": "deleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34686,
									"name": "deleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the reservation item is deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34687,
											"name": "reservationItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservation items' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34688,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34689,
							"name": "softDeleteReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34690,
									"name": "softDeleteReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 34691,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 34692,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34693,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32976,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34691,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34694,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34695,
							"name": "restoreReservationItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34696,
									"name": "restoreReservationItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted reservations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 34697,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 34698,
											"name": "ReservationItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The reservations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34699,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the reservation's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32979,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34697,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34700,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34701,
							"name": "deleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34702,
									"name": "deleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory items are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34703,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34704,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34705,
							"name": "softDeleteInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34706,
									"name": "softDeleteInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 34707,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 34708,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34709,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32976,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34707,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34710,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34711,
							"name": "restoreInventoryItems",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34712,
									"name": "restoreInventoryItems",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory items by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`location_level_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 34713,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 34714,
											"name": "inventoryItemIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory items' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34715,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory item's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`location_levels`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32979,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34713,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34716,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34717,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34718,
									"name": "deleteInventoryItemLevelByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory item's level by the associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34719,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34720,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "object"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34721,
							"name": "deleteReservationItemByLocationId",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34722,
									"name": "deleteReservationItemByLocationId",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes reservation items by their associated location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when then reservation items are deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34723,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34724,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34725,
							"name": "deleteInventoryLevel",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34726,
									"name": "deleteInventoryLevel",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes an inventory level by its associated inventory item and location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory level is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34727,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34728,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The location's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34729,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34730,
							"name": "deleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34731,
									"name": "deleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the inventory levels are deleted."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34732,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 34733,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34734,
							"name": "softDeleteInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34735,
									"name": "softDeleteInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 34736,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 34737,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34738,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32976,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34736,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34739,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34740,
							"name": "restoreInventoryLevels",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34741,
									"name": "restoreInventoryLevels",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted inventory levels by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 34742,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 34743,
											"name": "inventoryLevelIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory levels' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34744,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the inventory level's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`{type relation name}`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32979,
												"typeArguments": [
													{
														"type": "reference",
														"target": 34742,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34745,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34746,
							"name": "adjustInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34747,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method adjusts the inventory quantity of an item in a location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated inventory level."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34748,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 34749,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 34750,
																"name": "inventoryItemId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 34751,
																"name": "locationId",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 34752,
																"name": "adjustment",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 36014,
																	"name": "BigNumberInput",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	34750,
																	34751,
																	34752
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 34753,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34470,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 34754,
									"name": "adjustInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34755,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34756,
											"name": "locationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34757,
											"name": "adjustment",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 36014,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34758,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 34470,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34759,
							"name": "confirmInventory",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34760,
									"name": "confirmInventory",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Whether the quantity is available."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34761,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34762,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34763,
											"name": "quantity",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The quantity to confirm its availability."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 36014,
												"name": "BigNumberInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34764,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "boolean"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34765,
							"name": "retrieveAvailableQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34766,
									"name": "retrieveAvailableQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the available quantity of an inventory item in the specified locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The available quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34767,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34768,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34769,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36001,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34770,
							"name": "retrieveStockedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34771,
									"name": "retrieveStockedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The stocked quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34772,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34773,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34774,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36001,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 34775,
							"name": "retrieveReservedQuantity",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 34776,
									"name": "retrieveReservedQuantity",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The reserved quantity of the item."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 34777,
											"name": "inventoryItemId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The inventory item's ID."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34778,
											"name": "locationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The locations' IDs."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34779,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 36001,
												"name": "IBigNumber",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								34585,
								34590,
								34595,
								34600,
								34605,
								34610,
								34615,
								34620,
								34625,
								34630,
								34635,
								34642,
								34649,
								34656,
								34663,
								34670,
								34677,
								34681,
								34685,
								34689,
								34695,
								34701,
								34705,
								34711,
								34717,
								34721,
								34725,
								34730,
								34734,
								34740,
								34746,
								34759,
								34765,
								34770,
								34775
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35022,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34443,
						34462,
						34470,
						34482,
						34490,
						34503,
						34512,
						34528,
						34543,
						34548,
						34552,
						34563,
						34570,
						34580,
						34584
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						34558
					]
				}
			]
		},
		{
			"id": 35795,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 35796,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 35797,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35798,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35799,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35800,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35801,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35802,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 35803,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35797,
								35798,
								35799,
								35800,
								35801,
								35802,
								35803
							]
						}
					]
				}
			}
		},
		{
			"id": 35804,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35805,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 35806,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35805,
						35806
					]
				}
			]
		},
		{
			"id": 35807,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35808,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35809,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 35804,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 35804,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 35810,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 35811,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35812,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 35813,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35812,
														35813
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 35814,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 35815,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 35795,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 35816,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 35817,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 35818,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 35819,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 35795,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											35818,
											35819
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 35820,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35808,
						35809,
						35810,
						35814,
						35815,
						35816,
						35820
					]
				}
			]
		},
		{
			"id": 35821,
			"name": "JoinerArgument",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35822,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35823,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35822,
						35823
					]
				}
			]
		},
		{
			"id": 35824,
			"name": "JoinerDirective",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35825,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35826,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35825,
						35826
					]
				}
			]
		},
		{
			"id": 35827,
			"name": "RemoteJoinerQuery",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35828,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35829,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35830,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 35831,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 35832,
										"name": "property",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 35833,
										"name": "fields",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "array",
											"elementType": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									},
									{
										"id": 35834,
										"name": "args",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "array",
											"elementType": {
												"type": "reference",
												"target": 35821,
												"name": "JoinerArgument",
												"package": "@medusajs/types"
											}
										}
									},
									{
										"id": 35835,
										"name": "directives",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "reflection",
											"declaration": {
												"id": 35836,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"indexSignatures": [
													{
														"id": 35837,
														"name": "__index",
														"variant": "signature",
														"kind": 8192,
														"flags": {},
														"parameters": [
															{
																"id": 35838,
																"name": "field",
																"variant": "param",
																"kind": 32768,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"type": {
															"type": "array",
															"elementType": {
																"type": "reference",
																"target": 35824,
																"name": "JoinerDirective",
																"package": "@medusajs/types"
															}
														}
													}
												]
											}
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											35832,
											35833,
											35834,
											35835
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 35839,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 35840,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 35821,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 35841,
					"name": "directives",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35842,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 35843,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 35844,
											"name": "field",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35824,
											"name": "JoinerDirective",
											"package": "@medusajs/types"
										}
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35828,
						35829,
						35830,
						35839,
						35840,
						35841
					]
				}
			]
		},
		{
			"id": 35845,
			"name": "RemoteJoinerOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35846,
					"name": "throwIfKeyNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 35847,
					"name": "throwIfRelationNotFound",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35846,
						35847
					]
				}
			]
		},
		{
			"id": 35848,
			"name": "RemoteNestedExpands",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"indexSignatures": [
				{
					"id": 35849,
					"name": "__index",
					"variant": "signature",
					"kind": 8192,
					"flags": {},
					"parameters": [
						{
							"id": 35850,
							"name": "key",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35851,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35852,
									"name": "fields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 35853,
									"name": "args",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35821,
											"name": "JoinerArgument",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 35854,
									"name": "expands",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35848,
										"name": "RemoteNestedExpands",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35852,
										35853,
										35854
									]
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 35855,
			"name": "InternalJoinerServiceConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 35807,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "literal",
								"value": "relationships"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 35856,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35857,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es2015.collection.d.ts",
											"qualifiedName": "Map"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 35795,
												"name": "JoinerRelationship",
												"package": "@medusajs/types"
											}
										],
										"name": "Map",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35857
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 35858,
			"name": "RemoteExpandProperty",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35859,
					"name": "property",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35860,
					"name": "parent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35861,
					"name": "parentConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 35855,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35862,
					"name": "serviceConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 35855,
						"name": "InternalJoinerServiceConfig",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35863,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 35864,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 35821,
							"name": "JoinerArgument",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 35865,
					"name": "expands",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 35848,
						"name": "RemoteNestedExpands",
						"package": "@medusajs/types"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35859,
						35860,
						35861,
						35862,
						35863,
						35864,
						35865
					]
				}
			]
		},
		{
			"id": 35914,
			"name": "PlannerActionLinkDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Link descriptor containing metadata about the link's\nmodules and models."
					}
				]
			},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 35915,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 35916,
							"name": "fromModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35917,
							"name": "toModule",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35918,
							"name": "fromModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35919,
							"name": "toModel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35916,
								35917,
								35918,
								35919
							]
						}
					]
				}
			}
		},
		{
			"id": 35920,
			"name": "LinkMigrationsPlannerAction",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A list of actions prepared and executed by\nthe \"ILinkMigrationsPlanner\"."
					}
				]
			},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 35921,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35922,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "create"
											},
											{
												"type": "literal",
												"value": "update"
											},
											{
												"type": "literal",
												"value": "notify"
											}
										]
									}
								},
								{
									"id": 35923,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35914,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35924,
									"name": "sql",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35925,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35922,
										35923,
										35924,
										35925
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 35926,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35927,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "noop"
									}
								},
								{
									"id": 35928,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35929,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35914,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35927,
										35928,
										35929
									]
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 35930,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35931,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "delete"
									}
								},
								{
									"id": 35932,
									"name": "linkDescriptor",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 35914,
										"name": "PlannerActionLinkDescriptor",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35933,
									"name": "tableName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35931,
										35932,
										35933
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 35934,
			"name": "ILinkMigrationsPlanner",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35935,
					"name": "createPlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35936,
							"name": "createPlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35920,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35937,
					"name": "executePlan",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35938,
							"name": "executePlan",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35939,
									"name": "actions",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35920,
											"name": "LinkMigrationsPlannerAction",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						35935,
						35937
					]
				}
			]
		},
		{
			"id": 35866,
			"name": "ILinkModule",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35867,
					"name": "list",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35868,
							"name": "list",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35869,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 35870,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32577,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35871,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35872,
					"name": "listAndCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35873,
							"name": "listAndCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35874,
									"name": "filters",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 35875,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32577,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35876,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "unknown"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35877,
					"name": "create",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35878,
							"name": "create",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35879,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														},
														{
															"type": "optional",
															"elementType": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 35880,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35881,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35882,
					"name": "dismiss",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35883,
							"name": "dismiss",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35884,
									"name": "primaryKeyOrBulkData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "array",
												"elementType": {
													"type": "tuple",
													"elements": [
														{
															"type": "union",
															"types": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															]
														},
														{
															"type": "intrinsic",
															"name": "string"
														}
													]
												}
											}
										]
									}
								},
								{
									"id": 35885,
									"name": "foreignKeyData",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35886,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "unknown"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35887,
					"name": "delete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35888,
							"name": "delete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35889,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 35890,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35891,
					"name": "softDelete",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35892,
							"name": "softDelete",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35893,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 35894,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32976,
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35895,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35896,
					"name": "restore",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35897,
							"name": "restore",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35898,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								},
								{
									"id": 35899,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 32979,
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35900,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35966,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						35867,
						35872,
						35877,
						35882,
						35887,
						35891,
						35896
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 35022,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 34793,
			"name": "LoggerTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34794,
					"name": "Logger",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34795,
							"name": "panic",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34796,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34797,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34798,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34799,
							"name": "shouldLog",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34800,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34801,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34802,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34803,
							"name": "setLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34804,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34805,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34806,
													"name": "level",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34807,
							"name": "unsetLogLevel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34808,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34809,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34810,
							"name": "activity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34811,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34812,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34813,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 34814,
													"name": "config",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34815,
							"name": "progress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34816,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34817,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34818,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 34819,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34820,
							"name": "error",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34821,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34822,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34823,
													"name": "messageOrError",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 34824,
													"name": "error",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34825,
							"name": "failure",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34826,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34827,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34828,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 34829,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34830,
							"name": "success",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34831,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34832,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34833,
													"name": "activityId",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 34834,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34835,
							"name": "debug",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34836,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34837,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34838,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34839,
							"name": "info",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34840,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34841,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34842,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34843,
							"name": "warn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34844,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34845,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34846,
													"name": "message",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 34847,
							"name": "log",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34848,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"signatures": [
										{
											"id": 34849,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34850,
													"name": "args",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isRest": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "any"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34795,
								34799,
								34803,
								34807,
								34810,
								34815,
								34820,
								34825,
								34830,
								34835,
								34839,
								34843,
								34847
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34794
					]
				}
			]
		},
		{
			"id": 34851,
			"name": "ModulesSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 34852,
					"name": "Constructor",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34858,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34853,
							"name": "__type",
							"variant": "declaration",
							"kind": 512,
							"flags": {},
							"signatures": [
								{
									"id": 34854,
									"name": "__type",
									"variant": "signature",
									"kind": 16384,
									"flags": {},
									"parameters": [
										{
											"id": 34857,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 34858,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 34855,
													"name": "__type",
													"variant": "declaration",
													"kind": 512,
													"flags": {},
													"signatures": [
														{
															"id": 34856,
															"name": "__type",
															"variant": "signature",
															"kind": 16384,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 34858,
																"name": "T",
																"package": "@medusajs/types",
																"refersToTypeParameter": true
															}
														}
													]
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 34859,
					"name": "LogLevel",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "query"
							},
							{
								"type": "literal",
								"value": "schema"
							},
							{
								"type": "literal",
								"value": "error"
							},
							{
								"type": "literal",
								"value": "warn"
							},
							{
								"type": "literal",
								"value": "info"
							},
							{
								"type": "literal",
								"value": "log"
							},
							{
								"type": "literal",
								"value": "migration"
							}
						]
					}
				},
				{
					"id": 34860,
					"name": "LoggerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "literal",
								"value": "all"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34859,
									"name": "LogLevel",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 34861,
					"name": "CustomModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34862,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34863,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34864,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34865,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34866,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 34867,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34863,
										34864,
										34865,
										34866,
										34867
									]
								}
							]
						}
					}
				},
				{
					"id": 34868,
					"name": "InternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34869,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34870,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "internal"
									}
								},
								{
									"id": 34871,
									"name": "resources",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "isolated"
											}
										]
									}
								},
								{
									"id": 34872,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34873,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34861,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34874,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 34975,
												"name": "ModuleExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 34875,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 34876,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34877,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 34878,
									"name": "worker_mode",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "shared"
											},
											{
												"type": "literal",
												"value": "worker"
											},
											{
												"type": "literal",
												"value": "server"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34870,
										34871,
										34872,
										34873,
										34874,
										34875,
										34876,
										34877,
										34878
									]
								}
							]
						}
					}
				},
				{
					"id": 34879,
					"name": "ExternalModuleDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34880,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34881,
									"name": "scope",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "literal",
										"value": "external"
									}
								},
								{
									"id": 34882,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34861,
										"name": "CustomModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34883,
									"name": "server",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 34884,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 34885,
													"name": "type",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "literal",
														"value": "http"
													}
												},
												{
													"id": 34886,
													"name": "url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 34887,
													"name": "keepAlive",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														34885,
														34886,
														34887
													]
												}
											]
										}
									}
								},
								{
									"id": 34888,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 34889,
									"name": "alias",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If multiple modules are registered with the same key, the alias can be used to differentiate them"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34890,
									"name": "main",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is the main module for the key when multiple ones are registered"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34881,
										34882,
										34883,
										34888,
										34889,
										34890
									]
								}
							]
						}
					}
				},
				{
					"id": 34891,
					"name": "ModuleResolution",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34892,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34893,
									"name": "resolutionPath",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 34894,
									"name": "definition",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34899,
										"name": "ModuleDefinition",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34895,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 34896,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34897,
									"name": "moduleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 34868,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 34879,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 34898,
									"name": "moduleExports",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34975,
										"name": "ModuleExports",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34893,
										34894,
										34895,
										34896,
										34897,
										34898
									]
								}
							]
						}
					}
				},
				{
					"id": 34899,
					"name": "ModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34900,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34901,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34902,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34903,
									"name": "defaultPackage",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 34904,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34905,
									"name": "isRequired",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 34906,
									"name": "isQueryable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 34907,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34909,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 34868,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											},
											{
												"type": "reference",
												"target": 34879,
												"name": "ExternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34901,
										34902,
										34903,
										34904,
										34905,
										34906,
										34907,
										34909
									]
								}
							]
						}
					}
				},
				{
					"id": 34910,
					"name": "LinkModuleDefinition",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34911,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34912,
									"name": "key",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34913,
									"name": "registrationName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34914,
									"name": "label",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 34915,
									"name": "dependencies",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 34916,
									"name": "defaultModuleDeclaration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34868,
										"name": "InternalModuleDeclaration",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34912,
										34913,
										34914,
										34915,
										34916
									]
								}
							]
						}
					}
				},
				{
					"id": 34917,
					"name": "ModuleConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 36321,
								"name": "ModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34918,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34919,
											"name": "module",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34920,
											"name": "path",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34921,
											"name": "definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34899,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34919,
												34920,
												34921
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34922,
					"name": "LoadedModule",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34923,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34924,
											"name": "__joinerConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34948,
												"name": "ModuleJoinerConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34925,
											"name": "__definition",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34899,
												"name": "ModuleDefinition",
												"package": "@medusajs/types"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34924,
												34925
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34926,
					"name": "LoaderOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34932,
							"name": "TOptions",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34927,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34928,
									"name": "container",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 32761,
										"name": "MedusaContainer",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34929,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34932,
										"name": "TOptions",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 34930,
									"name": "logger",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 34794,
										"name": "Logger",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 34931,
									"name": "dataLoaderOnly",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34928,
										34929,
										34930,
										34931
									]
								}
							]
						}
					}
				},
				{
					"id": 34933,
					"name": "ModuleLoaderFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34934,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 34935,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 34936,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 34926,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "LoaderOptions",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 34937,
											"name": "moduleDeclaration",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 34868,
												"name": "InternalModuleDeclaration",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				},
				{
					"id": 34938,
					"name": "ModulesResponse",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 34939,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 34940,
										"name": "module",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 34941,
										"name": "resolution",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "literal",
													"value": false
												}
											]
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											34940,
											34941
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 34942,
					"name": "LinkModulesExtraFields",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34943,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34944,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "date"
													},
													{
														"type": "literal",
														"value": "time"
													},
													{
														"type": "literal",
														"value": "datetime"
													},
													{
														"type": "literal",
														"value": "bigint"
													},
													{
														"type": "literal",
														"value": "blob"
													},
													{
														"type": "literal",
														"value": "uint8array"
													},
													{
														"type": "literal",
														"value": "array"
													},
													{
														"type": "literal",
														"value": "enumArray"
													},
													{
														"type": "literal",
														"value": "enum"
													},
													{
														"type": "literal",
														"value": "json"
													},
													{
														"type": "literal",
														"value": "integer"
													},
													{
														"type": "literal",
														"value": "smallint"
													},
													{
														"type": "literal",
														"value": "tinyint"
													},
													{
														"type": "literal",
														"value": "mediumint"
													},
													{
														"type": "literal",
														"value": "float"
													},
													{
														"type": "literal",
														"value": "double"
													},
													{
														"type": "literal",
														"value": "boolean"
													},
													{
														"type": "literal",
														"value": "decimal"
													},
													{
														"type": "literal",
														"value": "string"
													},
													{
														"type": "literal",
														"value": "uuid"
													},
													{
														"type": "literal",
														"value": "text"
													}
												]
											}
										},
										{
											"id": 34945,
											"name": "defaultValue",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34946,
											"name": "nullable",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 34947,
											"name": "options",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Mikro-orm options for the column"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34944,
												34945,
												34946,
												34947
											]
										}
									]
								}
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 34948,
					"name": "ModuleJoinerConfig",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 35807,
										"name": "JoinerServiceConfig",
										"package": "@medusajs/types"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "serviceName"
											},
											{
												"type": "literal",
												"value": "primaryKeys"
											},
											{
												"type": "literal",
												"value": "relationships"
											},
											{
												"type": "literal",
												"value": "extends"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34949,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34950,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "GraphQL schema for the all module's available entities and fields"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34951,
											"name": "relationships",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 34972,
													"name": "ModuleJoinerRelationship",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 34952,
											"name": "extends",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 34953,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 34954,
																"name": "serviceName",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "string"
																}
															},
															{
																"id": 34955,
																"name": "fieldAlias",
																"variant": "declaration",
																"kind": 1024,
																"flags": {
																	"isOptional": true
																},
																"type": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Record"
																	},
																	"typeArguments": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 34956,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {},
																						"children": [
																							{
																								"id": 34957,
																								"name": "path",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {},
																								"type": {
																									"type": "intrinsic",
																									"name": "string"
																								}
																							},
																							{
																								"id": 34958,
																								"name": "forwardArgumentsOnPath",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "array",
																									"elementType": {
																										"type": "intrinsic",
																										"name": "string"
																									}
																								}
																							},
																							{
																								"id": 34959,
																								"name": "isList",
																								"variant": "declaration",
																								"kind": 1024,
																								"flags": {
																									"isOptional": true
																								},
																								"type": {
																									"type": "intrinsic",
																									"name": "boolean"
																								}
																							}
																						],
																						"groups": [
																							{
																								"title": "Properties",
																								"children": [
																									34957,
																									34958,
																									34959
																								]
																							}
																						]
																					}
																				}
																			]
																		}
																	],
																	"name": "Record",
																	"package": "typescript"
																}
															},
															{
																"id": 34960,
																"name": "relationship",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "reference",
																	"target": 34972,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	34954,
																	34955,
																	34960
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 34961,
											"name": "serviceName",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34962,
											"name": "primaryKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34963,
											"name": "isLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If the module is a link module"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 34964,
											"name": "linkableKeys",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 34965,
											"name": "isReadOnlyLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 34966,
											"name": "extraDataFields",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 34967,
											"name": "databaseConfig",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 34968,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 34969,
															"name": "tableName",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Name of the pivot table. If not provided it is auto generated"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 34970,
															"name": "idPrefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Prefix for the id column. If not provided it is \"link\""
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 34971,
															"name": "extraFields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": 34942,
																"name": "LinkModulesExtraFields",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																34969,
																34970,
																34971
															]
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34950,
												34951,
												34952,
												34961,
												34962,
												34963,
												34964,
												34965,
												34966,
												34967
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34972,
					"name": "ModuleJoinerRelationship",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 35795,
								"name": "JoinerRelationship",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 34973,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34974,
											"name": "deleteCascade",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "If true, the link joiner will cascade deleting the relationship"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34974
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 34975,
					"name": "ModuleExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"typeParameters": [
						{
							"id": 34991,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "reference",
								"target": 34852,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Constructor",
								"package": "@medusajs/types"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 34976,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 34977,
									"name": "service",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 34991,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 34978,
									"name": "loaders",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34933,
											"name": "ModuleLoaderFunction",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 34979,
									"name": "runMigrations",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 34980,
											"name": "runMigrations",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34981,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 34926,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 34982,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 34868,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 34983,
									"name": "revertMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 34984,
											"name": "revertMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34985,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 34926,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 34986,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 34868,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								},
								{
									"id": 34987,
									"name": "generateMigration",
									"variant": "declaration",
									"kind": 2048,
									"flags": {
										"isOptional": true
									},
									"signatures": [
										{
											"id": 34988,
											"name": "generateMigration",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 34989,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 34926,
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "LoaderOptions",
														"package": "@medusajs/types"
													}
												},
												{
													"id": 34990,
													"name": "moduleDeclaration",
													"variant": "param",
													"kind": 32768,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 34868,
														"name": "InternalModuleDeclaration",
														"package": "@medusajs/types"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "void"
													}
												],
												"name": "Promise",
												"package": "typescript"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										34977,
										34978
									]
								},
								{
									"title": "Methods",
									"children": [
										34979,
										34983,
										34987
									]
								}
							]
						}
					}
				},
				{
					"id": 34992,
					"name": "ModuleServiceInitializeOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 34993,
							"name": "database",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 34994,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 34995,
											"name": "connection",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Forces to use a shared knex connection"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 34996,
											"name": "clientUrl",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34997,
											"name": "schema",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34998,
											"name": "host",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 34999,
											"name": "port",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 35000,
											"name": "user",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35001,
											"name": "password",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35002,
											"name": "database",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35003,
											"name": "driverOptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 35004,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 35005,
																	"name": "connection",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Record"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "string"
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Record",
																		"package": "typescript"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		35005
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 35006,
											"name": "debug",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 35007,
											"name": "pool",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												34995,
												34996,
												34997,
												34998,
												34999,
												35000,
												35001,
												35002,
												35003,
												35006,
												35007
											]
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								34993
							]
						}
					]
				},
				{
					"id": 35008,
					"name": "ModuleServiceInitializeCustomDataLayerOptions",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35009,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35010,
									"name": "manager",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 35011,
									"name": "repositories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35012,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"indexSignatures": [
												{
													"id": 35013,
													"name": "__index",
													"variant": "signature",
													"kind": 8192,
													"flags": {},
													"parameters": [
														{
															"id": 35014,
															"name": "key",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": 34852,
														"typeArguments": [
															{
																"type": "reference",
																"target": 32856,
																"name": "RepositoryService",
																"package": "@medusajs/types"
															}
														],
														"name": "Constructor",
														"package": "@medusajs/types"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35010,
										35011
									]
								}
							]
						}
					}
				},
				{
					"id": 35015,
					"name": "ModuleBootstrapDeclaration",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 34868,
								"name": "InternalModuleDeclaration",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": 34879,
								"name": "ExternalModuleDeclaration",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 35016,
					"name": "RemoteQueryFunction",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35017,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"signatures": [
								{
									"id": 35018,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35019,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reference",
														"target": 35827,
														"name": "RemoteJoinerQuery",
														"package": "@medusajs/types"
													},
													{
														"type": "intrinsic",
														"name": "object"
													}
												]
											}
										},
										{
											"id": 35020,
											"name": "variables",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 35021,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35845,
												"name": "RemoteJoinerOptions",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Promise"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Promise",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 35022,
					"name": "IModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"extendedBy": [
						{
							"type": "reference",
							"target": 33090,
							"name": "IFileModuleService"
						},
						{
							"type": "reference",
							"target": 34584,
							"name": "IInventoryService"
						},
						{
							"type": "reference",
							"target": 35197,
							"name": "INotificationModuleService"
						},
						{
							"type": "reference",
							"target": 35352,
							"name": "IStockLocationService"
						},
						{
							"type": "reference",
							"target": 35575,
							"name": "IWorkflowEngineService"
						},
						{
							"type": "reference",
							"target": 35866,
							"name": "ILinkModule"
						}
					]
				},
				{
					"id": 35036,
					"name": "IMedusaInternalService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35037,
							"name": "__container__",
							"variant": "declaration",
							"kind": 262144,
							"flags": {},
							"getSignature": {
								"id": 35038,
								"name": "__container__",
								"variant": "signature",
								"kind": 524288,
								"flags": {},
								"type": {
									"type": "reference",
									"target": 35140,
									"name": "TContainer",
									"package": "@medusajs/types",
									"qualifiedName": "IMedusaInternalService.TContainer",
									"refersToTypeParameter": true
								}
							}
						},
						{
							"id": 35039,
							"name": "retrieve",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35040,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35041,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35042,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35043,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35757,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35138,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35044,
									"name": "retrieve",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35045,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 35046,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35047,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35757,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35138,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35048,
							"name": "list",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35049,
									"name": "list",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35050,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 35051,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 32824,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 35052,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 35053,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35054,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35757,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35138,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35055,
							"name": "listAndCount",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35056,
									"name": "listAndCount",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35057,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 35058,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "reference",
														"target": 32824,
														"typeArguments": [
															{
																"type": "reflection",
																"declaration": {
																	"id": 35059,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {}
																}
															}
														],
														"name": "BaseFilterable",
														"package": "@medusajs/types"
													}
												]
											}
										},
										{
											"id": 35060,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35061,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 35757,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 35138,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35062,
							"name": "create",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35063,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35064,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 35065,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35757,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35138,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35066,
									"name": "create",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35067,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 35068,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35757,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35138,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35069,
							"name": "update",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35070,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35071,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 35072,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35757,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35138,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35073,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35074,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 35075,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35757,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35138,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35076,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35077,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 35078,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35079,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 35080,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 32824,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 35081,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 35082,
															"name": "data",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35079,
																35082
															]
														}
													]
												}
											}
										},
										{
											"id": 35083,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35757,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35138,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35084,
									"name": "update",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35085,
											"name": "selectorAndData",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reflection",
													"declaration": {
														"id": 35086,
														"name": "__type",
														"variant": "declaration",
														"kind": 65536,
														"flags": {},
														"children": [
															{
																"id": 35087,
																"name": "selector",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "union",
																	"types": [
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 35088,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {}
																			}
																		},
																		{
																			"type": "reference",
																			"target": 32824,
																			"typeArguments": [
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 35089,
																						"name": "__type",
																						"variant": "declaration",
																						"kind": 65536,
																						"flags": {}
																					}
																				}
																			],
																			"name": "BaseFilterable",
																			"package": "@medusajs/types"
																		}
																	]
																}
															},
															{
																"id": 35090,
																"name": "data",
																"variant": "declaration",
																"kind": 1024,
																"flags": {},
																"type": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														],
														"groups": [
															{
																"title": "Properties",
																"children": [
																	35087,
																	35090
																]
															}
														]
													}
												}
											}
										},
										{
											"id": 35091,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35757,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35138,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35092,
							"name": "delete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35093,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35094,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35095,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35096,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35097,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 35098,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35099,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35100,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 35101,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35102,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35103,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											}
										},
										{
											"id": 35104,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35105,
									"name": "delete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35106,
											"name": "idOrSelector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 35107,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35108,
															"name": "selector",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 35109,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {}
																		}
																	},
																	{
																		"type": "reference",
																		"target": 32824,
																		"typeArguments": [
																			{
																				"type": "reflection",
																				"declaration": {
																					"id": 35110,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {}
																				}
																			}
																		],
																		"name": "BaseFilterable",
																		"package": "@medusajs/types"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35108
															]
														}
													]
												}
											}
										},
										{
											"id": 35111,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35112,
							"name": "softDelete",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35113,
									"name": "softDelete",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35114,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 35115,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													},
													{
														"type": "array",
														"elementType": {
															"type": "reflection",
															"declaration": {
																"id": 35116,
																"name": "__type",
																"variant": "declaration",
																"kind": 65536,
																"flags": {}
															}
														}
													}
												]
											}
										},
										{
											"id": 35117,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 35757,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 35138,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35118,
							"name": "restore",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35119,
									"name": "restore",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35120,
											"name": "idsOrFilter",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 35121,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {}
														}
													}
												]
											}
										},
										{
											"id": 35122,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 35757,
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 35138,
																	"name": "TEntity",
																	"package": "@medusajs/types",
																	"qualifiedName": "IMedusaInternalService.TEntity",
																	"refersToTypeParameter": true
																}
															],
															"name": "InferEntityType",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "unknown"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35123,
							"name": "upsert",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35124,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35125,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 35126,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35757,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35138,
															"name": "TEntity",
															"package": "@medusajs/types",
															"qualifiedName": "IMedusaInternalService.TEntity",
															"refersToTypeParameter": true
														}
													],
													"name": "InferEntityType",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35127,
									"name": "upsert",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35128,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 35129,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35757,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35138,
														"name": "TEntity",
														"package": "@medusajs/types",
														"qualifiedName": "IMedusaInternalService.TEntity",
														"refersToTypeParameter": true
													}
												],
												"name": "InferEntityType",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35130,
							"name": "upsertWithReplace",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35131,
									"name": "upsertWithReplace",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35132,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										},
										{
											"id": 35133,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32848,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35757,
														"typeArguments": [
															{
																"type": "reference",
																"target": 35138,
																"name": "TEntity",
																"package": "@medusajs/types",
																"qualifiedName": "IMedusaInternalService.TEntity",
																"refersToTypeParameter": true
															}
														],
														"name": "InferEntityType",
														"package": "@medusajs/types"
													}
												],
												"name": "UpsertWithReplaceConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35134,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 35135,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35136,
															"name": "entities",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 35757,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 35138,
																			"name": "TEntity",
																			"package": "@medusajs/types",
																			"qualifiedName": "IMedusaInternalService.TEntity",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "InferEntityType",
																	"package": "@medusajs/types"
																}
															}
														},
														{
															"id": 35137,
															"name": "performedActions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": 32851,
																"name": "PerformedActions",
																"package": "@medusajs/types"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35136,
																35137
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Accessors",
							"children": [
								35037
							]
						},
						{
							"title": "Methods",
							"children": [
								35039,
								35048,
								35055,
								35062,
								35069,
								35092,
								35112,
								35118,
								35123,
								35130
							]
						}
					],
					"typeParameters": [
						{
							"id": 35138,
							"name": "TEntity",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 35139,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							}
						},
						{
							"id": 35140,
							"name": "TContainer",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"default": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					]
				},
				{
					"id": 35141,
					"name": "ModuleProviderExports",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35142,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35143,
									"name": "services",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34852,
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Constructor",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35143
									]
								}
							]
						}
					}
				},
				{
					"id": 35144,
					"name": "ModuleProvider",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35145,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35146,
									"name": "resolve",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 35141,
												"name": "ModuleProviderExports",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 35147,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35148,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35146,
										35147,
										35148
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						34992,
						35022,
						35036
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						34852,
						34859,
						34860,
						34861,
						34868,
						34879,
						34891,
						34899,
						34910,
						34917,
						34922,
						34926,
						34933,
						34938,
						34942,
						34948,
						34972,
						34975,
						35008,
						35015,
						35016,
						35141,
						35144
					]
				}
			]
		},
		{
			"id": 36321,
			"name": "ModuleDeclaration",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 34879,
						"name": "ExternalModuleDeclaration",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 34868,
						"name": "InternalModuleDeclaration",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 35149,
			"name": "NotificationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35150,
					"name": "NotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification's data."
							}
						]
					},
					"children": [
						{
							"id": 35151,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35152,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35153,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35154,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35155,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35156,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35157,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35158,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35159,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35160,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35161,
							"name": "external_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the notification in the external system, if applicable"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35162,
							"name": "provider_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35163,
							"name": "provider",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Information about the notification provider"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 35165,
								"name": "NotificationProviderDTO",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35164,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The date and time the notification was created."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35151,
								35152,
								35153,
								35154,
								35155,
								35156,
								35157,
								35158,
								35159,
								35160,
								35161,
								35162,
								35163,
								35164
							]
						}
					]
				},
				{
					"id": 35165,
					"name": "NotificationProviderDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the notification provider"
							}
						]
					},
					"children": [
						{
							"id": 35166,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35167,
							"name": "handle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The handle of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35168,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A user-friendly name of the notification provider."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35169,
							"name": "channels",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The supported channels by the notification provider."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35166,
								35167,
								35168,
								35169
							]
						}
					]
				},
				{
					"id": 35170,
					"name": "FilterableNotificationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on retrieved notifications."
							}
						]
					},
					"children": [
						{
							"id": 35180,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35170,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35170,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35181,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35170,
											"name": "FilterableNotificationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35170,
													"name": "FilterableNotificationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35171,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search through the notifications' attributes, such as trigger types and recipients, using this search term."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35172,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the recipient of the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35173,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35174,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the template name."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35175,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the trigger type."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35176,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the resource that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35177,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "T* Filter based on the resource type that was the trigger for the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35178,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filter based on the customer ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35179,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Filters a notification based on when it was sent and created in the database"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32802,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35180,
								35181,
								35171,
								35172,
								35173,
								35174,
								35175,
								35176,
								35177,
								35178,
								35179
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35170,
									"name": "FilterableNotificationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35186,
					"name": "CreateNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A notification to send and have created in the DB"
							}
						]
					},
					"children": [
						{
							"id": 35187,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35188,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35189,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35190,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 35191,
							"name": "trigger_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event name, the workflow, or anything else that can help to identify what triggered the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35192,
							"name": "resource_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the resource this notification is for, if applicable. Useful for displaying relevant information in the UI"
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35193,
							"name": "resource_type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the resource this notification is for, if applicable, eg. \"order\""
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35194,
							"name": "receiver_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the customer this notification is for, if applicable."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35195,
							"name": "original_notification_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The original notification, in case this is a retried notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35196,
							"name": "idempotency_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An idempotency key that ensures the same notification is not sent multiple times."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35187,
								35188,
								35189,
								35190,
								35191,
								35192,
								35193,
								35194,
								35195,
								35196
							]
						}
					]
				},
				{
					"id": 35233,
					"name": "ProviderSendNotificationDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The details of the notification to send."
							}
						]
					},
					"children": [
						{
							"id": 35234,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The recipient of the notification. It can be email, phone number, or username, depending on the channel."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35235,
							"name": "channel",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The channel through which the notification is sent, such as 'email' or 'sms'"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35236,
							"name": "template",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The template name in the provider's system."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35237,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data that gets passed over to the provider for rendering the notification."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35234,
								35235,
								35236,
								35237
							]
						}
					]
				},
				{
					"id": 35238,
					"name": "ProviderSendNotificationResultsDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of sending the notification"
							}
						]
					},
					"children": [
						{
							"id": 35239,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the notification in the external system, if provided in the response"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35239
							]
						}
					]
				},
				{
					"id": 35240,
					"name": "INotificationProvider",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35241,
							"name": "send",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35242,
									"name": "send",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The result of sending the notification."
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35243,
											"name": "notification",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "All information needed to send a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35233,
												"name": "ProviderSendNotificationDTO",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35238,
												"name": "ProviderSendNotificationResultsDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								35241
							]
						}
					]
				},
				{
					"id": 35182,
					"name": "LocalNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {}
				},
				{
					"id": 35183,
					"name": "SendgridNotificationServiceOptions",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35184,
							"name": "api_key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35185,
							"name": "from",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35184,
								35185
							]
						}
					]
				},
				{
					"id": 35197,
					"name": "INotificationModuleService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Notification Module."
							}
						]
					},
					"children": [
						{
							"id": 35198,
							"name": "createNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35199,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send multiple notifications, and store the requests in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of sent notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.createNotifications([\n  {\n    to: \"john@doe.me\",\n    template: \"order-confirmation\",\n    channel: \"email\",\n  },\n  {\n    to: \"+38975123456\",\n    template: \"order-confirmation\",\n    channel: \"sms\",\n  },\n])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35200,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notifications to be sent."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35186,
													"name": "CreateNotificationDTO",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 35201,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35150,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35202,
									"name": "createNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to send a notification, and store the request in the DB."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The sent notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.createNotifications({\n  to: \"john@doe.me\",\n  template: \"order-confirmation\",\n  channel: \"email\",\n})\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35203,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The notification to be sent."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35186,
												"name": "CreateNotificationDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35204,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35150,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35205,
							"name": "retrieveNotification",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35206,
									"name": "retrieveNotification",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a notification by its ID"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved notification."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "A simple example that retrieves a notification by its ID:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification =\n  await notificationModuleService.retrieveNotification(\"noti_123\")\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notification = await notificationModuleService.retrieveNotification(\n  \"noti_123\",\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35207,
											"name": "notificationId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the notification to retrieve."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35208,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notification is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35150,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35209,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35150,
												"name": "NotificationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35210,
							"name": "listNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35211,
									"name": "listNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications({\n  id: [\"noti_123\", \"noti_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst notifications = await notificationModuleService.listNotifications(\n  {\n    id: [\"noti_123\", \"noti_321\"],\n  },\n  {\n    relations: [\"provider\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35212,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35170,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35213,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35150,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35214,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35150,
													"name": "NotificationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35215,
							"name": "listAndCountNotifications",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35216,
									"name": "listAndCountNotifications",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method is used to retrieve a paginated list of notifications along with the total count of available notifications satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of notifications along with the total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of notifications using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications({\n    id: [\"noti_123\", \"noti_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the notifications:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`15`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [notifications, count] =\n  await notificationModuleService.listAndCountNotifications(\n    {\n      id: [\"noti_123\", \"noti_321\"],\n    },\n    {\n      relations: [\"provider\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35217,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved notifications."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35170,
												"name": "FilterableNotificationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35218,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the notifications are retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a notification."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35150,
														"name": "NotificationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35219,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 35150,
															"name": "NotificationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								35198,
								35205,
								35210,
								35215
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35022,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35150,
						35165,
						35170,
						35186,
						35233,
						35238,
						35240,
						35182,
						35183,
						35197
					]
				}
			]
		},
		{
			"id": 35940,
			"name": "ProductCategoryTransformOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35941,
					"name": "includeDescendantsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 35942,
					"name": "includeAncestorsTree",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35941,
						35942
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 32632,
					"name": "RepositoryTransformOptions",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 35244,
			"name": "SearchTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35245,
					"name": "IndexSettings",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35246,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35247,
									"name": "indexSettings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Settings specific to the provider. E.g. "
											},
											{
												"kind": "code",
												"text": "`searchableAttributes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 35248,
									"name": "primaryKey",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Primary key for the index. Used to enforce unique documents in an index. See more in Meilisearch' https://docs.meilisearch.com/learn/core_concepts/primary_key.html."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35249,
									"name": "transformer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Document transformer. Used to transform documents before they are added to the index."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35250,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"signatures": [
												{
													"id": 35251,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 35252,
															"name": "document",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35247,
										35248,
										35249
									]
								}
							]
						}
					}
				},
				{
					"id": 35253,
					"name": "ISearchService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35254,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35255,
							"name": "createIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35256,
									"name": "createIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to create an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35257,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35258,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35259,
							"name": "getIndex",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35260,
									"name": "getIndex",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to get an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35261,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35262,
							"name": "addDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35263,
									"name": "addDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to index documents by the search engine provider"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35264,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35265,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "documents array to be indexed"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 35266,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "of documents to be added (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35267,
							"name": "replaceDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35268,
									"name": "replaceDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to replace documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35269,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35270,
											"name": "documents",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "array of document objects that will replace existing documents"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 35271,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "type of documents to be replaced (e.g: products, regions, orders, etc)"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35272,
							"name": "deleteDocument",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35273,
									"name": "deleteDocument",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete document"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35274,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35275,
											"name": "document_id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the id of the document"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35276,
							"name": "deleteAllDocuments",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35277,
									"name": "deleteAllDocuments",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to delete all documents"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35278,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35279,
							"name": "search",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35280,
									"name": "search",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to search for a document in an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35281,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35282,
											"name": "query",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the search query"
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": null
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 35283,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "any options passed to the request object other than the query and indexName\n- additionalOptions contain any provider specific options"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						},
						{
							"id": 35284,
							"name": "updateSettings",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35285,
									"name": "updateSettings",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Used to update the settings of an index"
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "returns response from search engine provider"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35286,
											"name": "indexName",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "the index name"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35287,
											"name": "settings",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "settings object"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "unknown"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35254
							]
						},
						{
							"title": "Methods",
							"children": [
								35255,
								35259,
								35262,
								35267,
								35272,
								35276,
								35279,
								35284
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35253
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						35245
					]
				}
			]
		},
		{
			"id": 35943,
			"name": "SharedContext",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [],
				"blockTags": [
					{
						"tag": "@deprecated",
						"content": [
							{
								"kind": "text",
								"text": "use "
							},
							{
								"kind": "code",
								"text": "`Context`"
							},
							{
								"kind": "text",
								"text": " instead\n\n\nA context used to share resources, such as transaction manager, between the application and the module."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 35944,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 35945,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of an entity manager."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35944,
						35945
					]
				}
			]
		},
		{
			"id": 35946,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35947,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 35948,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35949,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 35950,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 35951,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35947,
						35948
					]
				}
			]
		},
		{
			"id": 35952,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 35953,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35954,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35955,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 33006,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33006,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 35956,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35957,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 35958,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 35946,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 33006,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 35959,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35960,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 35961,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 35962,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 35963,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 35964,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 33010,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35963,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 33010,
													"typeArguments": [
														{
															"type": "reference",
															"target": 35963,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 35965,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						35953,
						35956,
						35959,
						35961
					]
				}
			]
		},
		{
			"id": 35966,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 35967,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 35968,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 35977,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 35969,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 35977,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 35970,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35971,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 35972,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35973,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35974,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 35952,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 35975,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 35976,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						35967,
						35968,
						35969,
						35970,
						35971,
						35972,
						35973,
						35974,
						35975,
						35976
					]
				}
			],
			"typeParameters": [
				{
					"id": 35977,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 35288,
			"name": "StockLocationTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35289,
					"name": "StockLocationAddressDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35290,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35291,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35292,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 1 of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35293,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address 2 of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35294,
									"name": "company",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The company of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35295,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35296,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35297,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35298,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35299,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35300,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 32657,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35301,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 35302,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 35303,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35291,
										35292,
										35293,
										35294,
										35295,
										35296,
										35297,
										35298,
										35299,
										35300,
										35301,
										35302,
										35303
									]
								}
							]
						}
					}
				},
				{
					"id": 35304,
					"name": "StockLocationDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35305,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35306,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35307,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35308,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "Record",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35309,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35310,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the stock location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 35289,
										"name": "StockLocationAddressDTO",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35311,
									"name": "fulfillment_sets",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fulfillment sets for the location"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/fulfillment/common/fulfillment-set.ts",
												"qualifiedName": "FulfillmentSetDTO"
											},
											"name": "FulfillmentSetDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 35312,
									"name": "created_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The creation date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 35313,
									"name": "updated_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The update date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											}
										]
									}
								},
								{
									"id": 35314,
									"name": "deleted_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The deletion date of the stock location."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Date"
												},
												"name": "Date",
												"package": "typescript"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35306,
										35307,
										35308,
										35309,
										35310,
										35311,
										35312,
										35313,
										35314
									]
								}
							]
						}
					}
				},
				{
					"id": 35315,
					"name": "StockLocationExpandedDTO",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": 35304,
								"name": "StockLocationDTO",
								"package": "@medusajs/types"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 35316,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 35317,
											"name": "sales_channels",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of sales channels."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												35317
											]
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 35318,
					"name": "FilterableStockLocationProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filters to apply on the retrieved stock locations."
							}
						]
					},
					"children": [
						{
							"id": 35322,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35318,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35318,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35323,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35318,
											"name": "FilterableStockLocationProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35318,
													"name": "FilterableStockLocationProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35319,
							"name": "q",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Search parameter for stock location names"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35320,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The IDs to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 35321,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The names to filter stock locations by."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35322,
								35323,
								35319,
								35320,
								35321
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35318,
									"name": "FilterableStockLocationProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35324,
					"name": "StockLocationAddressInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents a Stock Location Address Input"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35325,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35326,
									"name": "address_1",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The first line of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35327,
									"name": "address_2",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The second line of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35328,
									"name": "country_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The country code of the stock location address."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35329,
									"name": "city",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The city of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35330,
									"name": "phone",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The phone of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35331,
									"name": "province",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The province of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35332,
									"name": "postal_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The postal code of the stock location address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35333,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 32657,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35326,
										35327,
										35328,
										35329,
										35330,
										35331,
										35332,
										35333
									]
								}
							]
						}
					}
				},
				{
					"id": 35334,
					"name": "CreateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to create a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35335,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35336,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35337,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35338,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"target": 35324,
												"name": "StockLocationAddressInput",
												"package": "@medusajs/types"
											}
										]
									}
								},
								{
									"id": 35339,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 32657,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35336,
										35337,
										35338,
										35339
									]
								}
							]
						}
					}
				},
				{
					"id": 35340,
					"name": "UpdateStockLocationInput",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the Input to update a Stock Location"
							}
						],
						"modifierTags": [
							"@interface"
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35341,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35342,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the stock location."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35343,
									"name": "address_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": null
											}
										]
									}
								},
								{
									"id": 35344,
									"name": "address",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The associated address's details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 35324,
										"name": "StockLocationAddressInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35345,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Holds custom data in key-value pairs."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 32657,
										"name": "MetadataType",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35342,
										35343,
										35344,
										35345
									]
								}
							]
						}
					}
				},
				{
					"id": 35346,
					"name": "UpsertStockLocationInput",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A stock location to create or update. If the "
							},
							{
								"kind": "code",
								"text": "`id`"
							},
							{
								"kind": "text",
								"text": " property isn't provided,\nthe stock location is created. In that case, the "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is required."
							}
						]
					},
					"children": [
						{
							"id": 35347,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the stock location."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35348,
							"name": "address_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's ID."
									}
								]
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 35349,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The associated address's details."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 35324,
								"name": "StockLocationAddressInput",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35350,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Holds custom data in key-value pairs."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": 32657,
								"name": "MetadataType",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35351,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The ID of the stock location, if updating."
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35347,
								35348,
								35349,
								35350,
								35351
							]
						}
					]
				},
				{
					"id": 35352,
					"name": "IStockLocationService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The main service interface for the Stock Location Module."
							}
						]
					},
					"children": [
						{
							"id": 35353,
							"name": "listStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35354,
									"name": "listStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations based on optional filters and configuration."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations({\n  id: [\"sloc_123\", \"sloc_321\"],\n})\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n  }\n)\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations = await stockLocationModuleService.listStockLocations(\n  {\n    id: [\"sloc_123\", \"sloc_321\"],\n  },\n  {\n    relations: [\"address\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35355,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35318,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35356,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35304,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35357,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35304,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35358,
							"name": "listAndCountStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35359,
									"name": "listAndCountStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a paginated list of stock locations along with the total count of available stock locations satisfying the provided filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The list of stock locations along with their total count."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "text",
														"text": "To retrieve a list of stock locations using their IDs:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations({\n    id: [\"sloc_123\", \"sloc_321\"],\n  })\n```"
													},
													{
														"kind": "text",
														"text": "\n\nTo specify relations that should be retrieved within the stock locations:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n    }\n  )\n```"
													},
													{
														"kind": "text",
														"text": "\n\nBy default, only the first "
													},
													{
														"kind": "code",
														"text": "`10`"
													},
													{
														"kind": "text",
														"text": " records are retrieved. You can control pagination by specifying the "
													},
													{
														"kind": "code",
														"text": "`skip`"
													},
													{
														"kind": "text",
														"text": " and "
													},
													{
														"kind": "code",
														"text": "`take`"
													},
													{
														"kind": "text",
														"text": " properties of the "
													},
													{
														"kind": "code",
														"text": "`config`"
													},
													{
														"kind": "text",
														"text": " parameter:\n\n"
													},
													{
														"kind": "code",
														"text": "```ts\nconst [stockLocations, count] =\n  await stockLocationModuleService.listandCountStockLocations(\n    {\n      id: [\"sloc_123\", \"sloc_321\"],\n    },\n    {\n      relations: [\"address\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35360,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters to apply on the retrieved stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35318,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35361,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35304,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35362,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 35304,
															"name": "StockLocationDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35363,
							"name": "retrieveStockLocation",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35364,
									"name": "retrieveStockLocation",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method retrieves a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The retrieved stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation =\n  await stockLocationModuleService.retrieveStockLocation(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35365,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35366,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The configurations determining how the stock location is retrieved. Its properties, such as "
													},
													{
														"kind": "code",
														"text": "`select`"
													},
													{
														"kind": "text",
														"text": " or "
													},
													{
														"kind": "code",
														"text": "`relations`"
													},
													{
														"kind": "text",
														"text": ", accept the\nattributes or relations associated with a stock location."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35304,
														"name": "StockLocationDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35367,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35304,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35368,
							"name": "createStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35369,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates a stock location."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock location."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocation = await stockLocationModuleService.createStockLocations(\n  {\n    name: \"Warehouse\",\n    address: {\n      address_1: \"1855 Powder Mill Rd\",\n      country_code: \"us\",\n    },\n  }\n)\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35370,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock location to create."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35334,
												"name": "CreateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35371,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35304,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35372,
									"name": "createStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method creates stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.createStockLocations([\n    {\n      name: \"Warehouse\",\n      address: {\n        address_1: \"1855 Powder Mill Rd\",\n        country_code: \"us\",\n      },\n    },\n    {\n      name: \"Warehouse 2\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35373,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The stock locations to create."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35334,
													"name": "CreateStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 35374,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35304,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35375,
							"name": "upsertStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35376,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates stock location service nexts if they don't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service nexts."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35377,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The list of Make all properties in t optional"
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35346,
													"name": "UpsertStockLocationInput",
													"package": "@medusajs/types"
												}
											}
										},
										{
											"id": 35378,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35304,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35379,
									"name": "upsertStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates or creates a stock location service next if it doesn't exist."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The created or updated stock location service next."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n{example-code}\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35380,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Make all properties in T optional"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35346,
												"name": "UpsertStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35381,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35304,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35382,
							"name": "updateStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35383,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations([\n    {\n      id: \"sloc_123\",\n      name: \"Warehouse\",\n    },\n    {\n      id: \"sloc_321\",\n      address_id: \"laddr_123\",\n    },\n  ])\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35384,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35385,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35340,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35386,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35304,
												"name": "StockLocationDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								},
								{
									"id": 35387,
									"name": "updateStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method updates existing stock locations matching the specified filters."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "The updated stock locations."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nconst stockLocations =\n  await stockLocationModuleService.updateStockLocations(\n    {\n      name: \"Warehouse\",\n    },\n    {\n      address_id: \"laddr_123\",\n    }\n  )\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35388,
											"name": "selector",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The filters specifying which stock locations to update."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35318,
												"name": "FilterableStockLocationProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35389,
											"name": "input",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The attributes to update in the stock locations."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35340,
												"name": "UpdateStockLocationInput",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35390,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35304,
													"name": "StockLocationDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35391,
							"name": "deleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35392,
									"name": "deleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method deletes a stock location by its ID."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "Resolves when the stock location is deleted successfully."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.deleteStockLocations(\"sloc_123\")\n```"
													}
												]
											}
										]
									},
									"parameters": [
										{
											"id": 35393,
											"name": "id",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The ID of the stock location."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												]
											}
										},
										{
											"id": 35394,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35395,
							"name": "softDeleteStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35396,
									"name": "softDeleteStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method soft deletes stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the stock location through this relation, such as the IDs of associated address.\n\nIf there are no related records, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.softDeleteStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 35397,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 35398,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 35399,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32976,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35397,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "SoftDeleteReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35400,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35401,
							"name": "restoreStockLocations",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35402,
									"name": "restoreStockLocations",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "This method restores soft deleted stock locations by their IDs."
											}
										],
										"blockTags": [
											{
												"tag": "@returns",
												"content": [
													{
														"kind": "text",
														"text": "An object that includes the IDs of related records that were restored, such as the ID of associated address.\nThe object's keys are the ID attribute names of the stock location entity's relations, such as "
													},
													{
														"kind": "code",
														"text": "`address_id`"
													},
													{
														"kind": "text",
														"text": ",\nand its value is an array of strings, each being the ID of the record associated with the stock location through this relation,\nsuch as the ID of associated address.\n\nIf there are no related records restored, the promise resolves to "
													},
													{
														"kind": "code",
														"text": "`void`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											{
												"tag": "@example",
												"content": [
													{
														"kind": "code",
														"text": "```ts\nawait stockLocationModuleService.restoreStockLocations([\n  \"sloc_123\",\n  \"sloc_321\",\n])\n```"
													}
												]
											}
										]
									},
									"typeParameters": [
										{
											"id": 35403,
											"name": "TReturnableLinkableKeys",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"default": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"parameters": [
										{
											"id": 35404,
											"name": "stockLocationIds",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The IDs of the stock locations."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										},
										{
											"id": 35405,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Configurations determining which relations to restore along with each of the stock location. You can pass to its "
													},
													{
														"kind": "code",
														"text": "`returnLinkableKeys`"
													},
													{
														"kind": "text",
														"text": "\nproperty any of the stock location's relation attribute names, such as "
													},
													{
														"kind": "code",
														"text": "`address`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 32979,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35403,
														"name": "TReturnableLinkableKeys",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RestoreReturn",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35406,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A context used to share resources, such as transaction manager, between the application and the module."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "void"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								35353,
								35358,
								35363,
								35368,
								35375,
								35382,
								35391,
								35395,
								35401
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35022,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35318,
						35346,
						35352
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						35289,
						35304,
						35315,
						35324,
						35334,
						35340
					]
				}
			]
		},
		{
			"id": 36001,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36002,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36003,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 36009,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 36004,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 36005,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 36006,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 36007,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 36008,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36002,
						36003,
						36004
					]
				},
				{
					"title": "Methods",
					"children": [
						36005,
						36007
					]
				}
			]
		},
		{
			"id": 36009,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36010,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 36011,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36011
							]
						}
					],
					"indexSignatures": [
						{
							"id": 36012,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 36013,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 36014,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 36009,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 36001,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 36015,
			"name": "BigNumberValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": 36001,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 35978,
			"name": "CartLikeWithTotals",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 35979,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 35980,
							"name": "original_item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35981,
							"name": "original_item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35982,
							"name": "item_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35983,
							"name": "item_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35984,
							"name": "item_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35985,
							"name": "original_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35986,
							"name": "original_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35987,
							"name": "original_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35988,
							"name": "total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35989,
							"name": "subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35990,
							"name": "tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35991,
							"name": "discount_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35992,
							"name": "discount_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35993,
							"name": "gift_card_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35994,
							"name": "gift_card_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35995,
							"name": "shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35996,
							"name": "shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35997,
							"name": "shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35998,
							"name": "original_shipping_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 35999,
							"name": "original_shipping_subtotal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36000,
							"name": "original_shipping_tax_total",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 36015,
								"name": "BigNumberValue",
								"package": "@medusajs/types"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35980,
								35981,
								35982,
								35983,
								35984,
								35985,
								35986,
								35987,
								35988,
								35989,
								35990,
								35991,
								35992,
								35993,
								35994,
								35995,
								35996,
								35997,
								35998,
								35999,
								36000
							]
						}
					]
				}
			}
		},
		{
			"id": 35420,
			"name": "TransactionBaseTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35421,
					"name": "ITransactionBaseService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35422,
							"name": "withTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35423,
									"name": "withTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35424,
											"name": "transactionManager",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../node_modules/typeorm/entity-manager/EntityManager.d.ts",
													"qualifiedName": "EntityManager"
												},
												"name": "EntityManager",
												"package": "typeorm"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "this"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								35422
							]
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"target": 33020,
							"name": "IEventBusService"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35421
					]
				}
			]
		},
		{
			"id": 35425,
			"name": "WorkflowTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35426,
					"name": "CommonWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 35427,
							"name": "WorkflowInputConfig",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35428,
									"name": "listConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35429,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35430,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 35431,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35430,
														35431
													]
												}
											]
										}
									}
								},
								{
									"id": 35432,
									"name": "retrieveConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35433,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35434,
													"name": "select",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												},
												{
													"id": 35435,
													"name": "relations",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35434,
														35435
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35428,
										35432
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								35427
							]
						}
					]
				},
				{
					"id": 35436,
					"name": "InventoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 35437,
							"name": "CreateInventoryItemInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35438,
									"name": "sku",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35439,
									"name": "hs_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35440,
									"name": "weight",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35441,
									"name": "length",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35442,
									"name": "height",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35443,
									"name": "width",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35444,
									"name": "origin_country",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35445,
									"name": "mid_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35446,
									"name": "material",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35447,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35448,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35449,
									"name": "thumbnail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35450,
									"name": "metadata",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35438,
										35439,
										35440,
										35441,
										35442,
										35443,
										35444,
										35445,
										35446,
										35447,
										35448,
										35449,
										35450
									]
								}
							]
						},
						{
							"id": 35451,
							"name": "CreateInventoryItemsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35452,
									"name": "inventoryItems",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35437,
											"name": "CreateInventoryItemInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35452
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								35437,
								35451
							]
						}
					]
				},
				{
					"id": 35453,
					"name": "InviteWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 35458,
							"name": "AcceptInviteWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35459,
									"name": "invite_token",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35460,
									"name": "auth_identity_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35461,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35462,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 35463,
													"name": "email",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 35464,
													"name": "first_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 35465,
													"name": "last_name",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 35466,
													"name": "avatar_url",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 35467,
													"name": "metadata",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "union",
														"types": [
															{
																"type": "literal",
																"value": null
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														35463,
														35464,
														35465,
														35466,
														35467
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35459,
										35460,
										35461
									]
								}
							]
						},
						{
							"id": 35454,
							"name": "CreateInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35455,
									"name": "invites",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/user/mutations.ts",
												"qualifiedName": "CreateInviteDTO"
											},
											"name": "CreateInviteDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35455
									]
								}
							]
						},
						{
							"id": 35456,
							"name": "DeleteInvitesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35457,
									"name": "ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35457
									]
								}
							]
						},
						{
							"id": 35468,
							"name": "ResendInvitesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35469,
									"name": "invite_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35469
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								35458,
								35454,
								35456,
								35468
							]
						}
					]
				},
				{
					"id": 35470,
					"name": "PriceListWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 35471,
							"name": "CreatePriceListDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35472,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35473,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35474,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35475,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
												"qualifiedName": "PriceListRuleDTO"
											},
											"name": "PriceListRuleDTO",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 35476,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 35477,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 35478,
														"name": "amount",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 35479,
														"name": "currency_code",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 35480,
														"name": "region_id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 35481,
														"name": "max_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"id": 35482,
														"name": "min_quantity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															35478,
															35479,
															35480,
															35481,
															35482
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 35483,
									"name": "customer_groups",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 35484,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 35485,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															35485
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35472,
										35473,
										35474,
										35475,
										35476,
										35483
									]
								}
							]
						},
						{
							"id": 35486,
							"name": "CreatePriceListRuleDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35487,
									"name": "attribute",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35488,
									"name": "value",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35487,
										35488
									]
								}
							]
						},
						{
							"id": 35489,
							"name": "CreatePriceListPriceDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35490,
									"name": "amount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35491,
									"name": "currency_code",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35492,
									"name": "price_set_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								},
								{
									"id": 35493,
									"name": "region_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35494,
									"name": "max_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35495,
									"name": "min_quantity",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35490,
										35491,
										35492,
										35493,
										35494,
										35495
									]
								}
							]
						},
						{
							"id": 35496,
							"name": "CreatePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35497,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 35507,
											"name": "CreatePriceListWorkflowDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35497
									]
								}
							]
						},
						{
							"id": 35498,
							"name": "RemovePriceListProductsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35499,
									"name": "product_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 35500,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35499,
										35500
									]
								}
							]
						},
						{
							"id": 35501,
							"name": "RemovePriceListVariantsWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35502,
									"name": "variant_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 35503,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35502,
										35503
									]
								}
							]
						},
						{
							"id": 35504,
							"name": "RemovePriceListPricesWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35505,
									"name": "money_amount_ids",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 35506,
									"name": "price_list_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35505,
										35506
									]
								}
							]
						},
						{
							"id": 35507,
							"name": "CreatePriceListWorkflowDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35508,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35509,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35510,
									"name": "description",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35511,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35512,
									"name": "starts_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 35513,
									"name": "ends_at",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									}
								},
								{
									"id": 35514,
									"name": "status",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "PriceListStatus"
										},
										"name": "PriceListStatus",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35515,
									"name": "rules_count",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 35516,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36322,
											"name": "InputPrice",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 35517,
									"name": "rules",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/pricing/common/price-list.ts",
											"qualifiedName": "CreatePriceListRules"
										},
										"name": "CreatePriceListRules",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35508,
										35509,
										35510,
										35511,
										35512,
										35513,
										35514,
										35515,
										35516,
										35517
									]
								}
							]
						},
						{
							"id": 35518,
							"name": "RemovePriceListWorkflowInputDTO",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35519,
									"name": "price_lists",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35519
									]
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								35471,
								35486,
								35489,
								35496,
								35498,
								35501,
								35504,
								35507,
								35518
							]
						}
					]
				},
				{
					"id": 35520,
					"name": "ProductCategoryWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 35521,
							"name": "CreateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35522,
									"name": "product_categories",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
												"qualifiedName": "CreateProductCategoryDTO"
											},
											"name": "CreateProductCategoryDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35522
									]
								}
							]
						},
						{
							"id": 35523,
							"name": "UpdateProductCategoriesWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35524,
									"name": "selector",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "FilterableProductCategoryProps"
										},
										"name": "FilterableProductCategoryProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 35525,
									"name": "update",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
											"qualifiedName": "UpdateProductCategoryDTO"
										},
										"name": "UpdateProductCategoryDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35524,
										35525
									]
								}
							]
						},
						{
							"id": 35526,
							"name": "BatchUpdateProductsOnCategoryWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35527,
									"name": "id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isInherited": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.id"
									}
								},
								{
									"id": 35528,
									"name": "add",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.add"
									}
								},
								{
									"id": 35529,
									"name": "remove",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true,
										"isInherited": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									"inheritedFrom": {
										"type": "reference",
										"target": -1,
										"name": "LinkWorkflowInput.remove"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35527,
										35528,
										35529
									]
								}
							],
							"extendedTypes": [
								{
									"type": "reference",
									"target": 32667,
									"name": "LinkWorkflowInput",
									"package": "@medusajs/types"
								}
							]
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								35521,
								35523,
								35526
							]
						}
					]
				},
				{
					"id": 35530,
					"name": "ReservationWorkflow",
					"variant": "declaration",
					"kind": 4,
					"flags": {},
					"children": [
						{
							"id": 35531,
							"name": "CreateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35532,
									"name": "reservations",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34570,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35532
									]
								}
							]
						},
						{
							"id": 35533,
							"name": "CreateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34490,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 35534,
							"name": "UpdateReservationsWorkflowInput",
							"variant": "declaration",
							"kind": 256,
							"flags": {},
							"children": [
								{
									"id": 35535,
									"name": "updates",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 34563,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35535
									]
								}
							]
						},
						{
							"id": 35536,
							"name": "UpdateReservationsWorkflowOutput",
							"variant": "declaration",
							"kind": 2097152,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 34490,
									"name": "ReservationItemDTO",
									"package": "@medusajs/types"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Interfaces",
							"children": [
								35531,
								35534
							]
						},
						{
							"title": "Type Aliases",
							"children": [
								35533,
								35536
							]
						}
					]
				}
			],
			"groups": [
				{
					"title": "Namespaces",
					"children": [
						35426,
						35436,
						35453,
						35470,
						35520,
						35530
					]
				}
			]
		},
		{
			"id": 36322,
			"name": "InputPrice",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36323,
					"name": "region_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36324,
					"name": "currency_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36325,
					"name": "amount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36326,
					"name": "variant_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36327,
					"name": "min_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 36328,
					"name": "max_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36323,
						36324,
						36325,
						36326,
						36327,
						36328
					]
				}
			]
		},
		{
			"id": 35537,
			"name": "WorkflowsSdkTypes",
			"variant": "declaration",
			"kind": 4,
			"flags": {},
			"children": [
				{
					"id": 35538,
					"name": "WorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35539,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35540,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35541,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35542,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35543,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35544,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 35545,
							"name": "created_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 35546,
							"name": "updated_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						},
						{
							"id": 35547,
							"name": "deleted_at",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35539,
								35540,
								35541,
								35542,
								35543,
								35544,
								35545,
								35546,
								35547
							]
						}
					]
				},
				{
					"id": 35548,
					"name": "FilterableWorkflowExecutionProps",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to allow specifying flexible queries with and/or conditions."
							}
						]
					},
					"children": [
						{
							"id": 35553,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35548,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35548,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32825,
								"name": "BaseFilterable.$and"
							}
						},
						{
							"id": 35554,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
									}
								]
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": 35548,
											"name": "FilterableWorkflowExecutionProps",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": 32824,
											"typeArguments": [
												{
													"type": "reference",
													"target": 35548,
													"name": "FilterableWorkflowExecutionProps",
													"package": "@medusajs/types"
												}
											],
											"name": "BaseFilterable",
											"package": "@medusajs/types"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": 32826,
								"name": "BaseFilterable.$or"
							}
						},
						{
							"id": 35549,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35550,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35551,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						},
						{
							"id": 35552,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": 32802,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "OperatorMap",
										"package": "@medusajs/types"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35553,
								35554,
								35549,
								35550,
								35551,
								35552
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 32824,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35548,
									"name": "FilterableWorkflowExecutionProps",
									"package": "@medusajs/types"
								}
							],
							"name": "BaseFilterable",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35555,
					"name": "UpsertWorkflowExecutionDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35556,
							"name": "workflow_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35557,
							"name": "transaction_id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35558,
							"name": "execution",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35559,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 35560,
							"name": "state",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35556,
								35557,
								35558,
								35559,
								35560
							]
						}
					]
				},
				{
					"id": 35561,
					"name": "WorkflowOrchestratorRunDTO",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35563,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 35568,
								"name": "T",
								"package": "@medusajs/types",
								"qualifiedName": "WorkflowOrchestratorRunDTO.T",
								"refersToTypeParameter": true
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.input"
							}
						},
						{
							"id": 35564,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": 35966,
								"name": "Context",
								"package": "@medusajs/types"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.context"
							}
						},
						{
							"id": 35565,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.resultFrom"
							}
						},
						{
							"id": 35566,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.throwOnError"
							}
						},
						{
							"id": 35567,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true,
								"isInherited": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "FlowRunOptions.events"
							}
						},
						{
							"id": 35562,
							"name": "transactionId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								35563,
								35564,
								35565,
								35566,
								35567,
								35562
							]
						}
					],
					"typeParameters": [
						{
							"id": 35568,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"default": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 36329,
							"typeArguments": [
								{
									"type": "reference",
									"target": 35568,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "WorkflowOrchestratorRunDTO.T",
									"refersToTypeParameter": true
								}
							],
							"name": "FlowRunOptions",
							"package": "@medusajs/types"
						}
					]
				},
				{
					"id": 35569,
					"name": "IdempotencyKeyParts",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 35570,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 35571,
									"name": "workflowId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35572,
									"name": "transactionId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35573,
									"name": "stepId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 35574,
									"name": "action",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "invoke"
											},
											{
												"type": "literal",
												"value": "compensate"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										35571,
										35572,
										35573,
										35574
									]
								}
							]
						}
					}
				},
				{
					"id": 35575,
					"name": "IWorkflowEngineService",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"children": [
						{
							"id": 35576,
							"name": "retrieveWorkflowExecution",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35577,
									"name": "retrieveWorkflowExecution",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35578,
											"name": "idOrObject",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 35579,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 35580,
																	"name": "workflow_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																},
																{
																	"id": 35581,
																	"name": "transaction_id",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		35580,
																		35581
																	]
																}
															]
														}
													}
												]
											}
										},
										{
											"id": 35582,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35538,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35583,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 35538,
												"name": "WorkflowExecutionDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35584,
							"name": "listWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35585,
									"name": "listWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35586,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35548,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35587,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35538,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35588,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 35538,
													"name": "WorkflowExecutionDTO",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35589,
							"name": "listAndCountWorkflowExecutions",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35590,
									"name": "listAndCountWorkflowExecutions",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35591,
											"name": "filters",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35548,
												"name": "FilterableWorkflowExecutionProps",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35592,
											"name": "config",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 32577,
												"typeArguments": [
													{
														"type": "reference",
														"target": 35538,
														"name": "WorkflowExecutionDTO",
														"package": "@medusajs/types"
													}
												],
												"name": "FindConfig",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35593,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "tuple",
												"elements": [
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": 35538,
															"name": "WorkflowExecutionDTO",
															"package": "@medusajs/types"
														}
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35594,
							"name": "run",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35595,
									"name": "run",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35596,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35597,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35561,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "unknown"
													}
												],
												"name": "WorkflowOrchestratorRunDTO",
												"package": "@medusajs/types"
											}
										},
										{
											"id": 35598,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 35599,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35600,
															"name": "errors",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																		"qualifiedName": "Error"
																	},
																	"name": "Error",
																	"package": "typescript"
																}
															}
														},
														{
															"id": 35601,
															"name": "transaction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 35602,
															"name": "result",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 35603,
															"name": "acknowledgement",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35600,
																35601,
																35602,
																35603
															]
														}
													]
												}
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35604,
							"name": "getRunningTransaction",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35605,
									"name": "getRunningTransaction",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35606,
											"name": "workflowId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35607,
											"name": "transactionId",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 35608,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										},
										{
											"id": 35609,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35610,
							"name": "setStepSuccess",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35611,
									"name": "setStepSuccess",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35612,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 35613,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35614,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 35569,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 35615,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 35616,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35614,
																35615,
																35616
															]
														}
													]
												}
											}
										},
										{
											"id": 35617,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 35618,
							"name": "setStepFailure",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35619,
									"name": "setStepFailure",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35620,
											"name": "__namedParameters",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 35621,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35622,
															"name": "idempotencyKey",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": 35569,
																		"name": "IdempotencyKeyParts",
																		"package": "@medusajs/types"
																	}
																]
															}
														},
														{
															"id": 35623,
															"name": "stepResponse",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "unknown"
															}
														},
														{
															"id": 35624,
															"name": "options",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35622,
																35623,
																35624
															]
														}
													]
												}
											}
										},
										{
											"id": 35625,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						},
						{
							"id": 35626,
							"name": "subscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35627,
									"name": "subscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35628,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 35629,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35630,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 35631,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 35632,
															"name": "subscriber",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Function"
																},
																"name": "Function",
																"package": "typescript"
															}
														},
														{
															"id": 35633,
															"name": "subscriberId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35630,
																35631,
																35632,
																35633
															]
														}
													]
												}
											}
										},
										{
											"id": 35634,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						},
						{
							"id": 35635,
							"name": "unsubscribe",
							"variant": "declaration",
							"kind": 2048,
							"flags": {},
							"signatures": [
								{
									"id": 35636,
									"name": "unsubscribe",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 35637,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 35638,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 35639,
															"name": "workflowId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 35640,
															"name": "transactionId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 35641,
															"name": "subscriberOrId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "string"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Function"
																		},
																		"name": "Function",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																35639,
																35640,
																35641
															]
														}
													]
												}
											}
										},
										{
											"id": 35642,
											"name": "sharedContext",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": 35966,
												"name": "Context",
												"package": "@medusajs/types"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"children": [
								35576,
								35584,
								35589,
								35594,
								35604,
								35610,
								35618,
								35626,
								35635
							]
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"target": 35022,
							"name": "IModuleService",
							"package": "@medusajs/types"
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						35538,
						35548,
						35555,
						35561,
						35575
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						35569
					]
				}
			]
		},
		{
			"id": 36329,
			"name": "FlowRunOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 36336,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36330,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 36331,
							"name": "input",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 36336,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 36332,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 35966,
								"name": "Context",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 36333,
							"name": "resultFrom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Symbol"
										},
										"name": "Symbol",
										"package": "typescript"
									}
								]
							}
						},
						{
							"id": 36334,
							"name": "throwOnError",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 36335,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								36331,
								36332,
								36333,
								36334,
								36335
							]
						}
					]
				}
			},
			"extendedBy": [
				{
					"type": "reference",
					"target": 35561,
					"name": "WorkflowOrchestratorRunDTO"
				}
			]
		},
		{
			"id": 36022,
			"name": "CreateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "CreateProductVariantDTO"
						},
						"name": "ProductTypes.CreateProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "CreateProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36023,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36024,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36024
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 36025,
			"name": "UpdateProductVariantWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductVariantDTO"
						},
						"name": "ProductTypes.UpsertProductVariantDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductVariantDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36026,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36027,
									"name": "prices",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/pricing/common/money-amount.ts",
												"qualifiedName": "CreateMoneyAmountDTO"
											},
											"name": "PricingTypes.CreateMoneyAmountDTO",
											"package": "@medusajs/types",
											"qualifiedName": "CreateMoneyAmountDTO"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36027
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 36028,
			"name": "CreateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
									"qualifiedName": "CreateProductDTO"
								},
								"name": "ProductTypes.CreateProductDTO",
								"package": "@medusajs/types",
								"qualifiedName": "CreateProductDTO"
							},
							{
								"type": "literal",
								"value": "variants"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36029,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36030,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 36031,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 36032,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															36032
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 36033,
									"name": "variants",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 36022,
											"name": "CreateProductVariantWorkflowInputDTO",
											"package": "@medusajs/types"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36030,
										36033
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 36034,
			"name": "UpdateProductWorkflowInputDTO",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/product/common.ts",
							"qualifiedName": "UpsertProductDTO"
						},
						"name": "ProductTypes.UpsertProductDTO",
						"package": "@medusajs/types",
						"qualifiedName": "UpsertProductDTO"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 36035,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36036,
									"name": "sales_channels",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 36037,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 36038,
														"name": "id",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															36038
														]
													}
												]
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36036
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 36016,
			"name": "CreateLocationFulfillmentSetWorkflowInputDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 36017,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 36018,
					"name": "fulfillment_set_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 36019,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 36020,
									"name": "name",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 36021,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										36020,
										36021
									]
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						36017,
						36018
					]
				}
			]
		}
	],
	"groups": [
		{
			"title": "Namespaces",
			"children": [
				32541,
				32542,
				32556,
				32795,
				35656,
				32984,
				33060,
				33079,
				33170,
				34442,
				34793,
				34851,
				35149,
				35244,
				35288,
				35420,
				35425,
				35537
			]
		},
		{
			"title": "Enumerations",
			"children": [
				36123
			]
		},
		{
			"title": "Interfaces",
			"children": [
				32538,
				36039,
				36071,
				35778,
				35781,
				35786,
				35789,
				35791,
				36115,
				36128,
				36133,
				36139,
				36104,
				36096,
				36143,
				36155,
				36177,
				36164,
				36187,
				36179,
				36196,
				36205,
				36416,
				36362,
				36366,
				36371,
				36377,
				36420,
				36384,
				36389,
				36395,
				36402,
				36210,
				36225,
				36245,
				36249,
				36256,
				36266,
				36273,
				36287,
				36296,
				36309,
				36318,
				35804,
				35807,
				35821,
				35824,
				35827,
				35845,
				35848,
				35858,
				35934,
				35866,
				35940,
				35943,
				35946,
				35952,
				35966,
				36001,
				36322,
				36016
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				32523,
				36046,
				36411,
				36410,
				36340,
				36345,
				36347,
				36352,
				36342,
				36349,
				36354,
				36053,
				36337,
				36051,
				36048,
				36067,
				36068,
				36062,
				36056,
				36058,
				36356,
				36435,
				36425,
				36414,
				36360,
				36055,
				36060,
				36199,
				36208,
				36209,
				36295,
				35795,
				35855,
				35914,
				35920,
				36321,
				36009,
				36014,
				36015,
				35978,
				36329,
				36022,
				36025,
				36028,
				36034
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"32522": {
			"sourceFileName": "../../../../packages/core/types/src/index.ts",
			"qualifiedName": ""
		},
		"32523": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "AddressDTO"
		},
		"32524": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type"
		},
		"32525": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.id"
		},
		"32526": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"32527": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"32528": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.company"
		},
		"32529": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"32530": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.city"
		},
		"32531": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.phone"
		},
		"32532": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"32533": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.province"
		},
		"32534": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"32535": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"32536": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"32537": {
			"sourceFileName": "../../../../packages/core/types/src/address/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"32538": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps"
		},
		"32539": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.data"
		},
		"32540": {
			"sourceFileName": "../../../../packages/core/types/src/admin/extensions.ts",
			"qualifiedName": "DetailWidgetProps.TData"
		},
		"32541": {
			"sourceFileName": "../../../../packages/core/types/src/admin/index.ts",
			"qualifiedName": ""
		},
		"32542": {
			"sourceFileName": "../../../../packages/core/types/src/cache/index.ts",
			"qualifiedName": ""
		},
		"32543": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService"
		},
		"32544": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"32545": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.get"
		},
		"32546": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "T"
		},
		"32547": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"32548": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"32549": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.set"
		},
		"32550": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"32551": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "data"
		},
		"32552": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ttl"
		},
		"32553": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"32554": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "ICacheService.invalidate"
		},
		"32555": {
			"sourceFileName": "../../../../packages/core/types/src/cache/service.ts",
			"qualifiedName": "key"
		},
		"32556": {
			"sourceFileName": "../../../../packages/core/types/src/common/index.ts",
			"qualifiedName": ""
		},
		"32557": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "Prettify"
		},
		"32558": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"32559": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"32560": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "WithRequiredProperty"
		},
		"32561": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "T"
		},
		"32562": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "K"
		},
		"32566": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity"
		},
		"32567": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"32568": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"32569": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"32570": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity"
		},
		"32571": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SoftDeletableEntity.deleted_at"
		},
		"32572": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.id"
		},
		"32573": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.created_at"
		},
		"32574": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "BaseEntity.updated_at"
		},
		"32577": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"32578": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"32579": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"32580": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"32581": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"32582": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"32583": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"32584": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"32586": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"32587": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"32588": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"32589": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"32625": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RequestQueryFields"
		},
		"32626": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.expand"
		},
		"32627": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.fields"
		},
		"32628": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.offset"
		},
		"32629": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.limit"
		},
		"32630": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.order"
		},
		"32631": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "EmptyQueryParams"
		},
		"32632": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RepositoryTransformOptions"
		},
		"32633": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator"
		},
		"32634": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lt"
		},
		"32635": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gt"
		},
		"32636": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.gte"
		},
		"32637": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "DateComparisonOperator.lte"
		},
		"32638": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"32639": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"32640": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"32641": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"32642": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"32643": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"32644": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"32645": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"32646": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"32647": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"32648": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"32649": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"32650": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"32653": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "SnakeCase"
		},
		"32654": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"32655": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "KebabCase"
		},
		"32656": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "S"
		},
		"32657": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "MetadataType"
		},
		"32658": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "RawRounding"
		},
		"32659": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"32660": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.value"
		},
		"32661": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.precision"
		},
		"32662": {
			"sourceFileName": "../../../../packages/core/types/src/common/rule.ts",
			"qualifiedName": "RuleOperatorType"
		},
		"32663": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkMethodRequest"
		},
		"32664": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"32665": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"32666": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"32667": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "LinkWorkflowInput"
		},
		"32668": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"32669": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"32670": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"32671": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"32672": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodRequest"
		},
		"32673": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"32674": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.create"
		},
		"32675": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.update"
		},
		"32676": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.delete"
		},
		"32677": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"32678": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"32679": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"32680": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchMethodResponse"
		},
		"32681": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"32682": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.created"
		},
		"32683": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.updated"
		},
		"32684": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"32685": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type"
		},
		"32686": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.ids"
		},
		"32687": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.object"
		},
		"32688": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.deleted"
		},
		"32689": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"32690": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowInput"
		},
		"32691": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TCreate"
		},
		"32692": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TUpdate"
		},
		"32693": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "TDelete"
		},
		"32694": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "BatchWorkflowOutput"
		},
		"32695": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "T"
		},
		"32696": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "AdminOptions"
		},
		"32697": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.disable"
		},
		"32698": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.path"
		},
		"32699": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.outDir"
		},
		"32700": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.backendUrl"
		},
		"32701": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.vite"
		},
		"32702": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32703": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32704": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "config"
		},
		"32705": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "HttpCompressionOptions"
		},
		"32706": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.enabled"
		},
		"32707": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.level"
		},
		"32708": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.memLevel"
		},
		"32709": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.threshold"
		},
		"32710": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ProjectConfigOptions"
		},
		"32711": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseName"
		},
		"32712": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseUrl"
		},
		"32713": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseSchema"
		},
		"32714": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseLogging"
		},
		"32716": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.databaseDriverOptions"
		},
		"32717": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32718": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.connection"
		},
		"32719": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32720": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ssl"
		},
		"32721": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32722": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rejectUnauthorized"
		},
		"32723": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisUrl"
		},
		"32724": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisPrefix"
		},
		"32725": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.redisOptions"
		},
		"32726": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.sessionOptions"
		},
		"32728": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jobsBatchSize"
		},
		"32729": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.workerMode"
		},
		"32730": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.http"
		},
		"32731": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32732": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtSecret"
		},
		"32733": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.jwtExpiresIn"
		},
		"32734": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.cookieSecret"
		},
		"32735": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authCors"
		},
		"32736": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.compression"
		},
		"32737": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.storeCors"
		},
		"32738": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.adminCors"
		},
		"32739": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.authMethodsPerActor"
		},
		"32740": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "ConfigModule"
		},
		"32741": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.projectConfig"
		},
		"32742": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.admin"
		},
		"32747": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.modules"
		},
		"32748": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.featureFlags"
		},
		"32749": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "PluginDetails"
		},
		"32750": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type"
		},
		"32751": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resolve"
		},
		"32752": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"32753": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.id"
		},
		"32754": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.options"
		},
		"32755": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.version"
		},
		"32756": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "ExecArgs"
		},
		"32757": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type"
		},
		"32758": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.container"
		},
		"32759": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-cli.ts",
			"qualifiedName": "__type.args"
		},
		"32760": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ModuleImplementations"
		},
		"32761": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "MedusaContainer"
		},
		"32762": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"32763": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"32764": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"32765": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "K"
		},
		"32766": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"32767": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"32768": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"32769": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"32770": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"32771": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "resolveOptions"
		},
		"32781": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "Cradle"
		},
		"32782": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "ContainerLike"
		},
		"32783": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type"
		},
		"32784": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"32785": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "__type.resolve"
		},
		"32786": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "T"
		},
		"32787": {
			"sourceFileName": "../../../../packages/core/types/src/common/medusa-container.ts",
			"qualifiedName": "key"
		},
		"32788": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice"
		},
		"32789": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "WithCalculatedPrice.calculated_price"
		},
		"32790": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type"
		},
		"32791": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.calculated_amount"
		},
		"32792": {
			"sourceFileName": "../../../../packages/core/types/src/common/with-calculated.ts",
			"qualifiedName": "__type.is_calculated_price_tax_inclusive"
		},
		"32793": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCase"
		},
		"32794": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"32795": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": ""
		},
		"32796": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"32797": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32798": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"32800": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32801": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"32802": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"32803": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32804": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"32805": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"32806": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"32807": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"32808": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"32809": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"32810": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"32811": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"32812": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"32813": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"32814": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"32815": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"32816": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"32817": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"32818": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"32819": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"32820": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"32821": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"32822": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"32823": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"32824": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"32825": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"32826": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"32827": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"32828": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery"
		},
		"32829": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.populate"
		},
		"32830": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.orderBy"
		},
		"32831": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.limit"
		},
		"32832": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.offset"
		},
		"32833": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.fields"
		},
		"32834": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.groupBy"
		},
		"32835": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.filters"
		},
		"32836": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.T"
		},
		"32837": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "OptionsQuery.P"
		},
		"32838": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "FindOptions"
		},
		"32839": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.where"
		},
		"32840": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32841": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"32843": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32844": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"32846": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.options"
		},
		"32847": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"32848": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "UpsertWithReplaceConfig"
		},
		"32849": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "__type.relations"
		},
		"32850": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "T"
		},
		"32851": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "PerformedActions"
		},
		"32852": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32853": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.created"
		},
		"32854": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.updated"
		},
		"32855": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.deleted"
		},
		"32856": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService"
		},
		"32857": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"32858": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.find"
		},
		"32859": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32860": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32861": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"32862": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.findAndCount"
		},
		"32863": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32864": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32865": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"32866": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.create"
		},
		"32867": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32868": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32869": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"32870": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.update"
		},
		"32871": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32872": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32873": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entity"
		},
		"32874": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.update"
		},
		"32875": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32876": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"32877": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.delete"
		},
		"32878": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrPKs"
		},
		"32879": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32880": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"32882": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32883": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"32885": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32886": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"32887": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.softDelete"
		},
		"32888": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"32889": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32890": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32891": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32892": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"32893": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.restore"
		},
		"32894": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"32895": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"32896": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32897": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"32898": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsert"
		},
		"32899": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32900": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32901": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"32902": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.upsertWithReplace"
		},
		"32903": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32904": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "config"
		},
		"32905": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32906": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32907": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.entities"
		},
		"32908": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"32909": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"32910": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"32911": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32912": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"32913": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32914": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32915": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"32916": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32917": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32918": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"32919": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"32920": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"32921": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"32922": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"32923": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32924": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"32925": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"32926": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32927": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"32928": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"32929": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"32930": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32931": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32932": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RepositoryService.T"
		},
		"32933": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService"
		},
		"32934": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"32935": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.find"
		},
		"32936": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32937": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"32938": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32939": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"32940": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.findAndCount"
		},
		"32941": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32942": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transformOptions"
		},
		"32943": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32944": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"32945": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.create"
		},
		"32946": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32947": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32948": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"32949": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.delete"
		},
		"32950": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "ids"
		},
		"32951": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32952": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"32953": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"32954": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32955": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"32956": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32957": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32958": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"32959": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"32960": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"32961": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"32962": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"32963": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"32964": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"32965": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"32966": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32967": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"32968": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"32969": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"32970": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"32971": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"32972": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"32973": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"32974": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"32975": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TreeRepositoryService.T"
		},
		"32976": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"32977": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"32978": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32979": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"32980": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"32981": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"32982": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "ModelDateColumns"
		},
		"32983": {
			"sourceFileName": "../../../../packages/core/types/src/dal/entity.ts",
			"qualifiedName": "SoftDeletableModelDateColumns"
		},
		"32984": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/index.ts",
			"qualifiedName": ""
		},
		"32985": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Subscriber"
		},
		"32986": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"32987": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"32988": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "data"
		},
		"32989": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"32990": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberContext"
		},
		"32991": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"32992": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"32993": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "SubscriberDescriptor"
		},
		"32994": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"32995": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.id"
		},
		"32996": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.subscriber"
		},
		"32997": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"32998": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"32999": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"33000": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"33001": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33002": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"33003": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"33004": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"33005": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"33006": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"33007": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33008": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"33009": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"33010": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"33011": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"33012": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"33013": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"33014": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"33015": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"33016": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"33017": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"33018": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"33019": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"33020": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService"
		},
		"33021": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"33022": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.subscribe"
		},
		"33023": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"33024": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"33025": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"33026": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"33027": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.unsubscribe"
		},
		"33028": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "eventName"
		},
		"33029": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "subscriber"
		},
		"33030": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "context"
		},
		"33031": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"33032": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "IEventBusService.emit"
		},
		"33033": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "T"
		},
		"33034": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus.ts",
			"qualifiedName": "data"
		},
		"33035": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"33036": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"33037": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"33038": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService"
		},
		"33039": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"33040": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.emit"
		},
		"33041": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "T"
		},
		"33042": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "data"
		},
		"33043": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "options"
		},
		"33044": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"33045": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.subscribe"
		},
		"33046": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"33047": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"33048": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"33049": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"33050": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.unsubscribe"
		},
		"33051": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventName"
		},
		"33052": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "subscriber"
		},
		"33053": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "context"
		},
		"33054": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"33055": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.releaseGroupedEvents"
		},
		"33056": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"33057": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"33058": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "IEventBusModuleService.clearGroupedEvents"
		},
		"33059": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/event-bus-module.ts",
			"qualifiedName": "eventGroupId"
		},
		"33060": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/index.ts",
			"qualifiedName": ""
		},
		"33061": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter"
		},
		"33062": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.isFeatureEnabled"
		},
		"33063": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"33064": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"33065": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "key"
		},
		"33066": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "IFlagRouter.listFlags"
		},
		"33067": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"33068": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"33069": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FeatureFlagsResponse"
		},
		"33070": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"33071": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"33072": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.value"
		},
		"33073": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "FlagSettings"
		},
		"33074": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type"
		},
		"33075": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.key"
		},
		"33076": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.description"
		},
		"33077": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.env_key"
		},
		"33078": {
			"sourceFileName": "../../../../packages/core/types/src/feature-flag/common.ts",
			"qualifiedName": "__type.default_val"
		},
		"33079": {
			"sourceFileName": "../../../../packages/core/types/src/file/index.ts",
			"qualifiedName": ""
		},
		"33080": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO"
		},
		"33081": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.id"
		},
		"33082": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FileDTO.url"
		},
		"33083": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps"
		},
		"33084": {
			"sourceFileName": "../../../../packages/core/types/src/file/common.ts",
			"qualifiedName": "FilterableFileProps.id"
		},
		"33085": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO"
		},
		"33086": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.filename"
		},
		"33087": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.mimeType"
		},
		"33088": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.content"
		},
		"33089": {
			"sourceFileName": "../../../../packages/core/types/src/file/mutations.ts",
			"qualifiedName": "CreateFileDTO.access"
		},
		"33090": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService"
		},
		"33091": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"33092": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"33093": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"33094": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33095": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.createFiles"
		},
		"33096": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "data"
		},
		"33097": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33098": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"33099": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"33100": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "ids"
		},
		"33101": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33102": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.deleteFiles"
		},
		"33103": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"33104": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33105": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"33106": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.retrieveFile"
		},
		"33107": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "id"
		},
		"33108": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"33109": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33110": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"33111": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listFiles"
		},
		"33112": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"33113": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"33114": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33115": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"33116": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "IFileModuleService.listAndCountFiles"
		},
		"33117": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "filters"
		},
		"33118": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "config"
		},
		"33119": {
			"sourceFileName": "../../../../packages/core/types/src/file/service.ts",
			"qualifiedName": "sharedContext"
		},
		"33133": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderFileResultDTO"
		},
		"33134": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.url"
		},
		"33135": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.key"
		},
		"33136": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderGetFileDTO"
		},
		"33137": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"33138": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderDeleteFileDTO"
		},
		"33139": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.fileKey"
		},
		"33140": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "ProviderUploadFileDTO"
		},
		"33141": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.filename"
		},
		"33142": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.mimeType"
		},
		"33143": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.content"
		},
		"33144": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "__type.access"
		},
		"33145": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider"
		},
		"33146": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"33147": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.upload"
		},
		"33148": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "file"
		},
		"33149": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"33150": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.delete"
		},
		"33151": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"33152": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"33153": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "IFileProvider.getPresignedDownloadUrl"
		},
		"33154": {
			"sourceFileName": "../../../../packages/core/types/src/file/provider.ts",
			"qualifiedName": "fileData"
		},
		"33155": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions"
		},
		"33156": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.file_url"
		},
		"33157": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.access_key_id"
		},
		"33158": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.secret_access_key"
		},
		"33159": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.region"
		},
		"33160": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.bucket"
		},
		"33161": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.prefix"
		},
		"33162": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.endpoint"
		},
		"33163": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.cache_control"
		},
		"33164": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.download_file_duration"
		},
		"33165": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/s3.ts",
			"qualifiedName": "S3FileServiceOptions.additional_client_config"
		},
		"33166": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions"
		},
		"33167": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.upload_dir"
		},
		"33168": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.private_upload_dir"
		},
		"33169": {
			"sourceFileName": "../../../../packages/core/types/src/file/providers/local.ts",
			"qualifiedName": "LocalFileServiceOptions.backend_url"
		},
		"33170": {
			"sourceFileName": "../../../../packages/core/types/src/http/index.ts",
			"qualifiedName": ""
		},
		"33171": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign"
		},
		"33172": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.name"
		},
		"33173": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.description"
		},
		"33174": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.currency"
		},
		"33175": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.campaign_identifier"
		},
		"33176": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.starts_at"
		},
		"33177": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.ends_at"
		},
		"33178": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminCreateCampaign.budget"
		},
		"33179": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33180": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"33181": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"33182": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"33183": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign"
		},
		"33184": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.name"
		},
		"33185": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.description"
		},
		"33186": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.currency"
		},
		"33187": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.campaign_identifier"
		},
		"33188": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.starts_at"
		},
		"33189": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.ends_at"
		},
		"33190": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCampaign.budget"
		},
		"33191": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33192": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.type"
		},
		"33193": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.currency_code"
		},
		"33194": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/payloads.ts",
			"qualifiedName": "__type.limit"
		},
		"33195": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse"
		},
		"33196": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.id"
		},
		"33197": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.name"
		},
		"33198": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.description"
		},
		"33199": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.currency"
		},
		"33200": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.campaign_identifier"
		},
		"33201": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.starts_at"
		},
		"33202": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.ends_at"
		},
		"33203": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "CampaignResponse.budget"
		},
		"33204": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33205": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.id"
		},
		"33206": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.type"
		},
		"33207": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.currency_code"
		},
		"33208": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.limit"
		},
		"33209": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.used"
		},
		"33210": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignListResponse"
		},
		"33211": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33212": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "__type.campaigns"
		},
		"33213": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse"
		},
		"33214": {
			"sourceFileName": "../../../../packages/core/types/src/http/campaign/admin/responses.ts",
			"qualifiedName": "AdminCampaignResponse.campaign"
		},
		"33215": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/entities.ts",
			"qualifiedName": "AdminClaim"
		},
		"33216": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"33217": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"33218": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"33219": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"33220": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"33221": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"33222": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"33223": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim"
		},
		"33224": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.type"
		},
		"33225": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.order_id"
		},
		"33226": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.description"
		},
		"33227": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.internal_note"
		},
		"33228": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCreateClaim.metadata"
		},
		"33229": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimItems"
		},
		"33230": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"33231": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33232": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"33233": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"33234": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"33235": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"33236": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"33237": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimItem"
		},
		"33238": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"33239": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"33240": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"33241": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"33242": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimInboundItems"
		},
		"33243": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"33244": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33245": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"33246": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"33247": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"33248": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"33249": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"33250": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimInboundItem"
		},
		"33251": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"33252": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"33253": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"33254": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"33255": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminAddClaimOutboundItems"
		},
		"33256": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"33257": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33258": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"33259": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"33260": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"33261": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"33262": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"33263": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminUpdateClaimOutboundItem"
		},
		"33264": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"33265": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"33266": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"33267": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"33268": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddInboundShipping"
		},
		"33269": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"33270": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_price"
		},
		"33271": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"33272": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"33273": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"33274": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateInboundShipping"
		},
		"33275": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_price"
		},
		"33276": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"33277": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"33278": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddOutboundShipping"
		},
		"33279": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"33280": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_price"
		},
		"33281": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"33282": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"33283": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"33284": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateOutboundShipping"
		},
		"33285": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_price"
		},
		"33286": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"33287": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"33288": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminRequestClaim"
		},
		"33289": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim"
		},
		"33290": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminCancelClaim.no_notification"
		},
		"33291": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams"
		},
		"33292": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimListParams.deleted_at"
		},
		"33293": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"33294": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"33295": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"33296": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"33297": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"33298": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"33299": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33300": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33301": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33302": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33303": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33304": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33305": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams"
		},
		"33306": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.id"
		},
		"33307": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.status"
		},
		"33308": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.created_at"
		},
		"33309": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.updated_at"
		},
		"33310": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/queries.ts",
			"qualifiedName": "AdminClaimParams.deleted_at"
		},
		"33311": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33312": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse"
		},
		"33313": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimResponse.claim"
		},
		"33314": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimListResponse"
		},
		"33315": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33316": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"33317": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33318": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33319": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33320": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "__type.claims"
		},
		"33321": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse"
		},
		"33322": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse.order"
		},
		"33323": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimOrderResponse.claim"
		},
		"33324": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse"
		},
		"33325": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.order_preview"
		},
		"33326": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.claim"
		},
		"33327": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse"
		},
		"33328": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse.order_preview"
		},
		"33329": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimReturnPreviewResponse.return"
		},
		"33330": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimRequestResponse"
		},
		"33331": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimRequestResponse.return"
		},
		"33332": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.order_preview"
		},
		"33333": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimPreviewResponse.claim"
		},
		"33334": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/responses.ts",
			"qualifiedName": "AdminClaimDeleteResponse"
		},
		"33335": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33336": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33337": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33338": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33339": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33340": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/entities.ts",
			"qualifiedName": "AdminCollection"
		},
		"33341": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"33342": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"33343": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"33344": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"33345": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"33346": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"33347": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"33348": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"33349": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection"
		},
		"33350": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.title"
		},
		"33351": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.handle"
		},
		"33352": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminCreateCollection.metadata"
		},
		"33353": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection"
		},
		"33354": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.title"
		},
		"33355": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.handle"
		},
		"33356": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollection.metadata"
		},
		"33357": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts"
		},
		"33358": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.add"
		},
		"33359": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/payloads.ts",
			"qualifiedName": "AdminUpdateCollectionProducts.remove"
		},
		"33360": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams"
		},
		"33361": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionListParams.deleted_at"
		},
		"33362": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"33363": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"33364": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"33365": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"33366": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"33367": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"33368": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33369": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33370": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33371": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33372": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33373": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33374": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/queries.ts",
			"qualifiedName": "AdminCollectionParams"
		},
		"33375": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33376": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse"
		},
		"33377": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionResponse.collection"
		},
		"33378": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionListResponse"
		},
		"33379": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33380": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"33381": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33382": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33383": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33384": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "__type.collections"
		},
		"33385": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/admin/responses.ts",
			"qualifiedName": "AdminCollectionDeleteResponse"
		},
		"33386": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33387": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33388": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33389": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33390": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33391": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams"
		},
		"33392": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33393": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams"
		},
		"33394": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33395": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33396": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33397": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33398": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink"
		},
		"33399": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.add"
		},
		"33400": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "AdminBatchLink.remove"
		},
		"33401": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "DeleteResponse"
		},
		"33402": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"33403": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33404": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33405": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33406": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33407": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TObject"
		},
		"33408": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "TParent"
		},
		"33409": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"33410": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "PaginatedResponse"
		},
		"33411": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type"
		},
		"33412": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33413": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33414": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33415": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "T"
		},
		"33416": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "AdditionalData"
		},
		"33417": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type"
		},
		"33418": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/additional_data.ts",
			"qualifiedName": "__type.additional_data"
		},
		"33419": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/entities.ts",
			"qualifiedName": "AdminExchange"
		},
		"33420": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_id"
		},
		"33421": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_items"
		},
		"33422": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.additional_items"
		},
		"33423": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.no_notification"
		},
		"33424": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.difference_due"
		},
		"33425": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return"
		},
		"33426": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_id"
		},
		"33427": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeResponse"
		},
		"33428": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeResponse.exchange"
		},
		"33429": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeListResponse"
		},
		"33430": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33431": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "__type.exchanges"
		},
		"33432": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse"
		},
		"33433": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse.order"
		},
		"33434": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeOrderResponse.exchange"
		},
		"33435": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse"
		},
		"33436": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.order_preview"
		},
		"33437": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.exchange"
		},
		"33438": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeRequestResponse"
		},
		"33439": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeRequestResponse.return"
		},
		"33440": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.order_preview"
		},
		"33441": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangePreviewResponse.exchange"
		},
		"33442": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse"
		},
		"33443": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse.order_preview"
		},
		"33444": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/admin/responses.ts",
			"qualifiedName": "AdminExchangeReturnResponse.return"
		},
		"33445": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin.ts",
			"qualifiedName": "AdminFile"
		},
		"33446": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"33447": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"33448": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/admin.ts",
			"qualifiedName": "AdminUploadFile"
		},
		"33449": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/store.ts",
			"qualifiedName": "StoreFile"
		},
		"33450": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"33451": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"33452": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentProvider"
		},
		"33453": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.id"
		},
		"33454": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.is_enabled"
		},
		"33455": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams"
		},
		"33456": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.id"
		},
		"33457": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.q"
		},
		"33458": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.is_enabled"
		},
		"33459": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/queries.ts",
			"qualifiedName": "AdminFulfillmentProviderListParams.stock_location_id"
		},
		"33460": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33461": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33462": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33463": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33464": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentProviderListResponse"
		},
		"33465": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33466": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"33467": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33468": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33469": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33470": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/admin/responses.ts",
			"qualifiedName": "__type.fulfillment_providers"
		},
		"33471": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone"
		},
		"33472": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.id"
		},
		"33473": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.type"
		},
		"33474": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.country_code"
		},
		"33475": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.province_code"
		},
		"33476": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.city"
		},
		"33477": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.postal_expression"
		},
		"33478": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.created_at"
		},
		"33479": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.updated_at"
		},
		"33480": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminGeoZone.deleted_at"
		},
		"33481": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone"
		},
		"33482": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.id"
		},
		"33483": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.name"
		},
		"33484": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set_id"
		},
		"33485": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.fulfillment_set"
		},
		"33486": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.geo_zones"
		},
		"33487": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.shipping_options"
		},
		"33488": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.created_at"
		},
		"33489": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.updated_at"
		},
		"33490": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminServiceZone.deleted_at"
		},
		"33491": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet"
		},
		"33492": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.id"
		},
		"33493": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.name"
		},
		"33494": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.type"
		},
		"33495": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.location"
		},
		"33496": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.service_zones"
		},
		"33497": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.created_at"
		},
		"33498": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.updated_at"
		},
		"33499": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/entities.ts",
			"qualifiedName": "AdminFulfillmentSet.deleted_at"
		},
		"33500": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone"
		},
		"33501": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.name"
		},
		"33502": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminCreateFulfillmentSetServiceZone.geo_zones"
		},
		"33503": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone"
		},
		"33504": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.name"
		},
		"33505": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZone.geo_zones"
		},
		"33506": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse"
		},
		"33507": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneResponse.service_zone"
		},
		"33508": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminServiceZoneDeleteResponse"
		},
		"33509": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33510": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33511": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33512": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33513": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse"
		},
		"33514": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetResponse.fulfillment_set"
		},
		"33515": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/responses.ts",
			"qualifiedName": "AdminFulfillmentSetDeleteResponse"
		},
		"33516": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33517": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33518": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33519": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33520": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33521": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem"
		},
		"33522": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.id"
		},
		"33523": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.sku"
		},
		"33524": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.origin_country"
		},
		"33525": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.hs_code"
		},
		"33526": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.requires_shipping"
		},
		"33527": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.mid_code"
		},
		"33528": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.material"
		},
		"33529": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.weight"
		},
		"33530": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.length"
		},
		"33531": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.height"
		},
		"33532": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.width"
		},
		"33533": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.title"
		},
		"33534": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.description"
		},
		"33535": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.thumbnail"
		},
		"33536": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/entities.ts",
			"qualifiedName": "AdminInventoryItem.metadata"
		},
		"33537": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem"
		},
		"33538": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"33539": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"33540": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"33541": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"33542": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"33543": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"33544": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"33545": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"33546": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"33547": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"33548": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"33549": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"33550": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"33551": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"33552": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryItem"
		},
		"33553": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.sku"
		},
		"33554": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.hs_code"
		},
		"33555": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.weight"
		},
		"33556": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.length"
		},
		"33557": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.height"
		},
		"33558": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.width"
		},
		"33559": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.origin_country"
		},
		"33560": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.mid_code"
		},
		"33561": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.material"
		},
		"33562": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.title"
		},
		"33563": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.description"
		},
		"33564": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.requires_shipping"
		},
		"33565": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.thumbnail"
		},
		"33566": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryItem.metadata"
		},
		"33567": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams"
		},
		"33568": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.id"
		},
		"33569": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.q"
		},
		"33570": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.sku"
		},
		"33571": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.origin_country"
		},
		"33572": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.mid_code"
		},
		"33573": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.hs_code"
		},
		"33574": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.material"
		},
		"33575": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.requires_shipping"
		},
		"33576": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.weight"
		},
		"33577": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.length"
		},
		"33578": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.height"
		},
		"33579": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.width"
		},
		"33580": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/queries.ts",
			"qualifiedName": "AdminInventoryItemParams.location_levels"
		},
		"33581": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33582": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33583": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33584": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33585": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse"
		},
		"33586": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemResponse.inventory_item"
		},
		"33587": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemListResponse"
		},
		"33588": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33589": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "__type.inventory_items"
		},
		"33590": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory/admin/responses.ts",
			"qualifiedName": "AdminInventoryItemDeleteResponse"
		},
		"33591": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel"
		},
		"33592": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.id"
		},
		"33593": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.inventory_item_id"
		},
		"33594": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.location_id"
		},
		"33595": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.stocked_quantity"
		},
		"33596": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.reserved_quantity"
		},
		"33597": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.available_quantity"
		},
		"33598": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.incoming_quantity"
		},
		"33599": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/entities.ts",
			"qualifiedName": "InventoryLevel.metadata"
		},
		"33600": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel"
		},
		"33601": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.stocked_quantity"
		},
		"33602": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminUpdateInventoryLevel.incoming_quantity"
		},
		"33603": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel"
		},
		"33604": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.location_id"
		},
		"33605": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.stocked_quantity"
		},
		"33606": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminCreateInventoryLevel.incoming_quantity"
		},
		"33607": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation"
		},
		"33608": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.delete"
		},
		"33609": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.update"
		},
		"33610": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/payloads.ts",
			"qualifiedName": "AdminBatchUpdateInventoryLevelLocation.create"
		},
		"33611": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters"
		},
		"33612": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/queries.ts",
			"qualifiedName": "AdminInventoryLevelFilters.location_id"
		},
		"33613": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33614": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33615": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33616": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33617": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse"
		},
		"33618": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelResponse.inventory_level"
		},
		"33619": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "AdminInventoryLevelListResponse"
		},
		"33620": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33621": {
			"sourceFileName": "../../../../packages/core/types/src/http/inventory-level/admin/responses.ts",
			"qualifiedName": "__type.inventory_levels"
		},
		"33622": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite"
		},
		"33623": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.id"
		},
		"33624": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.email"
		},
		"33625": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.accepted"
		},
		"33626": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.token"
		},
		"33627": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.expires_at"
		},
		"33628": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.metadata"
		},
		"33629": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.created_at"
		},
		"33630": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/entities.ts",
			"qualifiedName": "AdminInvite.updated_at"
		},
		"33631": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "AdminAcceptInvite"
		},
		"33632": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33633": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.first_name"
		},
		"33634": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.last_name"
		},
		"33635": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "AdminCreateInvite"
		},
		"33636": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"33637": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.email"
		},
		"33638": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"33639": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteResponse"
		},
		"33640": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteResponse.invite"
		},
		"33641": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminInviteListResponse"
		},
		"33642": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33643": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.invites"
		},
		"33644": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "AdminAcceptInviteResponse"
		},
		"33645": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33646": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.user"
		},
		"33647": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33648": {
			"sourceFileName": "../../../../packages/core/types/src/http/invite/admin/responses.ts",
			"qualifiedName": "__type.message"
		},
		"33649": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification"
		},
		"33650": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.id"
		},
		"33651": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.to"
		},
		"33652": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.channel"
		},
		"33653": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.template"
		},
		"33654": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.data"
		},
		"33655": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.trigger_type"
		},
		"33656": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_id"
		},
		"33657": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.resource_type"
		},
		"33658": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.receiver_id"
		},
		"33659": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.original_notification_id"
		},
		"33660": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.external_id"
		},
		"33661": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.provider_id"
		},
		"33662": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/entities.ts",
			"qualifiedName": "AdminNotification.created_at"
		},
		"33663": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams"
		},
		"33664": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.q"
		},
		"33665": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.id"
		},
		"33666": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationListParams.channel"
		},
		"33667": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33668": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33669": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33670": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33671": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33672": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33673": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/queries.ts",
			"qualifiedName": "AdminNotificationParams"
		},
		"33674": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33675": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse"
		},
		"33676": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationResponse.notification"
		},
		"33677": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "AdminNotificationListResponse"
		},
		"33678": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33679": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"33680": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33681": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33682": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33683": {
			"sourceFileName": "../../../../packages/core/types/src/http/notification/admin/responses.ts",
			"qualifiedName": "__type.notifications"
		},
		"33684": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice"
		},
		"33685": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.variant_id"
		},
		"33686": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceListPrice.rules"
		},
		"33687": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList"
		},
		"33688": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.id"
		},
		"33689": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.title"
		},
		"33690": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.description"
		},
		"33691": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.rules"
		},
		"33692": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.starts_at"
		},
		"33693": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.ends_at"
		},
		"33694": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.status"
		},
		"33695": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.type"
		},
		"33696": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.prices"
		},
		"33697": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.created_at"
		},
		"33698": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.updated_at"
		},
		"33699": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/entities.ts",
			"qualifiedName": "AdminPriceList.deleted_at"
		},
		"33700": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice"
		},
		"33701": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.currency_code"
		},
		"33702": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.amount"
		},
		"33703": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.variant_id"
		},
		"33704": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.min_quantity"
		},
		"33705": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.max_quantity"
		},
		"33706": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceListPrice.rules"
		},
		"33707": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList"
		},
		"33708": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.title"
		},
		"33709": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.description"
		},
		"33710": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.starts_at"
		},
		"33711": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.ends_at"
		},
		"33712": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.status"
		},
		"33713": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.type"
		},
		"33714": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.rules"
		},
		"33715": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminCreatePriceList.prices"
		},
		"33716": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice"
		},
		"33717": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.id"
		},
		"33718": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.currency_code"
		},
		"33719": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.amount"
		},
		"33720": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.variant_id"
		},
		"33721": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.min_quantity"
		},
		"33722": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.max_quantity"
		},
		"33723": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceListPrice.rules"
		},
		"33724": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList"
		},
		"33725": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.title"
		},
		"33726": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.description"
		},
		"33727": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.starts_at"
		},
		"33728": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.ends_at"
		},
		"33729": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.status"
		},
		"33730": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.type"
		},
		"33731": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminUpdatePriceList.rules"
		},
		"33732": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice"
		},
		"33733": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.create"
		},
		"33734": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.update"
		},
		"33735": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminBatchPriceListPrice.delete"
		},
		"33736": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts"
		},
		"33737": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/payloads.ts",
			"qualifiedName": "AdminLinkPriceListProducts.remove"
		},
		"33738": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams"
		},
		"33739": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.q"
		},
		"33740": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.id"
		},
		"33741": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.starts_at"
		},
		"33742": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.ends_at"
		},
		"33743": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.status"
		},
		"33744": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListListParams.rules_count"
		},
		"33745": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33746": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33747": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33748": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33749": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33750": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33751": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/queries.ts",
			"qualifiedName": "AdminPriceListParams"
		},
		"33752": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33753": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse"
		},
		"33754": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListResponse.price_list"
		},
		"33755": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListListResponse"
		},
		"33756": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33757": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"33758": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33759": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33760": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33761": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.price_lists"
		},
		"33762": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListDeleteResponse"
		},
		"33763": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33764": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33765": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33766": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33767": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33768": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse"
		},
		"33769": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.created"
		},
		"33770": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.updated"
		},
		"33771": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "AdminPriceListBatchResponse.deleted"
		},
		"33772": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33773": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.ids"
		},
		"33774": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.object"
		},
		"33775": {
			"sourceFileName": "../../../../packages/core/types/src/http/price-list/admin/responses.ts",
			"qualifiedName": "__type.deleted"
		},
		"33776": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory"
		},
		"33777": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.category_children"
		},
		"33778": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.parent_category"
		},
		"33779": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/entities.ts",
			"qualifiedName": "AdminProductCategory.products"
		},
		"33780": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "name"
		},
		"33781": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "id"
		},
		"33782": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "created_at"
		},
		"33783": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "updated_at"
		},
		"33784": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "deleted_at"
		},
		"33785": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "description"
		},
		"33786": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "handle"
		},
		"33787": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "parent_category_id"
		},
		"33788": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_active"
		},
		"33789": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "is_internal"
		},
		"33790": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "rank"
		},
		"33791": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory"
		},
		"33792": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.name"
		},
		"33793": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.description"
		},
		"33794": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.handle"
		},
		"33795": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_internal"
		},
		"33796": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.is_active"
		},
		"33797": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.parent_category_id"
		},
		"33798": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.rank"
		},
		"33799": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductCategory.metadata"
		},
		"33800": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory"
		},
		"33801": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.name"
		},
		"33802": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.description"
		},
		"33803": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.handle"
		},
		"33804": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_internal"
		},
		"33805": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.is_active"
		},
		"33806": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.parent_category_id"
		},
		"33807": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.rank"
		},
		"33808": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategory.metadata"
		},
		"33809": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts"
		},
		"33810": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.add"
		},
		"33811": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductCategoryProducts.remove"
		},
		"33812": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams"
		},
		"33813": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_internal"
		},
		"33814": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryListParams.is_active"
		},
		"33815": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"33816": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"33817": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"33818": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"33819": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"33820": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"33821": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"33822": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"33823": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"33824": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"33825": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"33826": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33827": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33828": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33829": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33830": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33831": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33832": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/queries.ts",
			"qualifiedName": "AdminProductCategoryParams"
		},
		"33833": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"33834": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"33835": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33836": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse"
		},
		"33837": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryResponse.product_category"
		},
		"33838": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryListResponse"
		},
		"33839": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33840": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"33841": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33842": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33843": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33844": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "__type.product_categories"
		},
		"33845": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/admin/responses.ts",
			"qualifiedName": "AdminProductCategoryDeleteResponse"
		},
		"33846": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33847": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33848": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33849": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33850": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33851": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/entities.ts",
			"qualifiedName": "AdminProductTag"
		},
		"33852": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"33853": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"33854": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"33855": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"33856": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"33857": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"33858": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag"
		},
		"33859": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.value"
		},
		"33860": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductTag.metadata"
		},
		"33861": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag"
		},
		"33862": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.value"
		},
		"33863": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductTag.metadata"
		},
		"33864": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams"
		},
		"33865": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagListParams.deleted_at"
		},
		"33866": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"33867": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"33868": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"33869": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"33870": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"33871": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33872": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33873": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33874": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33875": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33876": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33877": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/queries.ts",
			"qualifiedName": "AdminProductTagParams"
		},
		"33878": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33879": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse"
		},
		"33880": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagResponse.product_tag"
		},
		"33881": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagListResponse"
		},
		"33882": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33883": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"33884": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33885": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33886": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33887": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "__type.product_tags"
		},
		"33888": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/admin/responses.ts",
			"qualifiedName": "AdminProductTagDeleteResponse"
		},
		"33889": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33890": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33891": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33892": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33893": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33894": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/entities.ts",
			"qualifiedName": "AdminProductType"
		},
		"33895": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"33896": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"33897": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"33898": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"33899": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"33900": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"33901": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType"
		},
		"33902": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.value"
		},
		"33903": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminCreateProductType.metadata"
		},
		"33904": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType"
		},
		"33905": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.value"
		},
		"33906": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/payloads.ts",
			"qualifiedName": "AdminUpdateProductType.metadata"
		},
		"33907": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams"
		},
		"33908": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.q"
		},
		"33909": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.id"
		},
		"33910": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.value"
		},
		"33911": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.created_at"
		},
		"33912": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.updated_at"
		},
		"33913": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeListParams.deleted_at"
		},
		"33914": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"33915": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"33916": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"33917": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33918": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"33919": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"33920": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/queries.ts",
			"qualifiedName": "AdminProductTypeParams"
		},
		"33921": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"33922": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse"
		},
		"33923": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeResponse.product_type"
		},
		"33924": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeListResponse"
		},
		"33925": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"33926": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"33927": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"33928": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"33929": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"33930": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "__type.product_types"
		},
		"33931": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/admin/responses.ts",
			"qualifiedName": "AdminProductTypeDeleteResponse"
		},
		"33932": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"33933": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"33934": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"33935": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"33936": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"33937": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationResponse"
		},
		"33938": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationResponse.reservation"
		},
		"33939": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "AdminReservationListResponse"
		},
		"33940": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "__type"
		},
		"33941": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "__type.reservations"
		},
		"33942": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem"
		},
		"33943": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.id"
		},
		"33944": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.quantity"
		},
		"33945": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.received_quantity"
		},
		"33946": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.reason_id"
		},
		"33947": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.note"
		},
		"33948": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.item_id"
		},
		"33949": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.return_id"
		},
		"33950": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminBaseReturnItem.metadata"
		},
		"33951": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn"
		},
		"33952": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.id"
		},
		"33953": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.order_id"
		},
		"33954": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.status"
		},
		"33955": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.exchange_id"
		},
		"33956": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.location_id"
		},
		"33957": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.claim_id"
		},
		"33958": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.order_version"
		},
		"33959": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.display_id"
		},
		"33960": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.no_notification"
		},
		"33961": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.refund_amount"
		},
		"33962": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturn.items"
		},
		"33963": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnResponse"
		},
		"33964": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnResponse.return"
		},
		"33965": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnsResponse"
		},
		"33966": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnsResponse.returns"
		},
		"33967": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest"
		},
		"33968": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.order_id"
		},
		"33969": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.location_id"
		},
		"33970": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.description"
		},
		"33971": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.internal_note"
		},
		"33972": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.no_notification"
		},
		"33973": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReturnRequest.metadata"
		},
		"33974": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem"
		},
		"33975": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.id"
		},
		"33976": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.quantity"
		},
		"33977": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.description"
		},
		"33978": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.internal_note"
		},
		"33979": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItem.metadata"
		},
		"33980": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItems"
		},
		"33981": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnItems.items"
		},
		"33982": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems"
		},
		"33983": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.quantity"
		},
		"33984": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.internal_note"
		},
		"33985": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnItems.reason_id"
		},
		"33986": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping"
		},
		"33987": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.shipping_option_id"
		},
		"33988": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.custom_price"
		},
		"33989": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.description"
		},
		"33990": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.internal_note"
		},
		"33991": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminAddReturnShipping.metadata"
		},
		"33992": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping"
		},
		"33993": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.custom_price"
		},
		"33994": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.internal_note"
		},
		"33995": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnShipping.metadata"
		},
		"33996": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReturnRequest"
		},
		"33997": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReturnRequest.no_notification"
		},
		"33998": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest"
		},
		"33999": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.location_id"
		},
		"34000": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.no_notification"
		},
		"34001": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReturnRequest.metadata"
		},
		"34002": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReceiveReturn"
		},
		"34003": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminConfirmReceiveReturn.no_notification"
		},
		"34004": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn"
		},
		"34005": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.internal_note"
		},
		"34006": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.description"
		},
		"34007": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminInitiateReceiveReturn.metadata"
		},
		"34008": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReceiveItems"
		},
		"34009": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReceiveItems.items"
		},
		"34010": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type"
		},
		"34011": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.id"
		},
		"34012": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.quantity"
		},
		"34013": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.internal_note"
		},
		"34014": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminDismissItems"
		},
		"34015": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminDismissItems.items"
		},
		"34016": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type"
		},
		"34017": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.id"
		},
		"34018": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.quantity"
		},
		"34019": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "__type.internal_note"
		},
		"34020": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems"
		},
		"34021": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.quantity"
		},
		"34022": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.internal_note"
		},
		"34023": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.reason_id"
		},
		"34024": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateReceiveItems.metadata"
		},
		"34025": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems"
		},
		"34026": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.quantity"
		},
		"34027": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.internal_note"
		},
		"34028": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.reason_id"
		},
		"34029": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminUpdateDismissItems.metadata"
		},
		"34030": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters"
		},
		"34031": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.id"
		},
		"34032": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.order_id"
		},
		"34033": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.status"
		},
		"34034": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.created_at"
		},
		"34035": {
			"sourceFileName": "../../../../packages/core/types/src/http/return/admin.ts",
			"qualifiedName": "AdminReturnFilters.updated_at"
		},
		"34036": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34037": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34038": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34039": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34040": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/entities.ts",
			"qualifiedName": "AdminReturnReason"
		},
		"34041": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"34042": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"34043": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"34044": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"34045": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"34046": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"34047": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"34048": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminCreateReturnReason"
		},
		"34049": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminCreateReturnReason.metadata"
		},
		"34050": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "value"
		},
		"34051": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "description"
		},
		"34052": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "label"
		},
		"34053": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnReason"
		},
		"34054": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminUpdateReturnReason.metadata"
		},
		"34055": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "value"
		},
		"34056": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "description"
		},
		"34057": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "label"
		},
		"34058": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonListParams"
		},
		"34059": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonListParams.deleted_at"
		},
		"34060": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.q"
		},
		"34061": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.id"
		},
		"34062": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.value"
		},
		"34063": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.label"
		},
		"34064": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.description"
		},
		"34065": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.parent_return_reason_id"
		},
		"34066": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.created_at"
		},
		"34067": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.updated_at"
		},
		"34068": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34069": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34070": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34071": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34072": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"34073": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"34074": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/queries.ts",
			"qualifiedName": "AdminReturnReasonParams"
		},
		"34075": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34076": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonResponse"
		},
		"34077": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonResponse.return_reason"
		},
		"34078": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonListResponse"
		},
		"34079": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34080": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"34081": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"34082": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"34083": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"34084": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "__type.return_reasons"
		},
		"34085": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/responses.ts",
			"qualifiedName": "AdminReturnReasonDeleteResponse"
		},
		"34086": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"34087": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"34088": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"34089": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"34090": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"34091": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType"
		},
		"34092": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.id"
		},
		"34093": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.label"
		},
		"34094": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.description"
		},
		"34095": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.code"
		},
		"34096": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.shipping_option_id"
		},
		"34097": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.created_at"
		},
		"34098": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.updated_at"
		},
		"34099": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionType.deleted_at"
		},
		"34100": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule"
		},
		"34101": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.id"
		},
		"34102": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.attribute"
		},
		"34103": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.operator"
		},
		"34104": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.value"
		},
		"34105": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.shipping_option_id"
		},
		"34106": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.created_at"
		},
		"34107": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.updated_at"
		},
		"34108": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionRule.deleted_at"
		},
		"34109": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule"
		},
		"34110": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.id"
		},
		"34111": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPriceRule.value"
		},
		"34112": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice"
		},
		"34113": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.price_rules"
		},
		"34114": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOptionPrice.rules_count"
		},
		"34115": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption"
		},
		"34116": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.id"
		},
		"34117": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.name"
		},
		"34118": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.price_type"
		},
		"34119": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone_id"
		},
		"34120": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.service_zone"
		},
		"34121": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider_id"
		},
		"34122": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.provider"
		},
		"34123": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_option_type_id"
		},
		"34124": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.type"
		},
		"34125": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile_id"
		},
		"34126": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.shipping_profile"
		},
		"34127": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.rules"
		},
		"34128": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.prices"
		},
		"34129": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.data"
		},
		"34130": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.metadata"
		},
		"34131": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.created_at"
		},
		"34132": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.updated_at"
		},
		"34133": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/entities.ts",
			"qualifiedName": "AdminShippingOption.deleted_at"
		},
		"34134": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule"
		},
		"34135": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"34136": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"34137": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"34138": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType"
		},
		"34139": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.label"
		},
		"34140": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.description"
		},
		"34141": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionType.code"
		},
		"34142": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency"
		},
		"34143": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.currency_code"
		},
		"34144": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithCurrency.amount"
		},
		"34145": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion"
		},
		"34146": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.region_id"
		},
		"34147": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionPriceWithRegion.amount"
		},
		"34148": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption"
		},
		"34149": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.name"
		},
		"34150": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.service_zone_id"
		},
		"34151": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.shipping_profile_id"
		},
		"34152": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.data"
		},
		"34153": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.price_type"
		},
		"34154": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.provider_id"
		},
		"34155": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.type"
		},
		"34156": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.prices"
		},
		"34157": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOption.rules"
		},
		"34158": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule"
		},
		"34159": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRule.id"
		},
		"34160": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.operator"
		},
		"34161": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.attribute"
		},
		"34162": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingOptionRule.value"
		},
		"34163": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency"
		},
		"34164": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.id"
		},
		"34165": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.currency_code"
		},
		"34166": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithCurrency.amount"
		},
		"34167": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion"
		},
		"34168": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.id"
		},
		"34169": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.region_id"
		},
		"34170": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionPriceWithRegion.amount"
		},
		"34171": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption"
		},
		"34172": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.name"
		},
		"34173": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.data"
		},
		"34174": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.price_type"
		},
		"34175": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.provider_id"
		},
		"34176": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.shipping_profile_id"
		},
		"34177": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.type"
		},
		"34178": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.prices"
		},
		"34179": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOption.rules"
		},
		"34180": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules"
		},
		"34181": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.create"
		},
		"34182": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.update"
		},
		"34183": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingOptionRules.delete"
		},
		"34184": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams"
		},
		"34185": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.id"
		},
		"34186": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.q"
		},
		"34187": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.service_zone_id"
		},
		"34188": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.stock_location_id"
		},
		"34189": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_profile_id"
		},
		"34190": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.provider_id"
		},
		"34191": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.shipping_option_type_id"
		},
		"34192": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.created_at"
		},
		"34193": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.updated_at"
		},
		"34194": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/queries.ts",
			"qualifiedName": "AdminShippingOptionListParams.deleted_at"
		},
		"34195": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34196": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34197": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34198": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34199": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse"
		},
		"34200": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionResponse.shipping_option"
		},
		"34201": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionListResponse"
		},
		"34202": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34203": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.shipping_options"
		},
		"34204": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminShippingOptionDeleteResponse"
		},
		"34205": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"34206": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"34207": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"34208": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"34209": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"34210": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse"
		},
		"34211": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.created"
		},
		"34212": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.updated"
		},
		"34213": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "AdminUpdateShippingOptionRulesResponse.deleted"
		},
		"34214": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34215": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.ids"
		},
		"34216": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.object"
		},
		"34217": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-option/admin/responses.ts",
			"qualifiedName": "__type.deleted"
		},
		"34218": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile"
		},
		"34219": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.id"
		},
		"34220": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.name"
		},
		"34221": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.type"
		},
		"34222": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.metadata"
		},
		"34223": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.created_at"
		},
		"34224": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.updated_at"
		},
		"34225": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/entities.ts",
			"qualifiedName": "AdminShippingProfile.deleted_at"
		},
		"34226": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile"
		},
		"34227": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.name"
		},
		"34228": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.type"
		},
		"34229": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminCreateShippingProfile.metadata"
		},
		"34230": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile"
		},
		"34231": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.name"
		},
		"34232": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.type"
		},
		"34233": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/payloads.ts",
			"qualifiedName": "AdminUpdateShippingProfile.metadata"
		},
		"34234": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams"
		},
		"34235": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.id"
		},
		"34236": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.q"
		},
		"34237": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.type"
		},
		"34238": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.name"
		},
		"34239": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.created_at"
		},
		"34240": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.updated_at"
		},
		"34241": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.deleted_at"
		},
		"34242": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$and"
		},
		"34243": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/queries.ts",
			"qualifiedName": "AdminShippingProfileListParams.$or"
		},
		"34244": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34245": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34246": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34247": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34248": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse"
		},
		"34249": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileResponse.shipping_profile"
		},
		"34250": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileListResponse"
		},
		"34251": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34252": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "__type.shipping_profiles"
		},
		"34253": {
			"sourceFileName": "../../../../packages/core/types/src/http/shipping-profile/admin/responses.ts",
			"qualifiedName": "AdminShippingProfileDeleteResponse"
		},
		"34254": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"34255": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"34256": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"34257": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"34258": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"34259": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress"
		},
		"34260": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.id"
		},
		"34261": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_1"
		},
		"34262": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.address_2"
		},
		"34263": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.company"
		},
		"34264": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.country_code"
		},
		"34265": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.city"
		},
		"34266": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.phone"
		},
		"34267": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.postal_code"
		},
		"34268": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocationAddress.province"
		},
		"34269": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation"
		},
		"34270": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.id"
		},
		"34271": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.name"
		},
		"34272": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address_id"
		},
		"34273": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.address"
		},
		"34274": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.sales_channels"
		},
		"34275": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_providers"
		},
		"34276": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/entities.ts",
			"qualifiedName": "AdminStockLocation.fulfillment_sets"
		},
		"34277": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation"
		},
		"34278": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.name"
		},
		"34279": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address_id"
		},
		"34280": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.address"
		},
		"34281": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocation.metadata"
		},
		"34282": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation"
		},
		"34283": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.name"
		},
		"34284": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address_id"
		},
		"34285": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.address"
		},
		"34286": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocation.metadata"
		},
		"34287": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels"
		},
		"34288": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.add"
		},
		"34289": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpdateStockLocationSalesChannels.remove"
		},
		"34290": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet"
		},
		"34291": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.name"
		},
		"34292": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminCreateStockLocationFulfillmentSet.type"
		},
		"34293": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams"
		},
		"34294": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.id"
		},
		"34295": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.q"
		},
		"34296": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.name"
		},
		"34297": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.address_id"
		},
		"34298": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.sales_channel_id"
		},
		"34299": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$and"
		},
		"34300": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/queries.ts",
			"qualifiedName": "AdminStockLocationListParams.$or"
		},
		"34301": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34302": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34303": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34304": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34305": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse"
		},
		"34306": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationResponse.stock_location"
		},
		"34307": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationListResponse"
		},
		"34308": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34309": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"34310": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.limit"
		},
		"34311": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.offset"
		},
		"34312": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.count"
		},
		"34313": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "__type.stock_locations"
		},
		"34314": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/responses.ts",
			"qualifiedName": "AdminStockLocationDeleteResponse"
		},
		"34315": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"34316": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"34317": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"34318": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"34319": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"34320": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule"
		},
		"34321": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference"
		},
		"34322": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRateRule.reference_id"
		},
		"34323": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate"
		},
		"34324": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.id"
		},
		"34325": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rate"
		},
		"34326": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.code"
		},
		"34327": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.name"
		},
		"34328": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.metadata"
		},
		"34329": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region_id"
		},
		"34330": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_combinable"
		},
		"34331": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.is_default"
		},
		"34332": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_at"
		},
		"34333": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.updated_at"
		},
		"34334": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.deleted_at"
		},
		"34335": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.created_by"
		},
		"34336": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.tax_region"
		},
		"34337": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/entities.ts",
			"qualifiedName": "AdminTaxRate.rules"
		},
		"34338": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate"
		},
		"34339": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.name"
		},
		"34340": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.tax_region_id"
		},
		"34341": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rate"
		},
		"34342": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.code"
		},
		"34343": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.rules"
		},
		"34344": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_default"
		},
		"34345": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.is_combinable"
		},
		"34346": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRate.metadata"
		},
		"34347": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate"
		},
		"34348": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.name"
		},
		"34349": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rate"
		},
		"34350": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.code"
		},
		"34351": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.rules"
		},
		"34352": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_default"
		},
		"34353": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.is_combinable"
		},
		"34354": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminUpdateTaxRate.metadata"
		},
		"34355": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams"
		},
		"34356": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.id"
		},
		"34357": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.q"
		},
		"34358": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.tax_region_id"
		},
		"34359": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.is_default"
		},
		"34360": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.service_zone_id"
		},
		"34361": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_profile_id"
		},
		"34362": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.provider_id"
		},
		"34363": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.shipping_option_type_id"
		},
		"34364": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.created_at"
		},
		"34365": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.updated_at"
		},
		"34366": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/queries.ts",
			"qualifiedName": "AdminTaxRateListParams.deleted_at"
		},
		"34367": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34368": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34369": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34370": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34371": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse"
		},
		"34372": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateResponse.tax_rate"
		},
		"34373": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateListResponse"
		},
		"34374": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34375": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "__type.tax_rates"
		},
		"34376": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/responses.ts",
			"qualifiedName": "AdminTaxRateDeleteResponse"
		},
		"34377": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"34378": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"34379": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"34380": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"34381": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"34382": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion"
		},
		"34383": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.id"
		},
		"34384": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.rate"
		},
		"34385": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.code"
		},
		"34386": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.country_code"
		},
		"34387": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.province_code"
		},
		"34388": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.name"
		},
		"34389": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.metadata"
		},
		"34390": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_region_id"
		},
		"34391": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_combinable"
		},
		"34392": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.is_default"
		},
		"34393": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent_id"
		},
		"34394": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_at"
		},
		"34395": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.updated_at"
		},
		"34396": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.deleted_at"
		},
		"34397": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.created_by"
		},
		"34398": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.tax_rates"
		},
		"34399": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.parent"
		},
		"34400": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/entities.ts",
			"qualifiedName": "AdminTaxRegion.children"
		},
		"34401": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion"
		},
		"34402": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.country_code"
		},
		"34403": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.province_code"
		},
		"34404": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.parent_id"
		},
		"34405": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.default_tax_rate"
		},
		"34406": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"34407": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.rate"
		},
		"34408": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.code"
		},
		"34409": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.name"
		},
		"34410": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.is_combinable"
		},
		"34411": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "__type.metadata"
		},
		"34412": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRegion.metadata"
		},
		"34413": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams"
		},
		"34414": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.id"
		},
		"34415": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.q"
		},
		"34416": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.parent_id"
		},
		"34417": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.country_code"
		},
		"34418": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.province_code"
		},
		"34419": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_at"
		},
		"34420": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.updated_at"
		},
		"34421": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.deleted_at"
		},
		"34422": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionListParams.created_by"
		},
		"34423": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"34424": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"34425": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"34426": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34427": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"34428": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"34429": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/queries.ts",
			"qualifiedName": "AdminTaxRegionParams"
		},
		"34430": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"34431": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse"
		},
		"34432": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionResponse.tax_region"
		},
		"34433": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionListResponse"
		},
		"34434": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type"
		},
		"34435": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "__type.tax_regions"
		},
		"34436": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-region/admin/responses.ts",
			"qualifiedName": "AdminTaxRegionDeleteResponse"
		},
		"34437": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.id"
		},
		"34438": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.object"
		},
		"34439": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.deleted"
		},
		"34440": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/response.ts",
			"qualifiedName": "__type.parent"
		},
		"34441": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"34442": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/index.ts",
			"qualifiedName": ""
		},
		"34443": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"34444": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"34445": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"34446": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"34447": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"34448": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"34449": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"34450": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"34451": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"34452": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"34453": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"34454": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"34455": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"34456": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"34457": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"34458": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"34459": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"34460": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"34461": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"34462": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"34463": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"34464": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"34465": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"34466": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"34467": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"34468": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"34469": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"34470": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"34471": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"34472": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"34473": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"34474": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"34475": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"34476": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"34477": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"34478": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"34479": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"34480": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"34481": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"34482": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"34483": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"34484": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"34485": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"34486": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"34487": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"34488": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"34489": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"34490": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"34491": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"34492": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"34493": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"34494": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"34495": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"34496": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"34497": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"34498": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"34499": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"34500": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"34501": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"34502": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"34503": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"34504": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"34506": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"34507": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"34508": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"34509": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"34510": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"34511": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"34512": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"34513": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"34514": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"34515": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"34516": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"34517": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"34518": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"34519": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"34520": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"34521": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"34522": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"34523": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"34524": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"34525": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"34526": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"34527": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"34528": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"34529": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"34530": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"34531": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"34532": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"34533": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"34534": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"34535": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"34536": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"34537": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"34538": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"34539": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"34540": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"34541": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"34542": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"34543": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"34544": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"34545": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"34546": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"34547": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"34548": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"34549": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"34550": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"34551": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"34552": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"34553": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"34554": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"34555": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"34556": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"34557": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"34558": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkAdjustInventoryLevelInput"
		},
		"34559": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type"
		},
		"34560": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"34561": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"34562": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.adjustment"
		},
		"34563": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"34564": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"34565": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"34566": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"34567": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"34568": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"34569": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"34570": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"34571": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"34572": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"34573": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"34574": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"34575": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"34576": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"34577": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"34578": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"34579": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"34580": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext"
		},
		"34581": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.locationId"
		},
		"34582": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.lineItemId"
		},
		"34583": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "ReserveQuantityContext.salesChannelId"
		},
		"34584": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"34585": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"34586": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"34587": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"34588": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34589": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34590": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"34591": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"34592": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"34593": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34594": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34595": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"34596": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"34597": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"34598": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34599": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34600": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"34601": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"34602": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"34603": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34604": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34605": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"34606": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"34607": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"34608": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34609": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34610": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"34611": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"34612": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"34613": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34614": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34615": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"34616": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"34617": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34618": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34619": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34620": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"34621": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"34622": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34623": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"34624": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34625": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"34626": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"34627": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"34628": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34629": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34630": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"34631": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"34632": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"34633": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34634": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34635": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"34636": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"34637": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34638": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34639": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"34640": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34641": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34642": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"34643": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"34644": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34645": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34646": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"34647": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34648": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34649": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"34650": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"34651": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"34652": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34653": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"34654": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"34655": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34656": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"34657": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"34658": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"34659": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34660": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"34661": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"34662": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34663": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"34664": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"34665": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34666": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34667": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"34668": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34669": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34670": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"34671": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"34672": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34673": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34674": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"34675": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"34676": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34677": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"34678": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"34679": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"34680": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34681": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"34682": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"34683": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"34684": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34685": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"34686": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"34687": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"34688": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34689": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"34690": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"34691": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34692": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"34693": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34694": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34695": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"34696": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"34697": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34698": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"34699": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34700": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34701": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"34702": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"34703": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34704": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34705": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"34706": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"34707": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34708": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"34709": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34710": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34711": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"34712": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"34713": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34714": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"34715": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34716": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34717": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"34718": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"34719": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"34720": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34721": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"34722": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"34723": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"34724": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34725": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"34726": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"34727": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34728": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"34729": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34730": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"34731": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"34732": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"34733": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34734": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"34735": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"34736": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34737": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"34738": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34739": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34740": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"34741": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"34742": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"34743": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"34744": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"34745": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"34746": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"34747": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"34748": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"34749": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"34750": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"34751": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"34752": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"34753": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34754": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"34755": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34756": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"34757": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"34758": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34759": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"34760": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"34761": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34762": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"34763": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"34764": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34765": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"34766": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"34767": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34768": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"34769": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34770": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"34771": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"34772": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34773": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"34774": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34775": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"34776": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"34777": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"34778": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"34779": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"34793": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": ""
		},
		"34794": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger"
		},
		"34795": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.panic"
		},
		"34796": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34797": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34798": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "data"
		},
		"34799": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.shouldLog"
		},
		"34800": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34801": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34802": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"34803": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.setLogLevel"
		},
		"34804": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34805": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34806": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "level"
		},
		"34807": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.unsetLogLevel"
		},
		"34808": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34809": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34810": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.activity"
		},
		"34811": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34812": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34813": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34814": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "config"
		},
		"34815": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.progress"
		},
		"34816": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34817": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34818": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"34819": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34820": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.error"
		},
		"34821": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34822": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34823": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "messageOrError"
		},
		"34824": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "error"
		},
		"34825": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.failure"
		},
		"34826": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34827": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34828": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"34829": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34830": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.success"
		},
		"34831": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34832": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34833": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "activityId"
		},
		"34834": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34835": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.debug"
		},
		"34836": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34837": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34838": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34839": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.info"
		},
		"34840": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34841": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34842": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34843": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.warn"
		},
		"34844": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34845": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34846": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "message"
		},
		"34847": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "Logger.log"
		},
		"34848": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34849": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "__type"
		},
		"34850": {
			"sourceFileName": "../../../../packages/core/types/src/logger/index.ts",
			"qualifiedName": "args"
		},
		"34851": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": ""
		},
		"34852": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"34853": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34854": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34855": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34856": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34857": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"34858": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"34859": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LogLevel"
		},
		"34860": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoggerOptions"
		},
		"34861": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "CustomModuleDefinition"
		},
		"34862": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34863": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"34864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"34865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"34866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"34867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"34868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "InternalModuleDeclaration"
		},
		"34869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"34871": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resources"
		},
		"34872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"34873": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"34874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolve"
		},
		"34875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"34876": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"34877": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"34878": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.worker_mode"
		},
		"34879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ExternalModuleDeclaration"
		},
		"34880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.scope"
		},
		"34882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"34883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.server"
		},
		"34884": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34885": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"34886": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.url"
		},
		"34887": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.keepAlive"
		},
		"34888": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"34889": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.alias"
		},
		"34890": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.main"
		},
		"34891": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleResolution"
		},
		"34892": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34893": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolutionPath"
		},
		"34894": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"34895": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"34896": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"34897": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleDeclaration"
		},
		"34898": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.moduleExports"
		},
		"34899": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDefinition"
		},
		"34900": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34901": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"34902": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"34903": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultPackage"
		},
		"34904": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"34905": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isRequired"
		},
		"34906": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isQueryable"
		},
		"34907": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"34909": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"34910": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModuleDefinition"
		},
		"34911": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34912": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.key"
		},
		"34913": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.registrationName"
		},
		"34914": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.label"
		},
		"34915": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dependencies"
		},
		"34916": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultModuleDeclaration"
		},
		"34917": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleConfig"
		},
		"34918": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34919": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"34920": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"34921": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.definition"
		},
		"34922": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoadedModule"
		},
		"34923": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34924": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__joinerConfig"
		},
		"34925": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__definition"
		},
		"34926": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LoaderOptions"
		},
		"34927": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34928": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.container"
		},
		"34929": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"34930": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.logger"
		},
		"34931": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.dataLoaderOnly"
		},
		"34932": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "TOptions"
		},
		"34933": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleLoaderFunction"
		},
		"34934": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34935": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34936": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"34937": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"34938": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModulesResponse"
		},
		"34939": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34940": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.module"
		},
		"34941": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.resolution"
		},
		"34942": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"34943": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34944": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"34945": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"34946": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"34947": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"34948": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"34949": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34950": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"34951": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"34952": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"34953": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34954": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"34955": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"34956": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34957": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"34958": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"34959": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"34960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"34961": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"34962": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"34963": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"34964": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"34965": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"34966": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"34967": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"34968": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34969": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"34970": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"34971": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"34972": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"34973": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34974": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"34975": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleExports"
		},
		"34976": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34977": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.service"
		},
		"34978": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.loaders"
		},
		"34979": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"34980": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.runMigrations"
		},
		"34981": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"34982": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"34983": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"34984": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.revertMigration"
		},
		"34985": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"34986": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"34987": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"34988": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.generateMigration"
		},
		"34989": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"34990": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "moduleDeclaration"
		},
		"34991": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"34992": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions"
		},
		"34993": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeOptions.database"
		},
		"34994": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"34995": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"34996": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.clientUrl"
		},
		"34997": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"34998": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.host"
		},
		"34999": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.port"
		},
		"35000": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.user"
		},
		"35001": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.password"
		},
		"35002": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.database"
		},
		"35003": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.driverOptions"
		},
		"35004": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"35005": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.connection"
		},
		"35006": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.debug"
		},
		"35007": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.pool"
		},
		"35008": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleServiceInitializeCustomDataLayerOptions"
		},
		"35009": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"35010": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.manager"
		},
		"35011": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.repositories"
		},
		"35012": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"35013": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.__index"
		},
		"35015": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleBootstrapDeclaration"
		},
		"35016": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "RemoteQueryFunction"
		},
		"35017": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"35018": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"35019": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "query"
		},
		"35020": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "variables"
		},
		"35021": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "options"
		},
		"35022": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"35036": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService"
		},
		"35037": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"35038": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.__container__"
		},
		"35039": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"35040": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"35041": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"35042": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"35043": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35044": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.retrieve"
		},
		"35045": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrObject"
		},
		"35046": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"35047": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35048": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"35049": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.list"
		},
		"35050": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"35051": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35052": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35053": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"35054": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35055": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"35056": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.listAndCount"
		},
		"35057": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "filters"
		},
		"35058": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35059": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35060": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"35061": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35062": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"35063": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"35064": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35065": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35066": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.create"
		},
		"35067": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35068": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35069": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"35070": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"35071": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35072": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35073": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"35074": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35075": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35076": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"35077": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"35078": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"35079": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"35080": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35081": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35082": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"35083": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35084": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.update"
		},
		"35085": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "selectorAndData"
		},
		"35086": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"35087": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"35088": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35089": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35090": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.data"
		},
		"35091": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35092": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"35093": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"35094": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"35095": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35096": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"35097": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"35098": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35099": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"35100": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"35101": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35102": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"35103": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"35104": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35105": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.delete"
		},
		"35106": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idOrSelector"
		},
		"35107": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"35108": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.selector"
		},
		"35109": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35110": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35111": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35112": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"35113": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.softDelete"
		},
		"35114": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"35115": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35116": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35117": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35118": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"35119": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.restore"
		},
		"35120": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "idsOrFilter"
		},
		"35121": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"35122": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35123": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"35124": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"35125": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35126": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35127": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsert"
		},
		"35128": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35129": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35130": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"35131": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.upsertWithReplace"
		},
		"35132": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "data"
		},
		"35133": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "config"
		},
		"35134": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "sharedContext"
		},
		"35135": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"35136": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.entities"
		},
		"35137": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type.performedActions"
		},
		"35138": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TEntity"
		},
		"35139": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "__type"
		},
		"35140": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/medusa-internal-service.ts",
			"qualifiedName": "IMedusaInternalService.TContainer"
		},
		"35141": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProviderExports"
		},
		"35142": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"35143": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.services"
		},
		"35144": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "ModuleProvider"
		},
		"35145": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type"
		},
		"35146": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.resolve"
		},
		"35147": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.id"
		},
		"35148": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/module-provider.ts",
			"qualifiedName": "__type.options"
		},
		"35149": {
			"sourceFileName": "../../../../packages/core/types/src/notification/index.ts",
			"qualifiedName": ""
		},
		"35150": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO"
		},
		"35151": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.id"
		},
		"35152": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.to"
		},
		"35153": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.channel"
		},
		"35154": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.template"
		},
		"35155": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.data"
		},
		"35156": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.trigger_type"
		},
		"35157": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_id"
		},
		"35158": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.resource_type"
		},
		"35159": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.receiver_id"
		},
		"35160": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.original_notification_id"
		},
		"35161": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.external_id"
		},
		"35162": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider_id"
		},
		"35163": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.provider"
		},
		"35164": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationDTO.created_at"
		},
		"35165": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO"
		},
		"35166": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.id"
		},
		"35167": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.handle"
		},
		"35168": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.name"
		},
		"35169": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "NotificationProviderDTO.channels"
		},
		"35170": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps"
		},
		"35171": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.q"
		},
		"35172": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.to"
		},
		"35173": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.channel"
		},
		"35174": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.template"
		},
		"35175": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.trigger_type"
		},
		"35176": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_id"
		},
		"35177": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.resource_type"
		},
		"35178": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.receiver_id"
		},
		"35179": {
			"sourceFileName": "../../../../packages/core/types/src/notification/common.ts",
			"qualifiedName": "FilterableNotificationProps.created_at"
		},
		"35180": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35181": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35182": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/logger.ts",
			"qualifiedName": "LocalNotificationServiceOptions"
		},
		"35183": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions"
		},
		"35184": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.api_key"
		},
		"35185": {
			"sourceFileName": "../../../../packages/core/types/src/notification/providers/sendgrid.ts",
			"qualifiedName": "SendgridNotificationServiceOptions.from"
		},
		"35186": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO"
		},
		"35187": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.to"
		},
		"35188": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.channel"
		},
		"35189": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.template"
		},
		"35190": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.data"
		},
		"35191": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.trigger_type"
		},
		"35192": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_id"
		},
		"35193": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.resource_type"
		},
		"35194": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.receiver_id"
		},
		"35195": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.original_notification_id"
		},
		"35196": {
			"sourceFileName": "../../../../packages/core/types/src/notification/mutations.ts",
			"qualifiedName": "CreateNotificationDTO.idempotency_key"
		},
		"35197": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService"
		},
		"35198": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"35199": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"35200": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"35201": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35202": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.createNotifications"
		},
		"35203": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "data"
		},
		"35204": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35205": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"35206": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.retrieveNotification"
		},
		"35207": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "notificationId"
		},
		"35208": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"35209": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35210": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"35211": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listNotifications"
		},
		"35212": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"35213": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"35214": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35215": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"35216": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "INotificationModuleService.listAndCountNotifications"
		},
		"35217": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "filters"
		},
		"35218": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "config"
		},
		"35219": {
			"sourceFileName": "../../../../packages/core/types/src/notification/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35233": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationDTO"
		},
		"35234": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.to"
		},
		"35235": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.channel"
		},
		"35236": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.template"
		},
		"35237": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.data"
		},
		"35238": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "ProviderSendNotificationResultsDTO"
		},
		"35239": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "__type.id"
		},
		"35240": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider"
		},
		"35241": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"35242": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "INotificationProvider.send"
		},
		"35243": {
			"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
			"qualifiedName": "notification"
		},
		"35244": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": ""
		},
		"35245": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "IndexSettings"
		},
		"35246": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"35247": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.indexSettings"
		},
		"35248": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"35249": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type.transformer"
		},
		"35250": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"35251": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "__type"
		},
		"35252": {
			"sourceFileName": "../../../../packages/core/types/src/search/index.ts",
			"qualifiedName": "document"
		},
		"35253": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService"
		},
		"35254": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.options"
		},
		"35255": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"35256": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.createIndex"
		},
		"35257": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35258": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"35259": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"35260": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.getIndex"
		},
		"35261": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35262": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"35263": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.addDocuments"
		},
		"35264": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35265": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"35266": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"35267": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"35268": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.replaceDocuments"
		},
		"35269": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35270": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "documents"
		},
		"35271": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "type"
		},
		"35272": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"35273": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteDocument"
		},
		"35274": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35275": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "document_id"
		},
		"35276": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"35277": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.deleteAllDocuments"
		},
		"35278": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35279": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"35280": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.search"
		},
		"35281": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35282": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "query"
		},
		"35283": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "options"
		},
		"35284": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"35285": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "ISearchService.updateSettings"
		},
		"35286": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "indexName"
		},
		"35287": {
			"sourceFileName": "../../../../packages/core/types/src/search/interface.ts",
			"qualifiedName": "settings"
		},
		"35288": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/index.ts",
			"qualifiedName": ""
		},
		"35289": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressDTO"
		},
		"35290": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"35291": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"35292": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"35293": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"35294": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.company"
		},
		"35295": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"35296": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"35297": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"35298": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"35299": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"35300": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"35301": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"35302": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"35303": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"35304": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationDTO"
		},
		"35305": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"35306": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"35307": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"35308": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"35309": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"35310": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"35311": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.fulfillment_sets"
		},
		"35312": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.created_at"
		},
		"35313": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.updated_at"
		},
		"35314": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.deleted_at"
		},
		"35315": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationExpandedDTO"
		},
		"35316": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"35317": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"35318": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps"
		},
		"35319": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.q"
		},
		"35320": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.id"
		},
		"35321": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "FilterableStockLocationProps.name"
		},
		"35322": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35323": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35324": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "StockLocationAddressInput"
		},
		"35325": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"35326": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_1"
		},
		"35327": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_2"
		},
		"35328": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.country_code"
		},
		"35329": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.city"
		},
		"35330": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.phone"
		},
		"35331": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.province"
		},
		"35332": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.postal_code"
		},
		"35333": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"35334": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "CreateStockLocationInput"
		},
		"35335": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"35336": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"35337": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"35338": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"35339": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"35340": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpdateStockLocationInput"
		},
		"35341": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type"
		},
		"35342": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.name"
		},
		"35343": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address_id"
		},
		"35344": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.address"
		},
		"35345": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"35346": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "UpsertStockLocationInput"
		},
		"35347": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "name"
		},
		"35348": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address_id"
		},
		"35349": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "address"
		},
		"35350": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "metadata"
		},
		"35351": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/common.ts",
			"qualifiedName": "__type.id"
		},
		"35352": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService"
		},
		"35353": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"35354": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listStockLocations"
		},
		"35355": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"35356": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"35357": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35358": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"35359": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.listAndCountStockLocations"
		},
		"35360": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"35361": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"35362": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35363": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"35364": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.retrieveStockLocation"
		},
		"35365": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"35366": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"35367": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35368": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"35369": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"35370": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"35371": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35372": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.createStockLocations"
		},
		"35373": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"35374": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35375": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"35376": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"35377": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"35378": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35379": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.upsertStockLocations"
		},
		"35380": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "data"
		},
		"35381": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35382": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"35383": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"35384": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"35385": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"35386": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35387": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.updateStockLocations"
		},
		"35388": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "selector"
		},
		"35389": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "input"
		},
		"35390": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35391": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"35392": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.deleteStockLocations"
		},
		"35393": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "id"
		},
		"35394": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "context"
		},
		"35395": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"35396": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.softDeleteStockLocations"
		},
		"35397": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"35398": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"35399": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"35400": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35401": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"35402": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "IStockLocationService.restoreStockLocations"
		},
		"35403": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"35404": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "stockLocationIds"
		},
		"35405": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "config"
		},
		"35406": {
			"sourceFileName": "../../../../packages/core/types/src/stock-location/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35420": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/index.ts",
			"qualifiedName": ""
		},
		"35421": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService"
		},
		"35422": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"35423": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "ITransactionBaseService.withTransaction"
		},
		"35424": {
			"sourceFileName": "../../../../packages/core/types/src/transaction-base/transaction-base.ts",
			"qualifiedName": "transactionManager"
		},
		"35425": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/index.ts",
			"qualifiedName": ""
		},
		"35426": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": ""
		},
		"35427": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig"
		},
		"35428": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.listConfig"
		},
		"35429": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"35430": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"35431": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"35432": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "WorkflowInputConfig.retrieveConfig"
		},
		"35433": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type"
		},
		"35434": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.select"
		},
		"35435": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/common.ts",
			"qualifiedName": "__type.relations"
		},
		"35436": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"qualifiedName": ""
		},
		"35437": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO"
		},
		"35438": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.sku"
		},
		"35439": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.hs_code"
		},
		"35440": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.weight"
		},
		"35441": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.length"
		},
		"35442": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.height"
		},
		"35443": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.width"
		},
		"35444": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.origin_country"
		},
		"35445": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.mid_code"
		},
		"35446": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.material"
		},
		"35447": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.title"
		},
		"35448": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.description"
		},
		"35449": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.thumbnail"
		},
		"35450": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemInputDTO.metadata"
		},
		"35451": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO"
		},
		"35452": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/inventory/create-inventory-items.ts",
			"qualifiedName": "CreateInventoryItemsWorkflowInputDTO.inventoryItems"
		},
		"35453": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"qualifiedName": ""
		},
		"35454": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO"
		},
		"35455": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/create-invite.ts",
			"qualifiedName": "CreateInvitesWorkflowInputDTO.invites"
		},
		"35456": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput"
		},
		"35457": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/delete-invite.ts",
			"qualifiedName": "DeleteInvitesWorkflowInput.ids"
		},
		"35458": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO"
		},
		"35459": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.invite_token"
		},
		"35460": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.auth_identity_id"
		},
		"35461": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "AcceptInviteWorkflowInputDTO.user"
		},
		"35462": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type"
		},
		"35463": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.email"
		},
		"35464": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.first_name"
		},
		"35465": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.last_name"
		},
		"35466": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.avatar_url"
		},
		"35467": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/accept-invite.ts",
			"qualifiedName": "__type.metadata"
		},
		"35468": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO"
		},
		"35469": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/invite/resend-invite.ts",
			"qualifiedName": "ResendInvitesWorkflowInputDTO.invite_ids"
		},
		"35470": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"qualifiedName": ""
		},
		"35471": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO"
		},
		"35472": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.starts_at"
		},
		"35473": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.ends_at"
		},
		"35474": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.status"
		},
		"35475": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.rules"
		},
		"35476": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.prices"
		},
		"35477": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"35478": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.amount"
		},
		"35479": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.currency_code"
		},
		"35480": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.region_id"
		},
		"35481": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.max_quantity"
		},
		"35482": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.min_quantity"
		},
		"35483": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListDTO.customer_groups"
		},
		"35484": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type"
		},
		"35485": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "__type.id"
		},
		"35486": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO"
		},
		"35487": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.attribute"
		},
		"35488": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListRuleDTO.value"
		},
		"35489": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO"
		},
		"35490": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.amount"
		},
		"35491": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.currency_code"
		},
		"35492": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.price_set_id"
		},
		"35493": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.region_id"
		},
		"35494": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.max_quantity"
		},
		"35495": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListPriceDTO.min_quantity"
		},
		"35496": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO"
		},
		"35497": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowInputDTO.price_lists"
		},
		"35498": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO"
		},
		"35499": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.product_ids"
		},
		"35500": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListProductsWorkflowInputDTO.price_list_id"
		},
		"35501": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO"
		},
		"35502": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.variant_ids"
		},
		"35503": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListVariantsWorkflowInputDTO.price_list_id"
		},
		"35504": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO"
		},
		"35505": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.money_amount_ids"
		},
		"35506": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "RemovePriceListPricesWorkflowInputDTO.price_list_id"
		},
		"35507": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO"
		},
		"35508": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.title"
		},
		"35509": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.name"
		},
		"35510": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.description"
		},
		"35511": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.type"
		},
		"35512": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.starts_at"
		},
		"35513": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.ends_at"
		},
		"35514": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.status"
		},
		"35515": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules_count"
		},
		"35516": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.prices"
		},
		"35517": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "CreatePriceListWorkflowDTO.rules"
		},
		"35518": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO"
		},
		"35519": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/remove-price-list.ts",
			"qualifiedName": "RemovePriceListWorkflowInputDTO.price_lists"
		},
		"35520": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": ""
		},
		"35521": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput"
		},
		"35522": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "CreateProductCategoriesWorkflowInput.product_categories"
		},
		"35523": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput"
		},
		"35524": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.selector"
		},
		"35525": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "UpdateProductCategoriesWorkflowInput.update"
		},
		"35526": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"qualifiedName": "BatchUpdateProductsOnCategoryWorkflowInput"
		},
		"35527": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.id"
		},
		"35528": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.add"
		},
		"35529": {
			"sourceFileName": "../../../../packages/core/types/src/common/batch.ts",
			"qualifiedName": "__type.remove"
		},
		"35530": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"qualifiedName": ""
		},
		"35531": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput"
		},
		"35532": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowInput.reservations"
		},
		"35533": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/create-reservations.ts",
			"qualifiedName": "CreateReservationsWorkflowOutput"
		},
		"35534": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput"
		},
		"35535": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowInput.updates"
		},
		"35536": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/reservation/update-reservations.ts",
			"qualifiedName": "UpdateReservationsWorkflowOutput"
		},
		"35537": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"qualifiedName": ""
		},
		"35538": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO"
		},
		"35539": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.id"
		},
		"35540": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.workflow_id"
		},
		"35541": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.transaction_id"
		},
		"35542": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.execution"
		},
		"35543": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.context"
		},
		"35544": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.state"
		},
		"35545": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.created_at"
		},
		"35546": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.updated_at"
		},
		"35547": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "WorkflowExecutionDTO.deleted_at"
		},
		"35548": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps"
		},
		"35549": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.id"
		},
		"35550": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.workflow_id"
		},
		"35551": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.transaction_id"
		},
		"35552": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/common.ts",
			"qualifiedName": "FilterableWorkflowExecutionProps.state"
		},
		"35553": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"35554": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"35555": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO"
		},
		"35556": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.workflow_id"
		},
		"35557": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.transaction_id"
		},
		"35558": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.execution"
		},
		"35559": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.context"
		},
		"35560": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/mutations.ts",
			"qualifiedName": "UpsertWorkflowExecutionDTO.state"
		},
		"35561": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO"
		},
		"35562": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.transactionId"
		},
		"35563": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"35564": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"35565": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"35566": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"35567": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"35568": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "WorkflowOrchestratorRunDTO.T"
		},
		"35569": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IdempotencyKeyParts"
		},
		"35570": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35571": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"35572": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"35573": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepId"
		},
		"35574": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.action"
		},
		"35575": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService"
		},
		"35576": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"35577": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.retrieveWorkflowExecution"
		},
		"35578": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "idOrObject"
		},
		"35579": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35580": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflow_id"
		},
		"35581": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction_id"
		},
		"35582": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"35583": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35584": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"35585": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listWorkflowExecutions"
		},
		"35586": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"35587": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"35588": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35589": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"35590": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.listAndCountWorkflowExecutions"
		},
		"35591": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "filters"
		},
		"35592": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "config"
		},
		"35593": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35594": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"35595": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.run"
		},
		"35596": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"35597": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"35598": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35599": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35600": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.errors"
		},
		"35601": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transaction"
		},
		"35602": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.result"
		},
		"35603": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.acknowledgement"
		},
		"35604": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"35605": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.getRunningTransaction"
		},
		"35606": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "workflowId"
		},
		"35607": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "transactionId"
		},
		"35608": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "options"
		},
		"35609": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35610": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"35611": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepSuccess"
		},
		"35612": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"35613": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35614": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"35615": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"35616": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"35617": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35618": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"35619": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.setStepFailure"
		},
		"35620": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__0"
		},
		"35621": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35622": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"35623": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.stepResponse"
		},
		"35624": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.options"
		},
		"35625": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35626": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"35627": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.subscribe"
		},
		"35628": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"35629": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35630": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"35631": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"35632": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriber"
		},
		"35633": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberId"
		},
		"35634": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35635": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"35636": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "IWorkflowEngineService.unsubscribe"
		},
		"35637": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "args"
		},
		"35638": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"35639": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.workflowId"
		},
		"35640": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.transactionId"
		},
		"35641": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.subscriberOrId"
		},
		"35642": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35656": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": ""
		},
		"35657": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IsDmlEntity"
		},
		"35658": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "DMLSchema"
		},
		"35659": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntityConfig"
		},
		"35660": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35661": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"35662": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"35663": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferDmlEntityNameFromConfig"
		},
		"35664": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35665": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"35666": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35667": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"35668": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TConfig"
		},
		"35669": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity"
		},
		"35670": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.name"
		},
		"35671": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.schema"
		},
		"35672": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.[IsDmlEntity]"
		},
		"35673": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Schema"
		},
		"35674": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "IDmlEntity.Config"
		},
		"35675": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "KnownDataTypes"
		},
		"35676": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipTypes"
		},
		"35677": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyMetadata"
		},
		"35678": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35679": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.fieldName"
		},
		"35680": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"35681": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"35682": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.dataType"
		},
		"35683": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35684": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"35685": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"35686": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.indexes"
		},
		"35687": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35688": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"35689": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35690": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"35691": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"35692": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "PropertyType"
		},
		"35693": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35694": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"35695": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"35696": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"35697": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "fieldName"
		},
		"35698": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35699": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipOptions"
		},
		"35700": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35701": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"35702": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipMetadata"
		},
		"35703": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35704": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"35705": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35706": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.entity"
		},
		"35707": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"35708": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.mappedBy"
		},
		"35709": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.options"
		},
		"35710": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "RelationshipType"
		},
		"35711": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35712": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$dataType"
		},
		"35713": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35714": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"35715": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.parse"
		},
		"35716": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "relationshipName"
		},
		"35717": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35718": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"35719": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor.Props"
		},
		"35720": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"35721": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityConstructor"
		},
		"35722": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferForeignKeys"
		},
		"35723": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35724": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35725": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35726": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35727": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"35728": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferBelongsToFields"
		},
		"35729": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35730": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35731": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35732": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35733": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"35734": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasOneFields"
		},
		"35735": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"35736": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferHasManyFields"
		},
		"35737": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35738": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35739": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"35740": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferManyToManyFields"
		},
		"35741": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relation"
		},
		"35742": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferSchemaFields"
		},
		"35743": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"35744": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Infer"
		},
		"35745": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35746": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "ExtractEntityRelations"
		},
		"35747": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35748": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35749": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Schema"
		},
		"35750": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "OfType"
		},
		"35751": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityCascades"
		},
		"35752": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35753": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.delete"
		},
		"35754": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "Relationships"
		},
		"35755": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferTypeOf"
		},
		"35756": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35757": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferEntityType"
		},
		"35758": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35759": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "InferIndexableProperties"
		},
		"35760": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35761": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.type"
		},
		"35762": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35763": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "EntityIndex"
		},
		"35764": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35765": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.name"
		},
		"35766": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.unique"
		},
		"35767": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.on"
		},
		"35768": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.where"
		},
		"35769": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TSchema"
		},
		"35770": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "TWhere"
		},
		"35771": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "SimpleQueryValue"
		},
		"35772": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "NeQueryValue"
		},
		"35773": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type"
		},
		"35774": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "__type.$ne"
		},
		"35775": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryValue"
		},
		"35776": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "QueryCondition"
		},
		"35777": {
			"sourceFileName": "../../../../packages/core/types/src/dml/index.ts",
			"qualifiedName": "T"
		},
		"35778": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceUploadResult"
		},
		"35779": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"35780": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.key"
		},
		"35781": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "FileServiceGetUploadStreamResult"
		},
		"35782": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.writeStream"
		},
		"35783": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.promise"
		},
		"35784": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.url"
		},
		"35785": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"35786": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "GetUploadedFileType"
		},
		"35787": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"35788": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"35789": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "DeleteFileType"
		},
		"35790": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.fileKey"
		},
		"35791": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "UploadStreamDescriptorType"
		},
		"35792": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.name"
		},
		"35793": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.ext"
		},
		"35794": {
			"sourceFileName": "../../../../packages/core/types/src/file-service/index.ts",
			"qualifiedName": "__type.isPrivate"
		},
		"35795": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"35796": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35797": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"35798": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"35799": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"35800": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"35801": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"35802": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"35803": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"35804": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"35805": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"35806": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"35807": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"35808": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"35809": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"35810": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"35811": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35812": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"35813": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"35814": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"35815": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"35816": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"35817": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35818": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"35819": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"35820": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"35821": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument"
		},
		"35822": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.name"
		},
		"35823": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerArgument.value"
		},
		"35824": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective"
		},
		"35825": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.name"
		},
		"35826": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerDirective.value"
		},
		"35827": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery"
		},
		"35828": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.service"
		},
		"35829": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.alias"
		},
		"35830": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.expands"
		},
		"35831": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35832": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.property"
		},
		"35833": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"35834": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"35835": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.directives"
		},
		"35836": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35837": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"35839": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.fields"
		},
		"35840": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.args"
		},
		"35841": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerQuery.directives"
		},
		"35842": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35843": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.__index"
		},
		"35845": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions"
		},
		"35846": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfKeyNotFound"
		},
		"35847": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteJoinerOptions.throwIfRelationNotFound"
		},
		"35848": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands"
		},
		"35849": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteNestedExpands.__index"
		},
		"35851": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35852": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.fields"
		},
		"35853": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"35854": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.expands"
		},
		"35855": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "InternalJoinerServiceConfig"
		},
		"35856": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"35857": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"35858": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty"
		},
		"35859": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.property"
		},
		"35860": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parent"
		},
		"35861": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.parentConfig"
		},
		"35862": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.serviceConfig"
		},
		"35863": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.fields"
		},
		"35864": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.args"
		},
		"35865": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "RemoteExpandProperty.expands"
		},
		"35866": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule"
		},
		"35867": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"35868": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.list"
		},
		"35869": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"35870": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"35871": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35872": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"35873": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.listAndCount"
		},
		"35874": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "filters"
		},
		"35875": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"35876": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35877": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"35878": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.create"
		},
		"35879": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"35880": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"35881": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35882": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"35883": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.dismiss"
		},
		"35884": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "primaryKeyOrBulkData"
		},
		"35885": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "foreignKeyData"
		},
		"35886": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35887": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"35888": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.delete"
		},
		"35889": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"35890": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35891": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"35892": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.softDelete"
		},
		"35893": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"35894": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"35895": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35896": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"35897": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "ILinkModule.restore"
		},
		"35898": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "data"
		},
		"35899": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "config"
		},
		"35900": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/service.ts",
			"qualifiedName": "sharedContext"
		},
		"35914": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "PlannerActionLinkDescriptor"
		},
		"35915": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"35916": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModule"
		},
		"35917": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModule"
		},
		"35918": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.fromModel"
		},
		"35919": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.toModel"
		},
		"35920": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "LinkMigrationsPlannerAction"
		},
		"35921": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"35922": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"35923": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"35924": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.sql"
		},
		"35925": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"35926": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"35927": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"35928": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"35929": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"35930": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type"
		},
		"35931": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.action"
		},
		"35932": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.linkDescriptor"
		},
		"35933": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "__type.tableName"
		},
		"35934": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner"
		},
		"35935": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"35936": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.createPlan"
		},
		"35937": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"35938": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "ILinkMigrationsPlanner.executePlan"
		},
		"35939": {
			"sourceFileName": "../../../../packages/core/types/src/link-modules/migrations.ts",
			"qualifiedName": "actions"
		},
		"35940": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions"
		},
		"35941": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeDescendantsTree"
		},
		"35942": {
			"sourceFileName": "../../../../packages/core/types/src/product-category/repository.ts",
			"qualifiedName": "ProductCategoryTransformOptions.includeAncestorsTree"
		},
		"35943": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "SharedContext"
		},
		"35944": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"35945": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"35946": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"35947": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"35948": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"35949": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"35950": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"35952": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"35953": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"35954": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"35955": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"35956": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"35957": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"35958": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"35959": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"35960": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"35961": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"35962": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"35963": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"35964": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"35965": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"35966": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"35967": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"35968": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"35969": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"35970": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"35971": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"35972": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"35973": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"35974": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"35975": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"35976": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"35977": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"35978": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "CartLikeWithTotals"
		},
		"35979": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type"
		},
		"35980": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_subtotal"
		},
		"35981": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_item_tax_total"
		},
		"35982": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_total"
		},
		"35983": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_subtotal"
		},
		"35984": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.item_tax_total"
		},
		"35985": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_total"
		},
		"35986": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_subtotal"
		},
		"35987": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_tax_total"
		},
		"35988": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.total"
		},
		"35989": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.subtotal"
		},
		"35990": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.tax_total"
		},
		"35991": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_total"
		},
		"35992": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.discount_tax_total"
		},
		"35993": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_total"
		},
		"35994": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.gift_card_tax_total"
		},
		"35995": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_total"
		},
		"35996": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_subtotal"
		},
		"35997": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.shipping_tax_total"
		},
		"35998": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_total"
		},
		"35999": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_subtotal"
		},
		"36000": {
			"sourceFileName": "../../../../packages/core/types/src/totals/index.ts",
			"qualifiedName": "__type.original_shipping_tax_total"
		},
		"36001": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"36002": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"36003": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"36004": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"36005": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"36006": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"36007": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"36008": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"36009": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"36010": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"36011": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"36012": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"36014": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"36015": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberValue"
		},
		"36016": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO"
		},
		"36017": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.location_id"
		},
		"36018": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "CreateLocationFulfillmentSetWorkflowInputDTO.fulfillment_set_data"
		},
		"36019": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type"
		},
		"36020": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.name"
		},
		"36021": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/stock-locations/mutations.ts",
			"qualifiedName": "__type.type"
		},
		"36022": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductVariantWorkflowInputDTO"
		},
		"36023": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"36024": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"36025": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductVariantWorkflowInputDTO"
		},
		"36026": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"36027": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.prices"
		},
		"36028": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "CreateProductWorkflowInputDTO"
		},
		"36029": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"36030": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"36031": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"36032": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"36033": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.variants"
		},
		"36034": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "UpdateProductWorkflowInputDTO"
		},
		"36035": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"36036": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.sales_channels"
		},
		"36037": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type"
		},
		"36038": {
			"sourceFileName": "../../../../packages/core/types/src/workflows/products/mutations.ts",
			"qualifiedName": "__type.id"
		},
		"36039": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "SessionOptions"
		},
		"36040": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.name"
		},
		"36041": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.resave"
		},
		"36042": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.rolling"
		},
		"36043": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.saveUninitialized"
		},
		"36044": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.secret"
		},
		"36045": {
			"sourceFileName": "../../../../packages/core/types/src/common/config-module.ts",
			"qualifiedName": "__type.ttl"
		},
		"36046": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsStringLiteral"
		},
		"36047": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36048": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Join"
		},
		"36049": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36050": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "JoinedString"
		},
		"36051": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCapitalizer"
		},
		"36052": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36053": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SplitAnyCase"
		},
		"36054": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36055": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"36056": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"36057": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36058": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"36059": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36060": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Order"
		},
		"36061": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36062": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Dictionary"
		},
		"36063": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"36064": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"36066": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36067": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityClassName"
		},
		"36068": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "EntityValues"
		},
		"36069": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"36070": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.id"
		},
		"36071": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService"
		},
		"36072": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"36073": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.transaction"
		},
		"36074": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"36075": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "task"
		},
		"36076": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"36077": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"36078": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "transactionManager"
		},
		"36079": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "context"
		},
		"36080": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type"
		},
		"36081": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"36082": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.transaction"
		},
		"36083": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"36084": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"36085": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getFreshManager"
		},
		"36086": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"36087": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"36088": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.getActiveManager"
		},
		"36089": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TManager"
		},
		"36090": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"36091": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.serialize"
		},
		"36092": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TOutput"
		},
		"36093": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "data"
		},
		"36094": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "options"
		},
		"36095": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "BaseRepositoryService.T"
		},
		"36096": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim"
		},
		"36097": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.order_id"
		},
		"36098": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.claim_items"
		},
		"36099": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.additional_items"
		},
		"36100": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return"
		},
		"36101": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.return_id"
		},
		"36102": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.no_notification"
		},
		"36103": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaim.refund_amount"
		},
		"36104": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem"
		},
		"36105": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.id"
		},
		"36106": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.claim_id"
		},
		"36107": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.order_id"
		},
		"36108": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.item_id"
		},
		"36109": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.quantity"
		},
		"36110": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.reason"
		},
		"36111": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.raw_quantity"
		},
		"36112": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.metadata"
		},
		"36113": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.created_at"
		},
		"36114": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimItem.updated_at"
		},
		"36115": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems"
		},
		"36116": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddItems.items"
		},
		"36117": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type"
		},
		"36118": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.id"
		},
		"36119": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.quantity"
		},
		"36120": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.reason"
		},
		"36121": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.description"
		},
		"36122": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "__type.internal_note"
		},
		"36123": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason"
		},
		"36124": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.MISSING_ITEM"
		},
		"36125": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.WRONG_ITEM"
		},
		"36126": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.PRODUCTION_FAILURE"
		},
		"36127": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "ClaimReason.OTHER"
		},
		"36128": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem"
		},
		"36129": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.quantity"
		},
		"36130": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.reason_id"
		},
		"36131": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.description"
		},
		"36132": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateItem.internal_note"
		},
		"36133": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod"
		},
		"36134": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.shipping_option_id"
		},
		"36135": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.custom_price"
		},
		"36136": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.description"
		},
		"36137": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.internal_note"
		},
		"36138": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimAddShippingMethod.metadata"
		},
		"36139": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod"
		},
		"36140": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.custom_price"
		},
		"36141": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.internal_note"
		},
		"36142": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/admin/payloads.ts",
			"qualifiedName": "AdminClaimUpdateShippingMethod.metadata"
		},
		"36143": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams"
		},
		"36144": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.q"
		},
		"36145": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.id"
		},
		"36146": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.order_id"
		},
		"36147": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.status"
		},
		"36148": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.created_at"
		},
		"36149": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.updated_at"
		},
		"36150": {
			"sourceFileName": "../../../../packages/core/types/src/http/claim/common.ts",
			"qualifiedName": "BaseClaimListParams.deleted_at"
		},
		"36151": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36152": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36153": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36154": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36155": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection"
		},
		"36156": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.id"
		},
		"36157": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.title"
		},
		"36158": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.handle"
		},
		"36159": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.created_at"
		},
		"36160": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.updated_at"
		},
		"36161": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.deleted_at"
		},
		"36162": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.products"
		},
		"36163": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollection.metadata"
		},
		"36164": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams"
		},
		"36165": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.q"
		},
		"36166": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.id"
		},
		"36167": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.handle"
		},
		"36168": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.title"
		},
		"36169": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.created_at"
		},
		"36170": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionListParams.updated_at"
		},
		"36171": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36172": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36173": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36174": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36175": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36176": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36177": {
			"sourceFileName": "../../../../packages/core/types/src/http/collection/common.ts",
			"qualifiedName": "BaseCollectionParams"
		},
		"36178": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36179": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange"
		},
		"36180": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.order_id"
		},
		"36181": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_items"
		},
		"36182": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.additional_items"
		},
		"36183": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.no_notification"
		},
		"36184": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.difference_due"
		},
		"36185": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return"
		},
		"36186": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchange.return_id"
		},
		"36187": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem"
		},
		"36188": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.id"
		},
		"36189": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.exchange_id"
		},
		"36190": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.order_id"
		},
		"36191": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.item_id"
		},
		"36192": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.quantity"
		},
		"36193": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.metadata"
		},
		"36194": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.created_at"
		},
		"36195": {
			"sourceFileName": "../../../../packages/core/types/src/http/exchange/common.ts",
			"qualifiedName": "BaseExchangeItem.updated_at"
		},
		"36196": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile"
		},
		"36197": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.id"
		},
		"36198": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseFile.url"
		},
		"36199": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "BaseUploadFile"
		},
		"36200": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"36201": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.files"
		},
		"36202": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type"
		},
		"36203": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.name"
		},
		"36204": {
			"sourceFileName": "../../../../packages/core/types/src/http/file/common.ts",
			"qualifiedName": "__type.content"
		},
		"36205": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider"
		},
		"36206": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.id"
		},
		"36207": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-provider/common.ts",
			"qualifiedName": "BaseFulfillmentProvider.is_enabled"
		},
		"36208": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneGeoZone"
		},
		"36209": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneGeoZone"
		},
		"36210": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory"
		},
		"36211": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.id"
		},
		"36212": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.name"
		},
		"36213": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.description"
		},
		"36214": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.handle"
		},
		"36215": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_active"
		},
		"36216": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.is_internal"
		},
		"36217": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.rank"
		},
		"36218": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category_id"
		},
		"36219": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.parent_category"
		},
		"36220": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.category_children"
		},
		"36221": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.products"
		},
		"36222": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.created_at"
		},
		"36223": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.updated_at"
		},
		"36224": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategory.deleted_at"
		},
		"36225": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams"
		},
		"36226": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.q"
		},
		"36227": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.id"
		},
		"36228": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.name"
		},
		"36229": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.description"
		},
		"36230": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.parent_category_id"
		},
		"36231": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.handle"
		},
		"36232": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_active"
		},
		"36233": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.is_internal"
		},
		"36234": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_descendants_tree"
		},
		"36235": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.include_ancestors_tree"
		},
		"36236": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.created_at"
		},
		"36237": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.updated_at"
		},
		"36238": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryListParams.deleted_at"
		},
		"36239": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36240": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36241": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36242": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36243": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"36244": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"36245": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams"
		},
		"36246": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_ancestors_tree"
		},
		"36247": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-category/common.ts",
			"qualifiedName": "BaseProductCategoryParams.include_descendants_tree"
		},
		"36248": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36249": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag"
		},
		"36250": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.id"
		},
		"36251": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.value"
		},
		"36252": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.created_at"
		},
		"36253": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.updated_at"
		},
		"36254": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.deleted_at"
		},
		"36255": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTag.metadata"
		},
		"36256": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams"
		},
		"36257": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.q"
		},
		"36258": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.id"
		},
		"36259": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.value"
		},
		"36260": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.created_at"
		},
		"36261": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-tag/common.ts",
			"qualifiedName": "BaseProductTagListParams.updated_at"
		},
		"36262": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36263": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36264": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36265": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36266": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType"
		},
		"36267": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.id"
		},
		"36268": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.value"
		},
		"36269": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.created_at"
		},
		"36270": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.updated_at"
		},
		"36271": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.deleted_at"
		},
		"36272": {
			"sourceFileName": "../../../../packages/core/types/src/http/product-type/common.ts",
			"qualifiedName": "BaseProductType.metadata"
		},
		"36273": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse"
		},
		"36274": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.id"
		},
		"36275": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.line_item_id"
		},
		"36276": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.location_id"
		},
		"36277": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.quantity"
		},
		"36278": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.external_id"
		},
		"36279": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.description"
		},
		"36280": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.inventory_item_id"
		},
		"36281": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.inventory_item"
		},
		"36282": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.metadata"
		},
		"36283": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.created_by"
		},
		"36284": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.deleted_at"
		},
		"36285": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.created_at"
		},
		"36286": {
			"sourceFileName": "../../../../packages/core/types/src/http/reservation/admin/reservation.ts",
			"qualifiedName": "ReservationResponse.updated_at"
		},
		"36287": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason"
		},
		"36288": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.id"
		},
		"36289": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.value"
		},
		"36290": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.label"
		},
		"36291": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.description"
		},
		"36292": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.metadata"
		},
		"36293": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.created_at"
		},
		"36294": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReason.updated_at"
		},
		"36295": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/admin/payloads.ts",
			"qualifiedName": "AdminBaseReturnReasonPayload"
		},
		"36296": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams"
		},
		"36297": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.q"
		},
		"36298": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.id"
		},
		"36299": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.value"
		},
		"36300": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.label"
		},
		"36301": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.description"
		},
		"36302": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.parent_return_reason_id"
		},
		"36303": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.created_at"
		},
		"36304": {
			"sourceFileName": "../../../../packages/core/types/src/http/return-reason/common.ts",
			"qualifiedName": "BaseReturnReasonListParams.updated_at"
		},
		"36305": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.limit"
		},
		"36306": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.offset"
		},
		"36307": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "FindParams.order"
		},
		"36308": {
			"sourceFileName": "../../../../packages/core/types/src/http/common/request.ts",
			"qualifiedName": "SelectParams.fields"
		},
		"36309": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress"
		},
		"36310": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_1"
		},
		"36311": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.address_2"
		},
		"36312": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.company"
		},
		"36313": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.country_code"
		},
		"36314": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.city"
		},
		"36315": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.phone"
		},
		"36316": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.postal_code"
		},
		"36317": {
			"sourceFileName": "../../../../packages/core/types/src/http/stock-locations/admin/payloads.ts",
			"qualifiedName": "AdminUpsertStockLocationAddress.province"
		},
		"36318": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule"
		},
		"36319": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference"
		},
		"36320": {
			"sourceFileName": "../../../../packages/core/types/src/http/tax-rate/admin/payloads.ts",
			"qualifiedName": "AdminCreateTaxRateRule.reference_id"
		},
		"36321": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleDeclaration"
		},
		"36322": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice"
		},
		"36323": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.region_id"
		},
		"36324": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.currency_code"
		},
		"36325": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.amount"
		},
		"36326": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.variant_id"
		},
		"36327": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.min_quantity"
		},
		"36328": {
			"sourceFileName": "../../../../packages/core/types/src/workflow/price-list/create-price-list.ts",
			"qualifiedName": "InputPrice.max_quantity"
		},
		"36329": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "FlowRunOptions"
		},
		"36330": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type"
		},
		"36331": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.input"
		},
		"36332": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.context"
		},
		"36333": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.resultFrom"
		},
		"36334": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.throwOnError"
		},
		"36335": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "__type.events"
		},
		"36336": {
			"sourceFileName": "../../../../packages/core/types/src/workflows-sdk/service.ts",
			"qualifiedName": "TData"
		},
		"36337": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCapitalizer"
		},
		"36338": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36339": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"36340": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IncludesSeparator"
		},
		"36341": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36342": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "SeparatorCaseParser"
		},
		"36343": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36344": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"36345": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsOneWord"
		},
		"36346": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36347": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsCamelCase"
		},
		"36348": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36349": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "CamelCaseParser"
		},
		"36350": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36351": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Tuple"
		},
		"36352": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "IsPascalCase"
		},
		"36353": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36354": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "PascalCaseParser"
		},
		"36355": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36356": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"36357": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"36358": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"36359": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"36360": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"36361": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36362": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry"
		},
		"36363": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCountry.type"
		},
		"36364": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36365": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36366": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince"
		},
		"36367": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.type"
		},
		"36368": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneProvince.province_code"
		},
		"36369": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36370": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36371": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity"
		},
		"36372": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.type"
		},
		"36373": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.province_code"
		},
		"36374": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneCity.city"
		},
		"36375": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36376": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36377": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip"
		},
		"36378": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.type"
		},
		"36379": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.province_code"
		},
		"36380": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.city"
		},
		"36381": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertFulfillmentSetServiceZoneZip.postal_expression"
		},
		"36382": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36383": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36384": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry"
		},
		"36385": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCountry.type"
		},
		"36386": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"36387": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36388": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36389": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince"
		},
		"36390": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.type"
		},
		"36391": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneProvince.province_code"
		},
		"36392": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"36393": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36394": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36395": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity"
		},
		"36396": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.type"
		},
		"36397": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.province_code"
		},
		"36398": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneCity.city"
		},
		"36399": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"36400": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36401": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36402": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip"
		},
		"36403": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.type"
		},
		"36404": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.province_code"
		},
		"36405": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.city"
		},
		"36406": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateFulfillmentSetServiceZoneZip.postal_expression"
		},
		"36407": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"36408": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36409": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36410": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Separator"
		},
		"36411": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "WordInCamelCase"
		},
		"36412": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Type"
		},
		"36413": {
			"sourceFileName": "../../../../packages/core/types/src/common/camel-case.ts",
			"qualifiedName": "Word"
		},
		"36414": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"36415": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36416": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone"
		},
		"36417": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"36418": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36419": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36420": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone"
		},
		"36421": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpdateGeoZone.id"
		},
		"36422": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.type"
		},
		"36423": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.country_code"
		},
		"36424": {
			"sourceFileName": "../../../../packages/core/types/src/http/fulfillment-set/admin/payloads.ts",
			"qualifiedName": "AdminUpsertGeoZone.metadata"
		},
		"36425": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"36426": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"36427": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"36428": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"36429": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"36430": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"36431": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"36432": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"36433": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"36434": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"36435": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"36436": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/index.ts",
			"2": "../../../../packages/core/types/src/admin/index.ts",
			"3": "../../../../packages/core/types/src/cache/index.ts",
			"4": "../../../../packages/core/types/src/common/index.ts",
			"5": "../../../../packages/core/types/src/dal/index.ts",
			"6": "../../../../packages/core/types/src/event-bus/index.ts",
			"7": "../../../../packages/core/types/src/feature-flag/index.ts",
			"8": "../../../../packages/core/types/src/file/index.ts",
			"9": "../../../../packages/core/types/src/http/index.ts",
			"10": "../../../../packages/core/types/src/inventory/index.ts",
			"11": "../../../../packages/core/types/src/logger/index.ts",
			"12": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"13": "../../../../packages/core/types/src/notification/index.ts",
			"14": "../../../../packages/core/types/src/search/index.ts",
			"15": "../../../../packages/core/types/src/stock-location/index.ts",
			"16": "../../../../packages/core/types/src/transaction-base/index.ts",
			"17": "../../../../packages/core/types/src/workflow/index.ts",
			"18": "../../../../packages/core/types/src/workflow/common.ts",
			"19": "../../../../packages/core/types/src/workflow/inventory/index.ts",
			"20": "../../../../packages/core/types/src/workflow/invite/index.ts",
			"21": "../../../../packages/core/types/src/workflow/price-list/index.ts",
			"22": "../../../../packages/core/types/src/workflow/product-category/index.ts",
			"23": "../../../../packages/core/types/src/workflow/reservation/index.ts",
			"24": "../../../../packages/core/types/src/workflows-sdk/index.ts",
			"25": "../../../../packages/core/types/src/dml/index.ts"
		},
		"reflections": {
			"1": 32522,
			"2": 32541,
			"3": 32542,
			"4": 32556,
			"5": 32795,
			"6": 32984,
			"7": 33060,
			"8": 33079,
			"9": 33170,
			"10": 34442,
			"11": 34793,
			"12": 34851,
			"13": 35149,
			"14": 35244,
			"15": 35288,
			"16": 35420,
			"17": 35425,
			"18": 35426,
			"19": 35436,
			"20": 35453,
			"21": 35470,
			"22": 35520,
			"23": 35530,
			"24": 35537,
			"25": 35656
		}
	}
}