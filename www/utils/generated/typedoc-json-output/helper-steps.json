{
	"id": 40260,
	"name": "helper-steps",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 40261,
			"name": "createLinksStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "create-remote-links"
			},
			"defaultValue": "\"create-remote-links\""
		},
		{
			"id": 40262,
			"name": "createRemoteLinkStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This step creates remote links between two records of linked data models.\n\nLearn more in the [Remote Link documentation.](https://docs.medusajs.com/learn/fundamentals/module-links/remote-link#create-link)."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  createRemoteLinkStep\n} from \"@medusajs/medusa/core-flows\"\nimport {\n  Modules\n} from \"@medusajs/framework/utils\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    createRemoteLinkStep([{\n      [Modules.PRODUCT]: {\n        product_id: \"prod_123\",\n      },\n      \"helloModuleService\": {\n        my_custom_id: \"mc_123\",\n      },\n    }])\n  }\n)\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 40271,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40272,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40271,
						40272
					]
				}
			],
			"signatures": [
				{
					"id": 40263,
					"name": "createRemoteLinkStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40264,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
														"qualifiedName": "LinkDefinition"
													},
													"name": "LinkDefinition",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
														"qualifiedName": "LinkDefinition"
													},
													"name": "LinkDefinition",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
										"qualifiedName": "LinkDefinition"
									},
									"name": "LinkDefinition",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40265,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40266,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40267,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40268,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40269,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40270,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40270
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																		"qualifiedName": "LinkDefinition"
																	},
																	"name": "LinkDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40266
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 40273,
			"name": "DismissRemoteLinksStepInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
							"qualifiedName": "LinkDefinition"
						},
						"name": "LinkDefinition",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
								"qualifiedName": "LinkDefinition"
							},
							"name": "LinkDefinition",
							"package": "@medusajs/types"
						}
					}
				]
			}
		},
		{
			"id": 40274,
			"name": "dismissRemoteLinkStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "dismiss-remote-links"
			},
			"defaultValue": "\"dismiss-remote-links\""
		},
		{
			"id": 40275,
			"name": "dismissRemoteLinkStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This step removes remote links between two records of linked data models.\n\nLearn more in the [Remote Link documentation.](https://docs.medusajs.com/learn/fundamentals/module-links/remote-link#dismiss-link)."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  dismissRemoteLinkStep\n} from \"@medusajs/medusa/core-flows\"\nimport {\n  Modules\n} from \"@medusajs/framework/utils\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    dismissRemoteLinkStep([{\n      [Modules.PRODUCT]: {\n        product_id: \"prod_123\",\n      },\n      \"helloModuleService\": {\n        my_custom_id: \"mc_123\",\n      },\n    }])\n  }\n)\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 40284,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40285,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40284,
						40285
					]
				}
			],
			"signatures": [
				{
					"id": 40276,
					"name": "dismissRemoteLinkStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40277,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 40273,
										"name": "DismissRemoteLinksStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40273,
												"name": "DismissRemoteLinksStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
														"qualifiedName": "LinkDefinition"
													},
													"name": "LinkDefinition",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
										"qualifiedName": "LinkDefinition"
									},
									"name": "LinkDefinition",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40278,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40279,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40280,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40281,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40282,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40283,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40283
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																		"qualifiedName": "LinkDefinition"
																	},
																	"name": "LinkDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40279
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 40286,
			"name": "emitEventStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "emit-event-step"
			},
			"defaultValue": "\"emit-event-step\""
		},
		{
			"id": 40287,
			"name": "emitEventStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Emit an event."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  emitEventStep\n} from \"@medusajs/medusa/core-flows\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    emitEventStep({\n      eventName: \"custom.created\",\n      data: {\n        id: \"123\"\n      }\n    })\n  }\n)\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 40296,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40297,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40296,
						40297
					]
				}
			],
			"signatures": [
				{
					"id": 40288,
					"name": "emitEventStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40289,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/emit-event.ts",
											"qualifiedName": "Input"
										},
										"name": "Input",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/emit-event.ts",
													"qualifiedName": "Input"
												},
												"name": "Input",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40290,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40291,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40292,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40293,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40294,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40295,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40295
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40291
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 40298,
			"name": "removeRemoteLinkStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "remove-remote-links"
			},
			"defaultValue": "\"remove-remote-links\""
		},
		{
			"id": 40299,
			"name": "removeRemoteLinkStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This step deletes linked records of a record.\n\nLearn more in the [Remote Link documentation](https://docs.medusajs.com/learn/fundamentals/module-links/remote-link#cascade-delete-linked-records)"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  removeRemoteLinkStep\n} from \"@medusajs/medusa/core-flows\"\nimport {\n  Modules\n} from \"@medusajs/framework/utils\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    removeRemoteLinkStep([{\n      [Modules.PRODUCT]: {\n        product_id: \"prod_123\",\n      },\n    }])\n  }\n)\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 40309,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40310,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40309,
						40310
					]
				}
			],
			"signatures": [
				{
					"id": 40300,
					"name": "removeRemoteLinkStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40301,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/remove-remote-links.ts",
											"qualifiedName": "RemoveRemoteLinksStepInput"
										},
										"name": "RemoveRemoteLinksStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/remove-remote-links.ts",
													"qualifiedName": "RemoveRemoteLinksStepInput"
												},
												"name": "RemoveRemoteLinksStepInput",
												"package": "@medusajs/core-flows"
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 40302,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {}
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/modules-sdk/src/remote-link.ts",
									"qualifiedName": "DeleteEntityInput"
								},
								"name": "DeleteEntityInput",
								"package": "@medusajs/modules-sdk"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/modules-sdk/src/remote-link.ts",
													"qualifiedName": "DeleteEntityInput"
												},
												"name": "DeleteEntityInput",
												"package": "@medusajs/modules-sdk"
											}
										]
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40303,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40304,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40305,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40306,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40307,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40308,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40308
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/modules-sdk/src/remote-link.ts",
																			"qualifiedName": "DeleteEntityInput"
																		},
																		"name": "DeleteEntityInput",
																		"package": "@medusajs/modules-sdk"
																	}
																]
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40304
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/modules-sdk/src/remote-link.ts",
													"qualifiedName": "DeleteEntityInput"
												},
												"name": "DeleteEntityInput",
												"package": "@medusajs/modules-sdk"
											}
										]
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 40311,
			"name": "updateRemoteLinksStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "update-remote-links-step"
			},
			"defaultValue": "\"update-remote-links-step\""
		},
		{
			"id": 40312,
			"name": "updateRemoteLinksStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"children": [
				{
					"id": 40321,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40322,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40321,
						40322
					]
				}
			],
			"signatures": [
				{
					"id": 40313,
					"name": "updateRemoteLinksStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40314,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
														"qualifiedName": "LinkDefinition"
													},
													"name": "LinkDefinition",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
												"qualifiedName": "WorkflowData"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
														"qualifiedName": "LinkDefinition"
													},
													"name": "LinkDefinition",
													"package": "@medusajs/types"
												}
											],
											"name": "WorkflowData",
											"package": "@medusajs/workflows-sdk"
										}
									]
								}
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
										"qualifiedName": "LinkDefinition"
									},
									"name": "LinkDefinition",
									"package": "@medusajs/types"
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40315,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40316,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40317,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40318,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40319,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40320,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40320
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
																		"qualifiedName": "LinkDefinition"
																	},
																	"name": "LinkDefinition",
																	"package": "@medusajs/types"
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40316
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
												"qualifiedName": "LinkDefinition"
											},
											"name": "LinkDefinition",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 40323,
			"name": "UseQueryGraphStepInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 40326,
					"name": "TEntry",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-object-from-string.ts",
							"qualifiedName": "RemoteQueryInput"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 40326,
								"name": "TEntry",
								"package": "@medusajs/core-flows",
								"refersToTypeParameter": true
							}
						],
						"name": "RemoteQueryInput",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 40324,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 40325,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
											"qualifiedName": "RemoteJoinerOptions"
										},
										"name": "RemoteJoinerOptions",
										"package": "@medusajs/types"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										40325
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 40327,
			"name": "useQueryGraphStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This step fetches data across modules using the Query.\n\nLearn more in the [Query documentation](https://docs.medusajs.com/learn/fundamentals/module-links/query)."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To retrieve a list of records of a data model:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  useQueryGraphStep\n} from \"@medusajs/medusa/core-flows\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    const { data: products } = useQueryGraphStep({\n      entity: \"product\",\n      fields: [\n        \"*\",\n        \"variants.*\"\n      ]\n    })\n  }\n)\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo retrieve a single item instead of a an array:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nconst { data: products } = useQueryGraphStep({\n  entity: \"product\",\n  fields: [\n    \"*\",\n    \"variants.*\"\n  ],\n  filters: {\n    id: \"123\"\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo throw an error if a record isn't found matching the specified ID:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nconst { data: products } = useQueryGraphStep({\n  entity: \"product\",\n  fields: [\n    \"*\",\n    \"variants.*\"\n  ],\n  filters: {\n    id: \"123\"\n  },\n  options: {\n    throwIfKeyNotFound: true\n  }\n})\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo set pagination configurations:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nconst { data: products } = useQueryGraphStep({\n  entity: \"product\",\n  fields: [\n    \"*\",\n    \"variants.*\"\n  ],\n  filters: {\n    id: \"123\"\n  },\n  pagination: {\n    take: 10,\n    skip: 10,\n    order: {\n      created_at: \"DESC\"\n    }\n  }\n})\n```"
							}
						]
					}
				]
			},
			"signatures": [
				{
					"id": 40328,
					"name": "useQueryGraphStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"typeParameters": [
						{
							"id": 40329,
							"name": "TEntry",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {
								"isConst": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 40330,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 40323,
								"typeArguments": [
									{
										"type": "reference",
										"target": 40329,
										"name": "TEntry",
										"package": "@medusajs/core-flows",
										"refersToTypeParameter": true
									}
								],
								"name": "UseQueryGraphStepInput",
								"package": "@medusajs/core-flows"
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 40331,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40332,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "conditional",
														"checkType": {
															"type": "reference",
															"target": 40329,
															"name": "TEntry",
															"package": "@medusajs/core-flows",
															"refersToTypeParameter": true
														},
														"extendsType": {
															"type": "intrinsic",
															"name": "never"
														},
														"trueType": {
															"type": "array",
															"elementType": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": 40329,
																	"typeArguments": [
																		{
																			"type": "reference",
																			"target": 40329,
																			"name": "TEntry",
																			"package": "@medusajs/core-flows",
																			"refersToTypeParameter": true
																		}
																	],
																	"name": "TEntry",
																	"package": "@medusajs/core-flows",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-entry-points.ts",
																		"qualifiedName": "RemoteQueryEntryPoints"
																	},
																	"name": "RemoteQueryEntryPoints",
																	"package": "@medusajs/types"
																}
															}
														},
														"falseType": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "conditional",
																"checkType": {
																	"type": "reference",
																	"target": 40329,
																	"name": "TEntry",
																	"package": "@medusajs/core-flows",
																	"refersToTypeParameter": true
																},
																"extendsType": {
																	"type": "intrinsic",
																	"name": "never"
																},
																"trueType": {
																	"type": "array",
																	"elementType": {
																		"type": "indexedAccess",
																		"indexType": {
																			"type": "reference",
																			"target": 40329,
																			"typeArguments": [
																				{
																					"type": "reference",
																					"target": 40329,
																					"name": "TEntry",
																					"package": "@medusajs/core-flows",
																					"refersToTypeParameter": true
																				}
																			],
																			"name": "TEntry",
																			"package": "@medusajs/core-flows",
																			"refersToTypeParameter": true
																		},
																		"objectType": {
																			"type": "reference",
																			"target": {
																				"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query-entry-points.ts",
																				"qualifiedName": "RemoteQueryEntryPoints"
																			},
																			"name": "RemoteQueryEntryPoints",
																			"package": "@medusajs/types"
																		}
																	}
																},
																"falseType": {
																	"type": "array",
																	"elementType": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										},
										{
											"id": 40333,
											"name": "metadata",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
															"qualifiedName": "RemoteQueryFunctionReturnPagination"
														},
														"name": "RemoteQueryFunctionReturnPagination",
														"package": "@medusajs/types"
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "union",
																"types": [
																	{
																		"type": "intrinsic",
																		"name": "undefined"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
																			"qualifiedName": "RemoteQueryFunctionReturnPagination"
																		},
																		"name": "RemoteQueryFunctionReturnPagination",
																		"package": "@medusajs/types"
																	}
																]
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												40332,
												40333
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
									"qualifiedName": "GraphResultSet"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 40329,
										"name": "TEntry",
										"package": "@medusajs/core-flows",
										"refersToTypeParameter": true
									}
								],
								"name": "GraphResultSet",
								"package": "@medusajs/types"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
											"qualifiedName": "GraphResultSet"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40329,
												"name": "TEntry",
												"package": "@medusajs/core-flows",
												"refersToTypeParameter": true
											}
										],
										"name": "GraphResultSet",
										"package": "@medusajs/types"
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40334,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40335,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40336,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40337,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40338,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40339,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40339
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
																	"qualifiedName": "GraphResultSet"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": 40329,
																		"name": "TEntry",
																		"package": "@medusajs/core-flows",
																		"refersToTypeParameter": true
																	}
																],
																"name": "GraphResultSet",
																"package": "@medusajs/types"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40335
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
											"qualifiedName": "GraphResultSet"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 40329,
												"name": "TEntry",
												"package": "@medusajs/core-flows",
												"refersToTypeParameter": true
											}
										],
										"name": "GraphResultSet",
										"package": "@medusajs/types"
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 40340,
			"name": "RemoteStepInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The remote query's details."
					}
				]
			},
			"children": [
				{
					"id": 40341,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields to retrieve in the records."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 40342,
					"name": "variables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters, context variables, or pagination fields to apply when retrieving the records."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 40343,
					"name": "throw_if_key_not_found",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Throw an error if a record isn't found matching an ID specified in the filters."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 40344,
					"name": "throw_if_relation_not_found",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Throw an error if a specified relation isn't found."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 40345,
					"name": "list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the records as an array. If disabled, only one record is retrieved as an object."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40341,
						40342,
						40343,
						40344,
						40345
					]
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 40346,
					"name": "EntryStepInput"
				},
				{
					"type": "reference",
					"target": 40353,
					"name": "ServiceStepInput"
				}
			]
		},
		{
			"id": 40346,
			"name": "EntryStepInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The remote query's details."
					}
				]
			},
			"children": [
				{
					"id": 40348,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields to retrieve in the records."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40341,
						"name": "RemoteStepInput.fields"
					}
				},
				{
					"id": 40349,
					"name": "variables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters, context variables, or pagination fields to apply when retrieving the records."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40342,
						"name": "RemoteStepInput.variables"
					}
				},
				{
					"id": 40350,
					"name": "throw_if_key_not_found",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Throw an error if a record isn't found matching an ID specified in the filters."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40343,
						"name": "RemoteStepInput.throw_if_key_not_found"
					}
				},
				{
					"id": 40351,
					"name": "throw_if_relation_not_found",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Throw an error if a specified relation isn't found."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40344,
						"name": "RemoteStepInput.throw_if_relation_not_found"
					}
				},
				{
					"id": 40352,
					"name": "list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the records as an array. If disabled, only one record is retrieved as an object."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40345,
						"name": "RemoteStepInput.list"
					}
				},
				{
					"id": 40347,
					"name": "entry_point",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the data model to retrieve its records."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40348,
						40349,
						40350,
						40351,
						40352,
						40347
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 40340,
					"name": "RemoteStepInput",
					"package": "@medusajs/core-flows"
				}
			]
		},
		{
			"id": 40353,
			"name": "ServiceStepInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The remote query's details."
					}
				]
			},
			"children": [
				{
					"id": 40355,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The fields to retrieve in the records."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40341,
						"name": "RemoteStepInput.fields"
					}
				},
				{
					"id": 40356,
					"name": "variables",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters, context variables, or pagination fields to apply when retrieving the records."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40342,
						"name": "RemoteStepInput.variables"
					}
				},
				{
					"id": 40357,
					"name": "throw_if_key_not_found",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Throw an error if a record isn't found matching an ID specified in the filters."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40343,
						"name": "RemoteStepInput.throw_if_key_not_found"
					}
				},
				{
					"id": 40358,
					"name": "throw_if_relation_not_found",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Throw an error if a specified relation isn't found."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40344,
						"name": "RemoteStepInput.throw_if_relation_not_found"
					}
				},
				{
					"id": 40359,
					"name": "list",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to retrieve the records as an array. If disabled, only one record is retrieved as an object."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\ntrue\n```"
									}
								]
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 40345,
						"name": "RemoteStepInput.list"
					}
				},
				{
					"id": 40354,
					"name": "service",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the module's service."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40355,
						40356,
						40357,
						40358,
						40359,
						40354
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 40340,
					"name": "RemoteStepInput",
					"package": "@medusajs/core-flows"
				}
			]
		},
		{
			"id": 40360,
			"name": "useRemoteQueryStepId",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"type": {
				"type": "literal",
				"value": "use-remote-query"
			},
			"defaultValue": "\"use-remote-query\""
		},
		{
			"id": 40361,
			"name": "useRemoteQueryStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This step fetches data across modules using the remote query.\n\nLearn more in the [Remote Query documentation](https://docs.medusajs.com/learn/fundamentals/module-links/query).\n\n:::note\n\nThis step is deprecated. Use "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useQueryGraphStep",
						"target": 40327
					},
					{
						"kind": "text",
						"text": " instead.\n\n:::"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "To retrieve a list of records of a data model:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  useRemoteQueryStep\n} from \"@medusajs/medusa/core-flows\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    const products = useRemoteQueryStep({\n      entry_point: \"product\",\n      fields: [\n        \"*\",\n        \"variants.*\"\n      ]\n    })\n  }\n)\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo retrieve a single item instead of a an array:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  useRemoteQueryStep\n} from \"@medusajs/core-flows\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    const product = useRemoteQueryStep({\n      entry_point: \"product\",\n      fields: [\n        \"*\",\n        \"variants.*\"\n      ],\n      variables: {\n        filters: {\n          id: \"123\"\n        }\n      },\n      list: false\n    })\n  }\n)\n```"
							},
							{
								"kind": "text",
								"text": "\n\nTo throw an error if a record isn't found matching the specified ID:\n\n"
							},
							{
								"kind": "code",
								"text": "```ts\nimport {\n  createWorkflow\n} from \"@medusajs/framework/workflows-sdk\"\nimport {\n  useRemoteQueryStep\n} from \"@medusajs/core-flows\"\n\nconst helloWorldWorkflow = createWorkflow(\n  \"hello-world\",\n  () => {\n    const product = useRemoteQueryStep({\n      entry_point: \"product\",\n      fields: [\n        \"*\",\n        \"variants.*\"\n      ],\n      variables: {\n        filters: {\n          id: \"123\"\n        }\n      },\n      list: false,\n      throw_if_key_not_found: true\n    })\n  }\n)\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 40364,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40365,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40364,
						40365
					]
				}
			],
			"signatures": [
				{
					"id": 40362,
					"name": "useRemoteQueryStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40363,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 40346,
										"name": "EntryStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": 40353,
										"name": "ServiceStepInput",
										"package": "@medusajs/core-flows"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"target": 40346,
														"name": "EntryStepInput",
														"package": "@medusajs/core-flows"
													},
													{
														"type": "reference",
														"target": 40353,
														"name": "ServiceStepInput",
														"package": "@medusajs/core-flows"
													}
												]
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			]
		},
		{
			"id": 40366,
			"name": "validatePresenceOfStep",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "This step validates the presence of attributes on an object"
					}
				]
			},
			"children": [
				{
					"id": 40381,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 40382,
					"name": "__step__",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						40381,
						40382
					]
				}
			],
			"signatures": [
				{
					"id": 40367,
					"name": "validatePresenceOfStep",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"parameters": [
						{
							"id": 40368,
							"name": "input",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reflection",
										"declaration": {
											"id": 40369,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 40370,
													"name": "entity",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															},
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												},
												{
													"id": 40371,
													"name": "fields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														40370,
														40371
													]
												}
											]
										}
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
											"qualifiedName": "WorkflowData"
										},
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 40372,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 40373,
															"name": "entity",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Record"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	},
																	{
																		"type": "intrinsic",
																		"name": "unknown"
																	}
																],
																"name": "Record",
																"package": "typescript"
															}
														},
														{
															"id": 40374,
															"name": "fields",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																40373,
																40374
															]
														}
													]
												}
											}
										],
										"name": "WorkflowData",
										"package": "@medusajs/workflows-sdk"
									}
								]
							}
						}
					],
					"type": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "WorkflowDataProperties"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "WorkflowDataProperties",
								"package": "@medusajs/workflows-sdk"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 40375,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 40376,
											"name": "config",
											"variant": "declaration",
											"kind": 2048,
											"flags": {},
											"signatures": [
												{
													"id": 40377,
													"name": "config",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 40378,
															"name": "config",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intersection",
																"types": [
																	{
																		"type": "reflection",
																		"declaration": {
																			"id": 40379,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 40380,
																					"name": "name",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {
																						"isOptional": true
																					},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						40380
																					]
																				}
																			]
																		}
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Omit"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../../../packages/core/orchestration/src/transaction/types.ts",
																					"qualifiedName": "TransactionStepsDefinition"
																				},
																				"name": "TransactionStepsDefinition",
																				"package": "@medusajs/orchestration"
																			},
																			{
																				"type": "union",
																				"types": [
																					{
																						"type": "literal",
																						"value": "next"
																					},
																					{
																						"type": "literal",
																						"value": "uuid"
																					},
																					{
																						"type": "literal",
																						"value": "action"
																					}
																				]
																			}
																		],
																		"name": "Omit",
																		"package": "typescript"
																	}
																]
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
															"qualifiedName": "WorkflowData"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "unknown"
															}
														],
														"name": "WorkflowData",
														"package": "@medusajs/workflows-sdk"
													}
												}
											]
										}
									],
									"groups": [
										{
											"title": "Methods",
											"children": [
												40376
											]
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
									"qualifiedName": "StepFunctionReturnConfig"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "StepFunctionReturnConfig",
								"package": "@medusajs/workflows-sdk"
							}
						]
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				40340,
				40346,
				40353
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				40273,
				40323
			]
		},
		{
			"title": "Variables",
			"children": [
				40261,
				40274,
				40286,
				40298,
				40311,
				40360
			]
		},
		{
			"title": "Functions",
			"children": [
				40262,
				40275,
				40287,
				40299,
				40312,
				40327,
				40361,
				40366
			]
		}
	],
	"packageName": "@medusajs/core-flows",
	"symbolIdMap": {
		"40260": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/index.ts",
			"qualifiedName": ""
		},
		"40261": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/create-remote-links.ts",
			"qualifiedName": "createLinksStepId"
		},
		"40262": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/create-remote-links.ts",
			"qualifiedName": "createRemoteLinkStep"
		},
		"40263": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "createRemoteLinkStep"
		},
		"40264": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40265": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40266": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40267": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40268": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40269": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40270": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40271": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40272": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"40273": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/dismiss-remote-links.ts",
			"qualifiedName": "DismissRemoteLinksStepInput"
		},
		"40274": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/dismiss-remote-links.ts",
			"qualifiedName": "dismissRemoteLinkStepId"
		},
		"40275": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/dismiss-remote-links.ts",
			"qualifiedName": "dismissRemoteLinkStep"
		},
		"40276": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "dismissRemoteLinkStep"
		},
		"40277": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40278": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40279": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40280": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40281": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40282": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40283": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40284": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40285": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"40286": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/emit-event.ts",
			"qualifiedName": "emitEventStepId"
		},
		"40287": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/emit-event.ts",
			"qualifiedName": "emitEventStep"
		},
		"40288": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "emitEventStep"
		},
		"40289": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40290": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40291": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40292": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40293": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40294": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40295": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40296": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40297": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"40298": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/remove-remote-links.ts",
			"qualifiedName": "removeRemoteLinkStepId"
		},
		"40299": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/remove-remote-links.ts",
			"qualifiedName": "removeRemoteLinkStep"
		},
		"40300": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "removeRemoteLinkStep"
		},
		"40301": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40302": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40303": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40304": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40305": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40306": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40307": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40308": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40309": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40310": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"40311": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/update-remote-links.ts",
			"qualifiedName": "updateRemoteLinksStepId"
		},
		"40312": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/update-remote-links.ts",
			"qualifiedName": "updateRemoteLinksStep"
		},
		"40313": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "updateRemoteLinksStep"
		},
		"40314": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40315": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40316": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40317": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40318": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40319": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40320": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40321": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40322": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"40323": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "UseQueryGraphStepInput"
		},
		"40324": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "__type"
		},
		"40325": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "__type.options"
		},
		"40326": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "TEntry"
		},
		"40327": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "useQueryGraphStep"
		},
		"40328": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "useQueryGraphStep"
		},
		"40329": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "TEntry"
		},
		"40330": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-query-graph.ts",
			"qualifiedName": "input"
		},
		"40331": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40332": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "data"
		},
		"40333": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/remote-query.ts",
			"qualifiedName": "metadata"
		},
		"40334": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40335": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40336": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40337": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40338": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40339": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40340": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput"
		},
		"40341": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.fields"
		},
		"40342": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.variables"
		},
		"40343": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.throw_if_key_not_found"
		},
		"40344": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.throw_if_relation_not_found"
		},
		"40345": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.list"
		},
		"40346": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "EntryStepInput"
		},
		"40347": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "EntryStepInput.entry_point"
		},
		"40348": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.fields"
		},
		"40349": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.variables"
		},
		"40350": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.throw_if_key_not_found"
		},
		"40351": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.throw_if_relation_not_found"
		},
		"40352": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.list"
		},
		"40353": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "ServiceStepInput"
		},
		"40354": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "ServiceStepInput.service"
		},
		"40355": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.fields"
		},
		"40356": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.variables"
		},
		"40357": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.throw_if_key_not_found"
		},
		"40358": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.throw_if_relation_not_found"
		},
		"40359": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "RemoteStepInput.list"
		},
		"40360": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "useRemoteQueryStepId"
		},
		"40361": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/use-remote-query.ts",
			"qualifiedName": "useRemoteQueryStep"
		},
		"40362": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "useRemoteQueryStep"
		},
		"40363": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40364": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40365": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		},
		"40366": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "validatePresenceOfStep"
		},
		"40367": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "validatePresenceOfStep"
		},
		"40368": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "input"
		},
		"40369": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "__type"
		},
		"40370": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "__type.entity"
		},
		"40371": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "__type.fields"
		},
		"40372": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "__type"
		},
		"40373": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "__type.entity"
		},
		"40374": {
			"sourceFileName": "../../../../packages/core/core-flows/src/common/steps/validate-presence-of.ts",
			"qualifiedName": "__type.fields"
		},
		"40375": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40376": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40377": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.config"
		},
		"40378": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "config"
		},
		"40379": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type"
		},
		"40380": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.name"
		},
		"40381": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__type"
		},
		"40382": {
			"sourceFileName": "../../../../packages/core/workflows-sdk/src/utils/composer/type.ts",
			"qualifiedName": "__type.__step__"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/core-flows/src/common/index.ts"
		},
		"reflections": {
			"1": 40260
		}
	}
}
