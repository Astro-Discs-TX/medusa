{
	"id": 44043,
	"name": "notification",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 44044,
			"name": "AbstractNotificationProviderService",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "### constructor\n\nThe constructor allows you to access resources from the module's container using the first parameter,\nand the module's options using the second parameter.\n\nIf you're creating a client or establishing a connection with a third-party service, do it in the constructor.\n\n#### Example\n\n"
					},
					{
						"kind": "code",
						"text": "```ts\nimport { AbstractNotificationProviderService } from \"@medusajs/framework/utils\"\nimport { Logger } from \"@medusajs/framework/types\"\n\ntype InjectedDependencies = {\n  logger: Logger\n}\n\ntype Options = {\n  apiKey: string\n}\n\nclass MyNotificationProviderService extends AbstractNotificationProviderService {\n  protected logger_: Logger\n  protected options_: Options\n  // assuming you're initializing a client\n  protected client\n\n  constructor (\n    { logger }: InjectedDependencies,\n    options: Options\n  ) {\n    super()\n\n    this.logger_ = logger\n    this.options_ = options\n\n    // assuming you're initializing a client\n    this.client = new Client(options)\n  }\n}\n\nexport default MyNotificationProviderService\n```"
					}
				]
			},
			"children": [
				{
					"id": 44045,
					"name": "identifier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Each notification provider has a unique ID used to identify it."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nclass MyNotificationProviderService extends AbstractNotificationProviderService {\n  static identifier = \"my-notification\"\n  // ...\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "abstract-notification-provider.ts",
							"line": 60,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/utils/src/notification/abstract-notification-provider.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 44046,
					"name": "validateOptions",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "abstract-notification-provider.ts",
							"line": 81,
							"character": 9,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/utils/src/notification/abstract-notification-provider.ts#L81"
						}
					],
					"signatures": [
						{
							"id": 44047,
							"name": "validateOptions",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method validates the options of the provider set in "
									},
									{
										"kind": "code",
										"text": "`medusa-config.ts`"
									},
									{
										"kind": "text",
										"text": ".\nImplementing this method is optional. It's useful if your provider requires custom validation.\n\nIf the options aren't valid, throw an error."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nclass MyNotificationProviderService extends AbstractNotificationProviderService {\n  static validateOptions(options: Record<any, any>) {\n    if (!options.apiKey) {\n      throw new MedusaError(\n        MedusaError.Types.INVALID_DATA,\n        \"API key is required in the provider's options.\"\n      )\n    }\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "abstract-notification-provider.ts",
									"line": 81,
									"character": 9,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/utils/src/notification/abstract-notification-provider.ts#L81"
								}
							],
							"parameters": [
								{
									"id": 44048,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The provider's options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 44049,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 44050,
							"name": "AbstractNotificationProviderService",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 44044,
								"name": "AbstractNotificationProviderService",
								"package": "@medusajs/utils"
							}
						}
					]
				},
				{
					"id": 44051,
					"name": "send",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "abstract-notification-provider.ts",
							"line": 114,
							"character": 8,
							"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/utils/src/notification/abstract-notification-provider.ts#L114"
						}
					],
					"signatures": [
						{
							"id": 44052,
							"name": "send",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to send a notification using the third-party provider or your custom logic."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The result of sending\nthe notification."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// other imports...\nimport {\n  ProviderSendNotificationDTO,\n  ProviderSendNotificationResultsDTO\n} from \"@medusajs/framework/types\"\n\nclass MyNotificationProviderService extends AbstractNotificationProviderService {\n  // ...\n  async send(\n    notification: ProviderSendNotificationDTO\n  ): Promise<ProviderSendNotificationResultsDTO> {\n    // TODO send the notification using a third-party\n    // provider or custom logic.\n    // for example:\n    return this.client.send({\n      email: notification.to,\n      template: notification.template,\n      template_data: notification.data\n    })\n  }\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "abstract-notification-provider.ts",
									"line": 114,
									"character": 8,
									"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/utils/src/notification/abstract-notification-provider.ts#L114"
								}
							],
							"parameters": [
								{
									"id": 44053,
									"name": "notification",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the\nnotification to send."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
											"qualifiedName": "ProviderSendNotificationDTO"
										},
										"name": "ProviderSendNotificationDTO",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
											"qualifiedName": "ProviderSendNotificationResultsDTO"
										},
										"name": "ProviderSendNotificationResultsDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"implementationOf": {
								"type": "reference",
								"target": -1,
								"name": "INotificationProvider.send"
							}
						}
					],
					"implementationOf": {
						"type": "reference",
						"target": -1,
						"name": "INotificationProvider.send"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						44049
					]
				},
				{
					"title": "Properties",
					"children": [
						44045
					]
				},
				{
					"title": "Methods",
					"children": [
						44046,
						44051
					]
				}
			],
			"sources": [
				{
					"fileName": "abstract-notification-provider.ts",
					"line": 48,
					"character": 13,
					"url": "https://github.com/medusajs/medusa/blob/c53d25e44227bebb4ff4e66e9448d2066f0b7c10/packages/core/utils/src/notification/abstract-notification-provider.ts#L48"
				}
			],
			"implementedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../../../packages/core/types/src/notification/provider.ts",
						"qualifiedName": "INotificationProvider"
					},
					"name": "INotificationProvider",
					"package": "@medusajs/types"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				44044
			]
		}
	],
	"packageName": "@medusajs/utils",
	"symbolIdMap": {
		"44043": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": ""
		},
		"44044": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "AbstractNotificationProviderService"
		},
		"44045": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "AbstractNotificationProviderService.identifier"
		},
		"44046": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "AbstractNotificationProviderService.validateOptions"
		},
		"44047": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "AbstractNotificationProviderService.validateOptions"
		},
		"44048": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "options"
		},
		"44051": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "AbstractNotificationProviderService.send"
		},
		"44052": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "AbstractNotificationProviderService.send"
		},
		"44053": {
			"sourceFileName": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts",
			"qualifiedName": "notification"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/utils/src/notification/abstract-notification-provider.ts"
		},
		"reflections": {
			"1": 44043
		}
	}
}
