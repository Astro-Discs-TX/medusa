{
	"id": 5876,
	"name": "inventory-next",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 6303,
			"name": "FindConfigOrder",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Temporary type fixing to allow any level of orders until we get to properly clean all the types"
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 55,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6304,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 55,
							"character": 30
						}
					],
					"indexSignatures": [
						{
							"id": 6305,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 6306,
									"name": "Key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 6307,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											}
										]
									},
									{
										"type": "reference",
										"target": 6303,
										"name": "FindConfigOrder",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "ASC"
									},
									{
										"type": "literal",
										"value": "DESC"
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 6108,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 6109,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intersection",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 6110,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {}
											}
										}
									]
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 6118,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 6111,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 74,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6112,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 79,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6113,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result.\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 87,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6114,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 93,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6303,
						"name": "FindConfigOrder",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6115,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 99,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6116,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6117,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 109,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6109,
						6111,
						6112,
						6113,
						6114,
						6115,
						6116,
						6117
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 65,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 6118,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 6295,
			"name": "StringComparisonOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on strings."
					}
				]
			},
			"children": [
				{
					"id": 6296,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 195,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6297,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 200,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6298,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than or equal to this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 205,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6299,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than or equal to this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 210,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6300,
					"name": "contains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must contain this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 215,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6301,
					"name": "starts_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must start with this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 220,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6302,
					"name": "ends_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must end with this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 225,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6296,
						6297,
						6298,
						6299,
						6300,
						6301,
						6302
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 191,
					"character": 17
				}
			]
		},
		{
			"id": 6322,
			"name": "NumericalComparisonOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on numbers."
					}
				]
			},
			"children": [
				{
					"id": 6323,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 235,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6324,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 240,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6325,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than or equal to this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 245,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6326,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than or equal to this value."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
							"line": 250,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6323,
						6324,
						6325,
						6326
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/common/common.ts",
					"line": 231,
					"character": 17
				}
			]
		},
		{
			"id": 6327,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 6328,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6327,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6330,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6330,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 6329,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6327,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6330,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6330,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6328,
						6329
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
					"line": 11,
					"character": 17
				}
			],
			"typeParameters": [
				{
					"id": 6330,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 6175,
					"name": "FilterableInventoryLevelProps"
				}
			]
		},
		{
			"id": 6255,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 6256,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 145,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6257,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6256
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 141,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6257,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 6258,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 6259,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
							"line": 157,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6260,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6259
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/repository-service.ts",
					"line": 153,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6260,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 6405,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 9,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 6406,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6406,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6406,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 6430,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 6434,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6406,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 6437,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6406,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 6407,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 15,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 6408,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6408,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 6408,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 6408,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 6430,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 18,
					"character": 5
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6431,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6432,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 28,
											"character": 6
										}
									],
									"signatures": [
										{
											"id": 6433,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 28,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										6432
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 27,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6468,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 37,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 6469,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6469,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 6469,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 6469,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 6458,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 40,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 6467,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6467,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 6459,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 6460,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
										"line": 41,
										"character": 2
									}
								],
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									6460
								]
							}
						],
						"sources": [
							{
								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
								"line": 40,
								"character": 28
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 6468,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6467,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 6461,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6462,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 45,
											"character": 6
										}
									],
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6462
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 44,
									"character": 14
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6468,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 6467,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 6463,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6464,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
												"line": 49,
												"character": 6
											}
										],
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6464
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
										"line": 48,
										"character": 14
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 6468,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 6467,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 6465,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 6466,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 53,
													"character": 6
												}
											],
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												6466
											]
										}
									],
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 52,
											"character": 14
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 6468,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 6331,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 58,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6352,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6332,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6333,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6405,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6352,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6334,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 60,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6405,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6352,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6335,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 61,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 6407,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6352,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6407,
											"typeArguments": [
												{
													"type": "reference",
													"target": 6352,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 6336,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 62,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6407,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6352,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6337,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 63,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6407,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6352,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6338,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 64,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6407,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6352,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 6339,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 65,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6405,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6352,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6340,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 66,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6407,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6352,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6341,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 67,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6407,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6352,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6342,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 68,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6407,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6352,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6343,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 69,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6407,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6352,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6344,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 70,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6345,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 71,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6346,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 72,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6347,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 73,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6348,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 74,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 6349,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 75,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 6350,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 76,
									"character": 2
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 6351,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
									"line": 77,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6333,
								6334,
								6335,
								6336,
								6337,
								6338,
								6339,
								6340,
								6341,
								6342,
								6343,
								6344,
								6345,
								6346,
								6347,
								6348,
								6349,
								6350,
								6351
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
							"line": 58,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 6455,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 80,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 6456,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6456,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 6407,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6456,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 6458,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6456,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 6437,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 81,
					"character": 5
				}
			],
			"typeParameters": [
				{
					"id": 6438,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6331,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6455,
								"typeArguments": [
									{
										"type": "reference",
										"target": 6438,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 6455,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6438,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6455,
							"typeArguments": [
								{
									"type": "reference",
									"target": 6438,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 6457,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 87,
					"character": 5
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 0
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					}
				]
			}
		},
		{
			"id": 6449,
			"name": "FilterQueryProperties",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 89,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6453,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 6454,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "Key",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 6453,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "conditional",
					"checkType": {
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "Key"
							},
							"name": "Key",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 6453,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"extendsType": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "boolean"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "bigint"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 6453,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 6331,
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
												"qualifiedName": "Key"
											},
											"name": "Key",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 6453,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 6453,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "inferred",
							"name": "U"
						},
						"trueType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "U"
								},
								"name": "U",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 6450,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
											"line": 99,
											"character": 16
										}
									],
									"indexSignatures": [
										{
											"id": 6451,
											"name": "__index",
											"variant": "signature",
											"kind": 8192,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
													"line": 99,
													"character": 18
												}
											],
											"parameters": [
												{
													"id": 6452,
													"name": "x",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "V"
												},
												"name": "V",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									]
								}
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "V"
									},
									"name": "V",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "object"
								},
								"trueType": {
									"type": "reference",
									"target": 6434,
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Partial"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
														"qualifiedName": "V"
													},
													"name": "V",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "Partial",
											"package": "typescript"
										},
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 6454,
												"name": "Prev",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 6457,
												"name": "PrevLimit",
												"package": "@medusajs/types"
											}
										}
									],
									"name": "FilterQuery",
									"package": "@medusajs/types"
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						},
						"falseType": {
							"type": "intrinsic",
							"name": "never"
						}
					}
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 6434,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/utils.ts",
					"line": 107,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6435,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 6436,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 6436,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 6435,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 6442,
						"typeArguments": [
							{
								"type": "inferred",
								"name": "Prototype"
							}
						],
						"name": "Constructor",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "reference",
						"target": 6449,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Prototype"
								},
								"name": "Prototype",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 6436,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					},
					"falseType": {
						"type": "reference",
						"target": 6449,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6435,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 6436,
								"name": "Prev",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQueryProperties",
						"package": "@medusajs/types"
					}
				}
			}
		},
		{
			"id": 6439,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6440,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6441,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the event's group. Grouped events are useful when you have distributed transactions\nwhere you need to explicitly group, release and clear events upon lifecycle events of a transaction.\n\nWhen set, you must release the grouped events using the Event Module's "
											},
											{
												"kind": "code",
												"text": "`releaseGroupedEvents`"
											},
											{
												"kind": "text",
												"text": " method to emit the events."
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 24,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6441
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 17,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6424,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 27,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6429,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6425,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6426,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The event's name."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nuser.created\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 34,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6427,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Additional meadata to pass with the event."
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 38,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6439,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 6428,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The data payload that subscribers receive. For example, the ID or IDs of the created user. (e.g. { id: \"123\" } or { ids: [\"123\", \"456\"] })"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 42,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6429,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6426,
								6427,
								6428
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 27,
							"character": 37
						}
					]
				}
			}
		},
		{
			"id": 6384,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of an event to emit."
					}
				]
			},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 48,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6387,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 6424,
						"typeArguments": [
							{
								"type": "reference",
								"target": 6387,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6385,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6386,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
											"line": 49,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6386
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 48,
									"character": 54
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6395,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
					"line": 52,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6404,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6396,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6397,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 53,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6398,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 54,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6404,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 6399,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 55,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6400,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 56,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6401,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 57,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6402,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 58,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 6403,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
									"line": 59,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6397,
								6398,
								6399,
								6400,
								6401,
								6402,
								6403
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/event-bus/common.ts",
							"line": 52,
							"character": 44
						}
					]
				}
			}
		},
		{
			"id": 6119,
			"name": "InventoryItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory item details."
					}
				]
			},
			"children": [
				{
					"id": 6120,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6121,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6122,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6123,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6124,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6125,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The mid code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6126,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6127,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6128,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6129,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6130,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6131,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6132,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6133,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6134,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6135,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6136,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 90,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6137,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 95,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6120,
						6121,
						6122,
						6123,
						6124,
						6125,
						6126,
						6127,
						6128,
						6129,
						6130,
						6131,
						6132,
						6133,
						6134,
						6135,
						6136,
						6137
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 6100,
			"name": "FilterableInventoryItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved inventory items."
					}
				]
			},
			"children": [
				{
					"id": 6101,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search inventory items' attributes."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 107,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6102,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 112,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6103,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by the ID of their associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 117,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6104,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 122,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6295,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6105,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 127,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6106,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Codes to filter inventory items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 132,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 6295,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6107,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by whether they require shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
							"line": 137,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6101,
						6102,
						6103,
						6104,
						6105,
						6106,
						6107
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-item.ts",
					"line": 103,
					"character": 17
				}
			]
		},
		{
			"id": 6184,
			"name": "InventoryLevelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory level details."
					}
				]
			},
			"children": [
				{
					"id": 6185,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 10,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6186,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6187,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6188,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 25,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6189,
					"name": "reserved_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 30,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6190,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6191,
					"name": "available_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The available quantity of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6192,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 45,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6193,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6194,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6195,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the inventory level."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6185,
						6186,
						6187,
						6188,
						6189,
						6190,
						6191,
						6192,
						6193,
						6194,
						6195
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
					"line": 6,
					"character": 17
				}
			]
		},
		{
			"id": 6175,
			"name": "FilterableInventoryLevelProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved inventory levels."
					}
				]
			},
			"children": [
				{
					"id": 6182,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6175,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6327,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6175,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6328,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 6183,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/dal/index.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 6175,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 6327,
									"typeArguments": [
										{
											"type": "reference",
											"target": 6175,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 6329,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 6176,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 71,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6177,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID of their associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6178,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID of their associated inventory location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6179,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`stocked_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 86,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 6331,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Number"
										},
										"name": "Number",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6180,
					"name": "reserved_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`reserved_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 91,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 6331,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Number"
										},
										"name": "Number",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6181,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`incoming_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
							"line": 96,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 6331,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Number"
										},
										"name": "Number",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6182,
						6183,
						6176,
						6177,
						6178,
						6179,
						6180,
						6181
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/inventory-level.ts",
					"line": 66,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6327,
					"typeArguments": [
						{
							"type": "reference",
							"target": 6175,
							"name": "FilterableInventoryLevelProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6162,
			"name": "ReservationItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The reservation item details."
					}
				]
			},
			"children": [
				{
					"id": 6163,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 14,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6164,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6165,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6166,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 29,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6261,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6167,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 34,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6168,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6169,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6170,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created by of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6171,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 54,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6172,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 59,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6173,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6174,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 69,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6163,
						6164,
						6165,
						6166,
						6167,
						6168,
						6169,
						6170,
						6171,
						6172,
						6173,
						6174
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
					"line": 10,
					"character": 17
				}
			]
		},
		{
			"id": 6153,
			"name": "FilterableReservationItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved reservation items."
					}
				]
			},
			"children": [
				{
					"id": 6154,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter reservation items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 81,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6155,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 89,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6156,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 94,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6157,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 99,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6158,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 104,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6159,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description filters to apply on the reservation items' "
							},
							{
								"kind": "code",
								"text": "`description`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 109,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 6295,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 6160,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The \"created by\" values to filter reservation items by."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 114,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6161,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on the reservation items' "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
							"line": 119,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 6322,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6154,
						6155,
						6156,
						6157,
						6158,
						6159,
						6160,
						6161
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/common/reservation-item.ts",
					"line": 77,
					"character": 17
				}
			]
		},
		{
			"id": 6232,
			"name": "UpdateInventoryItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The data to update in an inventory item."
					}
				]
			},
			"children": [
				{
					"id": 6233,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory item to update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 9,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6234,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.sku"
					}
				},
				{
					"id": 6235,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.origin_country"
					}
				},
				{
					"id": 6236,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.mid_code"
					}
				},
				{
					"id": 6237,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.material"
					}
				},
				{
					"id": 6238,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.weight"
					}
				},
				{
					"id": 6239,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.length"
					}
				},
				{
					"id": 6240,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.height"
					}
				},
				{
					"id": 6241,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.width"
					}
				},
				{
					"id": 6242,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.title"
					}
				},
				{
					"id": 6243,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.description"
					}
				},
				{
					"id": 6244,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.thumbnail"
					}
				},
				{
					"id": 6245,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.metadata"
					}
				},
				{
					"id": 6246,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.hs_code"
					}
				},
				{
					"id": 6247,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.requires_shipping"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6233,
						6234,
						6235,
						6236,
						6237,
						6238,
						6239,
						6240,
						6241,
						6242,
						6243,
						6244,
						6245,
						6246,
						6247
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
					"line": 4,
					"character": 17
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 6206,
							"name": "CreateInventoryItemInput",
							"package": "@medusajs/types"
						}
					],
					"name": "Partial",
					"package": "typescript"
				}
			]
		},
		{
			"id": 6206,
			"name": "CreateInventoryItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory item to be created."
					}
				]
			},
			"children": [
				{
					"id": 6207,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6208,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6209,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6210,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6211,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6212,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6213,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6214,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 6215,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6216,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6217,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6218,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 6219,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6220,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6207,
						6208,
						6209,
						6210,
						6211,
						6212,
						6213,
						6214,
						6215,
						6216,
						6217,
						6218,
						6219,
						6220
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-item.ts",
					"line": 16,
					"character": 17
				}
			]
		},
		{
			"id": 6221,
			"name": "CreateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6222,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 7,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6223,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6224,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 15,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6225,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 19,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6222,
						6223,
						6224,
						6225
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 6226,
			"name": "UpdateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory level."
					}
				]
			},
			"children": [
				{
					"id": 6227,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "ID of the inventory level to update"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6228,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6229,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6230,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6231,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6227,
						6228,
						6229,
						6230,
						6231
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/inventory-level.ts",
					"line": 27,
					"character": 17
				}
			]
		},
		{
			"id": 6248,
			"name": "UpdateReservationItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a reservation item."
					}
				]
			},
			"children": [
				{
					"id": 6249,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reservation to update."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 12,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6250,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 16,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6261,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6251,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 20,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6252,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6253,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6254,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6249,
						6250,
						6251,
						6252,
						6253,
						6254
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
					"line": 8,
					"character": 17
				}
			]
		},
		{
			"id": 6196,
			"name": "CreateReservationItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the reservation item to be created."
					}
				]
			},
			"children": [
				{
					"id": 6197,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated line item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 44,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6198,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6199,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 52,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6200,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 56,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6261,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6201,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6202,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 64,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6203,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user or system that created the reservation. Can be any form of identification string."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 68,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6204,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An ID associated with an external third-party system that the reservation item is connected to."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 72,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 6205,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
							"line": 76,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6197,
						6198,
						6199,
						6200,
						6201,
						6202,
						6203,
						6204,
						6205
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/inventory/mutations/reservation-item.ts",
					"line": 40,
					"character": 17
				}
			]
		},
		{
			"id": 5877,
			"name": "IInventoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Inventory Module."
					}
				]
			},
			"children": [
				{
					"id": 5878,
					"name": "listInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 81,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L81"
						}
					],
					"signatures": [
						{
							"id": 5879,
							"name": "listInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 81,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L81"
								}
							],
							"parameters": [
								{
									"id": 5880,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6100,
										"name": "FilterableInventoryItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5881,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6119,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5882,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6119,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5883,
					"name": "listAndCountInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 143,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L143"
						}
					],
					"signatures": [
						{
							"id": 5884,
							"name": "listAndCountInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory items along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L143"
								}
							],
							"parameters": [
								{
									"id": 5885,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6100,
										"name": "FilterableInventoryItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5886,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6119,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5887,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6119,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5888,
					"name": "listReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 205,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L205"
						}
					],
					"signatures": [
						{
							"id": 5889,
							"name": "listReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of reservation items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of reservation items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 205,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L205"
								}
							],
							"parameters": [
								{
									"id": 5890,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved reservation items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6153,
										"name": "FilterableReservationItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5891,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6162,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5892,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6162,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5893,
					"name": "listAndCountReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 267,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L267"
						}
					],
					"signatures": [
						{
							"id": 5894,
							"name": "listAndCountReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of reservation items along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of reservation items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 267,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L267"
								}
							],
							"parameters": [
								{
									"id": 5895,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved reservation items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6153,
										"name": "FilterableReservationItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5896,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6162,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5897,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6162,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5898,
					"name": "listInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 329,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L329"
						}
					],
					"signatures": [
						{
							"id": 5899,
							"name": "listInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory levels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 329,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L329"
								}
							],
							"parameters": [
								{
									"id": 5900,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory levels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6175,
										"name": "FilterableInventoryLevelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5901,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6184,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5902,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6184,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5903,
					"name": "listAndCountInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 391,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 5904,
							"name": "listAndCountInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory levels along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 391,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L391"
								}
							],
							"parameters": [
								{
									"id": 5905,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory levels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6175,
										"name": "FilterableInventoryLevelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5906,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6184,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5907,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6184,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5908,
					"name": "retrieveInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 432,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L432"
						}
					],
					"signatures": [
						{
							"id": 5909,
							"name": "retrieveInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves an inventory item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a inventory item by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 432,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L432"
								}
							],
							"parameters": [
								{
									"id": 5910,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5911,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6119,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5912,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6119,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5913,
					"name": "retrieveInventoryLevelByItemAndLocation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 453,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L453"
						}
					],
					"signatures": [
						{
							"id": 5914,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves an inventory level based on its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 453,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L453"
								}
							],
							"parameters": [
								{
									"id": 5915,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5916,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5917,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6184,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5918,
					"name": "retrieveInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 497,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L497"
						}
					],
					"signatures": [
						{
							"id": 5919,
							"name": "retrieveInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves an inventory level by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a inventory level by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 497,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L497"
								}
							],
							"parameters": [
								{
									"id": 5920,
									"name": "inventoryLevelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory level's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5921,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6184,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5922,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6184,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5923,
					"name": "retrieveReservationItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 541,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L541"
						}
					],
					"signatures": [
						{
							"id": 5924,
							"name": "retrieveReservationItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a reservation item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a reservation item by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n:::note\n\nYou can only retrieve data models defined in the same module. To retrieve linked data models\nfrom other modules, use [Query](https://docs.medusajs.com/learn/fundamentals/module-links/query) instead.\n\n:::\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 541,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L541"
								}
							],
							"parameters": [
								{
									"id": 5925,
									"name": "reservationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservation's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 5926,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6108,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6162,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5927,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6162,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5928,
					"name": "createReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 564,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L564"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 584,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L584"
						}
					],
					"signatures": [
						{
							"id": 5929,
							"name": "createReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates reservation items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created reservation items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 564,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L564"
								}
							],
							"parameters": [
								{
									"id": 5930,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the reservation items to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6196,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5931,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6162,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5932,
							"name": "createReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a reservation item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 584,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L584"
								}
							],
							"parameters": [
								{
									"id": 5933,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the reservation item to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6196,
										"name": "CreateReservationItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5934,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6162,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5935,
					"name": "createInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 603,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L603"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 620,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L620"
						}
					],
					"signatures": [
						{
							"id": 5936,
							"name": "createInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates inventory items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 603,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L603"
								}
							],
							"parameters": [
								{
									"id": 5937,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory items to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6206,
											"name": "CreateInventoryItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5938,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6119,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5939,
							"name": "createInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates an inventory item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 620,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L620"
								}
							],
							"parameters": [
								{
									"id": 5940,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory item to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6206,
										"name": "CreateInventoryItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5941,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6119,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5942,
					"name": "createInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 648,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L648"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 668,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L668"
						}
					],
					"signatures": [
						{
							"id": 5943,
							"name": "createInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates inventory levels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory levels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 648,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L648"
								}
							],
							"parameters": [
								{
									"id": 5944,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory levels to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6221,
											"name": "CreateInventoryLevelInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5945,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6184,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5946,
							"name": "createInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates an inventory level."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 668,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L668"
								}
							],
							"parameters": [
								{
									"id": 5947,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory level to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6221,
										"name": "CreateInventoryLevelInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5948,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6184,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5949,
					"name": "updateInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 691,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L691"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 711,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L711"
						}
					],
					"signatures": [
						{
							"id": 5950,
							"name": "updateInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing inventory levels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory levels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 691,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L691"
								}
							],
							"parameters": [
								{
									"id": 5951,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6226,
											"name": "UpdateInventoryLevelInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5952,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6184,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5953,
							"name": "updateInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing inventory level."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 711,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L711"
								}
							],
							"parameters": [
								{
									"id": 5954,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6226,
										"name": "UpdateInventoryLevelInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5955,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6184,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5956,
					"name": "updateInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 729,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L729"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 753,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L753"
						}
					],
					"signatures": [
						{
							"id": 5957,
							"name": "updateInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing inventory item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 729,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L729"
								}
							],
							"parameters": [
								{
									"id": 5958,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6232,
										"name": "UpdateInventoryItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5959,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6119,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5960,
							"name": "updateInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing inventory items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 753,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L753"
								}
							],
							"parameters": [
								{
									"id": 5961,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the inventory items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6232,
											"name": "UpdateInventoryItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5962,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6119,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5963,
					"name": "updateReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 772,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L772"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 793,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L793"
						}
					],
					"signatures": [
						{
							"id": 5964,
							"name": "updateReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing reservation item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 772,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L772"
								}
							],
							"parameters": [
								{
									"id": 5965,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6248,
										"name": "UpdateReservationItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5966,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6162,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 5967,
							"name": "updateReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing reservation items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated reservation items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 793,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L793"
								}
							],
							"parameters": [
								{
									"id": 5968,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the reservation items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6248,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 5969,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6162,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5970,
					"name": "deleteReservationItemsByLineItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 810,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L810"
						}
					],
					"signatures": [
						{
							"id": 5971,
							"name": "deleteReservationItemsByLineItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a reservation item by its associated line item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation item is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 810,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L810"
								}
							],
							"parameters": [
								{
									"id": 5972,
									"name": "lineItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 5973,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5974,
					"name": "restoreReservationItemsByLineItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 837,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L837"
						}
					],
					"signatures": [
						{
							"id": 5975,
							"name": "restoreReservationItemsByLineItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation items are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 837,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L837"
								}
							],
							"parameters": [
								{
									"id": 5976,
									"name": "lineItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the line item(s)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 5977,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5978,
					"name": "deleteReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 854,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L854"
						}
					],
					"signatures": [
						{
							"id": 5979,
							"name": "deleteReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes reservation items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation item is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 854,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L854"
								}
							],
							"parameters": [
								{
									"id": 5980,
									"name": "reservationItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservation items' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 5981,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5982,
					"name": "softDeleteReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 873,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L873"
						}
					],
					"signatures": [
						{
							"id": 5983,
							"name": "softDeleteReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes reservations by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 873,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L873"
								}
							],
							"typeParameters": [
								{
									"id": 5984,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 5985,
									"name": "reservationItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5986,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6255,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5984,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5987,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5988,
					"name": "restoreReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 894,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L894"
						}
					],
					"signatures": [
						{
							"id": 5989,
							"name": "restoreReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted reservations by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 894,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L894"
								}
							],
							"typeParameters": [
								{
									"id": 5990,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 5991,
									"name": "reservationItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 5992,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the reservation's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6258,
										"typeArguments": [
											{
												"type": "reference",
												"target": 5990,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 5993,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5994,
					"name": "deleteInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 910,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L910"
						}
					],
					"signatures": [
						{
							"id": 5995,
							"name": "deleteInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes inventory items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory items are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 910,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L910"
								}
							],
							"parameters": [
								{
									"id": 5996,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 5997,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 5998,
					"name": "softDeleteInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 935,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L935"
						}
					],
					"signatures": [
						{
							"id": 5999,
							"name": "softDeleteInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes inventory items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`location_level_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 935,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L935"
								}
							],
							"typeParameters": [
								{
									"id": 6000,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 6001,
									"name": "inventoryItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory items' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6002,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6255,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6000,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6003,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6004,
					"name": "restoreInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 963,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L963"
						}
					],
					"signatures": [
						{
							"id": 6005,
							"name": "restoreInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted inventory items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`location_level_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 963,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L963"
								}
							],
							"typeParameters": [
								{
									"id": 6006,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 6007,
									"name": "inventoryItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory items' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6008,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the inventory item's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`location_levels`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6258,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6006,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6009,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6010,
					"name": "deleteInventoryItemLevelByLocationId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 982,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L982"
						}
					],
					"signatures": [
						{
							"id": 6011,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes inventory item's level by the associated location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 982,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L982"
								}
							],
							"parameters": [
								{
									"id": 6012,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 6013,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6014,
					"name": "deleteReservationItemByLocationId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 999,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L999"
						}
					],
					"signatures": [
						{
							"id": 6015,
							"name": "deleteReservationItemByLocationId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes reservation items by their associated location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when then reservation items are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 999,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L999"
								}
							],
							"parameters": [
								{
									"id": 6016,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 6017,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6018,
					"name": "deleteInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1018,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1018"
						}
					],
					"signatures": [
						{
							"id": 6019,
							"name": "deleteInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes an inventory level by its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory level is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1018,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1018"
								}
							],
							"parameters": [
								{
									"id": 6020,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6021,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6022,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6023,
					"name": "deleteInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1034,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1034"
						}
					],
					"signatures": [
						{
							"id": 6024,
							"name": "deleteInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes inventory levels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory levels are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1034,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1034"
								}
							],
							"parameters": [
								{
									"id": 6025,
									"name": "inventoryLevelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory levels' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 6026,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6027,
					"name": "softDeleteInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1053,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1053"
						}
					],
					"signatures": [
						{
							"id": 6028,
							"name": "softDeleteInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes inventory levels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1053,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1053"
								}
							],
							"typeParameters": [
								{
									"id": 6029,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 6030,
									"name": "inventoryLevelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory levels' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6031,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6255,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6029,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6032,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6033,
					"name": "restoreInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1074,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1074"
						}
					],
					"signatures": [
						{
							"id": 6034,
							"name": "restoreInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted inventory levels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1074,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1074"
								}
							],
							"typeParameters": [
								{
									"id": 6035,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 6036,
									"name": "inventoryLevelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory levels' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6037,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the inventory level's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6258,
										"typeArguments": [
											{
												"type": "reference",
												"target": 6035,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6038,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6039,
					"name": "adjustInventory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1105,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1105"
						},
						{
							"fileName": "inventory/service.ts",
							"line": 1148,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1148"
						}
					],
					"signatures": [
						{
							"id": 6040,
							"name": "adjustInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adjusts the inventory quantity of an item in a location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory([\n    // add to the inventory quantity\n    {\n      inventoryItemId: \"iitem_123\",\n      locationId: \"loc_123\",\n      adjustment: 5\n    },\n    // subtract from the inventory quantity\n    {\n      inventoryItemId: \"iitem_321\",\n      locationId: \"loc_321\",\n      adjustment: -5\n    }\n  ])\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1105,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1105"
								}
							],
							"parameters": [
								{
									"id": 6041,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The adjustments to make."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 6042,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 6043,
														"name": "inventoryItemId",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The inventory item's ID."
																}
															]
														},
														"sources": [
															{
																"fileName": "inventory/service.ts",
																"line": 1110,
																"character": 6,
																"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1110"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 6044,
														"name": "locationId",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The location's ID."
																}
															]
														},
														"sources": [
															{
																"fileName": "inventory/service.ts",
																"line": 1114,
																"character": 6,
																"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1114"
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 6045,
														"name": "adjustment",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"comment": {
															"summary": [
																{
																	"kind": "text",
																	"text": "The adjustment to make to the quantity."
																}
															]
														},
														"sources": [
															{
																"fileName": "inventory/service.ts",
																"line": 1118,
																"character": 6,
																"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1118"
															}
														],
														"type": {
															"type": "reference",
															"target": 6261,
															"name": "BigNumberInput",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															6043,
															6044,
															6045
														]
													}
												],
												"sources": [
													{
														"fileName": "inventory/service.ts",
														"line": 1106,
														"character": 10,
														"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1106"
													}
												]
											}
										}
									}
								},
								{
									"id": 6046,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6184,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 6047,
							"name": "adjustInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1148,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1148"
								}
							],
							"parameters": [
								{
									"id": 6048,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6049,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6050,
									"name": "adjustment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "the adjustment to make to the quantity."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6261,
										"name": "BigNumberInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6051,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6184,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6052,
					"name": "confirmInventory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1172,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1172"
						}
					],
					"signatures": [
						{
							"id": 6053,
							"name": "confirmInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the quantity is available."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1172,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1172"
								}
							],
							"parameters": [
								{
									"id": 6054,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6055,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6056,
									"name": "quantity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quantity to confirm its availability."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6261,
										"name": "BigNumberInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 6057,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6058,
					"name": "retrieveAvailableQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1194,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1194"
						}
					],
					"signatures": [
						{
							"id": 6059,
							"name": "retrieveAvailableQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the available quantity of an inventory item in the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The available quantity of the item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1194,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1194"
								}
							],
							"parameters": [
								{
									"id": 6060,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6061,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6062,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6262,
										"name": "IBigNumber",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6063,
					"name": "retrieveStockedQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1215,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1215"
						}
					],
					"signatures": [
						{
							"id": 6064,
							"name": "retrieveStockedQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stocked quantity of the item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1215,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1215"
								}
							],
							"parameters": [
								{
									"id": 6065,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6066,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6067,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6262,
										"name": "IBigNumber",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6068,
					"name": "retrieveReservedQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "inventory/service.ts",
							"line": 1236,
							"character": 2,
							"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1236"
						}
					],
					"signatures": [
						{
							"id": 6069,
							"name": "retrieveReservedQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The reserved quantity of the item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "inventory/service.ts",
									"line": 1236,
									"character": 2,
									"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L1236"
								}
							],
							"parameters": [
								{
									"id": 6070,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6071,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6072,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 6138,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 6262,
										"name": "IBigNumber",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						5878,
						5883,
						5888,
						5893,
						5898,
						5903,
						5908,
						5913,
						5918,
						5923,
						5928,
						5935,
						5942,
						5949,
						5956,
						5963,
						5970,
						5974,
						5978,
						5982,
						5988,
						5994,
						5998,
						6004,
						6010,
						6014,
						6018,
						6023,
						6027,
						6033,
						6039,
						6052,
						6058,
						6063,
						6068
					]
				}
			],
			"sources": [
				{
					"fileName": "inventory/service.ts",
					"line": 27,
					"character": 17,
					"url": "https://github.com/medusajs/medusa/blob/cab00ff2b8935fdd788157ee36402ae59b079268/packages/core/types/src/inventory/service.ts#L27"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 6086,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 6414,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6415,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6416,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6417,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 3,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6418,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 4,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6419,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 5,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6420,
							"name": "entity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 6,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 6421,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6422,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 6423,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
									"line": 18,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6416,
								6417,
								6418,
								6419,
								6420,
								6421,
								6422,
								6423
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 1,
							"character": 33
						}
					]
				}
			}
		},
		{
			"id": 6409,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6410,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 22,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 6411,
					"name": "entity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 23,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6412,
					"name": "filterable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 24,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6413,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 28,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6410,
						6411,
						6412,
						6413
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 21,
					"character": 17
				}
			]
		},
		{
			"id": 6358,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6359,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 32,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6360,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 36,
							"character": 2
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 6409,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 6409,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 6361,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 40,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 6362,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6363,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 44,
															"character": 8
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6364,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
															"line": 45,
															"character": 8
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6363,
														6364
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
													"line": 43,
													"character": 6
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 6365,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 48,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6366,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 49,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 6414,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 6367,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 50,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 6368,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 6369,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 51,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 6370,
										"name": "entity",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 52,
												"character": 4
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 6371,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"sources": [
											{
												"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
												"line": 53,
												"character": 4
											}
										],
										"type": {
											"type": "reference",
											"target": 6414,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											6369,
											6370,
											6371
										]
									}
								],
								"sources": [
									{
										"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
										"line": 50,
										"character": 12
									}
								]
							}
						}
					}
				},
				{
					"id": 6372,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
							"line": 58,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6359,
						6360,
						6361,
						6365,
						6366,
						6367,
						6372
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/joiner/index.ts",
					"line": 31,
					"character": 17
				}
			]
		},
		{
			"id": 6442,
			"name": "Constructor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 21,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6448,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6443,
					"name": "__type",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 21,
							"character": 29
						}
					],
					"signatures": [
						{
							"id": 6444,
							"name": "__type",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"parameters": [
								{
									"id": 6447,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 6448,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 6445,
											"name": "__type",
											"variant": "declaration",
											"kind": 512,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 21,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 6446,
													"name": "__type",
													"variant": "signature",
													"kind": 16384,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 6448,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		},
		{
			"id": 6378,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 143,
					"character": 12
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6379,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6380,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 146,
											"character": 4
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 6381,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 168,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6382,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 169,
											"character": 4
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6383,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 173,
											"character": 4
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6380,
										6381,
										6382,
										6383
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 145,
									"character": 2
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 6270,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 191,
					"character": 12
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 6358,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6271,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6272,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 198,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6273,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 199,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6373,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 6274,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 200,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 6275,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 6276,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 201,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 6277,
														"name": "entity",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 202,
																"character": 4
															}
														],
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 6278,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 203,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 6279,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 6280,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 207,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 6281,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 208,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 6282,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"sources": [
																							{
																								"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																								"line": 209,
																								"character": 10
																							}
																						],
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							6280,
																							6281,
																							6282
																						]
																					}
																				],
																				"sources": [
																					{
																						"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																						"line": 206,
																						"character": 8
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 6283,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"sources": [
															{
																"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
																"line": 212,
																"character": 4
															}
														],
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Omit"
															},
															"typeArguments": [
																{
																	"type": "reference",
																	"target": 6373,
																	"name": "ModuleJoinerRelationship",
																	"package": "@medusajs/types"
																},
																{
																	"type": "literal",
																	"value": "hasMany"
																}
															],
															"name": "Omit",
															"package": "typescript"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															6276,
															6277,
															6278,
															6283
														]
													}
												],
												"sources": [
													{
														"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
														"line": 200,
														"character": 12
													}
												]
											}
										}
									}
								},
								{
									"id": 6284,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 214,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 6285,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 215,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6286,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 219,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6287,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 223,
											"character": 2
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 6288,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 227,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6289,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 232,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6290,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 233,
											"character": 2
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6291,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6292,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 237,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6293,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 241,
															"character": 4
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 6294,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 242,
															"character": 4
														}
													],
													"type": {
														"type": "reference",
														"target": 6378,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6292,
														6293,
														6294
													]
												}
											],
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 233,
													"character": 19
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6272,
										6273,
										6274,
										6284,
										6285,
										6286,
										6287,
										6288,
										6289,
										6290
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 194,
									"character": 4
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6373,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 246,
					"character": 20
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 6414,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 6374,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6375,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 250,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 6376,
									"name": "filterable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The fields to be filterable by the Index module using query.index"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 255,
											"character": 2
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 6377,
									"name": "hasMany",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Allow multiple relationships to exist for this\nentity"
											}
										]
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 260,
											"character": 2
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6375,
										6376,
										6377
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 246,
									"character": 68
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 6086,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6087,
					"name": "__joinerConfig",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 324,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6088,
							"name": "__joinerConfig",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"modifierTags": [
									"@ignore"
								]
							},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 324,
									"character": 2
								}
							],
							"type": {
								"type": "reference",
								"target": 6270,
								"name": "ModuleJoinerConfig",
								"package": "@medusajs/types"
							}
						}
					]
				},
				{
					"id": 6089,
					"name": "__hooks",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [],
						"modifierTags": [
							"@ignore"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
							"line": 329,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6090,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 6091,
									"name": "onApplicationStart",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 330,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6092,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 330,
													"character": 25
												}
											],
											"signatures": [
												{
													"id": 6093,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 330,
															"character": 25
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 6094,
									"name": "onApplicationShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 331,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6095,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 331,
													"character": 28
												}
											],
											"signatures": [
												{
													"id": 6096,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 331,
															"character": 28
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 6097,
									"name": "onApplicationPrepareShutdown",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
											"line": 332,
											"character": 4
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 6098,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
													"line": 332,
													"character": 35
												}
											],
											"signatures": [
												{
													"id": 6099,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
															"line": 332,
															"character": 35
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "void"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										6091,
										6094,
										6097
									]
								}
							],
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
									"line": 329,
									"character": 12
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6089
					]
				},
				{
					"title": "Methods",
					"children": [
						6087
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/modules-sdk/index.ts",
					"line": 320,
					"character": 17
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 5877,
					"name": "IInventoryService"
				}
			]
		},
		{
			"id": 6388,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6389,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 6390,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 6391,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 6,
									"character": 11
								}
							],
							"indexSignatures": [
								{
									"id": 6392,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"sources": [
										{
											"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
											"line": 6,
											"character": 13
										}
									],
									"parameters": [
										{
											"id": 6393,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 6394,
					"name": "internal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "will prevent the info log to be displayed about those events"
							}
						],
						"modifierTags": [
							"@internal"
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 11,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6389,
						6390,
						6394
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 4,
					"character": 17
				}
			]
		},
		{
			"id": 6308,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6309,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 15,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6310,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 15,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 6311,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 6384,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6384,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 6312,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 16,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6313,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 16,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 6314,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 6388,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 6384,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 6315,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 17,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6316,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 17,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 6317,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 18,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6318,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
									"line": 18,
									"character": 2
								}
							],
							"typeParameters": [
								{
									"id": 6319,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 6320,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 6395,
												"typeArguments": [
													{
														"type": "reference",
														"target": 6319,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 6395,
													"typeArguments": [
														{
															"type": "reference",
															"target": 6319,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 6321,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						6309,
						6312,
						6315,
						6317
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 14,
					"character": 17
				}
			]
		},
		{
			"id": 6138,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 6139,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 31,
							"character": 2
						}
					],
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 6140,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 35,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6152,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 6141,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 39,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6152,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 6142,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 43,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6143,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 47,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6144,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 51,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6145,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 55,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6146,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 60,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6308,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6147,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 65,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6148,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 70,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6149,
					"name": "parentStepIdempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the parent workflow execution."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 75,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 6150,
					"name": "preventReleaseEvents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "preventReleaseEvents"
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 80,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 6151,
					"name": "isCancelling",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether the current workflow execution is being cancelled."
							}
						]
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
							"line": 85,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6139,
						6140,
						6141,
						6142,
						6143,
						6144,
						6145,
						6146,
						6147,
						6148,
						6149,
						6150,
						6151
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/shared-context.ts",
					"line": 30,
					"character": 12
				}
			],
			"typeParameters": [
				{
					"id": 6152,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 6262,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 6263,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 4,
							"character": 2
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 6264,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 5,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": 6353,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 6265,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 6,
							"character": 2
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 6266,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 8,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6267,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 6268,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 9,
							"character": 2
						}
					],
					"signatures": [
						{
							"id": 6269,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						6263,
						6264,
						6265
					]
				},
				{
					"title": "Methods",
					"children": [
						6266,
						6268
					]
				}
			],
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 3,
					"character": 17
				}
			]
		},
		{
			"id": 6353,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 12,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 6354,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6355,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 13,
									"character": 2
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								6355
							]
						}
					],
					"sources": [
						{
							"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
							"line": 12,
							"character": 32
						}
					],
					"indexSignatures": [
						{
							"id": 6356,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"sources": [
								{
									"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
									"line": 14,
									"character": 2
								}
							],
							"parameters": [
								{
									"id": 6357,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 6261,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "/home/runner/work/medusa/medusa/packages/core/types/src/totals/big-number.ts",
					"line": 17,
					"character": 12
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 6353,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 6262,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				6108,
				6295,
				6322,
				6327,
				6255,
				6258,
				6119,
				6100,
				6184,
				6175,
				6162,
				6153,
				6232,
				6206,
				6221,
				6226,
				6248,
				6196,
				5877,
				6409,
				6358,
				6086,
				6388,
				6308,
				6138,
				6262
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				6303,
				6405,
				6407,
				6430,
				6468,
				6458,
				6331,
				6455,
				6437,
				6457,
				6449,
				6434,
				6439,
				6424,
				6384,
				6395,
				6414,
				6442,
				6378,
				6270,
				6373,
				6353,
				6261
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"5876": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": ""
		},
		"5877": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"5878": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"5879": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"5880": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"5881": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5882": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5883": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"5884": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"5885": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"5886": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5887": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5888": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"5889": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"5890": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"5891": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5892": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5893": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"5894": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"5895": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"5896": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5897": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5898": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"5899": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"5900": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"5901": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5902": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5903": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"5904": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"5905": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"5906": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5907": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5908": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"5909": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"5910": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"5911": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5912": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5913": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"5914": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"5915": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"5916": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"5917": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5918": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"5919": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"5920": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"5921": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5922": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5923": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"5924": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"5925": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"5926": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5927": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5928": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"5929": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"5930": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5931": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5932": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"5933": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5934": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5935": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"5936": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"5937": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5938": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5939": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"5940": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5941": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5942": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"5943": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"5944": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"5945": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5946": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"5947": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"5948": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5949": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"5950": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"5951": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"5952": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5953": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"5954": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"5955": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5956": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"5957": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"5958": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5959": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5960": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"5961": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5962": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5963": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"5964": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"5965": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5966": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5967": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"5968": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"5969": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5970": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"5971": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"5972": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"5973": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5974": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"5975": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"5976": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"5977": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5978": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"5979": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"5980": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"5981": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5982": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"5983": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"5984": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5985": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemIds"
		},
		"5986": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5987": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5988": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"5989": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"5990": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"5991": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemIds"
		},
		"5992": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"5993": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"5994": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"5995": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"5996": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"5997": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"5998": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"5999": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"6000": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6001": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"6002": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"6003": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6004": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"6005": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"6006": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6007": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"6008": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"6009": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6010": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"6011": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"6012": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"6013": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6014": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"6015": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"6016": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"6017": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6018": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"6019": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"6020": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"6021": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"6022": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6023": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"6024": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"6025": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"6026": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6027": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"6028": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"6029": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6030": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"6031": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"6032": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6033": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"6034": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"6035": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6036": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"6037": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"6038": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"6039": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"6040": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"6041": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"6042": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"6043": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"6044": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"6045": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"6046": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6047": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"6048": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"6049": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"6050": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"6051": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6052": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"6053": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"6054": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"6055": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"6056": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"6057": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6058": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"6059": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"6060": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"6061": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"6062": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6063": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"6064": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"6065": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"6066": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"6067": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6068": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"6069": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"6070": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"6071": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"6072": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"6086": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"6087": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"6088": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__joinerConfig"
		},
		"6089": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService.__hooks"
		},
		"6090": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6091": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationStart"
		},
		"6092": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6093": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6094": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationShutdown"
		},
		"6095": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6096": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6097": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.onApplicationPrepareShutdown"
		},
		"6098": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6099": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6100": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"6101": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"6102": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"6103": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"6104": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"6105": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"6106": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"6107": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"6108": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"6109": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"6110": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"6111": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"6112": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"6113": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"6114": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"6115": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"6116": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"6117": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"6118": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"6119": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"6120": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"6121": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"6122": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"6123": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"6124": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"6125": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"6126": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"6127": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"6128": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"6129": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"6130": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"6131": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"6132": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"6133": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"6134": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"6135": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"6136": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"6137": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"6138": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"6139": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"6140": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"6141": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"6142": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"6143": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"6144": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"6145": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"6146": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"6147": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"6148": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"6149": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.parentStepIdempotencyKey"
		},
		"6150": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.preventReleaseEvents"
		},
		"6151": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isCancelling"
		},
		"6152": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"6153": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"6154": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"6155": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.type"
		},
		"6156": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"6157": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"6158": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"6159": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"6160": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"6161": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"6162": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"6163": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"6164": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"6165": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"6166": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"6167": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"6168": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"6169": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"6170": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"6171": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"6172": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"6173": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"6174": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"6175": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"6176": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.id"
		},
		"6177": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"6178": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"6179": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"6180": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"6181": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"6182": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6183": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6184": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"6185": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"6186": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"6187": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"6188": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"6189": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"6190": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"6191": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"6192": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"6193": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"6194": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"6195": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"6196": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"6197": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"6198": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"6199": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"6200": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"6201": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"6202": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"6203": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"6204": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"6205": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"6206": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"6207": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"6208": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"6209": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"6210": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"6211": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"6212": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"6213": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"6214": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"6215": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"6216": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"6217": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"6218": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"6219": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"6220": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"6221": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"6222": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"6223": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"6224": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"6225": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"6226": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput"
		},
		"6227": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"6228": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.inventory_item_id"
		},
		"6229": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.location_id"
		},
		"6230": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"6231": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"6232": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"6233": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"6234": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"6235": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"6236": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"6237": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"6238": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"6239": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"6240": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"6241": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"6242": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"6243": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"6244": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"6245": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"6246": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"6247": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"6248": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"6249": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"6250": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"6251": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"6252": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"6253": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"6254": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"6255": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"6256": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"6257": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6258": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"6259": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"6260": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"6261": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"6262": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"6263": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"6264": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"6265": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"6266": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"6267": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"6268": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"6269": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"6270": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"6271": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6272": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"6273": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"6274": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"6275": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6276": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6277": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.entity"
		},
		"6278": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"6279": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6280": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"6281": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"6282": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"6283": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"6284": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6285": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"6286": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"6287": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"6288": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"6289": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"6290": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"6291": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6292": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"6293": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"6294": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"6295": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"6296": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"6297": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"6298": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"6299": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"6300": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"6301": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"6302": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"6303": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfigOrder"
		},
		"6304": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"6305": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"6307": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"6308": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"6309": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"6310": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"6311": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"6312": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"6313": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"6314": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"6315": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"6316": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"6317": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"6318": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"6319": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"6320": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"6321": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"6322": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"6323": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"6324": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"6325": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"6326": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"6327": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"6328": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"6329": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"6330": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"6331": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"6332": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6333": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"6334": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"6335": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"6336": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"6337": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"6338": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"6339": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"6340": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"6341": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"6342": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"6343": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"6344": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"6345": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"6346": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"6347": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"6348": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"6349": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"6350": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"6351": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"6352": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6353": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"6354": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"6355": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"6356": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"6358": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"6359": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"6360": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"6361": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"6362": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"6363": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"6364": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"6365": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"6366": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"6367": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"6368": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"6369": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6370": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"6371": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"6372": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"6373": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"6374": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6375": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"6376": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.filterable"
		},
		"6377": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.hasMany"
		},
		"6378": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"6379": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6380": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"6381": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"6382": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"6383": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"6384": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"6385": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6386": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"6387": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"6388": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"6389": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"6390": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"6391": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"6392": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"6394": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.internal"
		},
		"6395": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"6396": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6397": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"6398": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"6399": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"6400": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"6401": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"6402": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"6403": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"6404": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"6405": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"6406": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6407": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"6408": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6409": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"6410": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"6411": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.entity"
		},
		"6412": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.filterable"
		},
		"6413": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"6414": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"6415": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"6416": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"6417": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"6418": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"6419": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"6420": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.entity"
		},
		"6421": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"6422": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"6423": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"6424": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"6425": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6426": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"6427": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"6428": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"6429": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"6430": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"6431": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6432": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"6433": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"6434": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"6435": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6436": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"6437": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"6438": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6439": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"6440": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"6441": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"6442": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "Constructor"
		},
		"6443": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6444": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6445": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6446": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"6447": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "args"
		},
		"6448": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "T"
		},
		"6449": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQueryProperties"
		},
		"6450": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6451": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"6453": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6454": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"6455": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"6456": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6457": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"6458": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"6459": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6460": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"6461": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6462": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"6463": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6464": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"6465": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"6466": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"6467": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"6468": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"6469": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/inventory/service.ts"
		},
		"reflections": {
			"1": 5876
		}
	}
}
