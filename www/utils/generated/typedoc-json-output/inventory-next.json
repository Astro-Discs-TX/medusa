{
	"id": 4468,
	"name": "inventory-next",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 4700,
			"name": "FindConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to configure how an entity is retrieved from the database. It accepts as a typed parameter an "
					},
					{
						"kind": "code",
						"text": "`Entity`"
					},
					{
						"kind": "text",
						"text": " class,\nwhich provides correct typing of field names in its properties."
					}
				]
			},
			"children": [
				{
					"id": 4701,
					"name": "select",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being attribute names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"target": 4712,
										"name": "Entity",
										"package": "@medusajs/types",
										"qualifiedName": "FindConfig.Entity",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				},
				{
					"id": 4702,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to skip before retrieving the results."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4703,
					"name": "take",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A number indicating the number of records to return in the result."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4704,
					"name": "relations",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being relation names of the entity to retrieve in the result."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4705,
					"name": "order",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object used to specify how to sort the returned records. Its keys are the names of attributes of the entity, and a key's value can either be "
							},
							{
								"kind": "code",
								"text": "`ASC`"
							},
							{
								"kind": "text",
								"text": "\nto sort retrieved records in an ascending order, or "
							},
							{
								"kind": "code",
								"text": "`DESC`"
							},
							{
								"kind": "text",
								"text": " to sort retrieved records in a descending order."
							}
						]
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4706,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 4707,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 4708,
											"name": "K",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								}
							]
						}
					}
				},
				{
					"id": 4709,
					"name": "withDeleted",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean indicating whether deleted records should also be retrieved as part of the result. This only works if the entity extends the\n"
							},
							{
								"kind": "code",
								"text": "`SoftDeletableEntity`"
							},
							{
								"kind": "text",
								"text": " class."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4710,
					"name": "filters",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined filters"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 4711,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Enable ORM specific defined options"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4701,
						4702,
						4703,
						4704,
						4705,
						4709,
						4710,
						4711
					]
				}
			],
			"typeParameters": [
				{
					"id": 4712,
					"name": "Entity",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 4884,
			"name": "StringComparisonOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on strings."
					}
				]
			},
			"children": [
				{
					"id": 4885,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4886,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4887,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4888,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4889,
					"name": "contains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must contain this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4890,
					"name": "starts_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must start with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4891,
					"name": "ends_with",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered string must end with this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4885,
						4886,
						4887,
						4888,
						4889,
						4890,
						4891
					]
				}
			]
		},
		{
			"id": 4906,
			"name": "NumericalComparisonOperator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Fields used to apply flexible filters on numbers."
					}
				]
			},
			"children": [
				{
					"id": 4907,
					"name": "lt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4908,
					"name": "gt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4909,
					"name": "gte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be greater than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4910,
					"name": "lte",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filtered number must be less than or equal to this value."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4907,
						4908,
						4909,
						4910
					]
				}
			]
		},
		{
			"id": 4911,
			"name": "BaseFilterable",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object used to allow specifying flexible queries with and/or conditions."
					}
				]
			},
			"children": [
				{
					"id": 4912,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 4911,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4914,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 4914,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				},
				{
					"id": 4913,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 4911,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4914,
											"name": "T",
											"package": "@medusajs/types",
											"qualifiedName": "BaseFilterable.T",
											"refersToTypeParameter": true
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 4914,
									"name": "T",
									"package": "@medusajs/types",
									"qualifiedName": "BaseFilterable.T",
									"refersToTypeParameter": true
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4912,
						4913
					]
				}
			],
			"typeParameters": [
				{
					"id": 4914,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 4766,
					"name": "FilterableInventoryLevelProps"
				}
			]
		},
		{
			"id": 4845,
			"name": "SoftDeleteReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
					}
				]
			},
			"children": [
				{
					"id": 4846,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4847,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4846
					]
				}
			],
			"typeParameters": [
				{
					"id": 4847,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 4848,
			"name": "RestoreReturn",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object that is used to specify an entity's related entities that should be restored when the main entity is restored."
					}
				]
			},
			"children": [
				{
					"id": 4849,
					"name": "returnLinkableKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of strings, each being the ID attribute names of the entity's relations."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4850,
							"name": "TReturnableLinkableKeys",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4849
					]
				}
			],
			"typeParameters": [
				{
					"id": 4850,
					"name": "TReturnableLinkableKeys",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 4986,
			"name": "Query",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4987,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 4987,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "object"
				},
				"trueType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 4987,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": 5008,
						"name": "Scalar",
						"package": "@medusajs/types"
					},
					"trueType": {
						"type": "intrinsic",
						"name": "never"
					},
					"falseType": {
						"type": "reference",
						"target": 5012,
						"typeArguments": [
							{
								"type": "reference",
								"target": 4987,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterQuery",
						"package": "@medusajs/types"
					}
				},
				"falseType": {
					"type": "reference",
					"target": 5018,
					"typeArguments": [
						{
							"type": "reference",
							"target": 4987,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "FilterValue",
					"package": "@medusajs/types"
				}
			}
		},
		{
			"id": 4988,
			"name": "ExpandScalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4989,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": null
					},
					{
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 4989,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "intrinsic",
							"name": "string"
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "RegExp"
									},
									"name": "RegExp",
									"package": "typescript"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 4989,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							},
							"trueType": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Date"
										},
										"name": "Date",
										"package": "typescript"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"falseType": {
								"type": "reference",
								"target": 4989,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					}
				]
			}
		},
		{
			"id": 5008,
			"name": "Scalar",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "bigint"
					},
					{
						"type": "intrinsic",
						"name": "symbol"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Date"
						},
						"name": "Date",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/@types/node/buffer.d.ts",
							"qualifiedName": "__global.Buffer"
						},
						"name": "Buffer",
						"package": "@types/node",
						"qualifiedName": "__global.Buffer"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 5009,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5010,
									"name": "toHexString",
									"variant": "declaration",
									"kind": 2048,
									"flags": {},
									"signatures": [
										{
											"id": 5011,
											"name": "toHexString",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									]
								}
							],
							"groups": [
								{
									"title": "Methods",
									"children": [
										5010
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 5036,
			"name": "ReadonlyPrimary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 5037,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 5037,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Readonly"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 5037,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "Readonly",
					"package": "typescript"
				},
				"falseType": {
					"type": "reference",
					"target": 5037,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 5026,
			"name": "Primary",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 5035,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 5035,
					"name": "T",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reflection",
					"declaration": {
						"id": 5027,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 5028,
								"name": "[PrimaryKeyType]",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"type": {
									"type": "inferred",
									"name": "PK"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									5028
								]
							}
						]
					}
				},
				"trueType": {
					"type": "reference",
					"target": 5036,
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
								"qualifiedName": "PK"
							},
							"name": "PK",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					],
					"name": "ReadonlyPrimary",
					"package": "@medusajs/types"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": 5035,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reflection",
						"declaration": {
							"id": 5029,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5030,
									"name": "_id",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "inferred",
										"name": "PK"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5030
									]
								}
							]
						}
					},
					"trueType": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 5036,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"falseType": {
						"type": "conditional",
						"checkType": {
							"type": "reference",
							"target": 5035,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						},
						"extendsType": {
							"type": "reflection",
							"declaration": {
								"id": 5031,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 5032,
										"name": "uuid",
										"variant": "declaration",
										"kind": 1024,
										"flags": {
											"isOptional": true
										},
										"type": {
											"type": "inferred",
											"name": "PK"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											5032
										]
									}
								]
							}
						},
						"trueType": {
							"type": "reference",
							"target": 5036,
							"typeArguments": [
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "PK"
									},
									"name": "PK",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "ReadonlyPrimary",
							"package": "@medusajs/types"
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "reference",
								"target": 5035,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"extendsType": {
								"type": "reflection",
								"declaration": {
									"id": 5033,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 5034,
											"name": "id",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "inferred",
												"name": "PK"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												5034
											]
										}
									]
								}
							},
							"trueType": {
								"type": "reference",
								"target": 5036,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "PK"
										},
										"name": "PK",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ReadonlyPrimary",
								"package": "@medusajs/types"
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					}
				}
			}
		},
		{
			"id": 4915,
			"name": "OperatorMap",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4936,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4916,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4917,
							"name": "$and",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4986,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4936,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4918,
							"name": "$or",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4986,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4936,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "Query",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4919,
							"name": "$eq",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": 4988,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4936,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "ExpandScalar",
										"package": "@medusajs/types"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4988,
											"typeArguments": [
												{
													"type": "reference",
													"target": 4936,
													"name": "T",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												}
											],
											"name": "ExpandScalar",
											"package": "@medusajs/types"
										}
									}
								]
							}
						},
						{
							"id": 4920,
							"name": "$ne",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4988,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4936,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4921,
							"name": "$in",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4988,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4936,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4922,
							"name": "$nin",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4988,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4936,
											"name": "T",
											"package": "@medusajs/types",
											"refersToTypeParameter": true
										}
									],
									"name": "ExpandScalar",
									"package": "@medusajs/types"
								}
							}
						},
						{
							"id": 4923,
							"name": "$not",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4986,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4936,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "Query",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4924,
							"name": "$gt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4988,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4936,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4925,
							"name": "$gte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4988,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4936,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4926,
							"name": "$lt",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4988,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4936,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4927,
							"name": "$lte",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 4988,
								"typeArguments": [
									{
										"type": "reference",
										"target": 4936,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "ExpandScalar",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 4928,
							"name": "$like",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4929,
							"name": "$re",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4930,
							"name": "$ilike",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4931,
							"name": "$fulltext",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4932,
							"name": "$overlap",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4933,
							"name": "$contains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4934,
							"name": "$contained",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 4935,
							"name": "$exists",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4917,
								4918,
								4919,
								4920,
								4921,
								4922,
								4923,
								4924,
								4925,
								4926,
								4927,
								4928,
								4929,
								4930,
								4931,
								4932,
								4933,
								4934,
								4935
							]
						}
					]
				}
			}
		},
		{
			"id": 5024,
			"name": "FilterValue2",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 5025,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 5025,
						"name": "T",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 4988,
						"typeArguments": [
							{
								"type": "reference",
								"target": 5025,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "ExpandScalar",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 5026,
						"typeArguments": [
							{
								"type": "reference",
								"target": 5025,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Primary",
						"package": "@medusajs/types"
					}
				]
			}
		},
		{
			"id": 5018,
			"name": "FilterValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 5019,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 4915,
						"typeArguments": [
							{
								"type": "reference",
								"target": 5024,
								"typeArguments": [
									{
										"type": "reference",
										"target": 5019,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								],
								"name": "FilterValue2",
								"package": "@medusajs/types"
							}
						],
						"name": "OperatorMap",
						"package": "@medusajs/types"
					},
					{
						"type": "reference",
						"target": 5024,
						"typeArguments": [
							{
								"type": "reference",
								"target": 5019,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "FilterValue2",
						"package": "@medusajs/types"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 5024,
							"typeArguments": [
								{
									"type": "reference",
									"target": 5019,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							],
							"name": "FilterValue2",
							"package": "@medusajs/types"
						}
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 5023,
			"name": "PrevLimit",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "intrinsic",
						"name": "never"
					},
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					}
				]
			}
		},
		{
			"id": 5012,
			"name": "FilterQuery",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 5016,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 5017,
					"name": "Prev",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"default": {
						"type": "literal",
						"value": 3
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": 5017,
					"name": "Prev",
					"package": "@medusajs/types",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "intrinsic",
					"name": "never"
				},
				"trueType": {
					"type": "intrinsic",
					"name": "never"
				},
				"falseType": {
					"type": "mapped",
					"parameter": "Key",
					"parameterType": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 5016,
							"name": "T",
							"package": "@medusajs/types",
							"refersToTypeParameter": true
						}
					},
					"templateType": {
						"type": "conditional",
						"checkType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
									"qualifiedName": "Key"
								},
								"name": "Key",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 5016,
								"name": "T",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						"extendsType": {
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "boolean"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "bigint"
								},
								{
									"type": "intrinsic",
									"name": "symbol"
								},
								{
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Date"
									},
									"name": "Date",
									"package": "typescript"
								}
							]
						},
						"trueType": {
							"type": "union",
							"types": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "Key"
										},
										"name": "Key",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"objectType": {
										"type": "reference",
										"target": 5016,
										"name": "T",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									}
								},
								{
									"type": "reference",
									"target": 4915,
									"typeArguments": [
										{
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
													"qualifiedName": "Key"
												},
												"name": "Key",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 5016,
												"name": "T",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										}
									],
									"name": "OperatorMap",
									"package": "@medusajs/types"
								}
							]
						},
						"falseType": {
							"type": "conditional",
							"checkType": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "Key"
									},
									"name": "Key",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 5016,
									"name": "T",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								}
							},
							"extendsType": {
								"type": "inferred",
								"name": "U"
							},
							"trueType": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
										"qualifiedName": "U"
									},
									"name": "U",
									"package": "@medusajs/types",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reflection",
									"declaration": {
										"id": 5013,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"indexSignatures": [
											{
												"id": 5014,
												"name": "__index",
												"variant": "signature",
												"kind": 8192,
												"flags": {},
												"parameters": [
													{
														"id": 5015,
														"name": "x",
														"variant": "param",
														"kind": 32768,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "number"
														}
													}
												],
												"type": {
													"type": "inferred",
													"name": "V"
												}
											}
										]
									}
								},
								"trueType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
											"qualifiedName": "V"
										},
										"name": "V",
										"package": "@medusajs/types",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "object"
									},
									"trueType": {
										"type": "reference",
										"target": 5012,
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Partial"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
															"qualifiedName": "V"
														},
														"name": "V",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "Partial",
												"package": "typescript"
											},
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 5017,
													"name": "Prev",
													"package": "@medusajs/types",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 5023,
													"name": "PrevLimit",
													"package": "@medusajs/types"
												}
											}
										],
										"name": "FilterQuery",
										"package": "@medusajs/types"
									},
									"falseType": {
										"type": "intrinsic",
										"name": "never"
									}
								},
								"falseType": {
									"type": "intrinsic",
									"name": "never"
								}
							},
							"falseType": {
								"type": "intrinsic",
								"name": "never"
							}
						}
					},
					"optionalModifier": "+"
				}
			}
		},
		{
			"id": 5020,
			"name": "EventMetadata",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "Record",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 5021,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 5022,
									"name": "eventGroupId",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										5022
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 5002,
			"name": "Event",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 5007,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 5003,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 5004,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5005,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 5020,
								"name": "EventMetadata",
								"package": "@medusajs/types"
							}
						},
						{
							"id": 5006,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 5007,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								5004,
								5005,
								5006
							]
						}
					]
				}
			}
		},
		{
			"id": 4965,
			"name": "Message",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4968,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 5002,
						"typeArguments": [
							{
								"type": "reference",
								"target": 4968,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						],
						"name": "Event",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4966,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4967,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4967
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4976,
			"name": "RawMessageFormat",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"typeParameters": [
				{
					"id": 4985,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4977,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4978,
							"name": "eventName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4979,
							"name": "data",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 4985,
								"name": "TData",
								"package": "@medusajs/types",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 4980,
							"name": "source",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4981,
							"name": "object",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4982,
							"name": "action",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4983,
							"name": "context",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									},
									{
										"type": "literal",
										"value": "eventGroupId"
									}
								],
								"name": "Pick",
								"package": "typescript"
							}
						},
						{
							"id": 4984,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4978,
								4979,
								4980,
								4981,
								4982,
								4983,
								4984
							]
						}
					]
				}
			}
		},
		{
			"id": 4713,
			"name": "InventoryItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory item details."
					}
				]
			},
			"children": [
				{
					"id": 4714,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4715,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4716,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4717,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4718,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4719,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The mid code of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4720,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4721,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4722,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4723,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4724,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4725,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4726,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4727,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4728,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4729,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4730,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4731,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4714,
						4715,
						4716,
						4717,
						4718,
						4719,
						4720,
						4721,
						4722,
						4723,
						4724,
						4725,
						4726,
						4727,
						4728,
						4729,
						4730,
						4731
					]
				}
			]
		},
		{
			"id": 4692,
			"name": "FilterableInventoryItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved inventory items."
					}
				]
			},
			"children": [
				{
					"id": 4693,
					"name": "q",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Search term to search inventory items' attributes."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4694,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4695,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by the ID of their associated location."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4696,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKUs to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 4884,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4697,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4698,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS Codes to filter inventory items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "reference",
								"target": 4884,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4699,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory items by whether they require shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4693,
						4694,
						4695,
						4696,
						4697,
						4698,
						4699
					]
				}
			]
		},
		{
			"id": 4774,
			"name": "InventoryLevelDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The inventory level details."
					}
				]
			},
			"children": [
				{
					"id": 4775,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the inventory level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4776,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4777,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4778,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the inventory level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4779,
					"name": "reserved_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity of the inventory level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4780,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the inventory level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4781,
					"name": "available_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The available quantity of the inventory level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4782,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4783,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the inventory level."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4784,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the inventory level."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4785,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the inventory level."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4775,
						4776,
						4777,
						4778,
						4779,
						4780,
						4781,
						4782,
						4783,
						4784,
						4785
					]
				}
			]
		},
		{
			"id": 4766,
			"name": "FilterableInventoryLevelProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on the retrieved inventory levels."
					}
				]
			},
			"children": [
				{
					"id": 4772,
					"name": "$and",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"and\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 4766,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 4911,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4766,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4912,
						"name": "BaseFilterable.$and"
					}
				},
				{
					"id": 4773,
					"name": "$or",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of filters to apply on the entity, where each item in the array is joined with an \"or\" condition."
							}
						]
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "union",
							"types": [
								{
									"type": "reference",
									"target": 4766,
									"name": "FilterableInventoryLevelProps",
									"package": "@medusajs/types"
								},
								{
									"type": "reference",
									"target": 4911,
									"typeArguments": [
										{
											"type": "reference",
											"target": 4766,
											"name": "FilterableInventoryLevelProps",
											"package": "@medusajs/types"
										}
									],
									"name": "BaseFilterable",
									"package": "@medusajs/types"
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 4913,
						"name": "BaseFilterable.$or"
					}
				},
				{
					"id": 4767,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID of their associated inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4768,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter inventory levels by the ID of their associated inventory location."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4769,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`stocked_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 4915,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Number"
										},
										"name": "Number",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4770,
					"name": "reserved_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`reserved_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 4915,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Number"
										},
										"name": "Number",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4771,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on inventory levels' "
							},
							{
								"kind": "code",
								"text": "`incoming_quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 4915,
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Number"
										},
										"name": "Number",
										"package": "typescript"
									}
								],
								"name": "OperatorMap",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4772,
						4773,
						4767,
						4768,
						4769,
						4770,
						4771
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4911,
					"typeArguments": [
						{
							"type": "reference",
							"target": 4766,
							"name": "FilterableInventoryLevelProps",
							"package": "@medusajs/types"
						}
					],
					"name": "BaseFilterable",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 4753,
			"name": "ReservationItemDTO",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The reservation item details."
					}
				]
			},
			"children": [
				{
					"id": 4754,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the reservation item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4755,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated location's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4756,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated inventory item's ID."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4757,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The quantity of the reservation item."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4851,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 4758,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The associated line item's ID."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4759,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4760,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4761,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The created by of the reservation item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4762,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4763,
					"name": "created_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The creation date of the reservation item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4764,
					"name": "updated_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The update date of the reservation item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4765,
					"name": "deleted_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The deletion date of the reservation item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Date"
								},
								"name": "Date",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4754,
						4755,
						4756,
						4757,
						4758,
						4759,
						4760,
						4761,
						4762,
						4763,
						4764,
						4765
					]
				}
			]
		},
		{
			"id": 4744,
			"name": "FilterableReservationItemProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The filters to apply on retrieved reservation items."
					}
				]
			},
			"children": [
				{
					"id": 4745,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IDs to filter reservation items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4747,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated line item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4748,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4749,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filter reservation items by the ID of their associated location."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4750,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Description filters to apply on the reservation items' "
							},
							{
								"kind": "code",
								"text": "`description`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "reference",
								"target": 4884,
								"name": "StringComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				},
				{
					"id": 4751,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The \"created by\" values to filter reservation items by."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4752,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Filters to apply on the reservation items' "
							},
							{
								"kind": "code",
								"text": "`quantity`"
							},
							{
								"kind": "text",
								"text": " attribute."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 4906,
								"name": "NumericalComparisonOperator",
								"package": "@medusajs/types"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4745,
						4747,
						4748,
						4749,
						4750,
						4751,
						4752
					]
				}
			]
		},
		{
			"id": 4822,
			"name": "UpdateInventoryItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4823,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4824,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.sku"
					}
				},
				{
					"id": 4825,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.origin_country"
					}
				},
				{
					"id": 4826,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID code of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.mid_code"
					}
				},
				{
					"id": 4827,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.material"
					}
				},
				{
					"id": 4828,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.weight"
					}
				},
				{
					"id": 4829,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.length"
					}
				},
				{
					"id": 4830,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.height"
					}
				},
				{
					"id": 4831,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.width"
					}
				},
				{
					"id": 4832,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.title"
					}
				},
				{
					"id": 4833,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.description"
					}
				},
				{
					"id": 4834,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.thumbnail"
					}
				},
				{
					"id": 4835,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.metadata"
					}
				},
				{
					"id": 4836,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.hs_code"
					}
				},
				{
					"id": 4837,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true,
						"isInherited": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Partial.requires_shipping"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4823,
						4824,
						4825,
						4826,
						4827,
						4828,
						4829,
						4830,
						4831,
						4832,
						4833,
						4834,
						4835,
						4836,
						4837
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 4796,
							"name": "CreateInventoryItemInput",
							"package": "@medusajs/types"
						}
					],
					"name": "Partial",
					"package": "typescript"
				}
			]
		},
		{
			"id": 4796,
			"name": "CreateInventoryItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the inventory item to be created."
					}
				]
			},
			"children": [
				{
					"id": 4797,
					"name": "sku",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The SKU of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4798,
					"name": "origin_country",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The origin country of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4799,
					"name": "mid_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The MID code of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4800,
					"name": "material",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The material of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4801,
					"name": "weight",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The weight of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4802,
					"name": "length",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The length of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4803,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4804,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 4805,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4806,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4807,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4808,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				},
				{
					"id": 4809,
					"name": "hs_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The HS code of the inventory item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4810,
					"name": "requires_shipping",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the inventory item requires shipping."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4797,
						4798,
						4799,
						4800,
						4801,
						4802,
						4803,
						4804,
						4805,
						4806,
						4807,
						4808,
						4809,
						4810
					]
				}
			]
		},
		{
			"id": 4811,
			"name": "CreateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4812,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4813,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4814,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4815,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4812,
						4813,
						4814,
						4815
					]
				}
			]
		},
		{
			"id": 4816,
			"name": "BulkUpdateInventoryLevelInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
					}
				]
			},
			"children": [
				{
					"id": 4819,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "id of the inventory level to update"
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4820,
					"name": "stocked_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The stocked quantity of the associated inventory item in the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4821,
					"name": "incoming_quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The incoming quantity of the associated inventory item in the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4817,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory level."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4818,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4819,
						4820,
						4821,
						4817,
						4818
					]
				}
			]
		},
		{
			"id": 4838,
			"name": "UpdateReservationItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The attributes to update in a reservation item."
					}
				]
			},
			"children": [
				{
					"id": 4839,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4840,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4851,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 4841,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4842,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4843,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4844,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4839,
						4840,
						4841,
						4842,
						4843,
						4844
					]
				}
			]
		},
		{
			"id": 4786,
			"name": "CreateReservationItemInput",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The details of the reservation item to be created."
					}
				]
			},
			"children": [
				{
					"id": 4787,
					"name": "line_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated line item."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4788,
					"name": "inventory_item_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated inventory item."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4789,
					"name": "location_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the associated location."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4790,
					"name": "quantity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The reserved quantity."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4851,
						"name": "BigNumberInput",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 4791,
					"name": "allow_backorder",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Allow backorder of the item. If true, it won't check inventory levels before reserving it."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4792,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the reservation."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4793,
					"name": "created_by",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user or system that created the reservation. Can be any form of identification string."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4794,
					"name": "external_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An ID associated with an external third-party system that the reservation item is connected to."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 4795,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Holds custom data in key-value pairs."
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4787,
						4788,
						4789,
						4790,
						4791,
						4792,
						4793,
						4794,
						4795
					]
				}
			]
		},
		{
			"id": 4469,
			"name": "IInventoryService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The main service interface for the Inventory Module."
					}
				]
			},
			"children": [
				{
					"id": 4470,
					"name": "listInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4471,
							"name": "listInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory items based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems({\n  id: [\"iitem_123\", \"iitem_321\"],\n})\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.listInventoryItems(\n  {\n    id: [\"iitem_123\", \"iitem_321\"],\n  },\n  {\n    relations: [\"location_levels\"],\n    take: 20,\n    skip: 2,\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4472,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4692,
										"name": "FilterableInventoryItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4473,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4713,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4474,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4713,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4475,
					"name": "listAndCountInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4476,
							"name": "listAndCountInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory items along with the total count of available inventory items satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory items along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems({\n    id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryItems, count] =\n  await inventoryModuleService.listAndCountInventoryItems(\n    {\n      id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"location_levels\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4477,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4692,
										"name": "FilterableInventoryItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4478,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4713,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4479,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4713,
													"name": "InventoryItemDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4480,
					"name": "listReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4481,
							"name": "listReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of reservation items based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of reservation items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of reservation items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.listReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4482,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved reservation items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4744,
										"name": "FilterableReservationItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4483,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4753,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4484,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4753,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4485,
					"name": "listAndCountReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4486,
							"name": "listAndCountReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of reservation items along with the total count of available reservation items satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of reservation items along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of reservation items using their IDs:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems({\n    id: [\"resitem_123\", \"resitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the reservation items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [reservationItems, count] =\n  await inventoryModuleService.listAndCountReservationItems(\n    {\n      id: [\"resitem_123\", \"resitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4487,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved reservation items."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4744,
										"name": "FilterableReservationItemProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4488,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4753,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4489,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4753,
													"name": "ReservationItemDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4490,
					"name": "listInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4491,
							"name": "listInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory levels based on optional filters and configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory levels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.listInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4492,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory levels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4766,
										"name": "FilterableInventoryLevelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4493,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4774,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4494,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4774,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4495,
					"name": "listAndCountInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4496,
							"name": "listAndCountInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a paginated list of inventory levels along with the total count of available inventory levels satisfying the provided filters."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The list of inventory levels along with their total count."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "To retrieve a list of inventory levels using the IDs of their associated inventory items:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n      take: 20,\n      skip: 2,\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved within the inventory levels:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels(\n    {\n      inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n    },\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nBy default, only the first "
											},
											{
												"kind": "code",
												"text": "`10`"
											},
											{
												"kind": "text",
												"text": " records are retrieved. You can control pagination by specifying the "
											},
											{
												"kind": "code",
												"text": "`skip`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`take`"
											},
											{
												"kind": "text",
												"text": " properties of the "
											},
											{
												"kind": "code",
												"text": "`config`"
											},
											{
												"kind": "text",
												"text": " parameter:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst [inventoryLevels, count] =\n  await inventoryModuleService.listAndCountInventoryLevels({\n    inventory_item_id: [\"iitem_123\", \"iitem_321\"],\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4497,
									"name": "selector",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The filters to apply on the retrieved inventory levels."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4766,
										"name": "FilterableInventoryLevelProps",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4498,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4774,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4499,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4774,
													"name": "InventoryLevelDTO",
													"package": "@medusajs/types"
												}
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4500,
					"name": "retrieveInventoryItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4501,
							"name": "retrieveInventoryItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves an inventory item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a inventory item by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem =\n  await inventoryModuleService.retrieveInventoryItem(\"iitem_123\")\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem = await inventoryModuleService.retrieveInventoryItem(\n  \"iitem_123\",\n  {\n    relations: [\"location_levels\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4502,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4503,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4713,
												"name": "InventoryItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4504,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4713,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4505,
					"name": "retrieveInventoryLevelByItemAndLocation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4506,
							"name": "retrieveInventoryLevelByItemAndLocation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves an inventory level based on its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevelByItemAndLocation(\n    \"iitem_123\",\n    \"loc_123\"\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4507,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4508,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4509,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4774,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4510,
					"name": "retrieveInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4511,
							"name": "retrieveInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves an inventory level by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a inventory level by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.retrieveInventoryLevel(\n    \"iitem_123\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4512,
									"name": "inventoryLevelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory level's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4513,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the inventory level is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a inventory level."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4774,
												"name": "InventoryLevelDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4514,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4774,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4515,
					"name": "retrieveReservationItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4516,
							"name": "retrieveReservationItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves a reservation item by its ID."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The retrieved reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "A simple example that retrieves a reservation item by its ID:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\"\n  )\n```"
											},
											{
												"kind": "text",
												"text": "\n\nTo specify relations that should be retrieved:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.retrieveReservationItem(\n    \"resitem\",\n    {\n      relations: [\"inventory_item\"],\n    }\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4517,
									"name": "reservationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservation's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4518,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The configurations determining how the reservation item is retrieved. Its properties, such as "
											},
											{
												"kind": "code",
												"text": "`select`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`relations`"
											},
											{
												"kind": "text",
												"text": ", accept the\nattributes or relations associated with a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4700,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4753,
												"name": "ReservationItemDTO",
												"package": "@medusajs/types"
											}
										],
										"name": "FindConfig",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4519,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4753,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4520,
					"name": "createReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4521,
							"name": "createReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates reservation items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created reservation items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.createReservationItems([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      quantity: 10,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4522,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the reservation items to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4786,
											"name": "CreateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4523,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4753,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4524,
							"name": "createReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates a reservation item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.createReservationItems({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    quantity: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4525,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the reservation item to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4786,
										"name": "CreateReservationItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4526,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4753,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4527,
					"name": "createInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4528,
							"name": "createInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates inventory items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.createInventoryItems([\n  {\n    sku: \"SHIRT\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4529,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory items to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4796,
											"name": "CreateInventoryItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4530,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4713,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4531,
							"name": "createInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates an inventory item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem = await inventoryModuleService.createInventoryItems({\n  sku: \"SHIRT\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4532,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory item to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4796,
										"name": "CreateInventoryItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4533,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4713,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4534,
					"name": "createInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4535,
							"name": "createInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates inventory levels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory levels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      stocked_quantity: 10,\n    },\n    {\n      inventory_item_id: \"iitem_321\",\n      location_id: \"loc_321\",\n      stocked_quantity: 20,\n      reserved_quantity: 10,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4536,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory levels to be created."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4811,
											"name": "CreateInventoryLevelInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4537,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4774,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4538,
							"name": "createInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method creates an inventory level."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The created inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.createInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4539,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The details of the inventory level to be created."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4811,
										"name": "CreateInventoryLevelInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4540,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4774,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4541,
					"name": "updateInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4542,
							"name": "updateInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing inventory levels."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory levels."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevels =\n  await inventoryModuleService.updateInventoryLevels([\n    {\n      inventory_item_id: \"iitem_123\",\n      location_id: \"loc_123\",\n      id: \"ilev_123\",\n      stocked_quantity: 20,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4543,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4816,
											"name": "BulkUpdateInventoryLevelInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4544,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4774,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4545,
							"name": "updateInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing inventory level."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryLevel =\n  await inventoryModuleService.updateInventoryLevels({\n    inventory_item_id: \"iitem_123\",\n    location_id: \"loc_123\",\n    stocked_quantity: 20,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4546,
									"name": "updates",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in an inventory level. The inventory level is identified by the IDs of its associated inventory item and location."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4816,
										"name": "BulkUpdateInventoryLevelInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4547,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4774,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4548,
					"name": "updateInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4549,
							"name": "updateInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing inventory item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItem = await inventoryModuleService.updateInventoryItems({\n  id: \"iitem_123\",\n  title: \"Medusa Shirt Inventory\",\n})\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4550,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the inventory item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4822,
										"name": "UpdateInventoryItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4551,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4713,
										"name": "InventoryItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4552,
							"name": "updateInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing inventory items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst inventoryItems = await inventoryModuleService.updateInventoryItems([\n  {\n    id: \"iitem_123\",\n    title: \"Medusa Shirt Inventory\",\n  },\n  {\n    id: \"iitem_321\",\n    description: \"The inventory of Medusa pants\",\n  },\n])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4553,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the inventory items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4822,
											"name": "UpdateInventoryItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4554,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4713,
											"name": "InventoryItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4555,
					"name": "updateReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4556,
							"name": "updateReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates an existing reservation item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated reservation item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItem =\n  await inventoryModuleService.updateReservationItems({\n    id: \"resitem_123\",\n    quantity: 10,\n  })\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4557,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in a reservation item."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4838,
										"name": "UpdateReservationItemInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4558,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4753,
										"name": "ReservationItemDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4559,
							"name": "updateReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method updates existing reservation items."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated reservation items."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservationItems =\n  await inventoryModuleService.updateReservationItems([\n    {\n      id: \"resitem_123\",\n      quantity: 10,\n    },\n  ])\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4560,
									"name": "input",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The attributes to update in the reservation items."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4838,
											"name": "UpdateReservationItemInput",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4561,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4753,
											"name": "ReservationItemDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4562,
					"name": "deleteReservationItemsByLineItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4563,
							"name": "deleteReservationItemsByLineItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes a reservation item by its associated line item."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation item is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"cali_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4564,
									"name": "lineItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The line item's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4565,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4566,
					"name": "restoreReservationItemsByLineItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4567,
							"name": "restoreReservationItemsByLineItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method is used to restore the reservation items associated with a line item or multiple line items that were deleted."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation items are successfully deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport {\n  initialize as initializeInventoryModule,\n} from \"@medusajs/inventory\"\n\nasync function restoreReservationItemsByLineItem (\n  lineItemIds: string[]\n) {\n  const inventoryModule = await initializeInventoryModule({})\n\n  await inventoryModule.restoreReservationItemsByLineItem(\n    lineItemIds\n  )\n}\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4568,
									"name": "lineItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID(s) of the line item(s)."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4569,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share re9sources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4570,
					"name": "deleteReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4571,
							"name": "deleteReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes reservation items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the reservation item is deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteReservationItems(\n  \"resitem_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4572,
									"name": "reservationItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservation items' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4573,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4574,
					"name": "softDeleteReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4575,
							"name": "softDeleteReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes reservations by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.softDeleteReservationItems([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 4576,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4577,
									"name": "ReservationItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4578,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4845,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4576,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4579,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4580,
					"name": "restoreReservationItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4581,
							"name": "restoreReservationItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted reservations by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.restoreReservationItems([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 4582,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4583,
									"name": "ReservationItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The reservations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4584,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the reservation. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the reservation's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4848,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4582,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4585,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4586,
					"name": "deleteInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4587,
							"name": "deleteInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes inventory items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory items are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryItems(\"iitem_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4588,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4589,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4590,
					"name": "softDeleteInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4591,
							"name": "softDeleteInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes inventory items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted, such as the ID of the associated location levels.\nThe object's keys are the ID attribute names of the inventory service next entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`location_level_id`"
											},
											{
												"kind": "text",
												"text": ", and its value is an array of strings, each being the ID of a record associated\nwith the inventory item through this relation, such as the IDs of associated location levels.\n\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.softDeleteInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 4592,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4593,
									"name": "inventoryItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory items' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4594,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4845,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4592,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4595,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4596,
					"name": "restoreInventoryItems",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4597,
							"name": "restoreInventoryItems",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted inventory items by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored, such as the ID of associated location levels.\nThe object's keys are the ID attribute names of the inventory item entity's relations, such as "
											},
											{
												"kind": "code",
												"text": "`location_level_id`"
											},
											{
												"kind": "text",
												"text": ",\nand its value is an array of strings, each being the ID of the record associated with the inventory item through this relation,\nsuch as the IDs of associated location levels.\n\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.restoreInventoryItems(\n  [\"iitem_123\", \"iitem_321\"],\n  {\n    returnLinkableKeys: [\"location_level\"],\n  }\n)\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 4598,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4599,
									"name": "inventoryItemIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory items' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4600,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the inventory items. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the inventory item's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`location_levels`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4848,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4598,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4601,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4602,
					"name": "deleteInventoryItemLevelByLocationId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4603,
							"name": "deleteInventoryItemLevelByLocationId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes inventory item's level by the associated location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array, where the first item is an array includes the soft-deleted inventory levels,\nand the second is an object that includes the IDs of related records that were soft-deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryItemLevelByLocationId(\n  \"loc_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4604,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4605,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "object"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "unknown"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4606,
					"name": "deleteReservationItemByLocationId",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4607,
							"name": "deleteReservationItemByLocationId",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes reservation items by their associated location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when then reservation items are deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteReservationItemByLocationId(\n  \"loc_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4608,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4609,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4610,
					"name": "deleteInventoryLevel",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4611,
							"name": "deleteInventoryLevel",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes an inventory level by its associated inventory item and location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory level is deleted successfully."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryLevel(\n  \"iitem_123\",\n  \"loc_123\"\n)\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4612,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4613,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The location's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4614,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4615,
					"name": "deleteInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4616,
							"name": "deleteInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method deletes inventory levels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Resolves when the inventory levels are deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.deleteInventoryLevels(\"ilev_123\")\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4617,
									"name": "inventoryLevelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory levels' IDs."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								},
								{
									"id": 4618,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4619,
					"name": "softDeleteInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4620,
							"name": "softDeleteInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method soft deletes inventory levels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were also soft deleted.\nIf there are no related records, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.softDeleteInventoryLevels([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 4621,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4622,
									"name": "inventoryLevelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory levels' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4623,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An object that is used to specify an entity's related entities that should be soft-deleted when the main entity is soft-deleted."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4845,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4621,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "SoftDeleteReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4624,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4625,
					"name": "restoreInventoryLevels",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4626,
							"name": "restoreInventoryLevels",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method restores soft deleted inventory levels by their IDs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object that includes the IDs of related records that were restored.\nIf there are no related records restored, the promise resolves to "
											},
											{
												"kind": "code",
												"text": "`void`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nawait inventoryModuleService.restoreInventoryLevels([\n  \"ilev_123\",\n])\n```"
											}
										]
									}
								]
							},
							"typeParameters": [
								{
									"id": 4627,
									"name": "TReturnableLinkableKeys",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"default": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"parameters": [
								{
									"id": 4628,
									"name": "inventoryLevelIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory levels' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4629,
									"name": "config",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Configurations determining which relations to restore along with each of the inventory level. You can pass to its "
											},
											{
												"kind": "code",
												"text": "`returnLinkableKeys`"
											},
											{
												"kind": "text",
												"text": "\nproperty any of the inventory level's relation attribute names, such as "
											},
											{
												"kind": "code",
												"text": "`{type relation name}`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4848,
										"typeArguments": [
											{
												"type": "reference",
												"target": 4627,
												"name": "TReturnableLinkableKeys",
												"package": "@medusajs/types",
												"refersToTypeParameter": true
											}
										],
										"name": "RestoreReturn",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4630,
									"name": "sharedContext",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Record"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												],
												"name": "Record",
												"package": "typescript"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4631,
					"name": "adjustInventory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4632,
							"name": "adjustInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method adjusts the inventory quantity of an item in a location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The updated inventory level."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n// add to the inventory quantity\nconst inventoryLevel1 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    5\n  )\n\n// subtract from the inventory quantity\nconst inventoryLevel2 =\n  await inventoryModuleService.adjustInventory(\n    \"iitem_123\",\n    \"loc_123\",\n    -5\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4633,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 4634,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 4635,
														"name": "inventoryItemId",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 4636,
														"name": "locationId",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 4637,
														"name": "adjustment",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 4851,
															"name": "BigNumberInput",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															4635,
															4636,
															4637
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 4638,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4774,
											"name": "InventoryLevelDTO",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						},
						{
							"id": 4639,
							"name": "adjustInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4640,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4641,
									"name": "locationId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4642,
									"name": "adjustment",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 4851,
										"name": "BigNumberInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4643,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4774,
										"name": "InventoryLevelDTO",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4644,
					"name": "confirmInventory",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4645,
							"name": "confirmInventory",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method confirms that a quantity is available of an inventory item in the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the quantity is available."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst isAvailable =\n  await inventoryModuleService.confirmInventory(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"],\n    10\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4646,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4647,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4648,
									"name": "quantity",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The quantity to confirm its availability."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4851,
										"name": "BigNumberInput",
										"package": "@medusajs/types"
									}
								},
								{
									"id": 4649,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4650,
					"name": "retrieveAvailableQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4651,
							"name": "retrieveAvailableQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the available quantity of an inventory item in the specified locations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The available quantity of the item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst availableQuantity =\n  await inventoryModuleService.retrieveAvailableQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4652,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4653,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4654,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4852,
										"name": "IBigNumber",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4655,
					"name": "retrieveStockedQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4656,
							"name": "retrieveStockedQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the stocked quantity of an inventory item in the specified location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The stocked quantity of the item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst stockedQuantity =\n  await inventoryModuleService.retrieveStockedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4657,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4658,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4659,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4852,
										"name": "IBigNumber",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4660,
					"name": "retrieveReservedQuantity",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4661,
							"name": "retrieveReservedQuantity",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "This method retrieves the reserved quantity of an inventory item in the specified location."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The reserved quantity of the item."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst reservedQuantity =\n  await inventoryModuleService.retrieveReservedQuantity(\n    \"iitem_123\",\n    [\"loc_123\", \"loc_321\"]\n  )\n```"
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4662,
									"name": "inventoryItemId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The inventory item's ID."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4663,
									"name": "locationIds",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The locations' IDs."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4664,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A context used to share resources, such as transaction manager, between the application and the module."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 4732,
										"name": "Context",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 4852,
										"name": "IBigNumber",
										"package": "@medusajs/types"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						4470,
						4475,
						4480,
						4485,
						4490,
						4495,
						4500,
						4505,
						4510,
						4515,
						4520,
						4527,
						4534,
						4541,
						4548,
						4555,
						4562,
						4566,
						4570,
						4574,
						4580,
						4586,
						4590,
						4596,
						4602,
						4606,
						4610,
						4615,
						4619,
						4625,
						4631,
						4644,
						4650,
						4655,
						4660
					]
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 4678,
					"name": "IModuleService",
					"package": "@medusajs/types"
				}
			]
		},
		{
			"id": 4993,
			"name": "JoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4994,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4995,
							"name": "alias",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4996,
							"name": "foreignKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4997,
							"name": "primaryKey",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4998,
							"name": "serviceName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4999,
							"name": "inverse",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "In an inverted relationship the foreign key is on the other service and the primary key is on the current service"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5000,
							"name": "isList",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Force the relationship to return a list"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 5001,
							"name": "args",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Extra arguments to pass to the remoteFetchData callback"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4995,
								4996,
								4997,
								4998,
								4999,
								5000,
								5001
							]
						}
					]
				}
			}
		},
		{
			"id": 4990,
			"name": "JoinerServiceConfigAlias",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4991,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 4992,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4991,
						4992
					]
				}
			]
		},
		{
			"id": 4942,
			"name": "JoinerServiceConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4943,
					"name": "serviceName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4944,
					"name": "alias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Property name to use as entrypoint to the service"
							}
						]
					},
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 4990,
								"name": "JoinerServiceConfigAlias",
								"package": "@medusajs/types"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 4990,
									"name": "JoinerServiceConfigAlias",
									"package": "@medusajs/types"
								}
							}
						]
					}
				},
				{
					"id": 4945,
					"name": "fieldAlias",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "alias for deeper nested relationships (e.g. { 'price': 'prices.calculated_price_set.amount' })"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 4946,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4947,
													"name": "path",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4948,
													"name": "forwardArgumentsOnPath",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"type": {
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "string"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4947,
														4948
													]
												}
											]
										}
									}
								]
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				},
				{
					"id": 4949,
					"name": "primaryKeys",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4950,
					"name": "relationships",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 4993,
							"name": "JoinerRelationship",
							"package": "@medusajs/types"
						}
					}
				},
				{
					"id": 4951,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reflection",
							"declaration": {
								"id": 4952,
								"name": "__type",
								"variant": "declaration",
								"kind": 65536,
								"flags": {},
								"children": [
									{
										"id": 4953,
										"name": "serviceName",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 4954,
										"name": "relationship",
										"variant": "declaration",
										"kind": 1024,
										"flags": {},
										"type": {
											"type": "reference",
											"target": 4993,
											"name": "JoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								],
								"groups": [
									{
										"title": "Properties",
										"children": [
											4953,
											4954
										]
									}
								]
							}
						}
					}
				},
				{
					"id": 4955,
					"name": "args",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Extra arguments to pass to the remoteFetchData callback"
							}
						]
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Record"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "Record",
						"package": "typescript"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4943,
						4944,
						4945,
						4949,
						4950,
						4951,
						4955
					]
				}
			]
		},
		{
			"id": 4959,
			"name": "LinkModulesExtraFields",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4960,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4961,
									"name": "type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "date"
											},
											{
												"type": "literal",
												"value": "time"
											},
											{
												"type": "literal",
												"value": "datetime"
											},
											{
												"type": "literal",
												"value": "bigint"
											},
											{
												"type": "literal",
												"value": "blob"
											},
											{
												"type": "literal",
												"value": "uint8array"
											},
											{
												"type": "literal",
												"value": "array"
											},
											{
												"type": "literal",
												"value": "enumArray"
											},
											{
												"type": "literal",
												"value": "enum"
											},
											{
												"type": "literal",
												"value": "json"
											},
											{
												"type": "literal",
												"value": "integer"
											},
											{
												"type": "literal",
												"value": "smallint"
											},
											{
												"type": "literal",
												"value": "tinyint"
											},
											{
												"type": "literal",
												"value": "mediumint"
											},
											{
												"type": "literal",
												"value": "float"
											},
											{
												"type": "literal",
												"value": "double"
											},
											{
												"type": "literal",
												"value": "boolean"
											},
											{
												"type": "literal",
												"value": "decimal"
											},
											{
												"type": "literal",
												"value": "string"
											},
											{
												"type": "literal",
												"value": "uuid"
											},
											{
												"type": "literal",
												"value": "text"
											}
										]
									}
								},
								{
									"id": 4962,
									"name": "defaultValue",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4963,
									"name": "nullable",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4964,
									"name": "options",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Mikro-orm options for the column"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4961,
										4962,
										4963,
										4964
									]
								}
							]
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 4860,
			"name": "ModuleJoinerConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 4942,
								"name": "JoinerServiceConfig",
								"package": "@medusajs/types"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "serviceName"
									},
									{
										"type": "literal",
										"value": "primaryKeys"
									},
									{
										"type": "literal",
										"value": "relationships"
									},
									{
										"type": "literal",
										"value": "extends"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4861,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4862,
									"name": "schema",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "GraphQL schema for the all module's available entities and fields"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4863,
									"name": "relationships",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4956,
											"name": "ModuleJoinerRelationship",
											"package": "@medusajs/types"
										}
									}
								},
								{
									"id": 4864,
									"name": "extends",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reflection",
											"declaration": {
												"id": 4865,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"children": [
													{
														"id": 4866,
														"name": "serviceName",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "intrinsic",
															"name": "string"
														}
													},
													{
														"id": 4867,
														"name": "fieldAlias",
														"variant": "declaration",
														"kind": 1024,
														"flags": {
															"isOptional": true
														},
														"type": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "union",
																	"types": [
																		{
																			"type": "intrinsic",
																			"name": "string"
																		},
																		{
																			"type": "reflection",
																			"declaration": {
																				"id": 4868,
																				"name": "__type",
																				"variant": "declaration",
																				"kind": 65536,
																				"flags": {},
																				"children": [
																					{
																						"id": 4869,
																						"name": "path",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {},
																						"type": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					},
																					{
																						"id": 4870,
																						"name": "forwardArgumentsOnPath",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "array",
																							"elementType": {
																								"type": "intrinsic",
																								"name": "string"
																							}
																						}
																					},
																					{
																						"id": 4871,
																						"name": "isList",
																						"variant": "declaration",
																						"kind": 1024,
																						"flags": {
																							"isOptional": true
																						},
																						"type": {
																							"type": "intrinsic",
																							"name": "boolean"
																						}
																					}
																				],
																				"groups": [
																					{
																						"title": "Properties",
																						"children": [
																							4869,
																							4870,
																							4871
																						]
																					}
																				]
																			}
																		}
																	]
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													},
													{
														"id": 4872,
														"name": "relationship",
														"variant": "declaration",
														"kind": 1024,
														"flags": {},
														"type": {
															"type": "reference",
															"target": 4956,
															"name": "ModuleJoinerRelationship",
															"package": "@medusajs/types"
														}
													}
												],
												"groups": [
													{
														"title": "Properties",
														"children": [
															4866,
															4867,
															4872
														]
													}
												]
											}
										}
									}
								},
								{
									"id": 4873,
									"name": "serviceName",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 4874,
									"name": "primaryKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4875,
									"name": "isLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If the module is a link module"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4876,
									"name": "linkableKeys",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Keys that can be used to link to other modules. e.g { product_id: \"Product\" } \"Product\" being the entity it refers to"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								},
								{
									"id": 4877,
									"name": "isReadOnlyLink",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true it expands a RemoteQuery property but doesn't create a pivot table"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 4878,
									"name": "extraDataFields",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Fields that will be part of the link record aside from the primary keys that can be updated\nIf not explicitly defined, this array will be populated by databaseConfig.extraFields"
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								},
								{
									"id": 4879,
									"name": "databaseConfig",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 4880,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 4881,
													"name": "tableName",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Name of the pivot table. If not provided it is auto generated"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4882,
													"name": "idPrefix",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Prefix for the id column. If not provided it is \"link\""
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 4883,
													"name": "extraFields",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "reference",
														"target": 4959,
														"name": "LinkModulesExtraFields",
														"package": "@medusajs/types"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														4881,
														4882,
														4883
													]
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4862,
										4863,
										4864,
										4873,
										4874,
										4875,
										4876,
										4877,
										4878,
										4879
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4956,
			"name": "ModuleJoinerRelationship",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 4993,
						"name": "JoinerRelationship",
						"package": "@medusajs/types"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 4957,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 4958,
									"name": "deleteCascade",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the link joiner will cascade deleting the relationship"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										4958
									]
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 4678,
			"name": "IModuleService",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"extendedBy": [
				{
					"type": "reference",
					"target": 4469,
					"name": "IInventoryService"
				}
			]
		},
		{
			"id": 4969,
			"name": "MessageAggregatorFormat",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4970,
					"name": "groupBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 4971,
					"name": "sortBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 4972,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"indexSignatures": [
								{
									"id": 4973,
									"name": "__index",
									"variant": "signature",
									"kind": 8192,
									"flags": {},
									"parameters": [
										{
											"id": 4974,
											"name": "key",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4970,
						4971
					]
				}
			]
		},
		{
			"id": 4892,
			"name": "IMessageAggregator",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4893,
					"name": "save",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4894,
							"name": "save",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4895,
									"name": "msg",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 4965,
												"name": "Message",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4965,
													"name": "Message",
													"package": "@medusajs/types"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4896,
					"name": "getMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4897,
							"name": "getMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 4898,
									"name": "format",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 4969,
										"name": "MessageAggregatorFormat",
										"package": "@medusajs/types"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 4965,
											"name": "Message",
											"package": "@medusajs/types"
										}
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 4899,
					"name": "clearMessages",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4900,
							"name": "clearMessages",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 4901,
					"name": "saveRawMessageData",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4902,
							"name": "saveRawMessageData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"typeParameters": [
								{
									"id": 4903,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 4904,
									"name": "messageData",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": 4976,
												"typeArguments": [
													{
														"type": "reference",
														"target": 4903,
														"name": "T",
														"package": "@medusajs/types",
														"refersToTypeParameter": true
													}
												],
												"name": "RawMessageFormat",
												"package": "@medusajs/types"
											},
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 4976,
													"typeArguments": [
														{
															"type": "reference",
															"target": 4903,
															"name": "T",
															"package": "@medusajs/types",
															"refersToTypeParameter": true
														}
													],
													"name": "RawMessageFormat",
													"package": "@medusajs/types"
												}
											}
										]
									}
								},
								{
									"id": 4905,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [
						4893,
						4896,
						4899,
						4901
					]
				}
			]
		},
		{
			"id": 4732,
			"name": "Context",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A context used to share resources, such as transaction manager, between the application and the module."
					}
				]
			},
			"children": [
				{
					"id": 4733,
					"name": "__type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "literal",
						"value": "MedusaContext"
					}
				},
				{
					"id": 4734,
					"name": "transactionManager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a transaction manager of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`transactionManager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4743,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 4735,
					"name": "manager",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a manager, typically an entity manager, of type "
							},
							{
								"kind": "code",
								"text": "`TManager`"
							},
							{
								"kind": "text",
								"text": ", which is a typed parameter passed to the context to specify the type of the "
							},
							{
								"kind": "code",
								"text": "`manager`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4743,
						"name": "TManager",
						"package": "@medusajs/types",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 4736,
					"name": "isolationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the isolation level of the context. Possible values are "
							},
							{
								"kind": "code",
								"text": "`READ UNCOMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`READ COMMITTED`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`REPEATABLE READ`"
							},
							{
								"kind": "text",
								"text": ", or "
							},
							{
								"kind": "code",
								"text": "`SERIALIZABLE`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4737,
					"name": "enableNestedTransactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A boolean value indicating whether nested transactions are enabled."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 4738,
					"name": "eventGroupId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the group to aggregate the events to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4739,
					"name": "transactionId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current transaction."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4740,
					"name": "messageAggregator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An instance of a message aggregator, which is used to aggregate messages to be emitted at a later point."
							}
						]
					},
					"type": {
						"type": "reference",
						"target": 4892,
						"name": "IMessageAggregator",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 4741,
					"name": "requestId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the ID of the current request."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 4742,
					"name": "idempotencyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A string indicating the idempotencyKey of the current workflow execution."
							}
						]
					},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4733,
						4734,
						4735,
						4736,
						4737,
						4738,
						4739,
						4740,
						4741,
						4742
					]
				}
			],
			"typeParameters": [
				{
					"id": 4743,
					"name": "TManager",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 4852,
			"name": "IBigNumber",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 4853,
					"name": "numeric",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 4854,
					"name": "raw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": 4937,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					}
				},
				{
					"id": 4855,
					"name": "bigNumber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumber",
						"package": "bignumber.js"
					}
				},
				{
					"id": 4856,
					"name": "toJSON",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4857,
							"name": "toJSON",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 4858,
					"name": "valueOf",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"signatures": [
						{
							"id": 4859,
							"name": "valueOf",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						4853,
						4854,
						4855
					]
				},
				{
					"title": "Methods",
					"children": [
						4856,
						4858
					]
				}
			]
		},
		{
			"id": 4937,
			"name": "BigNumberRawValue",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4938,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 4939,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								4939
							]
						}
					],
					"indexSignatures": [
						{
							"id": 4940,
							"name": "__index",
							"variant": "signature",
							"kind": 8192,
							"flags": {},
							"parameters": [
								{
									"id": 4941,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "unknown"
							}
						}
					]
				}
			}
		},
		{
			"id": 4851,
			"name": "BigNumberInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 4937,
						"name": "BigNumberRawValue",
						"package": "@medusajs/types"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../../../node_modules/bignumber.js/bignumber.d.ts",
							"qualifiedName": "BigNumber"
						},
						"name": "BigNumberJS",
						"package": "bignumber.js",
						"qualifiedName": "BigNumber"
					},
					{
						"type": "reference",
						"target": 4852,
						"name": "IBigNumber",
						"package": "@medusajs/types"
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [
				4700,
				4884,
				4906,
				4911,
				4845,
				4848,
				4713,
				4692,
				4774,
				4766,
				4753,
				4744,
				4822,
				4796,
				4811,
				4816,
				4838,
				4786,
				4469,
				4990,
				4942,
				4678,
				4969,
				4892,
				4732,
				4852
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				4986,
				4988,
				5008,
				5036,
				5026,
				4915,
				5024,
				5018,
				5023,
				5012,
				5020,
				5002,
				4965,
				4976,
				4993,
				4959,
				4860,
				4956,
				4937,
				4851
			]
		}
	],
	"packageName": "@medusajs/types",
	"symbolIdMap": {
		"4468": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": ""
		},
		"4469": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService"
		},
		"4470": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"4471": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryItems"
		},
		"4472": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"4473": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4474": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4475": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"4476": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryItems"
		},
		"4477": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"4478": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4479": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4480": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"4481": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listReservationItems"
		},
		"4482": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"4483": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4484": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4485": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"4486": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountReservationItems"
		},
		"4487": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"4488": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4489": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4490": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"4491": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listInventoryLevels"
		},
		"4492": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"4493": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4494": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4495": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"4496": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.listAndCountInventoryLevels"
		},
		"4497": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "selector"
		},
		"4498": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4499": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4500": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"4501": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryItem"
		},
		"4502": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4503": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4504": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4505": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"4506": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevelByItemAndLocation"
		},
		"4507": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4508": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"4509": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4510": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"4511": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveInventoryLevel"
		},
		"4512": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelId"
		},
		"4513": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4514": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4515": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"4516": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservationItem"
		},
		"4517": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationId"
		},
		"4518": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4519": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4520": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"4521": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"4522": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4523": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4524": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createReservationItems"
		},
		"4525": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4526": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4527": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"4528": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"4529": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4530": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4531": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryItems"
		},
		"4532": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4533": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4534": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"4535": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"4536": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"4537": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4538": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.createInventoryLevels"
		},
		"4539": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"4540": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4541": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"4542": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"4543": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"4544": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4545": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryLevels"
		},
		"4546": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "updates"
		},
		"4547": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4548": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"4549": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"4550": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4551": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4552": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateInventoryItems"
		},
		"4553": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4554": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4555": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"4556": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"4557": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4558": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4559": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.updateReservationItems"
		},
		"4560": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "input"
		},
		"4561": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4562": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"4563": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemsByLineItem"
		},
		"4564": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"4565": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4566": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"4567": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItemsByLineItem"
		},
		"4568": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "lineItemId"
		},
		"4569": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4570": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"4571": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItems"
		},
		"4572": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "reservationItemId"
		},
		"4573": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4574": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"4575": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteReservationItems"
		},
		"4576": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4577": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"4578": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4579": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4580": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"4581": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreReservationItems"
		},
		"4582": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4583": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "ReservationItemIds"
		},
		"4584": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4585": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4586": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"4587": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItems"
		},
		"4588": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4589": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4590": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"4591": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryItems"
		},
		"4592": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4593": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"4594": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4595": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4596": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"4597": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryItems"
		},
		"4598": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4599": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemIds"
		},
		"4600": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4601": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4602": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"4603": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryItemLevelByLocationId"
		},
		"4604": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"4605": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4606": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"4607": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteReservationItemByLocationId"
		},
		"4608": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"4609": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4610": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"4611": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevel"
		},
		"4612": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4613": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"4614": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4615": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"4616": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.deleteInventoryLevels"
		},
		"4617": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"4618": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4619": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"4620": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.softDeleteInventoryLevels"
		},
		"4621": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4622": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"4623": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4624": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4625": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"4626": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.restoreInventoryLevels"
		},
		"4627": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4628": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryLevelIds"
		},
		"4629": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "config"
		},
		"4630": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "sharedContext"
		},
		"4631": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"4632": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"4633": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "data"
		},
		"4634": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type"
		},
		"4635": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.inventoryItemId"
		},
		"4636": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.locationId"
		},
		"4637": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "__type.adjustment"
		},
		"4638": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4639": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.adjustInventory"
		},
		"4640": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4641": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationId"
		},
		"4642": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "adjustment"
		},
		"4643": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4644": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"4645": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.confirmInventory"
		},
		"4646": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4647": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"4648": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "quantity"
		},
		"4649": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4650": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"4651": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveAvailableQuantity"
		},
		"4652": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4653": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"4654": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4655": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"4656": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveStockedQuantity"
		},
		"4657": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4658": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"4659": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4660": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"4661": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "IInventoryService.retrieveReservedQuantity"
		},
		"4662": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "inventoryItemId"
		},
		"4663": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "locationIds"
		},
		"4664": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/service.ts",
			"qualifiedName": "context"
		},
		"4678": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "IModuleService"
		},
		"4692": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps"
		},
		"4693": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.q"
		},
		"4694": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.id"
		},
		"4695": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.location_id"
		},
		"4696": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.sku"
		},
		"4697": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.origin_country"
		},
		"4698": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.hs_code"
		},
		"4699": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "FilterableInventoryItemProps.requires_shipping"
		},
		"4700": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig"
		},
		"4701": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.select"
		},
		"4702": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.skip"
		},
		"4703": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.take"
		},
		"4704": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.relations"
		},
		"4705": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.order"
		},
		"4706": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type"
		},
		"4707": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "__type.__index"
		},
		"4709": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.withDeleted"
		},
		"4710": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.filters"
		},
		"4711": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.options"
		},
		"4712": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "FindConfig.Entity"
		},
		"4713": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO"
		},
		"4714": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.id"
		},
		"4715": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.sku"
		},
		"4716": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.origin_country"
		},
		"4717": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.hs_code"
		},
		"4718": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.requires_shipping"
		},
		"4719": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.mid_code"
		},
		"4720": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.material"
		},
		"4721": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.weight"
		},
		"4722": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.length"
		},
		"4723": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.height"
		},
		"4724": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.width"
		},
		"4725": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.title"
		},
		"4726": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.description"
		},
		"4727": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.thumbnail"
		},
		"4728": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.metadata"
		},
		"4729": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.created_at"
		},
		"4730": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.updated_at"
		},
		"4731": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-item.ts",
			"qualifiedName": "InventoryItemDTO.deleted_at"
		},
		"4732": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "Context"
		},
		"4733": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__type"
		},
		"4734": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionManager"
		},
		"4735": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.manager"
		},
		"4736": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.isolationLevel"
		},
		"4737": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.enableNestedTransactions"
		},
		"4738": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"4739": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.transactionId"
		},
		"4740": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.messageAggregator"
		},
		"4741": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.requestId"
		},
		"4742": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.idempotencyKey"
		},
		"4743": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "TManager"
		},
		"4744": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps"
		},
		"4745": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.id"
		},
		"4747": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.line_item_id"
		},
		"4748": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.inventory_item_id"
		},
		"4749": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.location_id"
		},
		"4750": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.description"
		},
		"4751": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.created_by"
		},
		"4752": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "FilterableReservationItemProps.quantity"
		},
		"4753": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO"
		},
		"4754": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.id"
		},
		"4755": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.location_id"
		},
		"4756": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.inventory_item_id"
		},
		"4757": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.quantity"
		},
		"4758": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.line_item_id"
		},
		"4759": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.description"
		},
		"4760": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.allow_backorder"
		},
		"4761": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_by"
		},
		"4762": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.metadata"
		},
		"4763": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.created_at"
		},
		"4764": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.updated_at"
		},
		"4765": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/reservation-item.ts",
			"qualifiedName": "ReservationItemDTO.deleted_at"
		},
		"4766": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps"
		},
		"4767": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.inventory_item_id"
		},
		"4768": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.location_id"
		},
		"4769": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.stocked_quantity"
		},
		"4770": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.reserved_quantity"
		},
		"4771": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "FilterableInventoryLevelProps.incoming_quantity"
		},
		"4772": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4773": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4774": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO"
		},
		"4775": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.id"
		},
		"4776": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.inventory_item_id"
		},
		"4777": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.location_id"
		},
		"4778": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.stocked_quantity"
		},
		"4779": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.reserved_quantity"
		},
		"4780": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.incoming_quantity"
		},
		"4781": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.available_quantity"
		},
		"4782": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.metadata"
		},
		"4783": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.created_at"
		},
		"4784": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.updated_at"
		},
		"4785": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/common/inventory-level.ts",
			"qualifiedName": "InventoryLevelDTO.deleted_at"
		},
		"4786": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput"
		},
		"4787": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.line_item_id"
		},
		"4788": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.inventory_item_id"
		},
		"4789": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.location_id"
		},
		"4790": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.quantity"
		},
		"4791": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.allow_backorder"
		},
		"4792": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.description"
		},
		"4793": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.created_by"
		},
		"4794": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.external_id"
		},
		"4795": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "CreateReservationItemInput.metadata"
		},
		"4796": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput"
		},
		"4797": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.sku"
		},
		"4798": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.origin_country"
		},
		"4799": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.mid_code"
		},
		"4800": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.material"
		},
		"4801": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.weight"
		},
		"4802": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.length"
		},
		"4803": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.height"
		},
		"4804": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.width"
		},
		"4805": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.title"
		},
		"4806": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.description"
		},
		"4807": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.thumbnail"
		},
		"4808": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.metadata"
		},
		"4809": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.hs_code"
		},
		"4810": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "CreateInventoryItemInput.requires_shipping"
		},
		"4811": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput"
		},
		"4812": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.inventory_item_id"
		},
		"4813": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.location_id"
		},
		"4814": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.stocked_quantity"
		},
		"4815": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "CreateInventoryLevelInput.incoming_quantity"
		},
		"4816": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "BulkUpdateInventoryLevelInput"
		},
		"4817": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.inventory_item_id"
		},
		"4818": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "__type.location_id"
		},
		"4819": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.id"
		},
		"4820": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.stocked_quantity"
		},
		"4821": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-level.ts",
			"qualifiedName": "UpdateInventoryLevelInput.incoming_quantity"
		},
		"4822": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput"
		},
		"4823": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "UpdateInventoryItemInput.id"
		},
		"4824": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "sku"
		},
		"4825": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "origin_country"
		},
		"4826": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "mid_code"
		},
		"4827": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "material"
		},
		"4828": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "weight"
		},
		"4829": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "length"
		},
		"4830": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "height"
		},
		"4831": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "width"
		},
		"4832": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "title"
		},
		"4833": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "description"
		},
		"4834": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "thumbnail"
		},
		"4835": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "metadata"
		},
		"4836": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "hs_code"
		},
		"4837": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/inventory-item.ts",
			"qualifiedName": "requires_shipping"
		},
		"4838": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput"
		},
		"4839": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.id"
		},
		"4840": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.quantity"
		},
		"4841": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.location_id"
		},
		"4842": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.description"
		},
		"4843": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.allow_backorder"
		},
		"4844": {
			"sourceFileName": "../../../../packages/core/types/src/inventory/mutations/reservation-item.ts",
			"qualifiedName": "UpdateReservationItemInput.metadata"
		},
		"4845": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "SoftDeleteReturn"
		},
		"4846": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"4847": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4848": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "RestoreReturn"
		},
		"4849": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "__type.returnLinkableKeys"
		},
		"4850": {
			"sourceFileName": "../../../../packages/core/types/src/dal/repository-service.ts",
			"qualifiedName": "TReturnableLinkableKeys"
		},
		"4851": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberInput"
		},
		"4852": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber"
		},
		"4853": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.numeric"
		},
		"4854": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.raw"
		},
		"4855": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.bigNumber"
		},
		"4856": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"4857": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.toJSON"
		},
		"4858": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"4859": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "IBigNumber.valueOf"
		},
		"4860": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerConfig"
		},
		"4861": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4862": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.schema"
		},
		"4863": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationships"
		},
		"4864": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extends"
		},
		"4865": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4866": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"4867": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.fieldAlias"
		},
		"4868": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4869": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.path"
		},
		"4870": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"4871": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isList"
		},
		"4872": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"4873": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"4874": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.primaryKeys"
		},
		"4875": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isLink"
		},
		"4876": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.linkableKeys"
		},
		"4877": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.isReadOnlyLink"
		},
		"4878": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraDataFields"
		},
		"4879": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.databaseConfig"
		},
		"4880": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4881": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.tableName"
		},
		"4882": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.idPrefix"
		},
		"4883": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.extraFields"
		},
		"4884": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator"
		},
		"4885": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lt"
		},
		"4886": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gt"
		},
		"4887": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.gte"
		},
		"4888": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.lte"
		},
		"4889": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.contains"
		},
		"4890": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.starts_with"
		},
		"4891": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "StringComparisonOperator.ends_with"
		},
		"4892": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator"
		},
		"4893": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"4894": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.save"
		},
		"4895": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "msg"
		},
		"4896": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"4897": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.getMessages"
		},
		"4898": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "format"
		},
		"4899": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"4900": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.clearMessages"
		},
		"4901": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"4902": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "IMessageAggregator.saveRawMessageData"
		},
		"4903": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "T"
		},
		"4904": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "messageData"
		},
		"4905": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "options"
		},
		"4906": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator"
		},
		"4907": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lt"
		},
		"4908": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gt"
		},
		"4909": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.gte"
		},
		"4910": {
			"sourceFileName": "../../../../packages/core/types/src/common/common.ts",
			"qualifiedName": "NumericalComparisonOperator.lte"
		},
		"4911": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable"
		},
		"4912": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$and"
		},
		"4913": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.$or"
		},
		"4914": {
			"sourceFileName": "../../../../packages/core/types/src/dal/index.ts",
			"qualifiedName": "BaseFilterable.T"
		},
		"4915": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "OperatorMap"
		},
		"4916": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"4917": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$and"
		},
		"4918": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$or"
		},
		"4919": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$eq"
		},
		"4920": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ne"
		},
		"4921": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$in"
		},
		"4922": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$nin"
		},
		"4923": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$not"
		},
		"4924": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gt"
		},
		"4925": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$gte"
		},
		"4926": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lt"
		},
		"4927": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$lte"
		},
		"4928": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$like"
		},
		"4929": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$re"
		},
		"4930": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$ilike"
		},
		"4931": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$fulltext"
		},
		"4932": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$overlap"
		},
		"4933": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contains"
		},
		"4934": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$contained"
		},
		"4935": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.$exists"
		},
		"4936": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"4937": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "BigNumberRawValue"
		},
		"4938": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type"
		},
		"4939": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.value"
		},
		"4940": {
			"sourceFileName": "../../../../packages/core/types/src/totals/big-number.ts",
			"qualifiedName": "__type.__index"
		},
		"4942": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig"
		},
		"4943": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.serviceName"
		},
		"4944": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.alias"
		},
		"4945": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.fieldAlias"
		},
		"4946": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"4947": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.path"
		},
		"4948": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.forwardArgumentsOnPath"
		},
		"4949": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.primaryKeys"
		},
		"4950": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.relationships"
		},
		"4951": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.extends"
		},
		"4952": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"4953": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"4954": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.relationship"
		},
		"4955": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfig.args"
		},
		"4956": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "ModuleJoinerRelationship"
		},
		"4957": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4958": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.deleteCascade"
		},
		"4959": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "LinkModulesExtraFields"
		},
		"4960": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type"
		},
		"4961": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.type"
		},
		"4962": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.defaultValue"
		},
		"4963": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.nullable"
		},
		"4964": {
			"sourceFileName": "../../../../packages/core/types/src/modules-sdk/index.ts",
			"qualifiedName": "__type.options"
		},
		"4965": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Message"
		},
		"4966": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"4967": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"4968": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"4969": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat"
		},
		"4970": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.groupBy"
		},
		"4971": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "MessageAggregatorFormat.sortBy"
		},
		"4972": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type"
		},
		"4973": {
			"sourceFileName": "../../../../packages/core/types/src/shared-context.ts",
			"qualifiedName": "__type.__index"
		},
		"4976": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "RawMessageFormat"
		},
		"4977": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"4978": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventName"
		},
		"4979": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"4980": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.source"
		},
		"4981": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.object"
		},
		"4982": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.action"
		},
		"4983": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.context"
		},
		"4984": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.options"
		},
		"4985": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"4986": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Query"
		},
		"4987": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"4988": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ExpandScalar"
		},
		"4989": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"4990": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias"
		},
		"4991": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.name"
		},
		"4992": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerServiceConfigAlias.args"
		},
		"4993": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "JoinerRelationship"
		},
		"4994": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type"
		},
		"4995": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.alias"
		},
		"4996": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.foreignKey"
		},
		"4997": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.primaryKey"
		},
		"4998": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.serviceName"
		},
		"4999": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.inverse"
		},
		"5000": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.isList"
		},
		"5001": {
			"sourceFileName": "../../../../packages/core/types/src/joiner/index.ts",
			"qualifiedName": "__type.args"
		},
		"5002": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "Event"
		},
		"5003": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"5004": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.name"
		},
		"5005": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.metadata"
		},
		"5006": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.data"
		},
		"5007": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "TData"
		},
		"5008": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Scalar"
		},
		"5009": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"5010": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"5011": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.toHexString"
		},
		"5012": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterQuery"
		},
		"5013": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"5014": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.__index"
		},
		"5016": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"5017": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Prev"
		},
		"5018": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue"
		},
		"5019": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"5020": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "EventMetadata"
		},
		"5021": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type"
		},
		"5022": {
			"sourceFileName": "../../../../packages/core/types/src/event-bus/common.ts",
			"qualifiedName": "__type.eventGroupId"
		},
		"5023": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "PrevLimit"
		},
		"5024": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "FilterValue2"
		},
		"5025": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"5026": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "Primary"
		},
		"5027": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"5028": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.[PrimaryKeyType]"
		},
		"5029": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"5030": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type._id"
		},
		"5031": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"5032": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.uuid"
		},
		"5033": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type"
		},
		"5034": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "__type.id"
		},
		"5035": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		},
		"5036": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "ReadonlyPrimary"
		},
		"5037": {
			"sourceFileName": "../../../../packages/core/types/src/dal/utils.ts",
			"qualifiedName": "T"
		}
	},
	"files": {
		"entries": {
			"1": "../../../../packages/core/types/src/inventory/service.ts"
		},
		"reflections": {
			"1": 4468
		}
	}
}